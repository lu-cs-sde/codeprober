"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
define("protocol", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("createWebsocketHandler", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createWebsocketOverHttpHandler = void 0;
    let rpcIdGenerator = 1;
    const createWebsocketHandler = (socket, onClose) => {
        const pendingCallbacks = {};
        const messageHandlers = {
            rpc: ({ id, ...res }) => {
                const handler = pendingCallbacks[id];
                if (handler) {
                    delete pendingCallbacks[id];
                    handler(res);
                }
                else {
                    console.warn('Received RPC response for', id, ', expected one of', Object.keys(pendingCallbacks));
                }
            },
        };
        let didReceiveAtLeastOneMessage = false;
        socket.addEventListener('message', function (event) {
            didReceiveAtLeastOneMessage = true;
            // console.log('Message from server ', event.data);
            const parsed = JSON.parse(event.data);
            if (messageHandlers[parsed.type]) {
                messageHandlers[parsed.type](parsed);
            }
            else {
                console.log('No handler for message', parsed, ', got handlers for', Object.keys(messageHandlers));
            }
        });
        socket.addEventListener('close', () => {
            // Small timeout to reduce risk of it appearing when navigating away
            setTimeout(() => onClose(didReceiveAtLeastOneMessage), 100);
        });
        return {
            on: (id, cb) => messageHandlers[id] = cb,
            sendRpc: (msg) => new Promise(async (res, rej) => {
                const id = rpcIdGenerator++;
                const topReq = { type: 'rpc', id, data: msg, };
                socket.send(JSON.stringify(topReq));
                const cleanup = () => delete pendingCallbacks[id];
                pendingCallbacks[id] = (callback) => {
                    cleanup();
                    switch (callback.data.type) {
                        case 'success': {
                            res(callback.data.value);
                            break;
                        }
                        case 'failureMsg': {
                            console.warn('RPC request failed', callback.data.value);
                            rej(callback.data.value);
                            break;
                        }
                        default: {
                            console.error('Unexpected RPC response');
                            rej(JSON.stringify(callback));
                            break;
                        }
                    }
                };
                setTimeout(() => {
                    cleanup();
                    rej('Timeout');
                }, 30000);
            }),
        };
    };
    const createWebsocketOverHttpHandler = (onClose) => {
        const pendingCallbacks = {};
        const messageHandlers = {
            rpc: ({ id, ...res }) => {
                const handler = pendingCallbacks[id];
                if (handler) {
                    delete pendingCallbacks[id];
                    handler(res);
                }
                else {
                    console.warn('Received RPC response for', id, ', expected one of', Object.keys(pendingCallbacks));
                }
            },
        };
        let didReceiveAtLeastOneMessage = false;
        const defaultRetryBudget = 3;
        const session = `cpr_${(Number.MAX_SAFE_INTEGER * Math.random()) | 0}`;
        const sendRpc = (msg, extraArgs) => new Promise(async (res, rej) => {
            const id = rpcIdGenerator++;
            // const body = { ...msg, id };
            const topReq = { type: 'rpc', id, data: msg, };
            // {...topReq, session}
            // pendingCallbacks[id] = ({ error, result }) => {
            //   cleanup();
            //   if (error) {
            //     console.warn('RPC request failed', error);
            //     rej(error);
            //   } else {
            //     res(result);
            //   }
            // };
            pendingCallbacks[id] = (callback) => {
                cleanup();
                switch (callback.data.type) {
                    case 'success': {
                        res(callback.data.value);
                        break;
                    }
                    case 'failureMsg': {
                        console.warn('RPC request failed', callback.data.value);
                        rej(callback.data.value);
                        break;
                    }
                    default: {
                        console.error('Unexpected RPC response');
                        rej(JSON.stringify(callback));
                        break;
                    }
                }
            };
            const cleanup = () => delete pendingCallbacks[id];
            const attemptFetch = async (remainingTries) => {
                var _a;
                const cleanupTimer = setTimeout(() => {
                    cleanup();
                    rej('Timeout');
                }, (_a = extraArgs === null || extraArgs === void 0 ? void 0 : extraArgs.timeout) !== null && _a !== void 0 ? _a : 30000);
                try {
                    const rawFetchResult = await fetch('/wsput', { method: 'PUT', body: JSON.stringify(topReq) });
                    if (!rawFetchResult.ok) {
                        if (remainingTries > 0) {
                            console.warn('wsput request failed, trying again in 1 second..');
                            clearTimeout(cleanupTimer);
                            setTimeout(() => attemptFetch(remainingTries - 1), 1000);
                            return;
                        }
                    }
                    const fetchResult = await rawFetchResult.json();
                    didReceiveAtLeastOneMessage = true;
                    if (messageHandlers[fetchResult.type]) {
                        messageHandlers[fetchResult.type](fetchResult);
                        cleanup();
                        res(true);
                    }
                    else {
                        console.log('No handler for message', fetchResult, ', got handlers for', Object.keys(messageHandlers));
                        cleanup();
                        rej('Bad response');
                    }
                }
                catch (e) {
                    console.warn('Error when performing ws-over-http request', e);
                    cleanup();
                    rej('Unknown error');
                }
            };
            attemptFetch(defaultRetryBudget);
        });
        const wsHandler = {
            on: (id, cb) => messageHandlers[id] = cb,
            sendRpc: async (msg) => {
                const wrapped = {
                    type: 'wsput:tunnel',
                    session,
                    request: msg,
                };
                const res = await sendRpc(wrapped);
                return res.response;
            },
        };
        const initReq = ({ type: 'wsput:init', session });
        sendRpc(initReq)
            .then((init) => {
            if (messageHandlers['init']) {
                messageHandlers['init'](init.info);
            }
            else {
                console.warn('Got init message, but no handler for it');
            }
        })
            .catch(err => {
            console.warn('Failed to get init message', err);
        });
        let prevEtagValue = -1;
        let longPoller = async (retryBudget) => {
            try {
                const longPollRequest = {
                    type: 'wsput:longpoll',
                    session,
                    etag: prevEtagValue,
                };
                const result = await sendRpc(longPollRequest, { timeout: 10 * 60 * 1000 });
                if (result.data) {
                    switch (result.data.type) {
                        case 'etag': {
                            const etag = result.data.value;
                            if (prevEtagValue !== etag) {
                                if (prevEtagValue !== -1) {
                                    if (messageHandlers.refresh) {
                                        messageHandlers.refresh({});
                                    }
                                }
                                prevEtagValue = etag;
                            }
                            break;
                        }
                        case 'push': {
                            const message = result.data.value;
                            const handler = messageHandlers[message.type];
                            if (handler) {
                                handler(message);
                            }
                            else {
                                console.warn('Got /wsput push message of unknown type', message);
                            }
                            break;
                        }
                        default: {
                            console.warn('Unknown longpoll response type:', result.data);
                            break;
                        }
                    }
                }
            }
            catch (e) {
                console.warn('Error during longPoll', e);
                if (retryBudget > 0) {
                    console.log('Retrying longpoll in 1 second');
                    setTimeout(() => {
                        longPoller(retryBudget - 1);
                    }, 1000);
                }
                else {
                    onClose(didReceiveAtLeastOneMessage);
                }
                return;
            }
            setTimeout(() => longPoller(defaultRetryBudget), 1);
        };
        longPoller(defaultRetryBudget);
        return wsHandler;
    };
    exports.createWebsocketOverHttpHandler = createWebsocketOverHttpHandler;
    exports.default = createWebsocketHandler;
});
define("hacks", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.assertUnreachable = void 0;
    const assertUnreachable = (val) => {
        console.warn('Exhaustive switch matched default case - typedefs are out of date');
        console.warn('Related value:', val);
    };
    exports.assertUnreachable = assertUnreachable;
});
define("ui/addConnectionCloseNotice", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const showConnectionCloseNotice = (didReceiveAtLeastOneMessage) => {
        const ch = document.createElement('div');
        const msg = didReceiveAtLeastOneMessage
            ? 'Lost connection to server, reload to reconnect'
            : 'Couldn\'t connect to server';
        ch.innerHTML = `
  <div style="
    position: absolute;
    top: 4rem;
    left: 20%;
    right: 20%;
    background: #300;
    color: white;
    border: 1px solid red;
    border-radius: 1rem;
    padding: 2rem;
    font-size: 2rem;
    z-index: ${Number.MAX_SAFE_INTEGER};
    text-align: center">
   ${msg}
  </div>
  `;
        document.body.appendChild(ch);
    };
    exports.default = showConnectionCloseNotice;
});
define("ui/create/createLoadingSpinner", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const createLoadingSpinner = () => {
        const holder = document.createElement('div');
        holder.classList.add('lds-spinner');
        holder.innerHTML = `<div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>`;
        return holder;
    };
    exports.default = createLoadingSpinner;
});
define("ui/create/attachDragToX", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lastKnownMousePos = exports.modalZIndexGenerator = void 0;
    let lastKnownMousePos = { x: 0, y: 0 };
    exports.lastKnownMousePos = lastKnownMousePos;
    window.onmousemove = (e) => {
        lastKnownMousePos.x = e.x;
        lastKnownMousePos.y = e.y;
    };
    let currentMouseDownTracker = null;
    window.onmouseup = () => {
        if (currentMouseDownTracker) {
            currentMouseDownTracker.down = false;
            currentMouseDownTracker = null;
        }
    };
    const setCurrentMouseDown = (newTracker) => {
        if (currentMouseDownTracker) {
            currentMouseDownTracker.down = false;
        }
        currentMouseDownTracker = newTracker;
    };
    const modalZIndexGenerator = (() => {
        let counter = 1;
        return () => counter++;
    })();
    exports.modalZIndexGenerator = modalZIndexGenerator;
    const attachDragToX = (element, onBegin, onUpdate, onFinishedMove) => {
        const refreshPos = (newX, newY) => onUpdate(newX !== null && newX !== void 0 ? newX : 0, newY !== null && newY !== void 0 ? newY : 0);
        let mouse = { down: false, x: 0, y: 0 };
        element.onmousedown = (e) => {
            setCurrentMouseDown(mouse);
            // e.preventDefault();
            e.stopPropagation();
            e.stopImmediatePropagation();
            e.cancelBubble = true;
            mouse.down = true;
            element.style.zIndex = `${modalZIndexGenerator()}`;
            mouse.x = e.pageX;
            mouse.y = e.pageY;
            onBegin(e);
        };
        const onMouseMove = (e) => {
            if (mouse.down) {
                let dx = e.pageX - mouse.x;
                let dy = e.pageY - mouse.y;
                refreshPos(dx, dy);
                // mouse.x = e.x;
                // mouse.y = e.y;
            }
        };
        document.addEventListener('mousemove', onMouseMove);
        element.onmouseup = (e) => {
            mouse.down = false;
            onFinishedMove === null || onFinishedMove === void 0 ? void 0 : onFinishedMove();
        };
        // refreshPos();
        return {
            cleanup: () => {
                document.removeEventListener('mousemove', onMouseMove);
            },
            hasMouseDown: () => mouse.down,
        };
    };
    exports.default = attachDragToX;
});
define("ui/create/attachDragToMove", ["require", "exports", "ui/create/attachDragToX"], function (require, exports, attachDragToX_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    attachDragToX_1 = __importStar(attachDragToX_1);
    const attachDragToMove = (element, initialPos, onFinishedMove) => {
        var _a, _b;
        const elemPos = { x: (_a = initialPos === null || initialPos === void 0 ? void 0 : initialPos.x) !== null && _a !== void 0 ? _a : attachDragToX_1.lastKnownMousePos.x, y: (_b = initialPos === null || initialPos === void 0 ? void 0 : initialPos.y) !== null && _b !== void 0 ? _b : attachDragToX_1.lastKnownMousePos.y };
        const startPos = { ...elemPos };
        const onBegin = () => {
            startPos.x = elemPos.x;
            startPos.y = elemPos.y;
        };
        const onUpdate = (dx, dy) => {
            let newX = startPos.x + dx;
            let newY = startPos.y + dy;
            if (newY < 0) {
                newY = 0;
            }
            else {
                newY = Math.min(document.body.clientHeight - element.clientHeight, newY);
            }
            if (newX < 0) {
                newX = 0;
            }
            else {
                newX = Math.min(document.body.clientWidth - element.clientWidth, newX);
            }
            element.style.top = `${newY}px`;
            element.style.left = `${newX}px`;
            elemPos.x = newX;
            elemPos.y = newY;
        };
        onUpdate(0, 0);
        const { cleanup, hasMouseDown } = (0, attachDragToX_1.default)(element, onBegin, onUpdate, onFinishedMove);
        return {
            cleanup,
            getPos: () => elemPos,
            bumpIntoScreen: () => {
                if (!hasMouseDown()) {
                    onBegin();
                    onUpdate(0, 0);
                }
            },
        };
    };
    exports.default = attachDragToMove;
});
define("ui/create/showWindow", ["require", "exports", "ui/create/attachDragToMove", "ui/create/attachDragToX"], function (require, exports, attachDragToMove_1, attachDragToX_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    attachDragToMove_1 = __importDefault(attachDragToMove_1);
    attachDragToX_2 = __importStar(attachDragToX_2);
    const showWindow = (args) => {
        const { render, pos: initialPos, size: initialSize, rootStyle, resizable } = args;
        const root = document.createElement('div');
        root.tabIndex = 0;
        root.classList.add('modalWindow');
        root.style = `${rootStyle || ''}`;
        const bringToFront = () => {
            root.style.zIndex = `${(0, attachDragToX_2.modalZIndexGenerator)()}`;
        };
        bringToFront();
        root.style.maxWidth = '40vw';
        root.onkeydown = (e) => {
            var _a;
            if (e.key === 'Escape') {
                const btn = root.querySelector('.modalCloseButton');
                if (btn) {
                    e.stopPropagation();
                    (_a = btn.onclick) === null || _a === void 0 ? void 0 : _a.call(btn, null);
                }
            }
        };
        let lastCancelToken = {};
        const contentRoot = document.createElement('div');
        // contentRoot.classList.add('HELLO-FIND-ME');
        contentRoot.style.overflow = 'auto';
        contentRoot.style.position = 'relative';
        contentRoot.style.top = '0px';
        contentRoot.style.left = '0px';
        contentRoot.style.maxHeight = '80vh';
        // contentRoot.style.display = 'contents';
        // contentRoot.style.minHeight = '4rem';
        // contentRoot.style.overflow = 'inherit';
        // contentRoot.style.display = 'contents';
        render(contentRoot, { cancelToken: lastCancelToken, bringToFront });
        root.appendChild(contentRoot);
        let reiszeCleanup = null;
        if (resizable) {
            const resizePositioner = document.createElement('div');
            // resizePositioner.style.position = 'absolute';
            resizePositioner.style.right = '0px';
            resizePositioner.style.bottom = '0px';
            resizePositioner.style.cursor = 'nwse-resize';
            resizePositioner.style.width = 'fit-contents';
            resizePositioner.style.height = '0px';
            resizePositioner.style.position = 'sticky';
            resizePositioner.style.zIndex = '99';
            const resizeButton = document.createElement('div');
            resizeButton.style.position = 'absolute';
            resizeButton.style.right = '0px';
            resizeButton.style.bottom = '0px';
            resizeButton.style.height = '0.5rem';
            resizeButton.style.width = '0.5rem';
            resizeButton.style.borderRight = '4px solid gray';
            resizeButton.style.borderBottom = '4px solid gray';
            resizePositioner.appendChild(resizeButton);
            root.appendChild(resizePositioner);
            const size = { w: 1, h: 1 };
            reiszeCleanup = (0, attachDragToX_2.default)(resizePositioner, () => {
                size.w = root.clientWidth;
                size.h = root.clientHeight;
            }, (dx, dy) => {
                var _a;
                const newW = Math.max(32, size.w + dx);
                const newH = Math.max(32, size.h + dy);
                // console.log('setting ', `${root.clientWidth + dx}px`);
                root.style.width = `${newW}px`;
                root.style.height = `${newH}px`;
                root.style.maxWidth = 'fit-content';
                root.style.maxHeight = 'fit-content';
                (_a = args.onOngoingResize) === null || _a === void 0 ? void 0 : _a.call(args);
            }, args.onFinishedResize).cleanup;
        }
        if (initialSize) {
            root.style.width = `${initialSize.width}px`;
            root.style.height = `${initialSize.height}px`;
            root.style.maxWidth = 'fit-content';
            root.style.maxHeight = 'fit-content';
        }
        document.body.appendChild(root);
        const dragToMove = (0, attachDragToMove_1.default)(root, initialPos, args.onFinishedMove);
        return {
            remove: () => {
                root.remove();
                dragToMove.cleanup();
                reiszeCleanup === null || reiszeCleanup === void 0 ? void 0 : reiszeCleanup();
            },
            refresh: () => {
                lastCancelToken.cancelled = true;
                lastCancelToken = {};
                // root.innerHTML = '';
                render(contentRoot, { cancelToken: lastCancelToken, bringToFront });
            },
            getPos: dragToMove.getPos,
            getSize: () => ({ width: root.clientWidth, height: root.clientHeight }),
            bumpIntoScreen: dragToMove.bumpIntoScreen,
        };
    };
    exports.default = showWindow;
});
define("ui/create/createModalTitle", ["require", "exports", "ui/create/showWindow"], function (require, exports, showWindow_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    showWindow_1 = __importDefault(showWindow_1);
    const createModalTitle = (args) => {
        const { renderLeft, extraActions, onClose } = args;
        const titleRowHolder = document.createElement('div');
        titleRowHolder.classList.add('modalTitle');
        const titleRowLeft = document.createElement('div');
        titleRowLeft.style.margin = 'auto 0';
        renderLeft(titleRowLeft);
        titleRowHolder.appendChild(titleRowLeft);
        const buttons = document.createElement('div');
        buttons.classList.add('button-holder');
        if (extraActions && extraActions.length > 0) {
            const overflowButton = document.createElement('img');
            overflowButton.src = '/icons/more_vert_white_24dp.svg';
            overflowButton.classList.add('modalOverflowButton');
            overflowButton.classList.add('clickHighlightOnHover');
            overflowButton.onmousedown = (e) => { e.stopPropagation(); };
            overflowButton.onclick = () => {
                const cleanup = () => {
                    contextMenu.remove();
                    window.removeEventListener('mousedown', cleanup);
                };
                const contextMenu = (0, showWindow_1.default)({
                    onForceClose: cleanup,
                    render: (container) => {
                        container.addEventListener('mousedown', (e) => {
                            e.stopPropagation();
                            e.stopImmediatePropagation();
                        });
                        const hidden = document.createElement('button');
                        hidden.classList.add('modalCloseButton');
                        hidden.style.display = 'none';
                        hidden.onclick = cleanup;
                        container.appendChild(hidden);
                        extraActions.forEach((action) => {
                            const row = document.createElement('div');
                            row.classList.add('context-menu-row');
                            row.onclick = () => {
                                cleanup();
                                action.invoke();
                            };
                            const title = document.createElement('span');
                            title.innerText = action.title;
                            row.appendChild(title);
                            // const icon = document.createElement('img');
                            // icon.src = '/icons/content_copy_white_24dp.svg';
                            // row.appendChild(icon);
                            // row.style.border = '1px solid red';
                            container.appendChild(row);
                        });
                    },
                });
                window.addEventListener('mousedown', () => {
                    cleanup();
                });
            };
            buttons.appendChild(overflowButton);
        }
        if (onClose) {
            const closeButton = document.createElement('div');
            closeButton.classList.add('modalCloseButton');
            const textHolder = document.createElement('span');
            textHolder.innerText = '𝖷';
            closeButton.appendChild(textHolder);
            closeButton.classList.add('clickHighlightOnHover');
            closeButton.onmousedown = (e) => { e.stopPropagation(); };
            closeButton.onclick = () => onClose();
            buttons.appendChild(closeButton);
        }
        titleRowHolder.appendChild(buttons);
        return {
            element: titleRowHolder
        };
    };
    exports.default = createModalTitle;
});
define("ui/startEndToSpan", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const startEndToSpan = (start, end) => ({
        lineStart: (start >>> 12),
        colStart: start & 0xFFF,
        lineEnd: (end >>> 12),
        colEnd: end & 0xFFF,
    });
    exports.default = startEndToSpan;
});
define("model/adjustTypeAtLoc", ["require", "exports", "ui/startEndToSpan"], function (require, exports, startEndToSpan_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    startEndToSpan_1 = __importDefault(startEndToSpan_1);
    const adjustTypeAtLoc = (adjuster, tal) => {
        if (tal.external) {
            // Refuse to adjust things in external files.
            // CodeProber is only expected to get change events for our own "internal" file.
            return;
        }
        const span = (0, startEndToSpan_1.default)(tal.start, tal.end);
        let [ls, cs] = adjuster(span.lineStart, span.colStart);
        let [le, ce] = adjuster(span.lineEnd, span.colEnd);
        if (ls == le && cs == ce) {
            if (span.lineStart === span.lineEnd && span.colStart === span.colEnd) {
                // Accept it, despite it being strange
            }
            else {
                // Instead of accepting change to zero-width span, take same line/col diff as before
                le = ls + (span.lineEnd - span.lineStart);
                ce = cs + (span.colEnd - span.colStart);
            }
        }
        tal.start = (ls << 12) + Math.max(0, cs);
        tal.end = (le << 12) + ce;
    };
    exports.default = adjustTypeAtLoc;
});
define("model/adjustLocator", ["require", "exports", "model/adjustTypeAtLoc"], function (require, exports, adjustTypeAtLoc_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.adjustLocatorAndProperty = exports.adjustValue = void 0;
    adjustTypeAtLoc_1 = __importDefault(adjustTypeAtLoc_1);
    const adjustValue = (adj, arg) => {
        switch (arg.type) {
            case 'nodeLocator': {
                if (arg.value.value) {
                    adjustLocator(adj, arg.value.value);
                }
                break;
            }
            case 'collection': {
                arg.value.entries.forEach(v => adjustValue(adj, v));
            }
        }
    };
    exports.adjustValue = adjustValue;
    const adjustLocator = (adj, loc) => {
        (0, adjustTypeAtLoc_1.default)(adj, loc.result);
        const adjustStep = (step) => {
            var _a;
            switch (step.type) {
                case 'tal': {
                    (0, adjustTypeAtLoc_1.default)(adj, step.value);
                    break;
                }
                case 'nta': {
                    (_a = step.value.property.args) === null || _a === void 0 ? void 0 : _a.forEach(arg => adjustValue(adj, arg));
                    break;
                }
            }
        };
        loc.steps.forEach(adjustStep);
    };
    const adjustLocatorAndProperty = (adj, loc, prop) => {
        var _a;
        adjustLocator(adj, loc);
        (_a = prop.args) === null || _a === void 0 ? void 0 : _a.forEach(arg => adjustValue(adj, arg));
    };
    exports.adjustLocatorAndProperty = adjustLocatorAndProperty;
    exports.default = adjustLocator;
});
define("model/repositoryUrl", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.repositoryUrl = void 0;
    // This file should be kept in sync with server/src/codeprober/server/WebServer.java
    const repositoryUrl = `https://github.com/lu-cs-sde/codeprober`;
    exports.repositoryUrl = repositoryUrl;
});
define("model/syntaxHighlighting", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getAvailableLanguages = exports.getAppropriateFileSuffix = void 0;
    const langstoSuffixes = {
        plaintext: ['txt', 'Plain Text'],
        abap: ['abap', 'abap'],
        apex: ['cls', 'Apex'],
        azcli: ['azcli', 'Azure CLI'],
        bat: ['bat', 'Batch'],
        bicep: ['bicep', 'Bicep'],
        cameligo: ['mligo', 'Cameligo'],
        clojure: ['clj', 'clojure'],
        coffeescript: ['coffee', 'CoffeeScript'],
        c: ['c', 'C'],
        cpp: ['cpp', 'C++'],
        csharp: ['cs', 'C#'],
        csp: ['csp', 'CSP'],
        css: ['css', 'CSS'],
        dart: ['dart', 'Dart'],
        dockerfile: ['dockerfile', 'Dockerfile'],
        ecl: ['ecl', 'ECL'],
        elixir: ['ex', 'Elixir'],
        flow9: ['flow', 'Flow9'],
        fsharp: ['fs', 'F#'],
        go: ['go', 'Go'],
        graphql: ['graphql', 'GraphQL'],
        handlebars: ['handlebars', 'Handlebars'],
        hcl: ['tf', 'Terraform'],
        html: ['html', 'HTML'],
        ini: ['ini', 'Ini'],
        java: ['java', 'Java'],
        javascript: ['js', 'JavaScript'],
        julia: ['jl', 'Julia'],
        kotlin: ['kt', 'Kotlin'],
        less: ['less', 'Less'],
        lexon: ['lex', 'Lexon'],
        lua: ['lua', 'Lua'],
        liquid: ['liquid', 'Liquid'],
        m3: ['m3', 'Modula-3'],
        markdown: ['md', 'Markdown'],
        mips: ['s', 'MIPS'],
        msdax: ['dax', 'DAX'],
        mysql: ['mysql', 'MySQL'],
        'objective-c': ['m', 'Objective-C'],
        pascal: ['pas', 'Pascal'],
        pascaligo: ['ligo', 'Pascaligo'],
        perl: ['pl', 'Perl'],
        pgsql: ['pgsql', 'PostgreSQL'],
        php: ['php', 'PHP'],
        postiats: ['dats', 'ATS'],
        powerquery: ['pq', 'PQ'],
        powershell: ['ps1', 'PowerShell'],
        proto: ['proto', 'protobuf'],
        pug: ['jade', 'Pug'],
        python: ['py', 'Python'],
        qsharp: ['qs', 'Q#'],
        r: ['r', 'R'],
        razor: ['cshtml', 'Razor'],
        redis: ['redis', 'redis'],
        redshift: ['redshift', 'Redshift'],
        restructuredtext: ['rst', 'reStructuredText'],
        ruby: ['rb', 'Ruby'],
        rust: ['rs', 'Rust'],
        sb: ['sb', 'Small Basic'],
        scala: ['scala', 'Scala'],
        scheme: ['scm', 'scheme'],
        scss: ['scss', 'Sass'],
        shell: ['sh', 'Shell'],
        sol: ['sol', 'sol'],
        aes: ['aes', 'aes'],
        sparql: ['rq', 'sparql'],
        sql: ['sql', 'SQL'],
        st: ['st', 'StructuredText'],
        swift: ['swift', 'Swift'],
        systemverilog: ['sv', 'SV'],
        verilog: ['v', 'V'],
        tcl: ['tcl', 'tcl'],
        twig: ['twig', 'Twig'],
        typescript: ['ts', 'TypeScript'],
        vb: ['vb', 'Visual Basic'],
        xml: ['xml', 'XML'],
        yaml: ['yaml', 'YAML'],
        json: ['json', 'JSON']
    };
    const getAppropriateFileSuffix = (lang) => {
        var _a, _b;
        return (_b = (_a = langstoSuffixes[lang]) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : `.${lang.toLowerCase()}`;
    };
    exports.getAppropriateFileSuffix = getAppropriateFileSuffix;
    const getAvailableLanguages = () => Object.assign(Object.entries(langstoSuffixes).map(([k, v]) => ({ id: k, alias: v[1] })));
    exports.getAvailableLanguages = getAvailableLanguages;
});
define("model/WindowState", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("ui/UIElements", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    class UIElements {
        // Use lazy getters since the dom elements haven't been loaded
        // by the time this script initially runs.
        get positionRecoverySelector() { return document.getElementById('control-position-recovery-strategy'); }
        get positionRecoveryHelpButton() { return document.getElementById('control-position-recovery-strategy-help'); }
        get astCacheStrategySelector() { return document.getElementById('ast-cache-strategy'); }
        get astCacheStrategyHelpButton() { return document.getElementById('control-ast-cache-strategy-help'); }
        get syntaxHighlightingSelector() { return document.getElementById('syntax-highlighting'); }
        get syntaxHighlightingHelpButton() { return document.getElementById('control-syntax-highlighting-help'); }
        get shouldOverrideMainArgsCheckbox() { return document.getElementById('control-should-override-main-args'); }
        get configureMainArgsOverrideButton() { return document.getElementById('configure-main-args'); }
        get mainArgsOverrideHelpButton() { return document.getElementById('main-args-override-help'); }
        get shouldCustomizeFileSuffixCheckbox() { return document.getElementById('control-customize-file-suffix'); }
        get configureCustomFileSuffixButton() { return document.getElementById('customize-file-suffix'); }
        get customFileSuffixHelpButton() { return document.getElementById('customize-file-suffix-help'); }
        get showAllPropertiesCheckbox() { return document.getElementById('control-show-all-properties'); }
        get showAllPropertiesHelpButton() { return document.getElementById('show-all-properties-help'); }
        get groupPropertiesByAspectCheckbox() { return document.getElementById('control-group-properties-by-aspect'); }
        get groupPropertiesByAspectButton() { return document.getElementById('group-properties-by-aspect-help'); }
        get duplicateProbeCheckbox() { return document.getElementById('control-duplicate-probe-on-attr'); }
        get duplicateProbeHelpButton() { return document.getElementById('duplicate-probe-on-attr-help'); }
        get captureStdoutCheckbox() { return document.getElementById('control-capture-stdout'); }
        get captureStdoutHelpButton() { return document.getElementById('capture-stdout-help'); }
        get captureTracesCheckbox() { return document.getElementById('control-capture-traces'); }
        get captureTracesHelpButton() { return document.getElementById('capture-traces-help'); }
        get autoflushTracesCheckbox() { return document.getElementById('control-autoflush-traces'); }
        get autoflushTracesContainer() { return document.getElementById('container-autoflush-traces'); }
        get locationStyleSelector() { return document.getElementById('location-style'); }
        get locationStyleHelpButton() { return document.getElementById('control-location-style-help'); }
        get generalHelpButton() { return document.getElementById('display-help'); }
        get saveAsUrlButton() { return document.getElementById('saveAsUrl'); }
        get darkModeCheckbox() { return document.getElementById('control-dark-mode'); }
        get displayStatisticsButton() { return document.getElementById('display-statistics'); }
        get displayWorkerStatusButton() { return document.getElementById('display-worker-status'); }
        get versionInfo() { return document.getElementById('version'); }
        get settingsHider() { return document.getElementById('settings-hider'); }
        get settingsRevealer() { return document.getElementById('settings-revealer'); }
        get showTests() { return document.getElementById('show-tests'); }
        get minimizedProbeArea() { return document.getElementById('minimized-probe-area'); }
    }
    exports.default = UIElements;
});
define("settings", ["require", "exports", "model/syntaxHighlighting", "ui/UIElements"], function (require, exports, syntaxHighlighting_1, UIElements_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    UIElements_1 = __importDefault(UIElements_1);
    let settingsObj = null;
    const clearHashFromLocation = () => history.replaceState('', document.title, `${window.location.pathname}${window.location.search}`);
    window.saveStateAsUrl = () => {
        const encoded = encodeURIComponent(JSON.stringify(settings.get()));
        // delete location.hash;'
        // console.log('loc:', location.toString());
        navigator.clipboard.writeText(`${window.location.origin}${window.location.pathname}${window.location.search}${window.location.search.length === 0 ? '?' : '&'}settings=${encoded}`);
        const btn = new UIElements_1.default().saveAsUrlButton;
        const saveText = btn.textContent;
        setTimeout(() => {
            btn.textContent = saveText;
            btn.style.border = 'unset';
            delete btn.style.border;
        }, 1000);
        btn.textContent = `Copied to clipboard`;
        btn.style.border = '1px solid green';
    };
    const settings = {
        get: () => {
            if (!settingsObj) {
                let settingsMatch;
                if ((settingsMatch = /[?&]settings=[^?&]+/.exec(location.search)) != null) {
                    const trimmedSearch = settingsMatch.index === 0
                        ? (settingsMatch[0].length < location.search.length
                            ? `?${location.search.slice(settingsMatch[0].length + 1)}`
                            : `${location.search.slice(0, settingsMatch.index)}${location.search.slice(settingsMatch.index + settingsMatch[0].length)}`)
                        : `${location.search.slice(0, settingsMatch.index)}${location.search.slice(settingsMatch.index + settingsMatch[0].length)}`;
                    history.replaceState('', document.title, `${window.location.pathname}${trimmedSearch}`);
                    try {
                        settingsObj = JSON.parse(decodeURIComponent(settingsMatch[0].slice(`?settings=`.length)));
                        clearHashFromLocation();
                        if (settingsObj) {
                            settings.set(settingsObj);
                        }
                    }
                    catch (e) {
                        console.warn('Invalid windowState in hash', e);
                    }
                }
                if (!settingsObj) {
                    try {
                        // TODO remove 'pasta-settings' fallback after an appropriate amount of time
                        settingsObj = JSON.parse(localStorage.getItem('codeprober-settings') || localStorage.getItem('pasta-settings') || '{}');
                    }
                    catch (e) {
                        console.warn('Bad data in localStorage, resetting settings', e);
                        settingsObj = {};
                    }
                }
            }
            return settingsObj || {};
        },
        set: (newSettings) => {
            settingsObj = newSettings;
            localStorage.setItem('codeprober-settings', JSON.stringify(settingsObj));
        },
        getEditorContents: () => settings.get().editorContents,
        setEditorContents: (editorContents) => settings.set({ ...settings.get(), editorContents }),
        isLightTheme: () => { var _a; return (_a = settings.get().lightTheme) !== null && _a !== void 0 ? _a : false; },
        setLightTheme: (lightTheme) => settings.set({ ...settings.get(), lightTheme }),
        shouldDuplicateProbeOnAttrClick: () => { var _a; return (_a = settings.get().duplicateProbeOnAttrClick) !== null && _a !== void 0 ? _a : true; },
        setShouldDuplicateProbeOnAttrClick: (duplicateProbeOnAttrClick) => settings.set({ ...settings.get(), duplicateProbeOnAttrClick }),
        shouldCaptureStdio: () => { var _a; return (_a = settings.get().captureStdio) !== null && _a !== void 0 ? _a : true; },
        setShouldCaptureStdio: (captureStdio) => settings.set({ ...settings.get(), captureStdio }),
        shouldCaptureTraces: () => { var _a; return (_a = settings.get().captureTraces) !== null && _a !== void 0 ? _a : false; },
        setShouldCaptureTraces: (captureTraces) => settings.set({ ...settings.get(), captureTraces }),
        shouldAutoflushTraces: () => { var _a; return (_a = settings.get().autoflushTraces) !== null && _a !== void 0 ? _a : true; },
        setShouldAutoflushTraces: (autoflushTraces) => settings.set({ ...settings.get(), autoflushTraces }),
        getPositionRecoveryStrategy: () => { var _a; return (_a = settings.get().positionRecoveryStrategy) !== null && _a !== void 0 ? _a : 'ALTERNATE_PARENT_CHILD'; },
        setPositionRecoveryStrategy: (positionRecoveryStrategy) => settings.set({ ...settings.get(), positionRecoveryStrategy }),
        getAstCacheStrategy: () => { var _a; return (_a = settings.get().astCacheStrategy) !== null && _a !== void 0 ? _a : 'PARTIAL'; },
        setAstCacheStrategy: (astCacheStrategy) => settings.set({ ...settings.get(), astCacheStrategy }),
        getProbeWindowStates: () => {
            var _a;
            const ret = (_a = settings.get().probeWindowStates) !== null && _a !== void 0 ? _a : [];
            return ret.map((item) => {
                if (typeof item.data === 'undefined') {
                    // Older variant of this data, upgrade it
                    return {
                        modalPos: item.modalPos,
                        data: {
                            type: 'probe',
                            locator: item.locator,
                            property: item.property,
                            nested: {},
                        }
                    };
                }
                return item;
            });
        },
        setProbeWindowStates: (probeWindowStates) => settings.set({ ...settings.get(), probeWindowStates }),
        getSyntaxHighlighting: () => { var _a; return (_a = settings.get().syntaxHighlighting) !== null && _a !== void 0 ? _a : 'java'; },
        setSyntaxHighlighting: (syntaxHighlighting) => settings.set({ ...settings.get(), syntaxHighlighting }),
        getMainArgsOverride: () => { var _a; return (_a = settings.get().mainArgsOverride) !== null && _a !== void 0 ? _a : null; },
        setMainArgsOverride: (mainArgsOverride) => settings.set({ ...settings.get(), mainArgsOverride }),
        getCustomFileSuffix: () => { var _a; return (_a = settings.get().customFileSuffix) !== null && _a !== void 0 ? _a : null; },
        setCustomFileSuffix: (customFileSuffix) => settings.set({ ...settings.get(), customFileSuffix }),
        getCurrentFileSuffix: () => { var _a; return (_a = settings.getCustomFileSuffix()) !== null && _a !== void 0 ? _a : `.${(0, syntaxHighlighting_1.getAppropriateFileSuffix)(settings.getSyntaxHighlighting())}`; },
        shouldShowAllProperties: () => { var _a; return (_a = settings.get().showAllProperties) !== null && _a !== void 0 ? _a : false; },
        setShouldShowAllProperties: (showAllProperties) => settings.set({ ...settings.get(), showAllProperties }),
        getLocationStyle: () => { var _a; return (_a = settings.get().locationStyle) !== null && _a !== void 0 ? _a : 'full'; },
        setLocationStyle: (locationStyle) => settings.set({ ...settings.get(), locationStyle }),
        shouldHideSettingsPanel: () => { var _a, _b; return (_b = (_a = settings.get()) === null || _a === void 0 ? void 0 : _a.hideSettingsPanel) !== null && _b !== void 0 ? _b : false; },
        setShouldHideSettingsPanel: (shouldHide) => settings.set({ ...settings.get(), hideSettingsPanel: shouldHide }),
        shouldGroupPropertiesByAspect: () => { var _a, _b; return (_b = (_a = settings.get()) === null || _a === void 0 ? void 0 : _a.groupPropertiesByAspect) !== null && _b !== void 0 ? _b : false; },
        setShouldGroupPropertiesByAspect: (shouldHide) => settings.set({ ...settings.get(), groupPropertiesByAspect: shouldHide }),
        shouldEnableTesting: () => window.location.search.includes('enableTesting=true'),
    };
    exports.default = settings;
});
define("ui/create/registerOnHover", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const registerOnHover = (element, onHover) => {
        element.onmouseenter = () => onHover(true);
        element.onmouseleave = () => onHover(false);
    };
    exports.default = registerOnHover;
});
define("ui/create/createTextSpanIndicator", ["require", "exports", "settings", "ui/create/registerOnHover"], function (require, exports, settings_1, registerOnHover_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    settings_1 = __importDefault(settings_1);
    registerOnHover_1 = __importDefault(registerOnHover_1);
    const createTextSpanIndicator = (args) => {
        var _a;
        const { span, marginLeft, marginRight, onHover, onClick } = args;
        const indicator = document.createElement('span');
        indicator.style.fontSize = '0.75rem';
        indicator.style.color = 'gray';
        if (marginLeft) {
            indicator.style.marginLeft = '0.25rem';
        }
        if (args.autoVerticalMargin) {
            indicator.style.marginTop = 'auto';
            indicator.style.marginBottom = 'auto';
        }
        if (marginRight) {
            indicator.style.marginRight = '0.25rem';
        }
        const ext = args.external ? '↰' : '';
        const warn = span.lineStart === 0 && span.colStart === 0 && span.lineEnd === 0 && span.colEnd === 0 ? '⚠️' : '';
        switch ((_a = args.styleOverride) !== null && _a !== void 0 ? _a : settings_1.default.getLocationStyle()) {
            case 'full-compact':
                if (span.lineStart === span.lineEnd) {
                    indicator.innerText = `${ext}[${span.lineStart}:${span.colStart}-${span.colEnd}]${warn}`;
                    break;
                }
            // Else, fall through
            case 'full':
                indicator.innerText = `${ext}[${span.lineStart}:${span.colStart}→${span.lineEnd}:${span.colEnd}]${warn}`;
                break;
            case 'lines-compact':
                if (span.lineStart === span.lineEnd) {
                    indicator.innerText = `${ext}[${span.lineStart}]${warn}`;
                    break;
                }
            // Else, fall through
            case 'lines':
                indicator.innerText = `${ext}[${span.lineStart}→${span.lineEnd}]${warn}`;
                break;
            case 'start':
                indicator.innerText = `${ext}[${span.lineStart}:${span.colStart}]${warn}`;
                break;
            case 'start-line':
                indicator.innerText = `${ext}[${span.lineStart}]${warn}`;
                break;
        }
        if (!args.external) {
            if (onHover) {
                indicator.classList.add('highlightOnHover');
                (0, registerOnHover_1.default)(indicator, onHover);
            }
            if (onClick) {
                indicator.onclick = () => onClick();
            }
        }
        return indicator;
    };
    exports.default = createTextSpanIndicator;
});
define("ui/popup/displayHelp", ["require", "exports", "model/repositoryUrl", "ui/create/createModalTitle", "ui/create/createTextSpanIndicator", "ui/create/showWindow"], function (require, exports, repositoryUrl_1, createModalTitle_1, createTextSpanIndicator_1, showWindow_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createModalTitle_1 = __importDefault(createModalTitle_1);
    createTextSpanIndicator_1 = __importDefault(createTextSpanIndicator_1);
    showWindow_2 = __importDefault(showWindow_2);
    const createSyntaxNode = (type, text, margins) => {
        const retNode = document.createElement('span');
        if (type) {
            retNode.classList.add(type);
        }
        if (margins === null || margins === void 0 ? void 0 : margins.includes('left'))
            retNode.style.marginLeft = '0.5rem';
        if (margins === null || margins === void 0 ? void 0 : margins.includes('right'))
            retNode.style.marginRight = '0.5rem';
        retNode.innerText = text;
        return retNode;
    };
    const getHelpTitle = (type) => ({
        'general': 'How to use CodeProber 🔎',
        'recovery-strategy': 'Position recovery',
        'probe-window': 'Probe help',
        'magic-stdout-messages': 'Magic stdout messages',
        'ast-cache-strategy': 'AST caching',
        'syntax-highlighting': 'Syntax Highlighting',
        'main-args-override': 'Main args override',
        'customize-file-suffix': 'Temp file suffix',
        'property-list-usage': 'Property list help',
        'show-all-properties': 'Show all properties',
        'group-properties-by-aspect': 'Group properties',
        'duplicate-probe-on-attr': 'Duplicate probe',
        'capture-stdout': 'Capture stdout',
        'capture-traces': 'Capture traces',
        'location-style': 'Location styles',
        'ast': 'AST',
        'test-code-vs-codeprober-code': 'Test code vs CodeProber code',
    })[type];
    const getHelpContents = (type) => {
        const createHeader = (text) => {
            const header = document.createElement('span');
            header.classList.add('syntax-attr');
            header.innerText = text;
            return header;
        };
        const joinElements = (...parts) => {
            const wrapper = document.createElement('div');
            parts.forEach(p => {
                if (typeof p === 'string') {
                    wrapper.appendChild(document.createTextNode(p));
                }
                else {
                    wrapper.appendChild(p);
                }
                return p;
            });
            return wrapper;
        };
        switch (type) {
            case 'general': {
                const exampleVisible = document.createElement('div');
                {
                    const add = (...args) => exampleVisible.appendChild(createSyntaxNode(args[0], args[1], args[2]));
                    exampleVisible.appendChild(document.createTextNode('Example (JastAdd syntax): '));
                    add('syntax-modifier', 'syn', 'right');
                    add('syntax-type', 'boolean List');
                    add('syntax-attr', '.cpr_nodeListVisible', '');
                    add('', '() =', 'right');
                    add('syntax-modifier', 'false', 'false');
                    add('', ';', '');
                }
                const exampleAttrs = document.createElement('div');
                {
                    const add = (...args) => exampleAttrs.appendChild(createSyntaxNode(args[0], args[1], args[2]));
                    exampleAttrs.appendChild(document.createTextNode('Example (JastAdd syntax): '));
                    add('syntax-modifier', 'syn', 'right');
                    add('syntax-type', 'java.util.List<String> Function');
                    add('syntax-attr', '.cpr_propertyListShow', '');
                    add('', '() =', 'right');
                    add('syntax-type', 'Arrays.asList(', '');
                    add('syntax-string', '"eval"', '');
                    add('', ', ', '');
                    add('syntax-string', '"reference"', '');
                    add('', ');', '');
                }
                const exampleView = document.createElement('div');
                {
                    const add = (...args) => exampleView.appendChild(createSyntaxNode(args[0], args[1], args[2]));
                    exampleView.appendChild(document.createTextNode('Example (JastAdd syntax): '));
                    add('syntax-modifier', 'syn', 'right');
                    add('syntax-type', 'Object IntType');
                    add('syntax-attr', '.cpr_getOutput', '');
                    add('', '() =', 'right');
                    add('syntax-string', '"int"');
                    add('', ';', '');
                }
                const viewDefault = document.createElement('pre');
                viewDefault.style.marginTop = '2px';
                viewDefault.style.marginLeft = '2px';
                viewDefault.style.fontSize = '0.875rem';
                viewDefault.innerText = `
encode(value):
  if (value is ASTNode):
    if (value has 'cpr_getOutput'): encode(value.cpr_getOutput())
    else: output(value.location, value.type)

  if (value is Iterator or Iterable):
    for (entry in value): encode(entry)

  if no case above matched: output(value.toString())
`.trim();
                return [
                    `Right click on some text in the editor and click 'Create Probe' to get started.`,
                    `If you get the message 'Node listing failed', then it likely means that something went wrong during parsing.`,
                    `Look at the terminal where you started codeprober.jar for more information.`,
                    ``,
                    `There are a number of 'magic' attributes you can add to your AST nodes to modify their behavior in this tool.`,
                    `All magic attributes are prefixed with 'cpr_' (CodePRober_) to avoid colliding with your own functionality.`,
                    `There three main magic attributes you may want to add are:`,
                    ``,
                    joinElements(`1) '`, createHeader('cpr_nodeListVisible'), `'. This controls whether or not a node will appear in the 'Create Probe' node list.`),
                    `Default: `,
                    `-    false: for 'List' and 'Opt'. Note: this is only default, you can override it.`,
                    `-     true: for all other types.`,
                    exampleVisible,
                    ``,
                    joinElements(`2) '`, createHeader('cpr_propertyListShow'), `'. A collection (List<String> or String[]) that is used to include extra properties in the property list seen when creating probes.`),
                    `Functions are shown in the property list if all of the following is true:`,
                    `- The function is public.`,
                    `- The argument types are 'String', 'int', 'boolean', 'java.io.OutputStream', 'java.io.PrintStream' or a subtype of the top AST Node type.`,
                    `- One of the following is true:`,
                    `-- The function is an attribute (originates from a jrag file, e.g 'z' in 'syn X Y.z() = ...')`,
                    `-- The function is an AST child accessor (used to get members declared in an .ast file).`,
                    `-- The function name is either 'toString', 'getChild', 'getNumChild', 'getParent' or 'dumpTree'`,
                    `-- The function name is found in the return value from cpr_propertyListShow()`,
                    `Default: empty array.`,
                    exampleAttrs,
                    ``,
                    joinElements(`3) '`, createHeader('cpr_getOutput'), `'. This controls how a value is shown in the output (lower part) of a probe.`),
                    `Default: encodes one or more options in order. In pseudocode:`,
                    viewDefault,
                    exampleView,
                    ``,
                    `The way this tool is built, it cannot help you find & fix infinite loops.`,
                    joinElements(`For infinite loops we instead recommend you use other tools like `, (() => {
                        const a = document.createElement('a');
                        a.href = 'https://docs.oracle.com/javase/1.5.0/docs/tooldocs/share/jstack.html';
                        a.innerText = 'jstack';
                        a.target = '_blank';
                        return a;
                    })(), ' and/or traditional breakpoint/step-debuggers.'),
                    ``,
                    joinElements(`Contributions welcome at `, (() => {
                        const a = document.createElement('a');
                        a.href = repositoryUrl_1.repositoryUrl;
                        a.innerText = repositoryUrl_1.repositoryUrl;
                        a.target = '_blank';
                        return a;
                    })()),
                ];
            }
            case 'recovery-strategy': {
                const settingsExplanation = document.createElement('div');
                settingsExplanation.style.display = 'grid';
                settingsExplanation.style.gridTemplateColumns = 'auto auto 1fr';
                settingsExplanation.style.gridColumnGap = '0.5rem';
                [
                    [`Fail`, `don\'t try to recover information`],
                    [`Parent`, `search recursively upwards through parent nodes, using the equivalent of 'node.getParent()'`],
                    [`Child`, `search recursively downwards through child nodes, using the equivalent of 'node.getChild(0)'`],
                    [`Parent->Child`, `Try 'Parent'. If no position is found, try 'Child'.`],
                    [`Child->Parent`, `Try 'Child'. If no position is found, try 'Parent'.`],
                    [`Zigzag`, `Similar to 'Parent->Child', but only search one step in one direction, then try the other direction, then another step in the first direction, etc. Initially searches one step upwards.`],
                ].forEach(([head, tail]) => {
                    const headNode = document.createElement('span');
                    headNode.style.textAlign = 'right';
                    headNode.classList.add('syntax-attr');
                    headNode.innerText = head;
                    settingsExplanation.appendChild(headNode);
                    settingsExplanation.appendChild(document.createTextNode('-'));
                    const tailNode = document.createElement('span');
                    tailNode.innerText = tail;
                    settingsExplanation.appendChild(tailNode);
                });
                const sampleAttr = document.createElement('pre');
                sampleAttr.style.marginTop = '6px';
                sampleAttr.style.marginLeft = '2px';
                sampleAttr.style.fontSize = '0.875rem';
                sampleAttr.innerText = `
aspect DumpSubtree {

  // Bypass/inline Opt/List
  void ASTNode.bypassDumpSubtree(java.util.List<Object> dst, int budget) {
    if (budget <= 0) return;
    for (ASTNode child : astChildren()) child.dumpSubtree(dst, budget);
  }
  void Opt.dumpSubtree(java.util.List<Object> dst, int budget) { bypassDumpSubtree(dst, budget); }
  void List.dumpSubtree(java.util.List<Object> dst, int budget) { bypassDumpSubtree(dst, budget); }

  void ASTNode.dumpSubtree(java.util.List<Object> dst, int budget) {
    dst.add(this);
    if (getNumChild() == 0 || budget <= 0) { return; }

    final java.util.List<Object> ret = new java.util.ArrayList<>();
    for (ASTNode child : astChildren()) child.dumpSubtree(ret, budget - 1);
    dst.add(ret);
  }

  syn Object ASTNode.dumpSubtree(int budget) {
    java.util.List<Object> dst = new java.util.ArrayList<>();
    for (ASTNode child : astChildren()) child.dumpSubtree(dst, budget);
    if (dst.size() == 1 && dst.get(0) instanceof java.util.List<?>) {
      return dst.get(0);
    }
    return dst;
  }
  syn Object ASTNode.dumpSubtree() { return dumpSubtree(999); }

}
`.trim();
                const copyButton = document.createElement('button');
                copyButton.innerText = 'Copy to clipboard';
                copyButton.onclick = () => {
                    navigator.clipboard.writeText(sampleAttr.innerText);
                };
                return [
                    'Some nodes in your AST might be missing location information.',
                    'CodeProber is heavily built around the idea that all AST nodes have positions, and the experience is worsened for nodes where this isn\'t true.',
                    '',
                    'There are two solutions:',
                    '',
                    '1) Fix your parser',
                    'Usually position information is missing because of how you structured your parser.',
                    'Maybe you do some sort of desugaring in the parser, and create multiple AST nodes in a single production rule.',
                    'Beaver, for example, will only give a single node position information per production rule, so try to ony create a single node per rule.',
                    `Note that this isn't a solution for nodes generated by NTA's. They will need to use solution 2.`,
                    '',
                    '2) Use a recovery strategy',
                    'If a node is missing location information, then we can sometimes get it from nearby nodes.',
                    'This setting controls just how we search for information. Which option fits best for you depends on how you built your AST.',
                    'Settings:',
                    settingsExplanation,
                    '',
                    `No strategy guarantees success. If position is missing, it will be marked with '⚠️', and you\'ll likely run into problems when using it`,
                    `If you are unsure of what to use, 'Zigzag' is usually a pretty good option.`,
                    `An efficient way to root out parser problems is to pick 'Fail', then dump the entire tree using the following 'dumpSubtree' attribute (JastAdd syntax):`,
                    sampleAttr,
                    copyButton,
                ];
            }
            case 'probe-window': {
                return [
                    `This window represents an active 'probe'`,
                    `The titlebar shows the input to the probe; namely node type and attribute name.`,
                    `Sometimes you'll also see attribute arguments here, and a pen that lets you edit them.`,
                    `Finally, the title bar show where the probed node exists. You can hover this to highlight the node in the document.`,
                    '',
                    'Below the titlebar is the output of the probe.',
                    `This is the resolved value of the probe, formatted according to the 'cpr_getOutput' logic (see general help window for more on this).`,
                    '',
                    `If you check 'Capture stdout' on the top right, you'll also see any messages printed to System.out and System.err in the window.`,
                    `If the cache strategy is set to 'None' or 'Purge', then each probe will get evaluated in a fresh compiler instance in isolation, so any values and messages you see in the probe window belongs only to that window.`,
                    '',
                    'The probes are automatically reevaluated whenever the document changes.',
                    `The probes also automatically update when the underlying jar file (usually 'compiler.jar') changes.`,
                    `Therefore you can use probes as a sort of automatic test case runner. Write some code, open some probes, then move it to a secondary monitor and continue working on your compiler.`,
                    `Whenever you rebuild your compiler, glance at your probes. They should now display fresh values.`,
                ];
            }
            case 'magic-stdout-messages': {
                const createParent = () => {
                    const parent = document.createElement('div');
                    parent.style.display = 'grid';
                    parent.style.gridTemplateColumns = 'auto 1fr';
                    parent.style.rowGap = '0.125rem';
                    parent.style.columnGap = '0.5rem';
                    return parent;
                };
                let entryParent;
                const createEntry = (pattern, explanation) => {
                    const patternHolder = document.createElement('span');
                    patternHolder.classList.add('syntax-string');
                    patternHolder.style.textAlign = 'right';
                    patternHolder.innerText = pattern;
                    const explanationHolder = document.createElement('span');
                    explanationHolder.innerText = explanation;
                    entryParent.appendChild(patternHolder);
                    entryParent.appendChild(explanationHolder);
                };
                // TODO rename the patterns a bit? Prefix everything by PASTA- perhaps?
                const patternsParent = entryParent = createParent();
                createEntry('ERR@S;E;MSG', 'Show a red squiggly line.');
                createEntry('WARN@S;E;MSG', 'Show a yellow squiggly line.');
                createEntry('INFO@S;E;MSG', 'Show a blue squiggly line.');
                createEntry('LINE-PP@S;E;COL', 'Draw a plain line.');
                createEntry('LINE-PA@S;E;COL', 'Draw line that starts plain and ends with an arrow.');
                createEntry('LINE-AP@S;E;COL', 'Draw line that starts with an arrow and ends plain.');
                createEntry('LINE-AA@S;E;COL', 'Draw line with arrows on both ends.');
                const patternsExamples = entryParent = createParent();
                createEntry('ERR@40964;40966;Hello', `Red squiggly line on line 10, column 4 to 6. Shows 'Hello' when you hover over it`);
                createEntry('INFO@16384;32767;Hi', `Blue squiggly line on the entirety of lines 4, 5, 6 and 7. Shows 'Hi' when you hover over it`);
                createEntry('LINE-PA@4096;20490;#0FFF', `Solid cyan line from start of line 1 to line 5, column 10. Has arrow on the end.`);
                createEntry('LINE-AA@16388;16396;#0F07', `Semi-transparent green double-sided arrow on line of line 4 from column 4 to 12`);
                const sampleAttr = document.createElement('pre');
                sampleAttr.style.marginTop = '6px';
                sampleAttr.style.marginLeft = '2px';
                sampleAttr.style.fontSize = '0.875rem';
                sampleAttr.innerText = `
aspect MagicOutputDemo {
  void ASTNode.outputMagic(String type, String arg) {
    System.out.println(type + "@" + getStart() + ";" + getEnd() + ";" + arg);
  }
  coll HashSet<ASTNode> Program.thingsToHighlightBlue() root Program;
  MyNodeType contributes this
    to Program.thingsToHighlightBlue()
    for program();

  syn Object Program.drawBlueSquigglys() {
    for (ASTNode node : thingsToHighlightBlue()) {
      node.outputMagic("INFO", "This thing is highlighted because [..]");
    }
    return null;
  }
}
`.trim();
                const copyButton = document.createElement('button');
                copyButton.innerText = 'Copy to clipboard';
                copyButton.onclick = () => {
                    navigator.clipboard.writeText(sampleAttr.innerText);
                };
                return [
                    `There are a number of 'magic' messages you can print to System.out.`,
                    `Whenever probes are evaluated, these messages are intercepted (even if 'Capture stdout' isn't checked!).`,
                    `The patterns and effects of the magic messages are shown below:`,
                    '',
                    patternsParent,
                    '',
                    `'S' and 'E' stand for 'start' and 'end', and are ints containing line and column. 20 bits for line, 12 for column, e.g: 0xLLLLLCCC.`,
                    'Example: 20493 represents line 5 and column 13 (20493 = (5 << 12) + 13).',
                    '',
                    `'MSG' is any string. This string is displayed when you hover over the squiggly lines`,
                    '',
                    `'COL' is a hex-encoded color in the form #RGBA.`,
                    'Example: #F007 (semi-transparent red)',
                    '',
                    'Some example messages and their effects are listed below:',
                    patternsExamples,
                    '',
                    `The arrows don't work (or only partially work) for lines that are connected to offscreen or invalid positions.`,
                    'For example, if you try to draw a line with one end at line 2, column 5, but that line only has 3 characters, then the line will instead point at column 3.',
                    '',
                    `These special messages can be used as a some custom styling/renderer to help understand how your compiler works.`,
                    `The following code can be used as a starting point`,
                    sampleAttr,
                    copyButton,
                    `Once you have the code in an aspect and have recompiled, open a probe for the attribute 'drawBlueSquigglys' to see all instances of 'MyNodeType' have blue lines under them.`,
                    'Note that the squiggly lines (and all other arrows/lines) only remain as long as their related probe window remains open.'
                ];
            }
            case "ast-cache-strategy": {
                const settingsExplanation = document.createElement('div');
                settingsExplanation.style.display = 'grid';
                settingsExplanation.style.gridTemplateColumns = 'auto auto 1fr';
                settingsExplanation.style.gridColumnGap = '0.5rem';
                [
                    [`Full`, `Cache everything`],
                    [`Partial`, `Cache the AST, but call 'flushTreeCache' on the root before evaluating any probe. This ensures that cached attributes are invoked for every probe.`],
                    [`None`, `Don't cache the AST.`],
                    [`Purge`, `Don't cache the AST or even the underlying jar file, fully reload from the file system each time. This resets all global state, but kills the JVMs ability to optimize your code. This is terrible for performance.`],
                ].forEach(([head, tail]) => {
                    const headNode = document.createElement('span');
                    headNode.style.textAlign = 'right';
                    headNode.classList.add('syntax-attr');
                    headNode.innerText = head;
                    settingsExplanation.appendChild(headNode);
                    settingsExplanation.appendChild(document.createTextNode('-'));
                    const tailNode = document.createElement('span');
                    tailNode.innerText = tail;
                    settingsExplanation.appendChild(tailNode);
                });
                return [
                    `When multiple probes are active, the same editor state will be evaluated multiple times (once for each probe).`,
                    `When this happens, we can re-use the AST multiple times to avoid unnecessary re-parses. There are however reasons that you might not want to re-use the AST, or at least not fully.`,
                    '',
                    `While it is technically bad practice, you can use "printf-style" debugging in your attributes (System.out.println(..)).`,
                    `Cached attributes will only output such printf-messages once. With multiple active probes, this makes it uncertain which probe will capture the message.`,
                    `Even worse, if you have any form of mutable state in your AST (please don't!), then reusing an AST can cause unpredictable behavior when parsing.`,
                    `There are a few strategies you can use:`,
                    '',
                    settingsExplanation,
                    '',
                    `Performance is best with 'Full', and worst with 'Purge'.`,
                    `"Debuggability" is best with 'Purge', and worst with 'Full'.`,
                    `If you are unsure of what to use, 'Partial' is usually a pretty good option.`,
                ];
            }
            case 'syntax-highlighting': return [
                `This setting controls which style of highlighting is used in the editor.`,
                `This also affects the suffix used for temporary files, unless 'Custom file suffix' is checked.`,
            ];
            case 'main-args-override': return [
                `When your underlying tool is invoked, the path to a temporary file is sent as an arg to the main method.`,
                `Optionally, some extra args are also included.`,
                `By default, the extra args are defined when you start the CodeProber server.`,
                `For example, running 'java -jar codeprober.jar path/to/your/tool.jar foo bar baz', will set the extra args array to [foo, bar, baz].`,
                `By checking 'Override main args' and clicking "Edit", you can override those extra args.`,
                ``,
                `Args are separated by spaces and/or newlines.`,
                `To include a space in an arg, wrap the arg in quotes (e.g "foo bar").`,
                `To include a newline, quote or backslash in an arg, prefix the char with \\ (e.g \\n, \\" and \\\\).`,
            ];
            case 'customize-file-suffix': return [
                `By default, the editor state is written to a temporary file with a file suffix that matches the chosen syntax highlighting.`,
                `For example, if the highlighting is set to 'Python', then the temp file will end with '.py'.`,
                ``,
                `If you work on a language not represented in the syntax highlighting list, then this might result in your compiler/analyzer rejecting the temporary file due to it having an unknown suffix.`,
                `By checking 'Custom file suffix' you can change the default suffix to something else.`,
                `Note that custom suffixes are used as-is. If you want temp files to end with '.txt', then you must set the custom suffix to exactly '.txt' (including the dot).`,
            ];
            case 'property-list-usage': return [
                `This is the list of available properties on the node you selected.`,
                `The list is filtered according to the 'cpr_propertyListShow' logic (see general help window for more on this).`,
                `When no filter is added, the properties are sorted by two criteria in order:`,
                `1) Properties representing AST child accessors. This corresponds to field declarations in ast files. If you write 'MyNode ::= MyChild:TheType;', then the property 'getMyChild()' will appear high up in this list.`,
                `2) Alphabetical ordering.`,
                ``,
                `When a filter is added, this list is instead is sorted by:`,
                `1) Properties that match the filter. The filter is case insensitive and allows arbitrary characters to appear in between the filter characters. For example, 'gl' matches 'getLorem' but not 'getIpsum'.`,
                `2) Alphabetical ordering`,
            ];
            case 'show-all-properties': return [
                `By default, the property list shown while creating a probe is filtered according to the 'cpr_propertyListShow' logic (see general help window for more on this).`,
                `The last criteria of that filter is that the function must follow one of a few predicates to be shown.`,
                `This checkbox basically adds a '|| true' to the end of that predicate list. I.e any function that is public and has serializable argument types will be shown.`,
                `There is potentially a very large amount of functions shown is you check this box, which can be annoying.`,
                `In addition, some of the non-standard functions might cause mutations (like 'setChild(int, ..)'), which can cause undefined behavior when used in this tool.`,
                `In general, we recommend you keep this box unchecked, and only occasionally re-check it.`,
            ];
            case 'group-properties-by-aspect': return [
                `Check this to group and filter property names by their containing aspect file.`,
                `This affects the dialog where you select a property, i.e after you've selected an AST node.`,
                ``,
                `This is only applicable for JastAdd tools.`
            ];
            case 'duplicate-probe-on-attr': return [
                `When you have created a probe, you can click the property name to create a new probe on the same node, but with a different property.`,
                `This click can either create a new probe window, or replace the old one.`,
                `If this box is checked, then a new window will be created.`,
                `If this box is unchecked, then it will replace the old window.`,
                `By holding 'Shift' while clicking the property name, you can access the 'reverse' functionality.`,
                `I.e if the box is checked and you hold shift, then the window will be replaced, and vice versa.`,
            ];
            case 'capture-stdout': {
                const styled = (text, cls) => {
                    const span = document.createElement('span');
                    span.classList.add(cls);
                    span.innerText = text;
                    return span;
                };
                return [
                    `Check this if you want messages to stdout and stderr to be shown in probe outputs.`,
                    `'printf-debugging' should generally be avoided if possible, but if you feel it is strictly needed then you can use this checkbox to access it.`,
                    joinElements(`Captured messages are displayed with a `, styled('blue', 'captured-stdout'), ` color if they were printed to stdout, and a `, styled('red', 'captured-stderr'), ` color if they were printed to stderr.`),
                    ``,
                    `Note that only messages printed during property evaluation are captured.`,
                    `Messages printed during parsing are not shown here, but can still be seen in the terminal where you started codeprober.jar.`,
                    `An exception to this is when parsing fails, in which case messages during parsing are displayed (even if this checkbox is unchecked).`,
                ];
            }
            case 'capture-traces': {
                const code = document.createElement('pre');
                code.innerText = '  ' + [
                    `public void Program.cpr_setTraceReceiver(final java.util.function.Consumer<Object[]> recv) {`,
                    `  trace().setReceiver(new ASTState.Trace.Receiver() {`,
                    `    @Override`,
                    `    public void accept(ASTState.Trace.Event event, ASTNode node, String attribute, Object params, Object value) {`,
                    `      recv.accept(new Object[] { event, node, attribute, params, value });`,
                    `    }`,
                    `  });`,
                    `}`,
                ].join('\n  ');
                const copyButton = document.createElement('button');
                copyButton.innerText = 'Copy to clipboard';
                copyButton.onclick = () => {
                    navigator.clipboard.writeText(code.innerText);
                };
                return [
                    `Check this if you want to capture traces of indirect dependencies while evaluating properties.`,
                    `Once checked, you can optionally also decide if you want to call flushTreeCache() before each time traces are collected.`,
                    `If you perform computations during main() that results in cached values in your AST, then you wouldn't see the traces of those computations when the probe is evaluated.`,
                    `By always performing an extra flushTreeCache() prior to collecting traces, we get a bigger and more accurate trace, at the cost of some speed.`,
                    ``,
                    `Tracing is an advanced feature which requires some customization in your tool to be able to use.`,
                    `If you are using JastAdd, add a --tracing flag in your build script, and then the following aspect code (replace 'Program' with your root node type):`,
                    code,
                    copyButton
                ];
            }
            case 'location-style': {
                const sp = { lineStart: 1, colStart: 2, lineEnd: 3, colEnd: 4 };
                const createExplanationPanel = (entries) => {
                    const settingsExplanation = document.createElement('div');
                    settingsExplanation.style.paddingLeft = '1rem';
                    settingsExplanation.style.display = 'grid';
                    settingsExplanation.style.gridTemplateColumns = 'auto auto 1fr';
                    settingsExplanation.style.gridColumnGap = '0.5rem';
                    entries.forEach(([head, tail, span]) => {
                        const headNode = document.createElement('span');
                        headNode.style.textAlign = 'right';
                        headNode.classList.add('syntax-attr');
                        headNode.innerText = head;
                        settingsExplanation.appendChild(headNode);
                        settingsExplanation.appendChild(document.createTextNode('-'));
                        settingsExplanation.appendChild((0, createTextSpanIndicator_1.default)({
                            span,
                            styleOverride: tail,
                        }));
                        // const tailNode = document.createElement('span');
                        // tailNode.innerText = tail;
                        // settingsExplanation.appendChild(tailNode);
                    });
                    return settingsExplanation;
                };
                return [
                    `In several locations in CodeProber you can see location indicators.`,
                    `This setting control how the location indicators are presented. Example values can be seen below for a location that starts at line 1, column 2 and ends at line 3, column 4.`,
                    ``,
                    createExplanationPanel([
                        [`Full`, 'full', sp],
                        [`Lines`, 'lines', sp],
                        [`Start`, 'start', sp],
                        [`Start line`, `start-line`, sp],
                    ]),
                    ``,
                    `The 'compact' options look like the non-compact options if the start and end lines are different. If start and end lines are equal, then it looks like this:`,
                    createExplanationPanel([
                        [`Full compact`, 'full-compact', { ...sp, lineEnd: 1 }],
                        [`Lines compact`, 'lines-compact', { ...sp, lineEnd: 1 }],
                    ]),
                    ``,
                    `Note that this setting doesn't affect the hover highlighting. The exact line/column is highlighted, even if the indicator only shows the start line for example.`,
                ];
            }
            case 'ast': {
                return [
                    `This window displays the abstract syntax tree (AST) around a node in the tree.`,
                    `Nodes can be hovered and interacted with, just like when the output of a normal probe is an AST node.`,
                    `When you see '᠁', the AST has been truncated due to performance reasons.`,
                    `You can click the '᠁' to continue exploring the AST from that point`,
                ];
            }
            case 'test-code-vs-codeprober-code': {
                return [
                    `When a test is created it saves the current state of CodeProber. This includes the code in the main CodeProber text editor, as well as some of the settings (cache settings, main args, file suffix, etc.).`,
                    ``,
                    `When tests are executed, they do so with their saved state, *not* the current CodeProber state. This lets you have multiple tests at the same time, each with their on unique configuration.`,
                    ``,
                    `When a test fails, you may want to open probes to inspect why. The first step is to change the current CodeProber code to the test code. Open the test in question and click the 'Source Code' tab. There will be a button labeled 'Load Source' or 'Open Probe'.`,
                    `• Clicking 'Load Source' will replace the code inside the main CodeProber editor with the saved code from the test.`,
                    `• Clicking 'Open Probe' will open the probe corresponding to the test.`,
                    `'Open Probe' is only available if the CodeProber code matches the test code.`,
                ];
            }
        }
    };
    const displayHelp = (type, setHelpButtonDisabled) => {
        setHelpButtonDisabled === null || setHelpButtonDisabled === void 0 ? void 0 : setHelpButtonDisabled(true);
        const cleanup = () => {
            helpWindow.remove();
            setHelpButtonDisabled === null || setHelpButtonDisabled === void 0 ? void 0 : setHelpButtonDisabled(false);
        };
        const helpWindow = (0, showWindow_2.default)({
            rootStyle: `
      width: 32rem;
      min-height: 8rem;
    `,
            onForceClose: cleanup,
            resizable: true,
            render: (root) => {
                root.appendChild((0, createModalTitle_1.default)({
                    renderLeft: (container) => {
                        const header = document.createElement('span');
                        header.innerText = getHelpTitle(type);
                        container.appendChild(header);
                    },
                    onClose: cleanup,
                }).element);
                const textHolder = document.createElement('div');
                textHolder.style.padding = '0.5rem';
                const paragraphs = getHelpContents(type);
                paragraphs.forEach(p => {
                    if (!p) {
                        textHolder.appendChild(document.createElement('br'));
                        return;
                    }
                    if (typeof p !== 'string') {
                        textHolder.appendChild(p);
                        return;
                    }
                    const node = document.createElement('p');
                    node.appendChild(document.createTextNode(p));
                    node.style.marginTop = '0';
                    node.style.marginBottom = '0';
                    textHolder.appendChild(node);
                });
                root.appendChild(textHolder);
            }
        });
    };
    exports.default = displayHelp;
});
define("model/findLocatorWithNestingPath", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.findAllLocatorsWithinNestingPath = void 0;
    const findAllLocatorsWithinNestingPath = (rootLines) => {
        const ret = {};
        const step = (parentPath, from) => {
            let backshift = 0;
            for (let i = 0; i < from.length; ++i) {
                const line = from[i];
                switch (line.type) {
                    case 'stdout':
                    case 'stderr':
                        --backshift;
                        break;
                    case 'arr':
                        step([...parentPath, i + backshift], line.value);
                        break;
                    case 'node':
                        ret[JSON.stringify([...parentPath, i + backshift])] = line.value;
                        break;
                }
            }
        };
        step([], rootLines);
        return ret;
    };
    exports.findAllLocatorsWithinNestingPath = findAllLocatorsWithinNestingPath;
    const findLocatorWithNestingPath = (path, rootLines) => {
        const step = (index, from) => {
            let position = path[index];
            // We want something at index `position`, but stdio messages don't contribute to indexes (see 'excludeStdIoFromPaths' in encodeRpcBodyLines).
            // Iterate until we have seen `position` number of non-stdio elements.
            for (let i = 0; i < from.length; ++i) {
                switch (from[i].type) {
                    case 'stdout':
                    case 'stderr':
                        break;
                    default:
                        if (position <= 0) {
                            position = i;
                            i = from.length;
                            break;
                        }
                        --position;
                        break;
                }
            }
            const line = from[position];
            if (!line) {
                return null;
            }
            if (index >= path.length - 1) {
                switch (line.type) {
                    case 'node':
                        return line.value;
                    default:
                        return null;
                }
            }
            switch (line.type) {
                case 'arr':
                    return step(index + 1, line.value);
                default:
                    return null;
            }
        };
        return step(0, rootLines);
    };
    exports.default = findLocatorWithNestingPath;
});
define("dependencies/onp/data", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.position = exports.SES_ADD = exports.SES_COMMON = exports.SES_DELETE = void 0;
    exports.SES_DELETE = -1;
    exports.SES_COMMON = 0;
    exports.SES_ADD = 1;
    function position(x, y, k) {
        return { x, y, k };
    }
    exports.position = position;
});
define("dependencies/onp/results", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createTextResults = exports.createResultItem = void 0;
    function createResultItem(left, right, state) {
        return { left, right, state };
    }
    exports.createResultItem = createResultItem;
    function createTextResults(results) {
        if (results.length === 0) {
            return [];
        }
        let last = createResultItem(results[0].left, results[0].right, results[0].state);
        let shrink = [last];
        results.slice(1).forEach((item) => {
            if (item.state !== last.state) {
                last = createResultItem(item.left, item.right, item.state);
                shrink.push(last);
            }
            else {
                last.left += item.left;
                last.right += item.right;
            }
        });
        return shrink;
    }
    exports.createTextResults = createTextResults;
});
define("dependencies/onp/onp", ["require", "exports", "dependencies/onp/data", "dependencies/onp/results"], function (require, exports, data_1, results_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.onp = void 0;
    function createInfo(a, b) {
        //switch sides
        if (a.length >= b.length) {
            return {
                a: b,
                b: a,
                m: b.length,
                n: a.length,
                reverse: true,
                offset: b.length + 1
            };
        }
        return {
            a: a,
            b: b,
            m: a.length,
            n: b.length,
            reverse: false,
            offset: a.length + 1
        };
    }
    function onp(textA, textB) {
        const [epc, ed] = positions(textA, textB);
        const [result, lcs] = sequence(textA, textB, epc);
        return [result, ed, lcs];
    }
    exports.onp = onp;
    function positions(textA, textB) {
        const { n, m, offset } = createInfo(textA, textB);
        const path = [];
        const pos = [];
        const delta = n - m;
        const size = m + n + 3;
        const fp = {};
        for (let i = 0; i < size; i++) {
            fp[i] = data_1.SES_DELETE;
            path[i] = data_1.SES_DELETE;
        }
        let p = data_1.SES_DELETE;
        do {
            ++p;
            for (let k = -p; k <= delta - 1; k++) {
                fp[k + offset] = snake(textA, textB, path, pos, k, fp[k - 1 + offset] + 1, fp[k + 1 + offset]);
            }
            for (let k = delta + p; k >= delta + 1; k--) {
                fp[k + offset] = snake(textA, textB, path, pos, k, fp[k - 1 + offset] + 1, fp[k + 1 + offset]);
            }
            fp[delta + offset] = snake(textA, textB, path, pos, delta, fp[delta - 1 + offset] + 1, fp[delta + 1 + offset]);
        } while (fp[delta + offset] !== n);
        let ed = delta + 2 * p;
        let epc = [];
        let r = path[delta + offset];
        while (r !== data_1.SES_DELETE) {
            epc[epc.length] = (0, data_1.position)(pos[r].x, pos[r].y, null);
            r = pos[r].k;
        }
        return [epc, ed];
    }
    function sequence(textA, textB, epc) {
        const { a, b, reverse } = createInfo(textA, textB);
        const changes = [];
        let y_idx = 1;
        let x_idx = 1;
        let py_idx = 0;
        let px_idx = 0;
        let lcs = "";
        for (let i = epc.length - 1; i >= 0; i--) {
            while (px_idx < epc[i].x || py_idx < epc[i].y) {
                if (epc[i].y - epc[i].x > py_idx - px_idx) {
                    if (reverse) {
                        changes[changes.length] = (0, results_1.createResultItem)(b[py_idx], b[py_idx], data_1.SES_DELETE);
                    }
                    else {
                        changes[changes.length] = (0, results_1.createResultItem)(b[py_idx], b[py_idx], data_1.SES_ADD);
                    }
                    ++y_idx;
                    ++py_idx;
                }
                else if (epc[i].y - epc[i].x < py_idx - px_idx) {
                    if (reverse) {
                        changes[changes.length] = (0, results_1.createResultItem)(a[px_idx], a[px_idx], data_1.SES_ADD);
                    }
                    else {
                        changes[changes.length] = (0, results_1.createResultItem)(a[px_idx], a[px_idx], data_1.SES_DELETE);
                    }
                    ++x_idx;
                    ++px_idx;
                }
                else {
                    changes[changes.length] = (0, results_1.createResultItem)(a[px_idx], b[py_idx], data_1.SES_COMMON);
                    lcs += a[px_idx];
                    ++x_idx;
                    ++y_idx;
                    ++px_idx;
                    ++py_idx;
                }
            }
        }
        return [changes, lcs];
    }
    function snake(textA, textB, path, pos, k, p, pp) {
        const { a, b, n, m, offset } = createInfo(textA, textB);
        const r = p > pp ? path[k - 1 + offset] : path[k + 1 + offset];
        let y = Math.max(p, pp);
        let x = y - k;
        while (x < m && y < n && a[x] === b[y]) {
            ++x;
            ++y;
        }
        path[k + offset] = pos.length;
        pos[pos.length] = (0, data_1.position)(x, y, r);
        return y;
    }
});
define("dependencies/onp/array", ["require", "exports", "dependencies/onp/results", "dependencies/onp/data"], function (require, exports, results_2, data_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.objectifyLcs = exports.objectifyArray = exports.stringifyArray = void 0;
    function stringifyArray(a, b) {
        const map = { forward: {}, backward: {}, pointer: 1 };
        const textA = a.map((item) => determineCode(map, item)).join("");
        const textB = b.map((item) => determineCode(map, item)).join("");
        return [textA, textB, map];
    }
    exports.stringifyArray = stringifyArray;
    function objectifyArray(arrayA, arrayB, res, map) {
        const results = res.map((r) => (0, results_2.createResultItem)(map.backward[r.left], map.backward[r.right], r.state));
        results
            .filter(filter([data_2.SES_COMMON, data_2.SES_DELETE]))
            .forEach((item, index) => setData(item, arrayA[index], -1));
        results
            .filter(filter([data_2.SES_COMMON, data_2.SES_ADD]))
            .forEach((item, index) => setData(item, arrayB[index], 1));
        return results;
    }
    exports.objectifyArray = objectifyArray;
    function objectifyLcs(map, res) {
        return res.filter((item) => {
            return item.state === data_2.SES_COMMON;
        }).map((item) => {
            return item.right;
        });
    }
    exports.objectifyLcs = objectifyLcs;
    function determineCode(map, item) {
        let id = item.toString();
        let code = map.forward[id];
        if (!code) {
            code = String.fromCharCode(map.pointer);
            map.forward[id] = code;
            map.backward[code] = id;
            map.pointer++;
        }
        return code;
    }
    function filter(what) {
        return (item) => {
            return what.indexOf(item.state) >= 0;
        };
    }
    function setData(item, data, side) {
        switch (true) {
            case item.state === data_2.SES_DELETE:
            case item.state === data_2.SES_ADD:
                item.left = item.right = data;
                break;
            case item.state === data_2.SES_COMMON && side === -1:
                item.left = data;
                break;
            case item.state === data_2.SES_COMMON && side === 1:
                item.right = data;
                break;
            default:
                break;
        }
    }
});
define("dependencies/onp/index", ["require", "exports", "dependencies/onp/data", "dependencies/onp/results", "dependencies/onp/onp", "dependencies/onp/array"], function (require, exports, data_3, results_3, onp_1, array_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.diffArray = exports.diffText = exports.SES_ADD = exports.SES_COMMON = exports.SES_DELETE = void 0;
    Object.defineProperty(exports, "SES_DELETE", { enumerable: true, get: function () { return data_3.SES_DELETE; } });
    Object.defineProperty(exports, "SES_COMMON", { enumerable: true, get: function () { return data_3.SES_COMMON; } });
    Object.defineProperty(exports, "SES_ADD", { enumerable: true, get: function () { return data_3.SES_ADD; } });
    function diffText(a, b) {
        const [results, ed, lcs] = (0, onp_1.onp)(a, b);
        return {
            distance: ed,
            lcs: lcs,
            results: (0, results_3.createTextResults)(results)
        };
    }
    exports.diffText = diffText;
    function diffArray(arrayA, arrayB) {
        const [a, b, map] = (0, array_1.stringifyArray)(arrayA, arrayB);
        const [res, ed] = (0, onp_1.onp)(a, b);
        const results = (0, array_1.objectifyArray)(arrayA, arrayB, res, map);
        const lcs = (0, array_1.objectifyLcs)(map, results);
        return {
            distance: ed,
            lcs: lcs,
            results: results
        };
    }
    exports.diffArray = diffArray;
});
define("model/test/rpcBodyToAssertionLine", ["require", "exports", "hacks"], function (require, exports, hacks_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.rpcLinesToAssertionLines = void 0;
    const rpcBodyToTestBody = (line) => {
        switch (line.type) {
            case 'plain':
            case 'streamArg':
            case 'node':
            case 'html':
                return line;
            case 'highlightMsg':
                return { type: 'plain', value: line.value.msg };
            case 'dotGraph':
                // No dot support in tests..?
                return { type: 'plain', value: line.value };
            case 'stdout':
            case 'stderr':
                // Do not keep these
                return null;
            case 'arr':
                return { type: 'arr', value: line.value.map(rpcBodyToTestBody).filter(Boolean) };
            case 'tracing':
                // Should we really keep the tracing for tests? Not a very good thing to test I think.
                const encodeTrace = (tr) => {
                    const result = rpcBodyToTestBody(tr.result);
                    return {
                        type: 'arr',
                        value: [
                            { type: 'node', value: tr.node },
                            { type: 'plain', value: `.${tr.prop.name}` },
                            { type: 'arr', value: tr.dependencies.map(encodeTrace) },
                            ...(result ? [result] : []),
                        ],
                    };
                };
                return encodeTrace(line.value);
            default: {
                (0, hacks_1.assertUnreachable)(line);
                return line;
            }
        }
    };
    const rpcLinesToAssertionLines = (lines) => {
        const mapped = lines.map(rpcBodyToTestBody);
        return mapped.filter(Boolean);
    };
    exports.rpcLinesToAssertionLines = rpcLinesToAssertionLines;
    exports.default = rpcBodyToTestBody;
});
define("model/test/compareTestResult", ["require", "exports", "dependencies/onp/index", "model/test/rpcBodyToAssertionLine"], function (require, exports, index_1, rpcBodyToAssertionLine_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const flattenLines = (lines, callback) => {
        lines = (0, rpcBodyToAssertionLine_1.rpcLinesToAssertionLines)(lines);
        lines.forEach((line, idx) => {
            switch (line.type) {
                case 'arr': {
                    flattenLines(line.value, (path, line) => callback([idx, ...path], line));
                    break;
                }
                default: {
                    callback([idx], line);
                    break;
                }
            }
        });
    };
    const createEncounterCounter = () => {
        const encounterCounter = {};
        return (path) => {
            var _a;
            const encoded = JSON.stringify(path);
            const prevEncounters = (_a = encounterCounter[encoded]) !== null && _a !== void 0 ? _a : 0;
            encounterCounter[encoded] = prevEncounters + 1;
            return prevEncounters;
        };
    };
    const flattenNestedTestResponses = (tests, callback) => {
        const encounterCounter = createEncounterCounter();
        tests.forEach(test => {
            if (test.result === 'could-not-find-node') {
                return;
            }
            const encIndex = encounterCounter(test.path);
            flattenLines(test.result.body, (path, line) => callback([...test.path, encIndex, ...path], line));
            flattenNestedTestResponses(test.result.nested, (path, line) => callback([...test.path, encIndex, ...path], line));
        });
    };
    const createFlattenedLine = (path, line, side) => {
        return {
            path, line, side,
            toString: () => `${JSON.stringify(path.slice(0, path.length - 1))} - ${JSON.stringify(line)}`,
        };
    };
    const compareTestResult = (assertionType, tcase, evalRes) => {
        // const flattenedExpected: { [id: string]: FlattenedLine } = {};
        const flattenedExpected = [];
        const addExpected = (path, line) => flattenedExpected.push(createFlattenedLine(path, line, 'left'));
        if (tcase.result !== 'could-not-find-node') {
            flattenLines(tcase.result.body, addExpected);
            flattenNestedTestResponses(tcase.result.nested, addExpected);
        }
        // const flattenedActual: { [id: string]: RpcBodyLine } = {};
        const flattenedActual = [];
        const addActual = (path, line) => flattenedActual.push(createFlattenedLine(path, line, 'right'));
        // const addActual = (path: number[], line: RpcBodyLine) => flattenedActual[JSON.stringify(path)] = line;
        if (evalRes.result !== 'could-not-find-node') {
            flattenLines(evalRes.result.body, addActual);
            flattenNestedTestResponses(evalRes.result.nested, addActual);
        }
        let someErr = false;
        if (assertionType === 'SET') {
            const sorter = (a, b) => {
                const lhs = a.toString();
                const rhs = b.toString();
                if (lhs == rhs) {
                    return 0;
                }
                return lhs < rhs ? -1 : 1;
            };
            flattenedExpected.sort(sorter);
            flattenedActual.sort(sorter);
        }
        const retExp = {};
        const retAct = {};
        const diffResult = (0, index_1.diffArray)(flattenedExpected, flattenedActual);
        diffResult.results.forEach(result => {
            if (!result.state) {
                return; // No diff, no marker to add
            }
            someErr = true;
            if (result.state === -1) {
                // Expected line not matched
                retExp[JSON.stringify(result.left.path)] = 'error';
            }
            else {
                // Unexpected actual line
                retAct[JSON.stringify(result.right.path)] = 'error';
            }
        });
        return {
            overall: someErr ? 'error' : 'ok',
            expectedMarkers: retExp,
            actualMarkers: retAct,
        };
    };
    // export { TestComparisonReport }
    exports.default = compareTestResult;
});
define("model/test/TestManager", ["require", "exports", "settings", "model/findLocatorWithNestingPath", "model/test/compareTestResult"], function (require, exports, settings_2, findLocatorWithNestingPath_1, compareTestResult_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.nestedTestResponseToTest = exports.createTestManager = void 0;
    settings_2 = __importDefault(settings_2);
    findLocatorWithNestingPath_1 = __importDefault(findLocatorWithNestingPath_1);
    compareTestResult_1 = __importDefault(compareTestResult_1);
    ;
    const createTestManager = (getEnv, createJobId) => {
        const suiteListRepo = {};
        const saveCategoryState = async (category, cases) => {
            console.log('save', category, '-->', cases);
            console.log('expected bytelen:', JSON.stringify(cases).length);
            const prev = suiteListRepo[category];
            suiteListRepo[category] = cases;
            let resp;
            try {
                resp = await getEnv().performTypedRpc({
                    type: "Test:PutTestSuite",
                    suite: `${category}.json`,
                    contents: {
                        v: 1,
                        cases
                    },
                });
            }
            catch (e) {
                suiteListRepo[category] = prev;
                throw e;
            }
            if (!resp.err)
                return true;
            console.warn(`Failed saving cases for ${category}, error:`, resp.err);
            return false;
        };
        const listeners = {};
        const notifyListeners = (type) => Object.values(listeners).forEach(cb => cb(type));
        let categoryInvalidationCount = 0;
        const addTest = async (category, test, overwriteIfExisting) => {
            const categories = await listTestSuiteCategories();
            if (categories == 'failed-listing') {
                return 'failed-fetching';
            }
            // console.log('todo add', category, '/', test.name);
            const existing = await doGetTestSuite(category);
            let alreadyExisted = false;
            if (existing == 'failed-fetching') {
                // Doesn't exist yet, this is OK
            }
            else if (existing.some(tc => tc.name == test.name)) {
                if (!overwriteIfExisting) {
                    return 'already-exists-with-that-name';
                }
                alreadyExisted = true;
            }
            await saveCategoryState(category, [...(suiteListRepo[category] || []).filter(tc => tc.name !== test.name), test].sort((a, b) => a.name < b.name ? -1 : 1));
            ++categoryInvalidationCount;
            if (overwriteIfExisting && testStatusRepo[category]) {
                delete testStatusRepo[category][test.name];
            }
            notifyListeners(alreadyExisted ? 'updated-test' : 'added-test');
            return 'ok';
        };
        const removeTest = async (category, name) => {
            const existing = await doGetTestSuite(category);
            if (existing == 'failed-fetching') {
                return 'failed-fetching';
            }
            if (!existing.some(cat => cat.name === name)) {
                return 'no-such-test';
            }
            await saveCategoryState(category, existing.filter(cat => cat.name !== name));
            ++categoryInvalidationCount;
            delete testStatusRepo[category];
            notifyListeners('removed-test');
            return 'ok';
        };
        const listTestSuiteCategories = (() => {
            let categoryLister = null;
            let categoryListingVersion = -1;
            return () => {
                if (!categoryLister || categoryInvalidationCount !== categoryListingVersion) {
                    categoryListingVersion = categoryInvalidationCount;
                    categoryLister = getEnv().performTypedRpc({
                        type: 'Test:ListTestSuites',
                    })
                        .then(({ result }) => {
                        if (result.type == 'err') {
                            console.warn('Failed listing test suites. Error code:', result.value);
                            return 'failed-listing';
                        }
                        return result.value
                            .map((suite) => {
                            if (!suite.endsWith('.json')) {
                                console.warn(`Unexpected suite file name ${suite}`);
                                return '';
                            }
                            return suite.slice(0, suite.lastIndexOf('.'));
                        })
                            .filter(Boolean);
                    });
                }
                return categoryLister;
            };
        })();
        const doGetTestSuite = async (id) => {
            if (suiteListRepo[id]) {
                return suiteListRepo[id];
            }
            const { result } = await getEnv().performTypedRpc({
                type: 'Test:GetTestSuite',
                suite: `${id}.json`,
            });
            if (result.type === 'contents') {
                const cases = result.value.cases;
                cases.sort((a, b) => a.name < b.name ? -1 : 1);
                suiteListRepo[id] = cases;
                return cases;
            }
            console.warn(`Failed to get test suite '${id}'. Error code: ${result.value}`);
            return 'failed-fetching';
        };
        const testStatusRepo = {};
        const evaluateTest = (category, name) => {
            const categoryStatus = testStatusRepo[category] || {};
            testStatusRepo[category] = categoryStatus;
            const existing = categoryStatus[name];
            if (!!existing) {
                return existing;
            }
            const fresh = (async () => {
                const suite = await doGetTestSuite(category);
                if (suite === 'failed-fetching') {
                    return 'failed-fetching';
                }
                const tcase = suite.find(ent => ent.name === name);
                if (!tcase) {
                    console.warn(`No such test case '${name}' in ${category}`);
                    return 'failed-fetching';
                }
                const nestedTestToRequest = (test) => ({
                    path: test.path,
                    property: test.property,
                    nested: test.nestedProperties.map(nestedTestToRequest),
                });
                const res = await fullyEvaluate(tcase.src, tcase.property, tcase.locator, tcase.nestedProperties.map(nestedTestToRequest), `${tcase.name}`);
                if (tcase.assertType === 'SMOKE') {
                    return {
                        test: tcase,
                        output: res,
                        status: {
                            overall: 'ok',
                            expectedMarkers: {},
                            actualMarkers: {},
                        },
                    };
                }
                return {
                    test: tcase,
                    output: res,
                    status: (0, compareTestResult_1.default)(tcase.assertType, testToNestedTestResponse({
                        expectedOutput: tcase.expectedOutput,
                        nestedProperties: tcase.nestedProperties,
                        path: [],
                        property: tcase.property,
                    }), res),
                };
            })();
            categoryStatus[name] = fresh;
            notifyListeners('test-status-update');
            return fresh;
        };
        const addListener = (uid, callback) => {
            listeners[uid] = callback;
        };
        const removeListener = (uid) => {
            delete listeners[uid];
        };
        const fullyEvaluate = async (src, property, locator, nested, debugLabel) => {
            // let ret: NestedTestResponse = {
            //   path: '',
            //   property,
            //   body: [],
            //   nested: [],
            // };
            const rootRes = await new Promise(async (resolve, reject) => {
                const handleUpdate = (data) => {
                    switch (data.value.type) {
                        case 'workerTaskDone': {
                            const res = data.value.value;
                            if (res.type === 'normal') {
                                const cast = res.value;
                                if (cast.response.type == 'job') {
                                    throw new Error(`Unexpected 'job' result in async test update`);
                                }
                                resolve(cast.response.value);
                            }
                            else {
                                reject(res.value);
                            }
                        }
                    }
                    // if (data.status === 'done') {
                    //   resolve(data.result.response.value);
                    // }
                };
                const jobId = createJobId(handleUpdate);
                try {
                    const env = getEnv();
                    const res = await env.performTypedRpc({
                        type: 'EvaluateProperty',
                        property,
                        locator,
                        src,
                        captureStdout: true,
                        captureTraces: settings_2.default.shouldCaptureTraces() || false,
                        flushBeforeTraceCollection: (settings_2.default.shouldCaptureTraces() && settings_2.default.shouldAutoflushTraces()) || false,
                        job: jobId,
                        jobLabel: `Test > ${debugLabel}`,
                    });
                    if (res.response.type === 'sync') {
                        // Non-concurrent server, handle request synchronously
                        resolve(res.response.value);
                    }
                }
                catch (e) {
                    reject(e);
                }
            });
            const nestedTestResponses = await Promise.all(nested.map(async (nest) => {
                const nestPathParts = nest.path;
                const nestLocator = (0, findLocatorWithNestingPath_1.default)(nestPathParts, rootRes.body);
                if (!nestLocator) {
                    console.warn('Could not find node', nest.path, 'in ', rootRes.body);
                    return {
                        path: nest.path,
                        property: nest.property,
                        result: 'could-not-find-node',
                    };
                }
                const nestRes = await fullyEvaluate(src, nest.property, nestLocator, nest.nested, debugLabel);
                return {
                    ...nestRes,
                    path: nest.path,
                };
            }));
            return {
                path: [],
                property,
                result: {
                    body: rootRes.body,
                    nested: nestedTestResponses,
                },
            };
        };
        const convertTestResponseToTest = (tcase, response) => {
            if (response.result === 'could-not-find-node') {
                return null;
            }
            const convertResToTest = (res) => {
                if (res.result === 'could-not-find-node') {
                    return { path: res.path, property: res.property, expectedOutput: [{
                                type: 'plain', value: 'Error: could not find node',
                            }], nestedProperties: [] };
                }
                return {
                    path: res.path,
                    property: res.property,
                    expectedOutput: res.result.body,
                    nestedProperties: res.result.nested.map(convertResToTest),
                };
            };
            return {
                src: tcase.src,
                assertType: tcase.assertType,
                expectedOutput: response.result.body,
                nestedProperties: response.result.nested.map(convertResToTest),
                property: tcase.property,
                locator: tcase.locator,
                name: tcase.name,
            };
        };
        return {
            addTest,
            removeTest,
            listTestSuiteCategories,
            getTestSuite: doGetTestSuite,
            evaluateTest,
            addListener,
            removeListener,
            flushTestCaseData: () => {
                Object.keys(testStatusRepo).forEach(id => delete testStatusRepo[id]);
                notifyListeners('test-status-update');
            },
            fullyEvaluate,
            convertTestResponseToTest,
        };
    };
    exports.createTestManager = createTestManager;
    const testToNestedTestResponse = (src) => ({
        path: src.path,
        property: src.property,
        result: {
            body: src.expectedOutput,
            nested: src.nestedProperties.map(testToNestedTestResponse),
        },
    });
    const nestedTestResponseToTest = (src) => {
        if (src.result === 'could-not-find-node') {
            return null;
        }
        const nestedProperties = [];
        src.result.nested.forEach(nest => {
            const res = nestedTestResponseToTest(nest);
            if (res) {
                nestedProperties.push(res);
            }
        });
        return {
            path: src.path,
            property: src.property,
            expectedOutput: src.result.body,
            nestedProperties,
        };
    };
    exports.nestedTestResponseToTest = nestedTestResponseToTest;
});
define("model/SourcedDiagnostic", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("model/ModalEnv", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("model/UpdatableNodeLocator", ["require", "exports", "model/adjustLocator"], function (require, exports, adjustLocator_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createMutableLocator = exports.createImmutableLocator = void 0;
    adjustLocator_1 = __importDefault(adjustLocator_1);
    const createImmutableLocator = (source) => {
        return {
            get: () => source.get(),
            set: () => { },
            adjust: () => { },
            isMutable: () => false,
            createMutableClone: () => createMutableLocator(JSON.parse(JSON.stringify(source.get()))),
        };
    };
    exports.createImmutableLocator = createImmutableLocator;
    const createMutableLocator = (locator) => {
        return {
            get: () => locator,
            set: (val) => {
                locator = val;
            },
            adjust: (adjusters) => {
                adjusters.forEach(adj => (0, adjustLocator_1.default)(adj, locator));
            },
            isMutable: () => true,
            createMutableClone: () => createMutableLocator(JSON.parse(JSON.stringify(locator))),
        };
    };
    exports.createMutableLocator = createMutableLocator;
});
define("ui/create/registerNodeSelector", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const registerNodeSelector = (elem, getLocator) => {
        elem.classList.add('nodeLocatorContainer');
        elem.addEventListener('click', (e) => {
            if (!window.ActiveLocatorRequest) {
                return;
            }
            e.stopImmediatePropagation();
            e.stopPropagation();
            e.preventDefault();
            window.ActiveLocatorRequest.submit(getLocator());
        });
    };
    exports.default = registerNodeSelector;
});
define("ui/trimTypeName", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const trimTypeName = (typeName) => {
        const lastDot = typeName.lastIndexOf(".");
        return lastDot === -1 ? typeName : typeName.slice(lastDot + 1);
    };
    exports.default = trimTypeName;
});
define("ui/popup/formatAttr", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.formatAttrArgList = exports.formatAttrType = void 0;
    const formatAttrType = (orig) => {
        switch (orig.type) {
            case 'nodeLocator': return orig.value.type;
            case 'integer': return 'int';
            // case ''
            // case 'java.lang.String': return 'String';
            default: return orig.type;
        }
    };
    exports.formatAttrType = formatAttrType;
    const formatAttr = (attr) => `${attr.name.startsWith('l:') ? attr.name.slice(2) : attr.name}${(attr.args
        ? `(${attr.args.map(a => formatAttrType(a)).join(', ')})`
        : '')}`;
    const formatAttrArgList = (target, attr) => {
        var _a;
        (_a = attr.args) === null || _a === void 0 ? void 0 : _a.forEach((arg, argIdx) => {
            var _a, _b, _c;
            if (argIdx > 0) {
                target.appendChild(document.createTextNode(`,`));
            }
            switch (arg.type) {
                case 'string': {
                    const node = document.createElement('span');
                    node.classList.add('syntax-string');
                    node.innerText = `"${arg.value}"`;
                    target.appendChild(node);
                    break;
                }
                case 'integer': {
                    const node = document.createElement('span');
                    node.classList.add('syntax-int');
                    node.innerText = `${arg.value}`;
                    target.appendChild(node);
                    break;
                }
                case 'bool': {
                    const node = document.createElement('span');
                    node.classList.add('syntax-modifier');
                    node.innerText = `${arg.value}`;
                    target.appendChild(node);
                    break;
                }
                case 'nodeLocator': {
                    const node = document.createElement('span');
                    node.classList.add('syntax-type');
                    if (!arg.value || (typeof arg.value !== 'object')) {
                        node.innerText = `null`;
                    }
                    else {
                        node.innerText = (_c = (_b = (_a = arg.value.value) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b.type) !== null && _c !== void 0 ? _c : arg.value.type; // .split('.')[0];
                    }
                    target.appendChild(node);
                    break;
                }
                case 'outputstream': {
                    const node = document.createElement('span');
                    node.classList.add('stream-arg-msg');
                    node.innerText = '<stream>';
                    target.appendChild(node);
                    break;
                }
                default: {
                    console.warn('Unsure of how to render', arg.type);
                    target.appendChild(document.createTextNode(`${arg.value}`));
                }
            }
        });
    };
    exports.formatAttrArgList = formatAttrArgList;
    exports.default = formatAttr;
});
define("ui/popup/displayArgModal", ["require", "exports", "hacks", "model/UpdatableNodeLocator", "ui/create/createModalTitle", "ui/create/createTextSpanIndicator", "ui/create/registerNodeSelector", "ui/create/registerOnHover", "ui/startEndToSpan", "ui/trimTypeName", "ui/popup/displayAttributeModal", "ui/popup/displayProbeModal", "ui/popup/formatAttr"], function (require, exports, hacks_2, UpdatableNodeLocator_1, createModalTitle_2, createTextSpanIndicator_2, registerNodeSelector_1, registerOnHover_2, startEndToSpan_2, trimTypeName_1, displayAttributeModal_1, displayProbeModal_1, formatAttr_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createModalTitle_2 = __importDefault(createModalTitle_2);
    createTextSpanIndicator_2 = __importDefault(createTextSpanIndicator_2);
    registerNodeSelector_1 = __importDefault(registerNodeSelector_1);
    registerOnHover_2 = __importDefault(registerOnHover_2);
    startEndToSpan_2 = __importDefault(startEndToSpan_2);
    trimTypeName_1 = __importDefault(trimTypeName_1);
    displayAttributeModal_1 = __importDefault(displayAttributeModal_1);
    displayProbeModal_1 = __importDefault(displayProbeModal_1);
    formatAttr_1 = __importStar(formatAttr_1);
    const cancelLocatorRequest = () => {
        if (!window.ActiveLocatorRequest) {
            return;
        }
        document.body.classList.remove('locator-request-active');
        delete window.ActiveLocatorRequest;
    };
    const startLocatorRequest = (onSelected) => {
        document.body.classList.add('locator-request-active');
        const callback = {
            submit: (loc) => {
                cancelLocatorRequest();
                onSelected(loc);
            },
        };
        window.ActiveLocatorRequest = callback;
        return callback;
    };
    const displayArgModal = (env, modalPos, locator, attr, nested) => {
        const queryId = `arg-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let lastLocatorRequest = null;
        const cleanup = () => {
            if (window.ActiveLocatorRequest === lastLocatorRequest) {
                cancelLocatorRequest();
            }
            delete env.onChangeListeners[queryId];
            popup.remove();
        };
        const args = attr.args;
        if (!args || !args.length) {
            throw new Error('Created arg modal for attribute without arguments - create probe modal instead');
        }
        env.onChangeListeners[queryId] = (adjusters) => {
            if (adjusters) {
                locator.adjust(adjusters);
            }
        };
        const createTitle = () => {
            return (0, createModalTitle_2.default)({
                extraActions: [
                    {
                        title: 'Duplicate window',
                        invoke: () => {
                            const pos = popup.getPos();
                            displayArgModal(env, { x: pos.x + 10, y: pos.y + 10 }, locator, attr, nested);
                        },
                    }
                ],
                renderLeft: (container) => {
                    var _a;
                    const headType = document.createElement('span');
                    headType.classList.add('syntax-type');
                    headType.innerText = `${(_a = locator.get().result.label) !== null && _a !== void 0 ? _a : (0, trimTypeName_1.default)(locator.get().result.type)}`;
                    const headAttr = document.createElement('span');
                    headAttr.classList.add('syntax-attr');
                    headAttr.innerText = `.${(0, formatAttr_1.default)(attr)}`;
                    container.appendChild(headType);
                    container.appendChild(headAttr);
                },
                onClose: () => {
                    cleanup();
                },
            });
        };
        const popup = env.showWindow({
            pos: modalPos,
            debugLabel: `arg:${attr.name}`,
            rootStyle: `
      min-width: 16rem;
      min-height: 4rem;
    `,
            onForceClose: cleanup,
            render: (root) => {
                root.appendChild(createTitle().element);
                console.log('Show arg modal : ', JSON.stringify(attr, null, 2));
                const attrList = document.createElement('div');
                attrList.classList.add('attr-arg-list');
                const argValues = [];
                const proceed = () => {
                    var _a;
                    cleanup();
                    (0, displayProbeModal_1.default)(env, popup.getPos(), locator, {
                        name: attr.name,
                        args: (_a = attr.args) === null || _a === void 0 ? void 0 : _a.map((arg, argIdx) => argValues[argIdx]),
                    }, nested);
                };
                args.forEach((arg, argIdx) => {
                    // const inpId = generateInputId();
                    // const argRow = document.createElement('div');
                    // argRow.style.display = 'flex';
                    const argHeader = document.createElement('div');
                    argHeader.style.marginLeft = 'auto';
                    argHeader.style.marginRight = '0.25rem';
                    const argType = document.createElement('span');
                    argType.classList.add('syntax-type');
                    argType.innerText = (0, formatAttr_1.formatAttrType)(arg);
                    argHeader.appendChild(argType);
                    // argHeader.appendChild(document.createTextNode(` ${arg.name}`));
                    attrList.appendChild(argHeader);
                    const setupTextInput = (init, cleanupValue) => {
                        const inp = document.createElement('input');
                        inp.classList.add('attr-arg-input-text');
                        init(inp);
                        inp.placeholder = `Arg ${argIdx}`;
                        inp.oninput = () => {
                            // argValues[argIdx] = { type: 'string', value: cleanupValue(inp.value) };
                            argValues[argIdx] = cleanupValue(inp.value);
                        };
                        inp.onkeydown = (e) => {
                            if (e.key === 'Enter') {
                                proceed();
                            }
                        };
                        if (argIdx === 0) {
                            setTimeout(() => inp.focus(), 100);
                        }
                        return inp;
                    };
                    const setupTwoPillInput = (init, getActive, onClick) => {
                        const inp = document.createElement('div');
                        inp.style.display = 'grid';
                        inp.style.justifyItems = 'center';
                        inp.style.gridGap = '4px';
                        inp.style.gridTemplateColumns = 'auto auto';
                        const left = document.createElement('span');
                        const right = document.createElement('span');
                        const updateActiveElem = () => {
                            const set = (target, attr, on) => {
                                const isOn = target.classList.contains(attr);
                                console.log('updateActiveELem', isOn, on);
                                if (isOn === on) {
                                    return;
                                }
                                if (on) {
                                    target.classList.add(attr);
                                }
                                else {
                                    target.classList.remove(attr);
                                }
                            };
                            const setActive = (target, active) => {
                                set(target, 'attr-input-twopill-selected', active);
                                set(target, 'attr-input-twopill-unselected', !active);
                            };
                            const active = getActive();
                            setActive(left, active === 'left');
                            setActive(right, active === 'right');
                        };
                        [left, right].forEach((btn) => {
                            btn.classList.add('clickHighlightOnHover');
                            btn.classList.add('attr-input-twopill');
                            // btn.style.border = '1px solid #888';
                            btn.style.width = '100%';
                            btn.style.height = '100%';
                            btn.style.textAlign = 'center';
                            // btn.classList.add('syntax-modifier');
                            btn.onclick = () => {
                                onClick((btn === left) ? 'left' : 'right', updateActiveElem);
                            };
                        });
                        updateActiveElem();
                        inp.appendChild(left);
                        inp.appendChild(right);
                        init(inp, left, right);
                        return inp;
                    };
                    // inp.style.marginLeft = '1rem';
                    argValues[argIdx] = arg;
                    switch (arg.type) {
                        case 'integer': {
                            // argValues[argIdx] = arg.value || '0';
                            attrList.appendChild(setupTextInput((elem) => {
                                elem.type = 'number';
                                elem.value = `${typeof argValues[argIdx].value === 'number' ? argValues[argIdx].value : ''}`;
                            }, (val) => ({ type: 'integer', value: parseInt(val, 10) || 0 })));
                            break;
                        }
                        case 'bool': {
                            argValues[argIdx] = { type: 'bool', value: arg.value === true };
                            attrList.appendChild(setupTwoPillInput((parent, left, right) => {
                                left.innerText = 'true';
                                right.innerText = 'false';
                            }, () => argValues[argIdx].value === true ? 'left' : 'right', (node, updateActive) => {
                                argValues[argIdx] = { type: 'bool', value: node === 'left' };
                                updateActive();
                            }));
                            break;
                        }
                        case 'collection': {
                            console.warn('todo should we support collections?');
                            attrList.appendChild(setupTextInput((elem) => {
                                elem.type = 'text';
                                elem.value = `${argValues[argIdx]}`;
                            }, id => ({ type: 'string', value: id })));
                            break;
                        }
                        case 'nodeLocator': {
                            const origLocator = arg.value;
                            let pickedNodePanel = document.createElement('div');
                            let pickedNodeHighlighter = () => { };
                            (0, registerOnHover_2.default)(pickedNodePanel, (on) => pickedNodeHighlighter(on));
                            let state = arg.value ? 'node' : 'null';
                            const refreshPickedNode = () => {
                                var _a;
                                while (pickedNodePanel.firstChild) {
                                    pickedNodePanel.firstChild.remove();
                                }
                                pickedNodePanel.style.fontStyle = 'unset';
                                pickedNodePanel.classList.remove('clickHighlightOnHover');
                                pickedNodeHighlighter = () => { };
                                // const state = argValues[argIdx];
                                if (state === 'null') {
                                    pickedNodePanel.style.display = 'hidden';
                                    pickedNodePanel.style.height = '0px';
                                    return;
                                }
                                pickedNodePanel.style.height = '';
                                const pickedNode = argValues[argIdx].value.value;
                                if (!pickedNode || typeof pickedNode !== 'object') {
                                    pickedNodePanel.style.display = 'block';
                                    pickedNodePanel.style.fontStyle = 'italic';
                                    pickedNodePanel.innerText = 'No node picked yet..';
                                    return;
                                }
                                const nodeWrapper = document.createElement('div');
                                (0, registerNodeSelector_1.default)(nodeWrapper, () => pickedNode);
                                nodeWrapper.addEventListener('click', () => {
                                    (0, displayAttributeModal_1.default)(env, null, (0, UpdatableNodeLocator_1.createMutableLocator)(pickedNode));
                                });
                                const span = (0, startEndToSpan_2.default)(pickedNode.result.start, pickedNode.result.end);
                                nodeWrapper.appendChild((0, createTextSpanIndicator_2.default)({
                                    span,
                                }));
                                const typeNode = document.createElement('span');
                                typeNode.classList.add('syntax-type');
                                typeNode.innerText = (_a = pickedNode.result.label) !== null && _a !== void 0 ? _a : (0, trimTypeName_1.default)(pickedNode.result.type);
                                nodeWrapper.appendChild(typeNode);
                                pickedNodePanel.appendChild(nodeWrapper);
                                pickedNodePanel.classList.add('clickHighlightOnHover');
                                pickedNodeHighlighter = (on) => env.updateSpanHighlight(on ? span : null);
                            };
                            refreshPickedNode();
                            attrList.appendChild(setupTwoPillInput((parent, left, right) => {
                                left.innerText = 'null';
                                // right.innerText = '';
                                // right.classList.add('locator-symbol');
                                right.style.display = 'flex';
                                right.style.flexDirection = 'row';
                                right.style.justifyContent = 'space-around';
                                const lbl = document.createElement('span');
                                lbl.innerText = 'Select node';
                                lbl.style.margin = 'auto';
                                right.appendChild(lbl);
                                const icon = document.createElement('img');
                                icon.src = '/icons/my_location_white_24dp.svg';
                                icon.style.height = '18px';
                                icon.style.alignSelf = 'center';
                                icon.style.margin = '0 4px 0 0';
                                right.appendChild(icon);
                            }, () => state === 'null' ? 'left' : 'right', (node, updateActive) => {
                                if (node === 'left') {
                                    state = 'null';
                                    argValues[argIdx] = { type: 'nodeLocator', value: { type: origLocator.type, value: undefined } };
                                    cancelLocatorRequest();
                                }
                                else {
                                    state = 'node';
                                    lastLocatorRequest = startLocatorRequest(locator => {
                                        argValues[argIdx] = { type: 'nodeLocator', value: { type: origLocator.type, value: locator } };
                                        refreshPickedNode();
                                        updateActive();
                                    });
                                }
                                refreshPickedNode();
                                updateActive();
                            }));
                            attrList.appendChild(document.createElement('span')); // <-- for grid alignment
                            attrList.appendChild(pickedNodePanel);
                            break;
                        }
                        case 'outputstream': {
                            const node = document.createElement('span');
                            node.innerText = '<captured to probe output>';
                            node.classList.add('stream-arg-msg');
                            attrList.appendChild(node);
                            break;
                        }
                        default: {
                            (0, hacks_2.assertUnreachable)(arg);
                            console.warn('Unknown arg type', arg, ', defaulting to string input');
                            // Fall through
                        }
                        case 'string': {
                            attrList.appendChild(setupTextInput((elem) => {
                                elem.type = 'text';
                                elem.value = `${argValues[argIdx].value}`;
                            }, id => ({ type: 'string', value: id })));
                            break;
                        }
                    }
                    // attrList.appendChild(argRow);
                });
                root.appendChild(attrList);
                const submitWrapper = document.createElement('div');
                submitWrapper.style.marginTop = '0.5rem';
                const submit = document.createElement('input');
                submit.type = 'submit';
                submit.classList.add('attr-list-submit');
                submit.style.display = 'block';
                // submit.style.margin = 'auto';
                submit.style.margin = '0.5rem';
                submit.value = 'OK';
                submit.onmousedown = (e) => {
                    e.stopPropagation();
                };
                submit.onclick = (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    proceed();
                };
                submitWrapper.appendChild(submit);
                root.appendChild(submitWrapper);
            },
        });
    };
    exports.default = displayArgModal;
});
define("model/cullingTaskSubmitterFactory", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const createCullingTaskSubmitterFactory = (cullTime) => {
        if (typeof cullTime !== 'number') {
            return () => ({ submit: (cb) => cb(), cancel: () => { }, });
        }
        return () => {
            let localChangeDebounceTimer = -1;
            return {
                submit: (cb) => {
                    clearTimeout(localChangeDebounceTimer);
                    localChangeDebounceTimer = setTimeout(() => cb(), cullTime);
                },
                cancel: () => {
                    clearTimeout(localChangeDebounceTimer);
                },
            };
        };
    };
    exports.default = createCullingTaskSubmitterFactory;
});
define("ui/create/createStickyHighlightController", ["require", "exports", "ui/startEndToSpan"], function (require, exports, startEndToSpan_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    startEndToSpan_3 = __importDefault(startEndToSpan_3);
    const createStickyHighlightController = (env, initialColorClass = '') => {
        const stickyId = `sticky-highlight-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let activeStickyColorClass = initialColorClass;
        if (activeStickyColorClass && !/monaco-rag-highlight-sticky-\d/.test(activeStickyColorClass)) {
            console.warn('Invalid initial sticky color:', activeStickyColorClass);
            activeStickyColorClass = '';
        }
        let currentTarget = null;
        let currentLocator = null;
        const applySticky = () => {
            if (!currentTarget || !currentLocator)
                return;
            env.setStickyHighlight(stickyId, {
                classNames: [
                    `monaco-rag-highlight-sticky`,
                    activeStickyColorClass,
                ],
                span: (0, startEndToSpan_3.default)(currentLocator.get().result.start, currentLocator.get().result.end),
            });
            currentTarget.classList.add(`monaco-rag-highlight-sticky`);
            currentTarget.classList.add(activeStickyColorClass);
        };
        const pickNewColor = () => {
            for (let i = 0; i < 10; ++i) {
                document.querySelector;
                activeStickyColorClass = `monaco-rag-highlight-sticky-${i}`;
                if (!!document.querySelector(`.${activeStickyColorClass}`)) {
                    activeStickyColorClass = '';
                }
                else {
                    break;
                }
            }
            if (!activeStickyColorClass) {
                // More than 10 colors active, pick one pseudorandomly instead
                activeStickyColorClass = `monaco-rag-highlight-sticky-${(Math.random() * 10) | 0}`;
            }
        };
        return {
            onClick: () => {
                var _a, _b;
                if (!activeStickyColorClass) {
                    pickNewColor();
                    applySticky();
                }
                else {
                    env.clearStickyHighlight(stickyId);
                    if (activeStickyColorClass) {
                        (_a = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.classList) === null || _a === void 0 ? void 0 : _a.remove(`monaco-rag-highlight-sticky`);
                        (_b = currentTarget === null || currentTarget === void 0 ? void 0 : currentTarget.classList) === null || _b === void 0 ? void 0 : _b.remove(activeStickyColorClass);
                        activeStickyColorClass = '';
                    }
                }
            },
            cleanup: () => {
                if (activeStickyColorClass) {
                    env.clearStickyHighlight(stickyId);
                }
            },
            configure: (target, locator) => {
                currentTarget = target;
                currentLocator = locator;
                if (activeStickyColorClass) {
                    applySticky();
                }
                else {
                    env.clearStickyHighlight(stickyId);
                }
            },
            getActiveColor: () => activeStickyColorClass || undefined,
        };
    };
    exports.default = createStickyHighlightController;
});
define("ui/popup/displayAstModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/popup/displayHelp", "ui/popup/encodeRpcBodyLines", "ui/create/attachDragToX", "ui/popup/displayAttributeModal", "ui/create/createTextSpanIndicator", "model/cullingTaskSubmitterFactory", "ui/create/createStickyHighlightController", "ui/startEndToSpan", "model/UpdatableNodeLocator"], function (require, exports, createLoadingSpinner_1, createModalTitle_3, displayHelp_1, encodeRpcBodyLines_1, attachDragToX_3, displayAttributeModal_2, createTextSpanIndicator_3, cullingTaskSubmitterFactory_1, createStickyHighlightController_1, startEndToSpan_4, UpdatableNodeLocator_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_1 = __importDefault(createLoadingSpinner_1);
    createModalTitle_3 = __importDefault(createModalTitle_3);
    displayHelp_1 = __importDefault(displayHelp_1);
    encodeRpcBodyLines_1 = __importDefault(encodeRpcBodyLines_1);
    attachDragToX_3 = __importDefault(attachDragToX_3);
    displayAttributeModal_2 = __importDefault(displayAttributeModal_2);
    createTextSpanIndicator_3 = __importDefault(createTextSpanIndicator_3);
    cullingTaskSubmitterFactory_1 = __importDefault(cullingTaskSubmitterFactory_1);
    createStickyHighlightController_1 = __importDefault(createStickyHighlightController_1);
    startEndToSpan_4 = __importDefault(startEndToSpan_4);
    const displayAstModal = (env, modalPos, locator, listDirection, extraArgs = {}) => {
        var _a, _b, _c, _d, _e;
        const queryId = `ast-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let state = null;
        let lightTheme = env.themeIsLight();
        const stickyController = (0, createStickyHighlightController_1.default)(env);
        let fetchState = 'idle';
        const cleanup = () => {
            delete env.onChangeListeners[queryId];
            delete env.probeWindowStateSavers[queryId];
            delete env.themeChangeListeners[queryId];
            popup.remove();
            env.triggerWindowSave();
            stickyController.cleanup();
        };
        const onResizePtr = {
            callback: () => { },
        };
        const bufferingSaver = (0, cullingTaskSubmitterFactory_1.default)(100)();
        const saveAfterTransformChange = () => {
            bufferingSaver.submit(() => { env.triggerWindowSave(); });
        };
        const initialTransform = extraArgs.initialTransform;
        const trn = {
            x: (_a = initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.x) !== null && _a !== void 0 ? _a : 1920 / 2,
            y: (_b = initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.y) !== null && _b !== void 0 ? _b : 0,
            scale: (_c = initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.scale) !== null && _c !== void 0 ? _c : 1,
            width: (_d = initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.width) !== null && _d !== void 0 ? _d : 0,
            height: (_e = initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.height) !== null && _e !== void 0 ? _e : 0,
        };
        let resetTranslationOnRender = !initialTransform;
        const popup = env.showWindow({
            pos: modalPos,
            size: (initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.width) && (initialTransform === null || initialTransform === void 0 ? void 0 : initialTransform.height) ? {
                width: initialTransform.width,
                height: initialTransform.height,
            } : undefined,
            debugLabel: `ast:${locator.get().result.type}`,
            rootStyle: `
      min-width: 24rem;
      min-height: 12rem;
      80vh;
    `,
            onForceClose: cleanup,
            onFinishedMove: () => {
                bufferingSaver.cancel();
                env.triggerWindowSave();
            },
            onOngoingResize: () => onResizePtr.callback(),
            onFinishedResize: () => {
                onResizePtr.callback();
                const size = popup.getSize();
                trn.width = size.width;
                trn.height = size.height;
            },
            resizable: true,
            render: (root, { bringToFront }) => {
                while (root.firstChild)
                    root.firstChild.remove();
                // root.innerText = 'Loading..';
                if (!extraArgs.hideTitleBar) {
                    root.appendChild((0, createModalTitle_3.default)({
                        renderLeft: (container) => {
                            const headType = document.createElement('span');
                            headType.innerText = `AST`;
                            container.appendChild(headType);
                            const spanIndicator = (0, createTextSpanIndicator_3.default)({
                                span: (0, startEndToSpan_4.default)(locator.get().result.start, locator.get().result.end),
                                marginLeft: true,
                                onHover: on => env.updateSpanHighlight(on ? (0, startEndToSpan_4.default)(locator.get().result.start, locator.get().result.end) : null),
                                onClick: stickyController.onClick,
                            });
                            stickyController.configure(spanIndicator, locator);
                            container.appendChild(spanIndicator);
                        },
                        onClose: () => {
                            cleanup();
                        },
                        extraActions: [
                            ...(env.getGlobalModalEnv() === env ? [] : [{
                                    title: 'Detatch window',
                                    invoke: () => {
                                        cleanup();
                                        displayAstModal(env.getGlobalModalEnv(), null, locator.createMutableClone(), listDirection, {
                                            initialTransform,
                                            hideTitleBar: extraArgs.hideTitleBar,
                                        });
                                    }
                                }]),
                            {
                                title: 'Help',
                                invoke: () => {
                                    (0, displayHelp_1.default)('ast', () => { });
                                }
                            },
                        ],
                    }).element);
                }
                const addSpinner = () => {
                    const spinner = (0, createLoadingSpinner_1.default)();
                    spinner.classList.add('absoluteCenter');
                    const spinnerWrapper = document.createElement('div');
                    spinnerWrapper.style.height = '7rem';
                    spinnerWrapper.style.display = 'block';
                    spinnerWrapper.style.position = 'relative';
                    spinnerWrapper.appendChild(spinner);
                    root.appendChild(spinnerWrapper);
                };
                if (state === null) {
                    addSpinner();
                    return;
                }
                if (state.type === 'err') {
                    if (state.body.length === 0) {
                        const text = document.createElement('span');
                        text.classList.add('captured-stderr');
                        text.innerText = `Failed listing tree`;
                        root.appendChild(text);
                        return;
                    }
                    root.appendChild((0, encodeRpcBodyLines_1.default)(env, state.body));
                }
                else {
                    // Build UI
                    root.style.display = 'flex';
                    root.style.flexDirection = 'column';
                    root.style.flexGrow = '1';
                    root.style.overflow = 'hidden';
                    const cv = document.createElement('canvas');
                    cv.width = 1920;
                    cv.height = 1080;
                    const wrapper = document.createElement('div');
                    wrapper.appendChild(cv);
                    wrapper.style.flexGrow = '1';
                    wrapper.style.minWidth = '4rem';
                    wrapper.style.minHeight = '4rem';
                    // wrapper.style.width = '100vw';
                    // wrapper.style.height = '100vh';
                    root.appendChild(wrapper);
                    const ctx = cv.getContext('2d');
                    if (!ctx) {
                        root.appendChild(document.createTextNode(`You browser doesn't seem to support HTML canvas 2D rendering mode.`));
                        return;
                    }
                    cv.style.width = '100%';
                    cv.style.height = '100%';
                    // cv.width  = cv.offsetWidth;
                    // cv.height = cv.offsetHeight;
                    cv.onmousedown = (e) => {
                        e.stopPropagation();
                    };
                    cv.style.cursor = 'default';
                    // const trn = Array(9).fill(0);
                    const lastClick = { x: 0, y: 0 };
                    const getScaleY = () => trn.scale * (cv.clientWidth / 1920) / (cv.clientHeight / 1080);
                    const clientToWorld = (pt, trnx = trn.x, trny = trn.y, scaleX = trn.scale, scaleY = getScaleY()) => {
                        const csx = 1920 / cv.clientWidth;
                        const x = (pt.x * csx - trnx) / scaleX;
                        const csy = 1080 / cv.clientHeight;
                        const y = (pt.y * csy - trny) / scaleY;
                        // ((pt.x * 1920 / (cv.clientWidth)) - (trnx)) / scaleX == REF
                        //
                        return { x, y };
                    };
                    const dragInfo = { x: trn.x, y: trn.y }; // , sx: 1, sy: 1 };
                    let hoverClick = 'no';
                    (0, attachDragToX_3.default)(cv, (e) => {
                        bringToFront();
                        dragInfo.x = trn.x;
                        dragInfo.y = trn.y;
                        const w = clientToWorld({ x: e.offsetX, y: e.offsetY });
                        lastClick.x = w.x;
                        lastClick.y = w.y;
                        hoverClick = 'maybe';
                        // dragInfo.sx = 1920 / cv.clientWidth;
                        // dragInfo.sy = 1080 / cv.clientHeight;
                    }, (dx, dy) => {
                        hoverClick = 'no';
                        const w = clientToWorld({
                            x: dx,
                            y: dy,
                        }, 0, 0, 1, 1);
                        trn.x = dragInfo.x + w.x;
                        trn.y = dragInfo.y + w.y;
                        // trn.x = dragInfo.x + dx * dragInfo.sx;
                        // trn.y = dragInfo.y + dy * dragInfo.sy;
                        renderFrame();
                        saveAfterTransformChange();
                    }, () => {
                        if (hoverClick == 'maybe') {
                            hoverClick = 'yes';
                            renderFrame();
                        }
                    });
                    cv.addEventListener('wheel', (e) => {
                        const ptx = e.offsetX;
                        const csx = 1920 / cv.clientWidth;
                        const trx1 = trn.x;
                        const z1 = trn.scale;
                        const z2 = Math.max(0.1, Math.min(10, trn.scale * (e.deltaY > 0 ? 1.02 : 0.98)));
                        /*
                          -- We want to modify trn.x so that transforming {e.offsetX, e.offsetY} gets the same result before and after zooming.
                          -- For trn.x we want this relation to hold:
                          (ptx*csx - trx1) / z1 = (ptx*csx - trx2) / z2
                          -- All variables are known but trx2. rewrite a bit and we get:
                          trx2 = ptx*csx - (z2/z1)*(ptx*csx - trx1)
                        */
                        trn.x = (ptx * csx - (z2 / z1) * (ptx * csx - trx1));
                        // Same idea for trn.y
                        const csy = 1080 / cv.clientHeight;
                        trn.y = (e.offsetY * csy - (z2 / z1) * (e.offsetY * csy - trn.y));
                        // const w = clientToWorld({ x: e.offsetX, y: e.offsetY });
                        // trn.x += (w.x / trn.scale) * e.deltaX / 1000;
                        trn.scale = z2;
                        renderFrame();
                        saveAfterTransformChange();
                    });
                    let hover = null;
                    let hasActiveSpanHighlight = false;
                    cv.addEventListener('mousemove', e => {
                        hover = clientToWorld({ x: e.offsetX, y: e.offsetY });
                        hoverClick = 'no';
                        renderFrame();
                    });
                    cv.addEventListener('mouseleave', () => {
                        hover = null;
                        if (hasActiveSpanHighlight) {
                            hasActiveSpanHighlight = false;
                            env.updateSpanHighlight(null);
                        }
                        renderFrame();
                    });
                    const rootNode = state.data;
                    const nodew = 256 + 128;
                    const nodeh = 64;
                    const nodepadx = nodew * 0.05;
                    const nodepady = nodeh * 0.75;
                    const measureBoundingBox = (node) => {
                        if (node.boundingBox) {
                            return node.boundingBox;
                        }
                        let bb = { x: nodew, y: nodeh };
                        if (Array.isArray(node.children)) {
                            let childW = 0;
                            node.children.forEach((child, childIdx) => {
                                const childBox = measureBoundingBox(child);
                                if (childIdx >= 1) {
                                    childW += nodepadx;
                                }
                                childW += childBox.x;
                                bb.y = Math.max(bb.y, nodeh + nodepady + childBox.y);
                            });
                            bb.x = Math.max(bb.x, childW);
                        }
                        node.boundingBox = bb;
                        return bb;
                    };
                    const rootBox = measureBoundingBox(rootNode);
                    if (resetTranslationOnRender) {
                        resetTranslationOnRender = false;
                        trn.scale = 1;
                        trn.x = (1920 - rootBox.x) / 2;
                        trn.y = 0;
                    }
                    const renderFrame = () => {
                        const w = cv.width;
                        const h = cv.height;
                        ctx.resetTransform();
                        ctx.fillStyle = getThemedColor(lightTheme, 'probe-result-area');
                        ctx.fillRect(0, 0, w, h);
                        ctx.translate(trn.x, trn.y);
                        ctx.scale(trn.scale, getScaleY());
                        cv.style.cursor = 'default';
                        let didHighlightSomething = false;
                        const renderNode = (node, ox, oy) => {
                            var _a, _b;
                            const nodeBox = measureBoundingBox(node);
                            const renderx = ox + (nodeBox.x - nodew) / 2;
                            const rendery = oy;
                            if (hover && hover.x >= renderx && hover.x <= (renderx + nodew) && hover.y >= rendery && (hover.y < rendery + nodeh)) {
                                ctx.fillStyle = getThemedColor(lightTheme, 'ast-node-bg-hover');
                                cv.style.cursor = 'pointer';
                                const { start, end, external } = node.locator.result;
                                if (start && end && !external) {
                                    didHighlightSomething = true;
                                    hasActiveSpanHighlight = true;
                                    env.updateSpanHighlight({
                                        lineStart: (start >>> 12), colStart: (start & 0xFFF),
                                        lineEnd: (end >>> 12), colEnd: (end & 0xFFF),
                                    });
                                }
                                if (hoverClick === 'yes') {
                                    hoverClick = 'no';
                                    (0, displayAttributeModal_2.default)(env.getGlobalModalEnv(), null, (0, UpdatableNodeLocator_2.createMutableLocator)(node.locator));
                                }
                            }
                            else {
                                ctx.fillStyle = getThemedColor(lightTheme, 'ast-node-bg');
                            }
                            ctx.fillRect(renderx, rendery, nodew, nodeh);
                            ctx.strokeStyle = getThemedColor(lightTheme, 'separator');
                            if (node.locator.steps.length > 0 && node.locator.steps[node.locator.steps.length - 1].type === 'nta') {
                                ctx.setLineDash([5, 5]);
                                ctx.strokeRect(renderx, rendery, nodew, nodeh);
                                ctx.setLineDash([]);
                            }
                            else {
                                ctx.strokeRect(renderx, rendery, nodew, nodeh);
                            }
                            // ctx.fillStyle = `black`;
                            let fonth = (nodeh * 0.5) | 0;
                            renderText: while (true) {
                                ctx.font = `${fonth}px sans`;
                                const typeTail = ((_a = node.locator.result.label) !== null && _a !== void 0 ? _a : node.locator.result.type).split('\.').slice(-1)[0];
                                const txty = rendery + (nodeh - (nodeh - fonth) * 0.5);
                                if (node.name) {
                                    const typeTailMeasure = ctx.measureText(`: ${typeTail}`);
                                    const nameMeasure = ctx.measureText(node.name);
                                    const totalW = nameMeasure.width + typeTailMeasure.width;
                                    if (totalW > nodew && fonth > 16) {
                                        fonth = Math.max(16, fonth * 0.9 | 0);
                                        continue renderText;
                                    }
                                    const txtx = renderx + (nodew - totalW) / 2;
                                    ctx.fillStyle = getThemedColor(lightTheme, 'syntax-variable');
                                    ctx.fillText(node.name, txtx, txty);
                                    ctx.fillStyle = getThemedColor(lightTheme, 'syntax-type');
                                    // dark: 4EC9B0
                                    ctx.fillText(`: ${typeTail}`, txtx + nameMeasure.width, txty);
                                }
                                else {
                                    ctx.fillStyle = getThemedColor(lightTheme, 'syntax-type');
                                    const typeTailMeasure = ctx.measureText(typeTail);
                                    if (typeTailMeasure.width > nodew && fonth > 16) {
                                        fonth = Math.max(16, fonth * 0.9 | 0);
                                        continue renderText;
                                    }
                                    ctx.fillText(typeTail, renderx + (nodew - typeTailMeasure.width) / 2, txty);
                                }
                                break;
                            }
                            if (!Array.isArray(node.children)) {
                                if (((_b = node.children) === null || _b === void 0 ? void 0 : _b.type) == 'placeholder') {
                                    // More children available
                                    // console.log('placeholder:', node.children);
                                    const msg = `᠁`;
                                    const fonth = (nodeh * 0.5) | 0;
                                    ctx.font = `${fonth}px sans`;
                                    ctx.fillStyle = getThemedColor(lightTheme, 'separator');
                                    const cx = renderx + nodew / 2;
                                    const cy = rendery + nodeh + nodepady + fonth;
                                    ctx.strokeStyle = getThemedColor(lightTheme, 'separator');
                                    ctx.beginPath();
                                    ctx.moveTo(cx, rendery + nodeh);
                                    ctx.lineTo(cx, cy - fonth);
                                    ctx.stroke();
                                    if (hover && Math.hypot(cx - hover.x, cy - hover.y) < fonth) {
                                        ctx.strokeStyle = 'cyan';
                                        cv.style.cursor = 'pointer';
                                        if (hoverClick == 'yes') {
                                            hoverClick = 'no';
                                            displayAstModal(env.getGlobalModalEnv(), null, (0, UpdatableNodeLocator_2.createMutableLocator)(node.locator), 'downwards');
                                        }
                                    }
                                    const msgMeasure = ctx.measureText(msg);
                                    ctx.fillText(msg, renderx + (nodew - msgMeasure.width) / 2, cy + fonth * 0.33);
                                    ctx.beginPath();
                                    ctx.arc(cx, cy, fonth, 0, Math.PI * 2);
                                    ctx.stroke();
                                }
                                return;
                            }
                            let childOffX = 0;
                            const childOffY = nodeh + nodepady;
                            node.children.forEach((child, childIdx) => {
                                const chbb = measureBoundingBox(child);
                                if (childIdx >= 1) {
                                    childOffX += nodepadx;
                                }
                                renderNode(child, ox + childOffX, oy + childOffY);
                                ctx.strokeStyle = getThemedColor(lightTheme, 'separator');
                                ctx.lineWidth = 2;
                                ctx.beginPath(); // Start a new path
                                ctx.moveTo(renderx + nodew / 2, rendery + nodeh);
                                const paddedBottomY = rendery + nodeh + nodepady * 0.5;
                                ctx.lineTo(renderx + nodew / 2, paddedBottomY);
                                // ctx.lineTo(ox + childOffX + chbb.x / 2, oy + childOffY); // Draw a line to (150, 100)
                                const chx = ox + childOffX + chbb.x / 2;
                                // ctx.bezierCurveTo()
                                ctx.arcTo(chx, paddedBottomY, chx, oy + childOffY, nodepady / 2);
                                ctx.lineTo(chx, oy + childOffY);
                                ctx.stroke(); // Render the path
                                ctx.lineWidth = 1;
                                childOffX += chbb.x;
                            });
                        };
                        renderNode(rootNode, 0, 32);
                        if (!didHighlightSomething) {
                            if (hasActiveSpanHighlight) {
                                hasActiveSpanHighlight = false;
                                env.updateSpanHighlight(null);
                            }
                        }
                    };
                    renderFrame();
                    onResizePtr.callback = () => {
                        renderFrame();
                    };
                }
                if (fetchState !== 'idle') {
                    const spinner = (0, createLoadingSpinner_1.default)();
                    spinner.classList.add('absoluteCenter');
                    root.appendChild(spinner);
                }
            },
        });
        const refresher = env.createCullingTaskSubmitter();
        env.onChangeListeners[queryId] = (adjusters) => {
            if (adjusters) {
                locator.adjust(adjusters);
            }
            refresher.submit(() => {
                fetchAttrs();
                popup.refresh();
            });
        };
        const fetchAttrs = () => {
            switch (fetchState) {
                case 'idle': {
                    fetchState = 'fetching';
                    break;
                }
                case 'fetching': {
                    fetchState = 'queued';
                    return;
                }
                case 'queued': return;
            }
            env.performTypedRpc({
                locator: locator.get(),
                src: env.createParsingRequestData(),
                type: listDirection === 'upwards' ? 'ListTreeUpwards' : 'ListTreeDownwards'
            })
                .then((result) => {
                var _a;
                const refetch = fetchState == 'queued';
                fetchState = 'idle';
                if (refetch)
                    fetchAttrs();
                const parsed = result.node;
                if (!parsed) {
                    // root.appendChild(createTitle('err'));
                    if ((_a = result.body) === null || _a === void 0 ? void 0 : _a.length) {
                        state = { type: 'err', body: result.body };
                        popup.refresh();
                        // root.appendChild(encodeRpcBodyLines(env, parsed.body));
                        return;
                    }
                    throw new Error('Unexpected response body "' + JSON.stringify(result) + '"');
                }
                // Handle resp
                if (result.locator) {
                    locator.set(result.locator);
                }
                const mapNode = (src) => ({
                    type: src.type,
                    locator: src.locator,
                    name: src.name,
                    children: src.children.type === 'children'
                        ? src.children.value.map(mapNode)
                        : { type: 'placeholder', num: src.children.value },
                });
                state = { type: 'ok', data: mapNode(parsed) };
                popup.refresh();
            })
                .catch(err => {
                console.warn('Error when loading attributes', err);
                state = { type: 'err', body: [] };
                popup.refresh();
            });
        };
        fetchAttrs();
        env.probeWindowStateSavers[queryId] = (target) => {
            target.push({
                modalPos: popup.getPos(),
                data: {
                    type: 'ast',
                    locator: locator.get(),
                    direction: listDirection,
                    transform: { ...trn, },
                },
            });
        };
        env.themeChangeListeners[queryId] = (light) => {
            lightTheme = light;
            onResizePtr.callback();
        };
        env.triggerWindowSave();
    };
    exports.default = displayAstModal;
});
define("ui/popup/displayAttributeModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/popup/displayProbeModal", "ui/popup/displayArgModal", "ui/popup/formatAttr", "ui/create/createTextSpanIndicator", "ui/popup/displayHelp", "settings", "ui/popup/encodeRpcBodyLines", "ui/trimTypeName", "ui/popup/displayAstModal", "ui/startEndToSpan"], function (require, exports, createLoadingSpinner_2, createModalTitle_4, displayProbeModal_2, displayArgModal_1, formatAttr_2, createTextSpanIndicator_4, displayHelp_2, settings_3, encodeRpcBodyLines_2, trimTypeName_2, displayAstModal_1, startEndToSpan_5) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_2 = __importDefault(createLoadingSpinner_2);
    createModalTitle_4 = __importDefault(createModalTitle_4);
    displayProbeModal_2 = __importStar(displayProbeModal_2);
    displayArgModal_1 = __importDefault(displayArgModal_1);
    formatAttr_2 = __importDefault(formatAttr_2);
    createTextSpanIndicator_4 = __importDefault(createTextSpanIndicator_4);
    displayHelp_2 = __importDefault(displayHelp_2);
    settings_3 = __importDefault(settings_3);
    encodeRpcBodyLines_2 = __importDefault(encodeRpcBodyLines_2);
    trimTypeName_2 = __importDefault(trimTypeName_2);
    displayAstModal_1 = __importDefault(displayAstModal_1);
    startEndToSpan_5 = __importDefault(startEndToSpan_5);
    const displayAttributeModal = (env, modalPos, locator, optionalArgs = {}) => {
        var _a;
        const queryId = `attr-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let filter = (_a = optionalArgs.initialFilter) !== null && _a !== void 0 ? _a : '';
        let state = null;
        let fetchState = 'idle';
        const cleanup = () => {
            delete env.onChangeListeners[queryId];
            popup.remove();
        };
        let isFirstRender = true;
        const popup = env.showWindow({
            pos: modalPos,
            debugLabel: `attr:${locator.get().result.type}`,
            rootStyle: `
      min-width: 16rem;
      min-height: 8rem;
      80vh;
    `,
            onForceClose: cleanup,
            render: (root) => {
                while (root.firstChild)
                    root.firstChild.remove();
                root.appendChild((0, createModalTitle_4.default)({
                    renderLeft: (container) => {
                        var _a;
                        if (env === env.getGlobalModalEnv()) {
                            const headType = document.createElement('span');
                            headType.classList.add('syntax-type');
                            headType.innerText = `${(_a = locator.get().result.label) !== null && _a !== void 0 ? _a : (0, trimTypeName_2.default)(locator.get().result.type)}`;
                            container.appendChild(headType);
                        }
                        const headAttr = document.createElement('span');
                        headAttr.classList.add('syntax-attr');
                        headAttr.innerText = `.?`;
                        container.appendChild(headAttr);
                        container.appendChild((0, createTextSpanIndicator_4.default)({
                            span: (0, startEndToSpan_5.default)(locator.get().result.start, locator.get().result.end),
                            marginLeft: true,
                            onHover: on => env.updateSpanHighlight(on ? (0, startEndToSpan_5.default)(locator.get().result.start, locator.get().result.end) : null),
                        }));
                    },
                    onClose: () => {
                        cleanup();
                    },
                    extraActions: [
                        {
                            title: 'Help',
                            invoke: () => {
                                (0, displayHelp_2.default)('property-list-usage', () => { });
                            }
                        },
                        {
                            title: 'Render AST downwards',
                            invoke: () => {
                                cleanup();
                                (0, displayAstModal_1.default)(env, popup.getPos(), locator, 'downwards');
                            }
                        },
                        {
                            title: 'Render AST upwards',
                            invoke: () => {
                                cleanup();
                                (0, displayAstModal_1.default)(env, popup.getPos(), locator, 'upwards');
                            }
                        },
                    ],
                }).element);
                const addSpinner = () => {
                    const spinner = (0, createLoadingSpinner_2.default)();
                    spinner.classList.add('absoluteCenter');
                    const spinnerWrapper = document.createElement('div');
                    spinnerWrapper.style.height = '7rem';
                    spinnerWrapper.style.display = 'block';
                    spinnerWrapper.style.position = 'relative';
                    spinnerWrapper.appendChild(spinner);
                    root.appendChild(spinnerWrapper);
                };
                if (state === null) {
                    addSpinner();
                    return;
                }
                if (state.type === 'err') {
                    if (state.body.length === 0) {
                        const text = document.createElement('span');
                        text.classList.add('captured-stderr');
                        // text.style.color = '#F88';
                        text.innerText = `Failed listing properties`;
                        root.appendChild(text);
                        return;
                    }
                    root.appendChild((0, encodeRpcBodyLines_2.default)(env, state.body));
                }
                else {
                    let attrs = state.attrs;
                    const groupByAspect = settings_3.default.shouldGroupPropertiesByAspect();
                    if (groupByAspect && attrs) {
                        attrs = [...attrs].sort((a, b) => {
                            if (!!a.astChildName != !!b.astChildName) {
                                return a.astChildName ? -1 : 1;
                            }
                            if (!!a.aspect != !!b.aspect) {
                                return a.aspect ? -1 : 1;
                            }
                            if (a.aspect) {
                                const cmp = a.aspect.localeCompare(b.aspect || '', 'en-GB');
                                return cmp || (0, formatAttr_2.default)(a).localeCompare((0, formatAttr_2.default)(b), 'en-GB');
                            }
                            return 0;
                        });
                    }
                    let resortList = () => { };
                    let submit = () => { };
                    const nodesList = [];
                    const filterInput = document.createElement('input');
                    filterInput.placeholder = 'Filter';
                    filterInput.classList.add('attr-modal-filter');
                    if (!filter) {
                        filterInput.classList.add('empty');
                    }
                    filterInput.type = 'text';
                    filterInput.value = filter;
                    filterInput.oninput = (e) => {
                        filter = filterInput.value.trim();
                        resortList();
                    };
                    filterInput.onkeydown = (e) => {
                        var _a;
                        if (e.key === 'Enter') {
                            submit();
                        }
                        else if (e.key === 'ArrowDown') {
                            if (nodesList.length > 0) {
                                (_a = nodesList[0]) === null || _a === void 0 ? void 0 : _a.focus();
                                e.preventDefault();
                            }
                        }
                    };
                    if (isFirstRender) {
                        isFirstRender = false;
                        setTimeout(() => {
                            if (optionalArgs.initialFilter) {
                                filterInput.select();
                            }
                            else {
                                filterInput.focus();
                            }
                        }, 50);
                    }
                    root.appendChild(filterInput);
                    root.style.minHeight = '4rem';
                    const sortedAttrs = document.createElement('div');
                    resortList = () => {
                        nodesList.length = 0;
                        submit = () => { };
                        while (sortedAttrs.firstChild)
                            sortedAttrs.firstChild.remove();
                        if (!attrs) {
                            console.log('attrs disappeared after a successful load??');
                            return;
                        }
                        function escapeRegex(string) {
                            return string.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
                        }
                        const reg = filter ? new RegExp(`.*${[...filter].map(part => part.trim()).filter(Boolean).map(part => escapeRegex(part)).join('.*')}.*`, 'i') : null;
                        const match = (attr) => {
                            if (!reg) {
                                return !!attr.astChildName;
                            }
                            const combinedName = `${(groupByAspect ? (attr.aspect || 'No Aspect') : '')} ${attr.astChildName || ''} ${(0, formatAttr_2.default)(attr)}`;
                            return reg.test(combinedName);
                        };
                        const matches = [];
                        const misses = [];
                        attrs.forEach(prop => {
                            if (match(prop)) {
                                matches.push(prop);
                            }
                            else {
                                misses.push(prop);
                            }
                        });
                        const showProbe = (attr) => {
                            cleanup();
                            if (!attr.args || attr.args.length === 0) {
                                (0, displayProbeModal_2.default)(env, popup.getPos(), locator, { name: attr.name }, {});
                            }
                            else {
                                if (attr.args.every(arg => arg.type === 'outputstream')) {
                                    // Shortcut directly to probe since there is nothing for user to add in arg modal
                                    (0, displayProbeModal_2.default)(env, popup.getPos(), locator, attr, {});
                                }
                                else {
                                    (0, displayArgModal_1.default)(env, popup.getPos(), locator, attr, {});
                                }
                            }
                        };
                        const addAspectLabels = groupByAspect && attrs.some(attr => !!attr.aspect);
                        let lastAspect = '';
                        const buildNode = (attr, borderTop, highlight) => {
                            if (addAspectLabels) {
                                const newAspect = attr.aspect || '';
                                if (newAspect !== lastAspect) {
                                    // console
                                    const head = document.createElement('p');
                                    head.style.marginBottom = '0';
                                    head.style.marginTop = '0.5rem';
                                    head.style.fontSize = '0.75rem';
                                    head.classList.add('syntax-type');
                                    head.innerText = newAspect || 'No Aspect';
                                    sortedAttrs.appendChild(head);
                                    lastAspect = newAspect;
                                }
                            }
                            const node = document.createElement('div');
                            const ourNodeIndex = nodesList.length;
                            nodesList.push(node);
                            node.tabIndex = 0;
                            node.onmousedown = (e) => { e.stopPropagation(); };
                            node.style.whiteSpace = 'break-spaces';
                            node.style.maxWidth = '100%';
                            node.style.wordBreak = 'break-all';
                            node.classList.add('syntax-attr-dim-focus');
                            node.classList.add('clickHighlightOnHover');
                            node.style.padding = '0 0.25rem';
                            if (borderTop) {
                                node.style.borderTop = `1px solid gray`;
                            }
                            if (highlight) {
                                node.classList.add('bg-syntax-attr-dim');
                            }
                            node.appendChild(document.createTextNode((0, formatAttr_2.default)(attr)));
                            node.onclick = () => showProbe(attr);
                            node.onkeydown = (e) => {
                                var _a, _b;
                                if (e.key === 'Enter') {
                                    showProbe(attr);
                                }
                                else if (e.key === 'ArrowDown' && ourNodeIndex !== (nodesList.length - 1)) {
                                    e.preventDefault();
                                    (_a = nodesList[ourNodeIndex + 1]) === null || _a === void 0 ? void 0 : _a.focus();
                                }
                                else if (e.key === 'ArrowUp') {
                                    e.preventDefault();
                                    if (ourNodeIndex > 0) {
                                        (_b = nodesList[ourNodeIndex - 1]) === null || _b === void 0 ? void 0 : _b.focus();
                                    }
                                    else {
                                        filterInput.focus();
                                    }
                                }
                            };
                            sortedAttrs.appendChild(node);
                        };
                        const addSubmitExplanation = (msg) => {
                            const submitExpl = document.createElement('p');
                            submitExpl.classList.add('syntax-attr');
                            submitExpl.style.textAlign = 'center';
                            submitExpl.innerText = msg;
                            sortedAttrs.appendChild(submitExpl);
                        };
                        matches.forEach((attr, idx) => buildNode(attr, idx > 0, matches.length === 1));
                        if (matches.length && misses.length) {
                            if (matches.length === 1) {
                                addSubmitExplanation('Press enter to select');
                                submit = () => showProbe(matches[0]);
                            }
                            const sep = document.createElement('div');
                            sep.classList.add('search-list-separator');
                            sortedAttrs.appendChild(sep);
                        }
                        else if (!matches.length && (filter.startsWith('*.') || filter.startsWith('?')) && filter.length >= 3) {
                            addSubmitExplanation('Press enter to create search probe');
                            submit = () => {
                                const args = [];
                                if (filter.startsWith('?')) {
                                    args.push({ type: 'string', value: '' });
                                    args.push({ type: 'string', value: filter.slice(1) });
                                }
                                else {
                                    let propAndPredicate = filter.slice('*.'.length);
                                    const predicateStart = propAndPredicate.indexOf('?');
                                    if (predicateStart === -1) {
                                        args.push({ type: 'string', value: propAndPredicate });
                                    }
                                    else {
                                        args.push({ type: 'string', value: propAndPredicate.slice(0, predicateStart) });
                                        args.push({ type: 'string', value: propAndPredicate.slice(predicateStart + 1) });
                                    }
                                }
                                const prop = { name: displayProbeModal_2.searchProbePropertyName, args };
                                cleanup();
                                (0, displayProbeModal_2.default)(env, popup.getPos(), locator, prop, {});
                            };
                            const sep = document.createElement('div');
                            sep.classList.add('search-list-separator');
                            sortedAttrs.appendChild(sep);
                        }
                        lastAspect = '';
                        misses.forEach((attr, idx) => buildNode(attr, idx > 0, !matches.length && misses.length === 1));
                    };
                    resortList();
                    root.appendChild(sortedAttrs);
                }
                if (fetchState !== 'idle') {
                    const spinner = (0, createLoadingSpinner_2.default)();
                    spinner.classList.add('absoluteCenter');
                    root.appendChild(spinner);
                }
            },
        });
        const refresher = env.createCullingTaskSubmitter();
        env.onChangeListeners[queryId] = (adjusters) => {
            if (adjusters) {
                locator.adjust(adjusters);
            }
            refresher.submit(() => {
                fetchAttrs();
                popup.refresh();
            });
        };
        const fetchAttrs = () => {
            switch (fetchState) {
                case 'idle': {
                    fetchState = 'fetching';
                    break;
                }
                case 'fetching': {
                    fetchState = 'queued';
                    return;
                }
                case 'queued': return;
            }
            env.performTypedRpc({
                locator: locator.get(),
                src: env.createParsingRequestData(),
                type: 'ListProperties',
                all: settings_3.default.shouldShowAllProperties(),
            })
                .then((result) => {
                var _a;
                const refetch = fetchState == 'queued';
                fetchState = 'idle';
                if (refetch)
                    fetchAttrs();
                const parsed = result.properties;
                if (!parsed) {
                    if ((_a = result.body) === null || _a === void 0 ? void 0 : _a.length) {
                        state = { type: 'err', body: result.body };
                        popup.refresh();
                        return;
                    }
                    throw new Error('Unexpected response body "' + JSON.stringify(result) + '"');
                }
                const uniq = [];
                const deudplicator = new Set();
                parsed.forEach(attr => {
                    const uniqId = JSON.stringify(attr);
                    if (deudplicator.has(uniqId)) {
                        return;
                    }
                    deudplicator.add(uniqId);
                    uniq.push(attr);
                });
                state = { type: 'attrs', attrs: uniq };
                popup.refresh();
            })
                .catch(err => {
                console.warn('Error when loading attributes', err);
                state = { type: 'err', body: [] };
                popup.refresh();
            });
        };
        fetchAttrs();
    };
    exports.default = displayAttributeModal;
});
// @ts-nocheck
define("dependencies/graphviz/graphviz", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.graphviz = void 0;
    var xhtml = "http://www.w3.org/1999/xhtml";
    var namespaces = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: xhtml,
        xlink: "http://www.w3.org/1999/xlink",
        xml: "http://www.w3.org/XML/1998/namespace",
        xmlns: "http://www.w3.org/2000/xmlns/"
    };
    function namespace(name) {
        var prefix = name += "", i = prefix.indexOf(":");
        if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns")
            name = name.slice(i + 1);
        return namespaces.hasOwnProperty(prefix) ? { space: namespaces[prefix], local: name } : name; // eslint-disable-line no-prototype-builtins
    }
    function creatorInherit(name) {
        return function () {
            var document = this.ownerDocument, uri = this.namespaceURI;
            return uri === xhtml && document.documentElement.namespaceURI === xhtml
                ? document.createElement(name)
                : document.createElementNS(uri, name);
        };
    }
    function creatorFixed(fullname) {
        return function () {
            return this.ownerDocument.createElementNS(fullname.space, fullname.local);
        };
    }
    function creator(name) {
        var fullname = namespace(name);
        return (fullname.local
            ? creatorFixed
            : creatorInherit)(fullname);
    }
    function none() { }
    function selector(selector) {
        return selector == null ? none : function () {
            return this.querySelector(selector);
        };
    }
    function selection_select(select) {
        if (typeof select !== "function")
            select = selector(select);
        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
                if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
                    if ("__data__" in node)
                        subnode.__data__ = node.__data__;
                    subgroup[i] = subnode;
                }
            }
        }
        return new Selection$1(subgroups, this._parents);
    }
    // Given something array like (or null), returns something that is strictly an
    // array. This is used to ensure that array-like objects passed to d3.selectAll
    // or selection.selectAll are converted into proper arrays when creating a
    // selection; we don’t ever want to create a selection backed by a live
    // HTMLCollection or NodeList. However, note that selection.selectAll will use a
    // static NodeList as a group, since it safely derived from querySelectorAll.
    function array(x) {
        return x == null ? [] : Array.isArray(x) ? x : Array.from(x);
    }
    function empty() {
        return [];
    }
    function selectorAll(selector) {
        return selector == null ? empty : function () {
            return this.querySelectorAll(selector);
        };
    }
    function arrayAll(select) {
        return function () {
            return array(select.apply(this, arguments));
        };
    }
    function selection_selectAll(select) {
        if (typeof select === "function")
            select = arrayAll(select);
        else
            select = selectorAll(select);
        for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
                if (node = group[i]) {
                    subgroups.push(select.call(node, node.__data__, i, group));
                    parents.push(node);
                }
            }
        }
        return new Selection$1(subgroups, parents);
    }
    function matcher(selector) {
        return function () {
            return this.matches(selector);
        };
    }
    function childMatcher(selector) {
        return function (node) {
            return node.matches(selector);
        };
    }
    var find = Array.prototype.find;
    function childFind(match) {
        return function () {
            return find.call(this.children, match);
        };
    }
    function childFirst() {
        return this.firstElementChild;
    }
    function selection_selectChild(match) {
        return this.select(match == null ? childFirst
            : childFind(typeof match === "function" ? match : childMatcher(match)));
    }
    var filter = Array.prototype.filter;
    function children() {
        return Array.from(this.children);
    }
    function childrenFilter(match) {
        return function () {
            return filter.call(this.children, match);
        };
    }
    function selection_selectChildren(match) {
        return this.selectAll(match == null ? children
            : childrenFilter(typeof match === "function" ? match : childMatcher(match)));
    }
    function selection_filter(match) {
        if (typeof match !== "function")
            match = matcher(match);
        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
                if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
                    subgroup.push(node);
                }
            }
        }
        return new Selection$1(subgroups, this._parents);
    }
    function sparse(update) {
        return new Array(update.length);
    }
    function selection_enter() {
        return new Selection$1(this._enter || this._groups.map(sparse), this._parents);
    }
    function EnterNode(parent, datum) {
        this.ownerDocument = parent.ownerDocument;
        this.namespaceURI = parent.namespaceURI;
        this._next = null;
        this._parent = parent;
        this.__data__ = datum;
    }
    EnterNode.prototype = {
        constructor: EnterNode,
        appendChild: function (child) { return this._parent.insertBefore(child, this._next); },
        insertBefore: function (child, next) { return this._parent.insertBefore(child, next); },
        querySelector: function (selector) { return this._parent.querySelector(selector); },
        querySelectorAll: function (selector) { return this._parent.querySelectorAll(selector); }
    };
    function constant$2(x) {
        return function () {
            return x;
        };
    }
    function bindIndex(parent, group, enter, update, exit, data) {
        var i = 0, node, groupLength = group.length, dataLength = data.length;
        // Put any non-null nodes that fit into update.
        // Put any null nodes into enter.
        // Put any remaining data into enter.
        for (; i < dataLength; ++i) {
            if (node = group[i]) {
                node.__data__ = data[i];
                update[i] = node;
            }
            else {
                enter[i] = new EnterNode(parent, data[i]);
            }
        }
        // Put any non-null nodes that don’t fit into exit.
        for (; i < groupLength; ++i) {
            if (node = group[i]) {
                exit[i] = node;
            }
        }
    }
    function bindKey(parent, group, enter, update, exit, data, key) {
        var i, node, nodeByKeyValue = new Map, groupLength = group.length, dataLength = data.length, keyValues = new Array(groupLength), keyValue;
        // Compute the key for each node.
        // If multiple nodes have the same key, the duplicates are added to exit.
        for (i = 0; i < groupLength; ++i) {
            if (node = group[i]) {
                keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";
                if (nodeByKeyValue.has(keyValue)) {
                    exit[i] = node;
                }
                else {
                    nodeByKeyValue.set(keyValue, node);
                }
            }
        }
        // Compute the key for each datum.
        // If there a node associated with this key, join and add it to update.
        // If there is not (or the key is a duplicate), add it to enter.
        for (i = 0; i < dataLength; ++i) {
            keyValue = key.call(parent, data[i], i, data) + "";
            if (node = nodeByKeyValue.get(keyValue)) {
                update[i] = node;
                node.__data__ = data[i];
                nodeByKeyValue.delete(keyValue);
            }
            else {
                enter[i] = new EnterNode(parent, data[i]);
            }
        }
        // Add any remaining nodes that were not bound to data to exit.
        for (i = 0; i < groupLength; ++i) {
            if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {
                exit[i] = node;
            }
        }
    }
    function datum(node) {
        return node.__data__;
    }
    function selection_data(value, key) {
        if (!arguments.length)
            return Array.from(this, datum);
        var bind = key ? bindKey : bindIndex, parents = this._parents, groups = this._groups;
        if (typeof value !== "function")
            value = constant$2(value);
        for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
            var parent = parents[j], group = groups[j], groupLength = group.length, data = arraylike(value.call(parent, parent && parent.__data__, j, parents)), dataLength = data.length, enterGroup = enter[j] = new Array(dataLength), updateGroup = update[j] = new Array(dataLength), exitGroup = exit[j] = new Array(groupLength);
            bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);
            // Now connect the enter nodes to their following update node, such that
            // appendChild can insert the materialized enter node before this node,
            // rather than at the end of the parent node.
            for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
                if (previous = enterGroup[i0]) {
                    if (i0 >= i1)
                        i1 = i0 + 1;
                    while (!(next = updateGroup[i1]) && ++i1 < dataLength)
                        ;
                    previous._next = next || null;
                }
            }
        }
        update = new Selection$1(update, parents);
        update._enter = enter;
        update._exit = exit;
        return update;
    }
    // Given some data, this returns an array-like view of it: an object that
    // exposes a length property and allows numeric indexing. Note that unlike
    // selectAll, this isn’t worried about “live” collections because the resulting
    // array will only be used briefly while data is being bound. (It is possible to
    // cause the data to change while iterating by using a key function, but please
    // don’t; we’d rather avoid a gratuitous copy.)
    function arraylike(data) {
        return typeof data === "object" && "length" in data
            ? data // Array, TypedArray, NodeList, array-like
            : Array.from(data); // Map, Set, iterable, string, or anything else
    }
    function selection_exit() {
        return new Selection$1(this._exit || this._groups.map(sparse), this._parents);
    }
    function selection_join(onenter, onupdate, onexit) {
        var enter = this.enter(), update = this, exit = this.exit();
        if (typeof onenter === "function") {
            enter = onenter(enter);
            if (enter)
                enter = enter.selection();
        }
        else {
            enter = enter.append(onenter + "");
        }
        if (onupdate != null) {
            update = onupdate(update);
            if (update)
                update = update.selection();
        }
        if (onexit == null)
            exit.remove();
        else
            onexit(exit);
        return enter && update ? enter.merge(update).order() : update;
    }
    function selection_merge(context) {
        var selection = context.selection ? context.selection() : context;
        for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
                if (node = group0[i] || group1[i]) {
                    merge[i] = node;
                }
            }
        }
        for (; j < m0; ++j) {
            merges[j] = groups0[j];
        }
        return new Selection$1(merges, this._parents);
    }
    function selection_order() {
        for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
            for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
                if (node = group[i]) {
                    if (next && node.compareDocumentPosition(next) ^ 4)
                        next.parentNode.insertBefore(node, next);
                    next = node;
                }
            }
        }
        return this;
    }
    function selection_sort(compare) {
        if (!compare)
            compare = ascending;
        function compareNode(a, b) {
            return a && b ? compare(a.__data__, b.__data__) : !a - !b;
        }
        for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
                if (node = group[i]) {
                    sortgroup[i] = node;
                }
            }
            sortgroup.sort(compareNode);
        }
        return new Selection$1(sortgroups, this._parents).order();
    }
    function ascending(a, b) {
        return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
    }
    function selection_call() {
        var callback = arguments[0];
        arguments[0] = this;
        callback.apply(null, arguments);
        return this;
    }
    function selection_nodes() {
        return Array.from(this);
    }
    function selection_node() {
        for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
            for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
                var node = group[i];
                if (node)
                    return node;
            }
        }
        return null;
    }
    function selection_size() {
        let size = 0;
        for (const node of this)
            ++size; // eslint-disable-line no-unused-vars
        return size;
    }
    function selection_empty() {
        return !this.node();
    }
    function selection_each(callback) {
        for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
            for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
                if (node = group[i])
                    callback.call(node, node.__data__, i, group);
            }
        }
        return this;
    }
    function attrRemove$1(name) {
        return function () {
            this.removeAttribute(name);
        };
    }
    function attrRemoveNS$1(fullname) {
        return function () {
            this.removeAttributeNS(fullname.space, fullname.local);
        };
    }
    function attrConstant$1(name, value) {
        return function () {
            this.setAttribute(name, value);
        };
    }
    function attrConstantNS$1(fullname, value) {
        return function () {
            this.setAttributeNS(fullname.space, fullname.local, value);
        };
    }
    function attrFunction$1(name, value) {
        return function () {
            var v = value.apply(this, arguments);
            if (v == null)
                this.removeAttribute(name);
            else
                this.setAttribute(name, v);
        };
    }
    function attrFunctionNS$1(fullname, value) {
        return function () {
            var v = value.apply(this, arguments);
            if (v == null)
                this.removeAttributeNS(fullname.space, fullname.local);
            else
                this.setAttributeNS(fullname.space, fullname.local, v);
        };
    }
    function selection_attr(name, value) {
        var fullname = namespace(name);
        if (arguments.length < 2) {
            var node = this.node();
            return fullname.local
                ? node.getAttributeNS(fullname.space, fullname.local)
                : node.getAttribute(fullname);
        }
        return this.each((value == null
            ? (fullname.local ? attrRemoveNS$1 : attrRemove$1) : (typeof value === "function"
            ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)
            : (fullname.local ? attrConstantNS$1 : attrConstant$1)))(fullname, value));
    }
    function defaultView(node) {
        return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node
            || (node.document && node) // node is a Window
            || node.defaultView; // node is a Document
    }
    function styleRemove$1(name) {
        return function () {
            this.style.removeProperty(name);
        };
    }
    function styleConstant$1(name, value, priority) {
        return function () {
            this.style.setProperty(name, value, priority);
        };
    }
    function styleFunction$1(name, value, priority) {
        return function () {
            var v = value.apply(this, arguments);
            if (v == null)
                this.style.removeProperty(name);
            else
                this.style.setProperty(name, v, priority);
        };
    }
    function selection_style(name, value, priority) {
        return arguments.length > 1
            ? this.each((value == null
                ? styleRemove$1 : typeof value === "function"
                ? styleFunction$1
                : styleConstant$1)(name, value, priority == null ? "" : priority))
            : styleValue(this.node(), name);
    }
    function styleValue(node, name) {
        return node.style.getPropertyValue(name)
            || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);
    }
    function propertyRemove(name) {
        return function () {
            delete this[name];
        };
    }
    function propertyConstant(name, value) {
        return function () {
            this[name] = value;
        };
    }
    function propertyFunction(name, value) {
        return function () {
            var v = value.apply(this, arguments);
            if (v == null)
                delete this[name];
            else
                this[name] = v;
        };
    }
    function selection_property(name, value) {
        return arguments.length > 1
            ? this.each((value == null
                ? propertyRemove : typeof value === "function"
                ? propertyFunction
                : propertyConstant)(name, value))
            : this.node()[name];
    }
    function classArray(string) {
        return string.trim().split(/^|\s+/);
    }
    function classList(node) {
        return node.classList || new ClassList(node);
    }
    function ClassList(node) {
        this._node = node;
        this._names = classArray(node.getAttribute("class") || "");
    }
    ClassList.prototype = {
        add: function (name) {
            var i = this._names.indexOf(name);
            if (i < 0) {
                this._names.push(name);
                this._node.setAttribute("class", this._names.join(" "));
            }
        },
        remove: function (name) {
            var i = this._names.indexOf(name);
            if (i >= 0) {
                this._names.splice(i, 1);
                this._node.setAttribute("class", this._names.join(" "));
            }
        },
        contains: function (name) {
            return this._names.indexOf(name) >= 0;
        }
    };
    function classedAdd(node, names) {
        var list = classList(node), i = -1, n = names.length;
        while (++i < n)
            list.add(names[i]);
    }
    function classedRemove(node, names) {
        var list = classList(node), i = -1, n = names.length;
        while (++i < n)
            list.remove(names[i]);
    }
    function classedTrue(names) {
        return function () {
            classedAdd(this, names);
        };
    }
    function classedFalse(names) {
        return function () {
            classedRemove(this, names);
        };
    }
    function classedFunction(names, value) {
        return function () {
            (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
        };
    }
    function selection_classed(name, value) {
        var names = classArray(name + "");
        if (arguments.length < 2) {
            var list = classList(this.node()), i = -1, n = names.length;
            while (++i < n)
                if (!list.contains(names[i]))
                    return false;
            return true;
        }
        return this.each((typeof value === "function"
            ? classedFunction : value
            ? classedTrue
            : classedFalse)(names, value));
    }
    function textRemove() {
        this.textContent = "";
    }
    function textConstant$1(value) {
        return function () {
            this.textContent = value;
        };
    }
    function textFunction$1(value) {
        return function () {
            var v = value.apply(this, arguments);
            this.textContent = v == null ? "" : v;
        };
    }
    function selection_text(value) {
        return arguments.length
            ? this.each(value == null
                ? textRemove : (typeof value === "function"
                ? textFunction$1
                : textConstant$1)(value))
            : this.node().textContent;
    }
    function htmlRemove() {
        this.innerHTML = "";
    }
    function htmlConstant(value) {
        return function () {
            this.innerHTML = value;
        };
    }
    function htmlFunction(value) {
        return function () {
            var v = value.apply(this, arguments);
            this.innerHTML = v == null ? "" : v;
        };
    }
    function selection_html(value) {
        return arguments.length
            ? this.each(value == null
                ? htmlRemove : (typeof value === "function"
                ? htmlFunction
                : htmlConstant)(value))
            : this.node().innerHTML;
    }
    function raise() {
        if (this.nextSibling)
            this.parentNode.appendChild(this);
    }
    function selection_raise() {
        return this.each(raise);
    }
    function lower() {
        if (this.previousSibling)
            this.parentNode.insertBefore(this, this.parentNode.firstChild);
    }
    function selection_lower() {
        return this.each(lower);
    }
    function selection_append(name) {
        var create = typeof name === "function" ? name : creator(name);
        return this.select(function () {
            return this.appendChild(create.apply(this, arguments));
        });
    }
    function constantNull() {
        return null;
    }
    function selection_insert(name, before) {
        var create = typeof name === "function" ? name : creator(name), select = before == null ? constantNull : typeof before === "function" ? before : selector(before);
        return this.select(function () {
            return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
        });
    }
    function remove() {
        var parent = this.parentNode;
        if (parent)
            parent.removeChild(this);
    }
    function selection_remove() {
        return this.each(remove);
    }
    function selection_cloneShallow() {
        var clone = this.cloneNode(false), parent = this.parentNode;
        return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }
    function selection_cloneDeep() {
        var clone = this.cloneNode(true), parent = this.parentNode;
        return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
    }
    function selection_clone(deep) {
        return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
    }
    function selection_datum(value) {
        return arguments.length
            ? this.property("__data__", value)
            : this.node().__data__;
    }
    function contextListener(listener) {
        return function (event) {
            listener.call(this, event, this.__data__);
        };
    }
    function parseTypenames$1(typenames) {
        return typenames.trim().split(/^|\s+/).map(function (t) {
            var name = "", i = t.indexOf(".");
            if (i >= 0)
                name = t.slice(i + 1), t = t.slice(0, i);
            return { type: t, name: name };
        });
    }
    function onRemove(typename) {
        return function () {
            var on = this.__on;
            if (!on)
                return;
            for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
                if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
                    this.removeEventListener(o.type, o.listener, o.options);
                }
                else {
                    on[++i] = o;
                }
            }
            if (++i)
                on.length = i;
            else
                delete this.__on;
        };
    }
    function onAdd(typename, value, options) {
        return function () {
            var on = this.__on, o, listener = contextListener(value);
            if (on)
                for (var j = 0, m = on.length; j < m; ++j) {
                    if ((o = on[j]).type === typename.type && o.name === typename.name) {
                        this.removeEventListener(o.type, o.listener, o.options);
                        this.addEventListener(o.type, o.listener = listener, o.options = options);
                        o.value = value;
                        return;
                    }
                }
            this.addEventListener(typename.type, listener, options);
            o = { type: typename.type, name: typename.name, value: value, listener: listener, options: options };
            if (!on)
                this.__on = [o];
            else
                on.push(o);
        };
    }
    function selection_on(typename, value, options) {
        var typenames = parseTypenames$1(typename + ""), i, n = typenames.length, t;
        if (arguments.length < 2) {
            var on = this.node().__on;
            if (on)
                for (var j = 0, m = on.length, o; j < m; ++j) {
                    for (i = 0, o = on[j]; i < n; ++i) {
                        if ((t = typenames[i]).type === o.type && t.name === o.name) {
                            return o.value;
                        }
                    }
                }
            return;
        }
        on = value ? onAdd : onRemove;
        for (i = 0; i < n; ++i)
            this.each(on(typenames[i], value, options));
        return this;
    }
    function dispatchEvent(node, type, params) {
        var window = defaultView(node), event = window.CustomEvent;
        if (typeof event === "function") {
            event = new event(type, params);
        }
        else {
            event = window.document.createEvent("Event");
            if (params)
                event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;
            else
                event.initEvent(type, false, false);
        }
        node.dispatchEvent(event);
    }
    function dispatchConstant(type, params) {
        return function () {
            return dispatchEvent(this, type, params);
        };
    }
    function dispatchFunction(type, params) {
        return function () {
            return dispatchEvent(this, type, params.apply(this, arguments));
        };
    }
    function selection_dispatch(type, params) {
        return this.each((typeof params === "function"
            ? dispatchFunction
            : dispatchConstant)(type, params));
    }
    function* selection_iterator() {
        for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
            for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
                if (node = group[i])
                    yield node;
            }
        }
    }
    var root$1 = [null];
    function Selection$1(groups, parents) {
        this._groups = groups;
        this._parents = parents;
    }
    function selection() {
        return new Selection$1([[document.documentElement]], root$1);
    }
    function selection_selection() {
        return this;
    }
    Selection$1.prototype = selection.prototype = {
        constructor: Selection$1,
        select: selection_select,
        selectAll: selection_selectAll,
        selectChild: selection_selectChild,
        selectChildren: selection_selectChildren,
        filter: selection_filter,
        data: selection_data,
        enter: selection_enter,
        exit: selection_exit,
        join: selection_join,
        merge: selection_merge,
        selection: selection_selection,
        order: selection_order,
        sort: selection_sort,
        call: selection_call,
        nodes: selection_nodes,
        node: selection_node,
        size: selection_size,
        empty: selection_empty,
        each: selection_each,
        attr: selection_attr,
        style: selection_style,
        property: selection_property,
        classed: selection_classed,
        text: selection_text,
        html: selection_html,
        raise: selection_raise,
        lower: selection_lower,
        append: selection_append,
        insert: selection_insert,
        remove: selection_remove,
        clone: selection_clone,
        datum: selection_datum,
        on: selection_on,
        dispatch: selection_dispatch,
        [Symbol.iterator]: selection_iterator
    };
    function select(selector) {
        return typeof selector === "string"
            ? new Selection$1([[document.querySelector(selector)]], [document.documentElement])
            : new Selection$1([[selector]], root$1);
    }
    function sourceEvent(event) {
        let sourceEvent;
        while (sourceEvent = event.sourceEvent)
            event = sourceEvent;
        return event;
    }
    function pointer(event, node) {
        event = sourceEvent(event);
        if (node === undefined)
            node = event.currentTarget;
        if (node) {
            var svg = node.ownerSVGElement || node;
            if (svg.createSVGPoint) {
                var point = svg.createSVGPoint();
                point.x = event.clientX, point.y = event.clientY;
                point = point.matrixTransform(node.getScreenCTM().inverse());
                return [point.x, point.y];
            }
            if (node.getBoundingClientRect) {
                var rect = node.getBoundingClientRect();
                return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
            }
        }
        return [event.pageX, event.pageY];
    }
    function selectAll(selector) {
        return typeof selector === "string"
            ? new Selection$1([document.querySelectorAll(selector)], [document.documentElement])
            : new Selection$1([array(selector)], root$1);
    }
    var noop = { value: () => { } };
    function dispatch() {
        for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
            if (!(t = arguments[i] + "") || (t in _) || /[\s.]/.test(t))
                throw new Error("illegal type: " + t);
            _[t] = [];
        }
        return new Dispatch(_);
    }
    function Dispatch(_) {
        this._ = _;
    }
    function parseTypenames(typenames, types) {
        return typenames.trim().split(/^|\s+/).map(function (t) {
            var name = "", i = t.indexOf(".");
            if (i >= 0)
                name = t.slice(i + 1), t = t.slice(0, i);
            if (t && !types.hasOwnProperty(t))
                throw new Error("unknown type: " + t);
            return { type: t, name: name };
        });
    }
    Dispatch.prototype = dispatch.prototype = {
        constructor: Dispatch,
        on: function (typename, callback) {
            var _ = this._, T = parseTypenames(typename + "", _), t, i = -1, n = T.length;
            // If no callback was specified, return the callback of the given type and name.
            if (arguments.length < 2) {
                while (++i < n)
                    if ((t = (typename = T[i]).type) && (t = get$1(_[t], typename.name)))
                        return t;
                return;
            }
            // If a type was specified, set the callback for the given type and name.
            // Otherwise, if a null callback was specified, remove callbacks of the given name.
            if (callback != null && typeof callback !== "function")
                throw new Error("invalid callback: " + callback);
            while (++i < n) {
                if (t = (typename = T[i]).type)
                    _[t] = set$1(_[t], typename.name, callback);
                else if (callback == null)
                    for (t in _)
                        _[t] = set$1(_[t], typename.name, null);
            }
            return this;
        },
        copy: function () {
            var copy = {}, _ = this._;
            for (var t in _)
                copy[t] = _[t].slice();
            return new Dispatch(copy);
        },
        call: function (type, that) {
            if ((n = arguments.length - 2) > 0)
                for (var args = new Array(n), i = 0, n, t; i < n; ++i)
                    args[i] = arguments[i + 2];
            if (!this._.hasOwnProperty(type))
                throw new Error("unknown type: " + type);
            for (t = this._[type], i = 0, n = t.length; i < n; ++i)
                t[i].value.apply(that, args);
        },
        apply: function (type, that, args) {
            if (!this._.hasOwnProperty(type))
                throw new Error("unknown type: " + type);
            for (var t = this._[type], i = 0, n = t.length; i < n; ++i)
                t[i].value.apply(that, args);
        }
    };
    function get$1(type, name) {
        for (var i = 0, n = type.length, c; i < n; ++i) {
            if ((c = type[i]).name === name) {
                return c.value;
            }
        }
    }
    function set$1(type, name, callback) {
        for (var i = 0, n = type.length; i < n; ++i) {
            if (type[i].name === name) {
                type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
                break;
            }
        }
        if (callback != null)
            type.push({ name: name, value: callback });
        return type;
    }
    var frame = 0, // is an animation frame pending?
    timeout$1 = 0, // is a timeout pending?
    interval = 0, // are any timers active?
    pokeDelay = 1000, // how frequently we check for clock skew
    taskHead, taskTail, clockLast = 0, clockNow = 0, clockSkew = 0, clock = typeof performance === "object" && performance.now ? performance : Date, setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) { setTimeout(f, 17); };
    function now() {
        return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
    }
    function clearNow() {
        clockNow = 0;
    }
    function Timer() {
        this._call =
            this._time =
                this._next = null;
    }
    Timer.prototype = timer.prototype = {
        constructor: Timer,
        restart: function (callback, delay, time) {
            if (typeof callback !== "function")
                throw new TypeError("callback is not a function");
            time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);
            if (!this._next && taskTail !== this) {
                if (taskTail)
                    taskTail._next = this;
                else
                    taskHead = this;
                taskTail = this;
            }
            this._call = callback;
            this._time = time;
            sleep();
        },
        stop: function () {
            if (this._call) {
                this._call = null;
                this._time = Infinity;
                sleep();
            }
        }
    };
    function timer(callback, delay, time) {
        var t = new Timer;
        t.restart(callback, delay, time);
        return t;
    }
    function timerFlush() {
        now(); // Get the current time, if not already set.
        ++frame; // Pretend we’ve set an alarm, if we haven’t already.
        var t = taskHead, e;
        while (t) {
            if ((e = clockNow - t._time) >= 0)
                t._call.call(undefined, e);
            t = t._next;
        }
        --frame;
    }
    function wake() {
        clockNow = (clockLast = clock.now()) + clockSkew;
        frame = timeout$1 = 0;
        try {
            timerFlush();
        }
        finally {
            frame = 0;
            nap();
            clockNow = 0;
        }
    }
    function poke() {
        var now = clock.now(), delay = now - clockLast;
        if (delay > pokeDelay)
            clockSkew -= delay, clockLast = now;
    }
    function nap() {
        var t0, t1 = taskHead, t2, time = Infinity;
        while (t1) {
            if (t1._call) {
                if (time > t1._time)
                    time = t1._time;
                t0 = t1, t1 = t1._next;
            }
            else {
                t2 = t1._next, t1._next = null;
                t1 = t0 ? t0._next = t2 : taskHead = t2;
            }
        }
        taskTail = t0;
        sleep(time);
    }
    function sleep(time) {
        if (frame)
            return; // Soonest alarm already set, or will be.
        if (timeout$1)
            timeout$1 = clearTimeout(timeout$1);
        var delay = time - clockNow; // Strictly less than if we recomputed clockNow.
        if (delay > 24) {
            if (time < Infinity)
                timeout$1 = setTimeout(wake, time - clock.now() - clockSkew);
            if (interval)
                interval = clearInterval(interval);
        }
        else {
            if (!interval)
                clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
            frame = 1, setFrame(wake);
        }
    }
    function timeout(callback, delay, time) {
        var t = new Timer;
        delay = delay == null ? 0 : +delay;
        t.restart(elapsed => {
            t.stop();
            callback(elapsed + delay);
        }, delay, time);
        return t;
    }
    var emptyOn = dispatch("start", "end", "cancel", "interrupt");
    var emptyTween = [];
    var CREATED = 0;
    var SCHEDULED = 1;
    var STARTING = 2;
    var STARTED = 3;
    var RUNNING = 4;
    var ENDING = 5;
    var ENDED = 6;
    function schedule(node, name, id, index, group, timing) {
        var schedules = node.__transition;
        if (!schedules)
            node.__transition = {};
        else if (id in schedules)
            return;
        create(node, id, {
            name: name,
            index: index,
            group: group,
            on: emptyOn,
            tween: emptyTween,
            time: timing.time,
            delay: timing.delay,
            duration: timing.duration,
            ease: timing.ease,
            timer: null,
            state: CREATED
        });
    }
    function init(node, id) {
        var schedule = get(node, id);
        if (schedule.state > CREATED)
            throw new Error("too late; already scheduled");
        return schedule;
    }
    function set(node, id) {
        var schedule = get(node, id);
        if (schedule.state > STARTED)
            throw new Error("too late; already running");
        return schedule;
    }
    function get(node, id) {
        var schedule = node.__transition;
        if (!schedule || !(schedule = schedule[id]))
            throw new Error("transition not found");
        return schedule;
    }
    function create(node, id, self) {
        var schedules = node.__transition, tween;
        // Initialize the self timer when the transition is created.
        // Note the actual delay is not known until the first callback!
        schedules[id] = self;
        self.timer = timer(schedule, 0, self.time);
        function schedule(elapsed) {
            self.state = SCHEDULED;
            self.timer.restart(start, self.delay, self.time);
            // If the elapsed delay is less than our first sleep, start immediately.
            if (self.delay <= elapsed)
                start(elapsed - self.delay);
        }
        function start(elapsed) {
            var i, j, n, o;
            // If the state is not SCHEDULED, then we previously errored on start.
            if (self.state !== SCHEDULED)
                return stop();
            for (i in schedules) {
                o = schedules[i];
                if (o.name !== self.name)
                    continue;
                // While this element already has a starting transition during this frame,
                // defer starting an interrupting transition until that transition has a
                // chance to tick (and possibly end); see d3/d3-transition#54!
                if (o.state === STARTED)
                    return timeout(start);
                // Interrupt the active transition, if any.
                if (o.state === RUNNING) {
                    o.state = ENDED;
                    o.timer.stop();
                    o.on.call("interrupt", node, node.__data__, o.index, o.group);
                    delete schedules[i];
                }
                // Cancel any pre-empted transitions.
                else if (+i < id) {
                    o.state = ENDED;
                    o.timer.stop();
                    o.on.call("cancel", node, node.__data__, o.index, o.group);
                    delete schedules[i];
                }
            }
            // Defer the first tick to end of the current frame; see d3/d3#1576.
            // Note the transition may be canceled after start and before the first tick!
            // Note this must be scheduled before the start event; see d3/d3-transition#16!
            // Assuming this is successful, subsequent callbacks go straight to tick.
            timeout(function () {
                if (self.state === STARTED) {
                    self.state = RUNNING;
                    self.timer.restart(tick, self.delay, self.time);
                    tick(elapsed);
                }
            });
            // Dispatch the start event.
            // Note this must be done before the tween are initialized.
            self.state = STARTING;
            self.on.call("start", node, node.__data__, self.index, self.group);
            if (self.state !== STARTING)
                return; // interrupted
            self.state = STARTED;
            // Initialize the tween, deleting null tween.
            tween = new Array(n = self.tween.length);
            for (i = 0, j = -1; i < n; ++i) {
                if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
                    tween[++j] = o;
                }
            }
            tween.length = j + 1;
        }
        function tick(elapsed) {
            var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1), i = -1, n = tween.length;
            while (++i < n) {
                tween[i].call(node, t);
            }
            // Dispatch the end event.
            if (self.state === ENDING) {
                self.on.call("end", node, node.__data__, self.index, self.group);
                stop();
            }
        }
        function stop() {
            self.state = ENDED;
            self.timer.stop();
            delete schedules[id];
            for (var i in schedules)
                return; // eslint-disable-line no-unused-vars
            delete node.__transition;
        }
    }
    function interrupt(node, name) {
        var schedules = node.__transition, schedule, active, empty = true, i;
        if (!schedules)
            return;
        name = name == null ? null : name + "";
        for (i in schedules) {
            if ((schedule = schedules[i]).name !== name) {
                empty = false;
                continue;
            }
            active = schedule.state > STARTING && schedule.state < ENDING;
            schedule.state = ENDED;
            schedule.timer.stop();
            schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
            delete schedules[i];
        }
        if (empty)
            delete node.__transition;
    }
    function selection_interrupt(name) {
        return this.each(function () {
            interrupt(this, name);
        });
    }
    function define(constructor, factory, prototype) {
        constructor.prototype = factory.prototype = prototype;
        prototype.constructor = constructor;
    }
    function extend(parent, definition) {
        var prototype = Object.create(parent.prototype);
        for (var key in definition)
            prototype[key] = definition[key];
        return prototype;
    }
    function Color() { }
    var darker = 0.7;
    var brighter = 1 / darker;
    var reI = "\\s*([+-]?\\d+)\\s*", reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*", reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*", reHex = /^#([0-9a-f]{3,8})$/, reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`), reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`), reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`), reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`), reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`), reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);
    var named = {
        aliceblue: 0xf0f8ff,
        antiquewhite: 0xfaebd7,
        aqua: 0x00ffff,
        aquamarine: 0x7fffd4,
        azure: 0xf0ffff,
        beige: 0xf5f5dc,
        bisque: 0xffe4c4,
        black: 0x000000,
        blanchedalmond: 0xffebcd,
        blue: 0x0000ff,
        blueviolet: 0x8a2be2,
        brown: 0xa52a2a,
        burlywood: 0xdeb887,
        cadetblue: 0x5f9ea0,
        chartreuse: 0x7fff00,
        chocolate: 0xd2691e,
        coral: 0xff7f50,
        cornflowerblue: 0x6495ed,
        cornsilk: 0xfff8dc,
        crimson: 0xdc143c,
        cyan: 0x00ffff,
        darkblue: 0x00008b,
        darkcyan: 0x008b8b,
        darkgoldenrod: 0xb8860b,
        darkgray: 0xa9a9a9,
        darkgreen: 0x006400,
        darkgrey: 0xa9a9a9,
        darkkhaki: 0xbdb76b,
        darkmagenta: 0x8b008b,
        darkolivegreen: 0x556b2f,
        darkorange: 0xff8c00,
        darkorchid: 0x9932cc,
        darkred: 0x8b0000,
        darksalmon: 0xe9967a,
        darkseagreen: 0x8fbc8f,
        darkslateblue: 0x483d8b,
        darkslategray: 0x2f4f4f,
        darkslategrey: 0x2f4f4f,
        darkturquoise: 0x00ced1,
        darkviolet: 0x9400d3,
        deeppink: 0xff1493,
        deepskyblue: 0x00bfff,
        dimgray: 0x696969,
        dimgrey: 0x696969,
        dodgerblue: 0x1e90ff,
        firebrick: 0xb22222,
        floralwhite: 0xfffaf0,
        forestgreen: 0x228b22,
        fuchsia: 0xff00ff,
        gainsboro: 0xdcdcdc,
        ghostwhite: 0xf8f8ff,
        gold: 0xffd700,
        goldenrod: 0xdaa520,
        gray: 0x808080,
        green: 0x008000,
        greenyellow: 0xadff2f,
        grey: 0x808080,
        honeydew: 0xf0fff0,
        hotpink: 0xff69b4,
        indianred: 0xcd5c5c,
        indigo: 0x4b0082,
        ivory: 0xfffff0,
        khaki: 0xf0e68c,
        lavender: 0xe6e6fa,
        lavenderblush: 0xfff0f5,
        lawngreen: 0x7cfc00,
        lemonchiffon: 0xfffacd,
        lightblue: 0xadd8e6,
        lightcoral: 0xf08080,
        lightcyan: 0xe0ffff,
        lightgoldenrodyellow: 0xfafad2,
        lightgray: 0xd3d3d3,
        lightgreen: 0x90ee90,
        lightgrey: 0xd3d3d3,
        lightpink: 0xffb6c1,
        lightsalmon: 0xffa07a,
        lightseagreen: 0x20b2aa,
        lightskyblue: 0x87cefa,
        lightslategray: 0x778899,
        lightslategrey: 0x778899,
        lightsteelblue: 0xb0c4de,
        lightyellow: 0xffffe0,
        lime: 0x00ff00,
        limegreen: 0x32cd32,
        linen: 0xfaf0e6,
        magenta: 0xff00ff,
        maroon: 0x800000,
        mediumaquamarine: 0x66cdaa,
        mediumblue: 0x0000cd,
        mediumorchid: 0xba55d3,
        mediumpurple: 0x9370db,
        mediumseagreen: 0x3cb371,
        mediumslateblue: 0x7b68ee,
        mediumspringgreen: 0x00fa9a,
        mediumturquoise: 0x48d1cc,
        mediumvioletred: 0xc71585,
        midnightblue: 0x191970,
        mintcream: 0xf5fffa,
        mistyrose: 0xffe4e1,
        moccasin: 0xffe4b5,
        navajowhite: 0xffdead,
        navy: 0x000080,
        oldlace: 0xfdf5e6,
        olive: 0x808000,
        olivedrab: 0x6b8e23,
        orange: 0xffa500,
        orangered: 0xff4500,
        orchid: 0xda70d6,
        palegoldenrod: 0xeee8aa,
        palegreen: 0x98fb98,
        paleturquoise: 0xafeeee,
        palevioletred: 0xdb7093,
        papayawhip: 0xffefd5,
        peachpuff: 0xffdab9,
        peru: 0xcd853f,
        pink: 0xffc0cb,
        plum: 0xdda0dd,
        powderblue: 0xb0e0e6,
        purple: 0x800080,
        rebeccapurple: 0x663399,
        red: 0xff0000,
        rosybrown: 0xbc8f8f,
        royalblue: 0x4169e1,
        saddlebrown: 0x8b4513,
        salmon: 0xfa8072,
        sandybrown: 0xf4a460,
        seagreen: 0x2e8b57,
        seashell: 0xfff5ee,
        sienna: 0xa0522d,
        silver: 0xc0c0c0,
        skyblue: 0x87ceeb,
        slateblue: 0x6a5acd,
        slategray: 0x708090,
        slategrey: 0x708090,
        snow: 0xfffafa,
        springgreen: 0x00ff7f,
        steelblue: 0x4682b4,
        tan: 0xd2b48c,
        teal: 0x008080,
        thistle: 0xd8bfd8,
        tomato: 0xff6347,
        turquoise: 0x40e0d0,
        violet: 0xee82ee,
        wheat: 0xf5deb3,
        white: 0xffffff,
        whitesmoke: 0xf5f5f5,
        yellow: 0xffff00,
        yellowgreen: 0x9acd32
    };
    define(Color, color, {
        copy(channels) {
            return Object.assign(new this.constructor, this, channels);
        },
        displayable() {
            return this.rgb().displayable();
        },
        hex: color_formatHex,
        formatHex: color_formatHex,
        formatHex8: color_formatHex8,
        formatHsl: color_formatHsl,
        formatRgb: color_formatRgb,
        toString: color_formatRgb
    });
    function color_formatHex() {
        return this.rgb().formatHex();
    }
    function color_formatHex8() {
        return this.rgb().formatHex8();
    }
    function color_formatHsl() {
        return hslConvert(this).formatHsl();
    }
    function color_formatRgb() {
        return this.rgb().formatRgb();
    }
    function color(format) {
        var m, l;
        format = (format + "").trim().toLowerCase();
        return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
            : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
                : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
                    : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
                        : null) // invalid hex
            : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
                : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
                    : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
                        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
                            : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
                                : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
                                    : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
                                        : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
                                            : null;
    }
    function rgbn(n) {
        return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
    }
    function rgba(r, g, b, a) {
        if (a <= 0)
            r = g = b = NaN;
        return new Rgb(r, g, b, a);
    }
    function rgbConvert(o) {
        if (!(o instanceof Color))
            o = color(o);
        if (!o)
            return new Rgb;
        o = o.rgb();
        return new Rgb(o.r, o.g, o.b, o.opacity);
    }
    function rgb(r, g, b, opacity) {
        return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
    }
    function Rgb(r, g, b, opacity) {
        this.r = +r;
        this.g = +g;
        this.b = +b;
        this.opacity = +opacity;
    }
    define(Rgb, rgb, extend(Color, {
        brighter(k) {
            k = k == null ? brighter : Math.pow(brighter, k);
            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
        },
        darker(k) {
            k = k == null ? darker : Math.pow(darker, k);
            return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
        },
        rgb() {
            return this;
        },
        clamp() {
            return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
        },
        displayable() {
            return (-0.5 <= this.r && this.r < 255.5)
                && (-0.5 <= this.g && this.g < 255.5)
                && (-0.5 <= this.b && this.b < 255.5)
                && (0 <= this.opacity && this.opacity <= 1);
        },
        hex: rgb_formatHex,
        formatHex: rgb_formatHex,
        formatHex8: rgb_formatHex8,
        formatRgb: rgb_formatRgb,
        toString: rgb_formatRgb
    }));
    function rgb_formatHex() {
        return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
    }
    function rgb_formatHex8() {
        return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
    }
    function rgb_formatRgb() {
        const a = clampa(this.opacity);
        return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
    }
    function clampa(opacity) {
        return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
    }
    function clampi(value) {
        return Math.max(0, Math.min(255, Math.round(value) || 0));
    }
    function hex(value) {
        value = clampi(value);
        return (value < 16 ? "0" : "") + value.toString(16);
    }
    function hsla(h, s, l, a) {
        if (a <= 0)
            h = s = l = NaN;
        else if (l <= 0 || l >= 1)
            h = s = NaN;
        else if (s <= 0)
            h = NaN;
        return new Hsl(h, s, l, a);
    }
    function hslConvert(o) {
        if (o instanceof Hsl)
            return new Hsl(o.h, o.s, o.l, o.opacity);
        if (!(o instanceof Color))
            o = color(o);
        if (!o)
            return new Hsl;
        if (o instanceof Hsl)
            return o;
        o = o.rgb();
        var r = o.r / 255, g = o.g / 255, b = o.b / 255, min = Math.min(r, g, b), max = Math.max(r, g, b), h = NaN, s = max - min, l = (max + min) / 2;
        if (s) {
            if (r === max)
                h = (g - b) / s + (g < b) * 6;
            else if (g === max)
                h = (b - r) / s + 2;
            else
                h = (r - g) / s + 4;
            s /= l < 0.5 ? max + min : 2 - max - min;
            h *= 60;
        }
        else {
            s = l > 0 && l < 1 ? 0 : h;
        }
        return new Hsl(h, s, l, o.opacity);
    }
    function hsl(h, s, l, opacity) {
        return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
    }
    function Hsl(h, s, l, opacity) {
        this.h = +h;
        this.s = +s;
        this.l = +l;
        this.opacity = +opacity;
    }
    define(Hsl, hsl, extend(Color, {
        brighter(k) {
            k = k == null ? brighter : Math.pow(brighter, k);
            return new Hsl(this.h, this.s, this.l * k, this.opacity);
        },
        darker(k) {
            k = k == null ? darker : Math.pow(darker, k);
            return new Hsl(this.h, this.s, this.l * k, this.opacity);
        },
        rgb() {
            var h = this.h % 360 + (this.h < 0) * 360, s = isNaN(h) || isNaN(this.s) ? 0 : this.s, l = this.l, m2 = l + (l < 0.5 ? l : 1 - l) * s, m1 = 2 * l - m2;
            return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
        },
        clamp() {
            return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
        },
        displayable() {
            return (0 <= this.s && this.s <= 1 || isNaN(this.s))
                && (0 <= this.l && this.l <= 1)
                && (0 <= this.opacity && this.opacity <= 1);
        },
        formatHsl() {
            const a = clampa(this.opacity);
            return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
        }
    }));
    function clamph(value) {
        value = (value || 0) % 360;
        return value < 0 ? value + 360 : value;
    }
    function clampt(value) {
        return Math.max(0, Math.min(1, value || 0));
    }
    /* From FvD 13.37, CSS Color Module Level 3 */
    function hsl2rgb(h, m1, m2) {
        return (h < 60 ? m1 + (m2 - m1) * h / 60
            : h < 180 ? m2
                : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
                    : m1) * 255;
    }
    var constant$1 = x => () => x;
    function linear(a, d) {
        return function (t) {
            return a + t * d;
        };
    }
    function exponential(a, b, y) {
        return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
            return Math.pow(a + t * b, y);
        };
    }
    function gamma(y) {
        return (y = +y) === 1 ? nogamma : function (a, b) {
            return b - a ? exponential(a, b, y) : constant$1(isNaN(a) ? b : a);
        };
    }
    function nogamma(a, b) {
        var d = b - a;
        return d ? linear(a, d) : constant$1(isNaN(a) ? b : a);
    }
    var interpolateRgb = (function rgbGamma(y) {
        var color = gamma(y);
        function rgb$1(start, end) {
            var r = color((start = rgb(start)).r, (end = rgb(end)).r), g = color(start.g, end.g), b = color(start.b, end.b), opacity = nogamma(start.opacity, end.opacity);
            return function (t) {
                start.r = r(t);
                start.g = g(t);
                start.b = b(t);
                start.opacity = opacity(t);
                return start + "";
            };
        }
        rgb$1.gamma = rgbGamma;
        return rgb$1;
    })(1);
    function numberArray(a, b) {
        if (!b)
            b = [];
        var n = a ? Math.min(b.length, a.length) : 0, c = b.slice(), i;
        return function (t) {
            for (i = 0; i < n; ++i)
                c[i] = a[i] * (1 - t) + b[i] * t;
            return c;
        };
    }
    function isNumberArray(x) {
        return ArrayBuffer.isView(x) && !(x instanceof DataView);
    }
    function genericArray(a, b) {
        var nb = b ? b.length : 0, na = a ? Math.min(nb, a.length) : 0, x = new Array(na), c = new Array(nb), i;
        for (i = 0; i < na; ++i)
            x[i] = interpolate$1(a[i], b[i]);
        for (; i < nb; ++i)
            c[i] = b[i];
        return function (t) {
            for (i = 0; i < na; ++i)
                c[i] = x[i](t);
            return c;
        };
    }
    function date(a, b) {
        var d = new Date;
        return a = +a, b = +b, function (t) {
            return d.setTime(a * (1 - t) + b * t), d;
        };
    }
    function interpolateNumber(a, b) {
        return a = +a, b = +b, function (t) {
            return a * (1 - t) + b * t;
        };
    }
    function object(a, b) {
        var i = {}, c = {}, k;
        if (a === null || typeof a !== "object")
            a = {};
        if (b === null || typeof b !== "object")
            b = {};
        for (k in b) {
            if (k in a) {
                i[k] = interpolate$1(a[k], b[k]);
            }
            else {
                c[k] = b[k];
            }
        }
        return function (t) {
            for (k in i)
                c[k] = i[k](t);
            return c;
        };
    }
    var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g, reB = new RegExp(reA.source, "g");
    function zero(b) {
        return function () {
            return b;
        };
    }
    function one(b) {
        return function (t) {
            return b(t) + "";
        };
    }
    function interpolateString(a, b) {
        var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b
        am, // current match in a
        bm, // current match in b
        bs, // string preceding current number in b, if any
        i = -1, // index in s
        s = [], // string constants and placeholders
        q = []; // number interpolators
        // Coerce inputs to strings.
        a = a + "", b = b + "";
        // Interpolate pairs of numbers in a & b.
        while ((am = reA.exec(a))
            && (bm = reB.exec(b))) {
            if ((bs = bm.index) > bi) { // a string precedes the next number in b
                bs = b.slice(bi, bs);
                if (s[i])
                    s[i] += bs; // coalesce with previous string
                else
                    s[++i] = bs;
            }
            if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match
                if (s[i])
                    s[i] += bm; // coalesce with previous string
                else
                    s[++i] = bm;
            }
            else { // interpolate non-matching numbers
                s[++i] = null;
                q.push({ i: i, x: interpolateNumber(am, bm) });
            }
            bi = reB.lastIndex;
        }
        // Add remains of b.
        if (bi < b.length) {
            bs = b.slice(bi);
            if (s[i])
                s[i] += bs; // coalesce with previous string
            else
                s[++i] = bs;
        }
        // Special optimization for only a single match.
        // Otherwise, interpolate each of the numbers and rejoin the string.
        return s.length < 2 ? (q[0]
            ? one(q[0].x)
            : zero(b))
            : (b = q.length, function (t) {
                for (var i = 0, o; i < b; ++i)
                    s[(o = q[i]).i] = o.x(t);
                return s.join("");
            });
    }
    function interpolate$1(a, b) {
        var t = typeof b, c;
        return b == null || t === "boolean" ? constant$1(b)
            : (t === "number" ? interpolateNumber
                : t === "string" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)
                    : b instanceof color ? interpolateRgb
                        : b instanceof Date ? date
                            : isNumberArray(b) ? numberArray
                                : Array.isArray(b) ? genericArray
                                    : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? object
                                        : interpolateNumber)(a, b);
    }
    var degrees = 180 / Math.PI;
    var identity$2 = {
        translateX: 0,
        translateY: 0,
        rotate: 0,
        skewX: 0,
        scaleX: 1,
        scaleY: 1
    };
    function decompose(a, b, c, d, e, f) {
        var scaleX, scaleY, skewX;
        if (scaleX = Math.sqrt(a * a + b * b))
            a /= scaleX, b /= scaleX;
        if (skewX = a * c + b * d)
            c -= a * skewX, d -= b * skewX;
        if (scaleY = Math.sqrt(c * c + d * d))
            c /= scaleY, d /= scaleY, skewX /= scaleY;
        if (a * d < b * c)
            a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
        return {
            translateX: e,
            translateY: f,
            rotate: Math.atan2(b, a) * degrees,
            skewX: Math.atan(skewX) * degrees,
            scaleX: scaleX,
            scaleY: scaleY
        };
    }
    var svgNode;
    /* eslint-disable no-undef */
    function parseCss(value) {
        const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
        return m.isIdentity ? identity$2 : decompose(m.a, m.b, m.c, m.d, m.e, m.f);
    }
    function parseSvg(value) {
        if (value == null)
            return identity$2;
        if (!svgNode)
            svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
        svgNode.setAttribute("transform", value);
        if (!(value = svgNode.transform.baseVal.consolidate()))
            return identity$2;
        value = value.matrix;
        return decompose(value.a, value.b, value.c, value.d, value.e, value.f);
    }
    function interpolateTransform(parse, pxComma, pxParen, degParen) {
        function pop(s) {
            return s.length ? s.pop() + " " : "";
        }
        function translate(xa, ya, xb, yb, s, q) {
            if (xa !== xb || ya !== yb) {
                var i = s.push("translate(", null, pxComma, null, pxParen);
                q.push({ i: i - 4, x: interpolateNumber(xa, xb) }, { i: i - 2, x: interpolateNumber(ya, yb) });
            }
            else if (xb || yb) {
                s.push("translate(" + xb + pxComma + yb + pxParen);
            }
        }
        function rotate(a, b, s, q) {
            if (a !== b) {
                if (a - b > 180)
                    b += 360;
                else if (b - a > 180)
                    a += 360; // shortest path
                q.push({ i: s.push(pop(s) + "rotate(", null, degParen) - 2, x: interpolateNumber(a, b) });
            }
            else if (b) {
                s.push(pop(s) + "rotate(" + b + degParen);
            }
        }
        function skewX(a, b, s, q) {
            if (a !== b) {
                q.push({ i: s.push(pop(s) + "skewX(", null, degParen) - 2, x: interpolateNumber(a, b) });
            }
            else if (b) {
                s.push(pop(s) + "skewX(" + b + degParen);
            }
        }
        function scale(xa, ya, xb, yb, s, q) {
            if (xa !== xb || ya !== yb) {
                var i = s.push(pop(s) + "scale(", null, ",", null, ")");
                q.push({ i: i - 4, x: interpolateNumber(xa, xb) }, { i: i - 2, x: interpolateNumber(ya, yb) });
            }
            else if (xb !== 1 || yb !== 1) {
                s.push(pop(s) + "scale(" + xb + "," + yb + ")");
            }
        }
        return function (a, b) {
            var s = [], // string constants and placeholders
            q = []; // number interpolators
            a = parse(a), b = parse(b);
            translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
            rotate(a.rotate, b.rotate, s, q);
            skewX(a.skewX, b.skewX, s, q);
            scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
            a = b = null; // gc
            return function (t) {
                var i = -1, n = q.length, o;
                while (++i < n)
                    s[(o = q[i]).i] = o.x(t);
                return s.join("");
            };
        };
    }
    var interpolateTransformCss = interpolateTransform(parseCss, "px, ", "px)", "deg)");
    var interpolateTransformSvg = interpolateTransform(parseSvg, ", ", ")", ")");
    var epsilon2 = 1e-12;
    function cosh(x) {
        return ((x = Math.exp(x)) + 1 / x) / 2;
    }
    function sinh(x) {
        return ((x = Math.exp(x)) - 1 / x) / 2;
    }
    function tanh(x) {
        return ((x = Math.exp(2 * x)) - 1) / (x + 1);
    }
    var interpolateZoom = (function zoomRho(rho, rho2, rho4) {
        // p0 = [ux0, uy0, w0]
        // p1 = [ux1, uy1, w1]
        function zoom(p0, p1) {
            var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;
            // Special case for u0 ≅ u1.
            if (d2 < epsilon2) {
                S = Math.log(w1 / w0) / rho;
                i = function (t) {
                    return [
                        ux0 + t * dx,
                        uy0 + t * dy,
                        w0 * Math.exp(rho * t * S)
                    ];
                };
            }
            // General case.
            else {
                var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1), b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
                S = (r1 - r0) / rho;
                i = function (t) {
                    var s = t * S, coshr0 = cosh(r0), u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
                    return [
                        ux0 + u * dx,
                        uy0 + u * dy,
                        w0 * coshr0 / cosh(rho * s + r0)
                    ];
                };
            }
            i.duration = S * 1000 * rho / Math.SQRT2;
            return i;
        }
        zoom.rho = function (_) {
            var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;
            return zoomRho(_1, _2, _4);
        };
        return zoom;
    })(Math.SQRT2, 2, 4);
    function tweenRemove(id, name) {
        var tween0, tween1;
        return function () {
            var schedule = set(this, id), tween = schedule.tween;
            // If this node shared tween with the previous node,
            // just assign the updated shared tween and we’re done!
            // Otherwise, copy-on-write.
            if (tween !== tween0) {
                tween1 = tween0 = tween;
                for (var i = 0, n = tween1.length; i < n; ++i) {
                    if (tween1[i].name === name) {
                        tween1 = tween1.slice();
                        tween1.splice(i, 1);
                        break;
                    }
                }
            }
            schedule.tween = tween1;
        };
    }
    function tweenFunction(id, name, value) {
        var tween0, tween1;
        if (typeof value !== "function")
            throw new Error;
        return function () {
            var schedule = set(this, id), tween = schedule.tween;
            // If this node shared tween with the previous node,
            // just assign the updated shared tween and we’re done!
            // Otherwise, copy-on-write.
            if (tween !== tween0) {
                tween1 = (tween0 = tween).slice();
                for (var t = { name: name, value: value }, i = 0, n = tween1.length; i < n; ++i) {
                    if (tween1[i].name === name) {
                        tween1[i] = t;
                        break;
                    }
                }
                if (i === n)
                    tween1.push(t);
            }
            schedule.tween = tween1;
        };
    }
    function transition_tween(name, value) {
        var id = this._id;
        name += "";
        if (arguments.length < 2) {
            var tween = get(this.node(), id).tween;
            for (var i = 0, n = tween.length, t; i < n; ++i) {
                if ((t = tween[i]).name === name) {
                    return t.value;
                }
            }
            return null;
        }
        return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
    }
    function tweenValue(transition, name, value) {
        var id = transition._id;
        transition.each(function () {
            var schedule = set(this, id);
            (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
        });
        return function (node) {
            return get(node, id).value[name];
        };
    }
    function interpolate(a, b) {
        var c;
        return (typeof b === "number" ? interpolateNumber
            : b instanceof color ? interpolateRgb
                : (c = color(b)) ? (b = c, interpolateRgb)
                    : interpolateString)(a, b);
    }
    function attrRemove(name) {
        return function () {
            this.removeAttribute(name);
        };
    }
    function attrRemoveNS(fullname) {
        return function () {
            this.removeAttributeNS(fullname.space, fullname.local);
        };
    }
    function attrConstant(name, interpolate, value1) {
        var string00, string1 = value1 + "", interpolate0;
        return function () {
            var string0 = this.getAttribute(name);
            return string0 === string1 ? null
                : string0 === string00 ? interpolate0
                    : interpolate0 = interpolate(string00 = string0, value1);
        };
    }
    function attrConstantNS(fullname, interpolate, value1) {
        var string00, string1 = value1 + "", interpolate0;
        return function () {
            var string0 = this.getAttributeNS(fullname.space, fullname.local);
            return string0 === string1 ? null
                : string0 === string00 ? interpolate0
                    : interpolate0 = interpolate(string00 = string0, value1);
        };
    }
    function attrFunction(name, interpolate, value) {
        var string00, string10, interpolate0;
        return function () {
            var string0, value1 = value(this), string1;
            if (value1 == null)
                return void this.removeAttribute(name);
            string0 = this.getAttribute(name);
            string1 = value1 + "";
            return string0 === string1 ? null
                : string0 === string00 && string1 === string10 ? interpolate0
                    : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
        };
    }
    function attrFunctionNS(fullname, interpolate, value) {
        var string00, string10, interpolate0;
        return function () {
            var string0, value1 = value(this), string1;
            if (value1 == null)
                return void this.removeAttributeNS(fullname.space, fullname.local);
            string0 = this.getAttributeNS(fullname.space, fullname.local);
            string1 = value1 + "";
            return string0 === string1 ? null
                : string0 === string00 && string1 === string10 ? interpolate0
                    : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
        };
    }
    function transition_attr(name, value) {
        var fullname = namespace(name), i = fullname === "transform" ? interpolateTransformSvg : interpolate;
        return this.attrTween(name, typeof value === "function"
            ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, "attr." + name, value))
            : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)
                : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
    }
    function attrInterpolate(name, i) {
        return function (t) {
            this.setAttribute(name, i.call(this, t));
        };
    }
    function attrInterpolateNS(fullname, i) {
        return function (t) {
            this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
        };
    }
    function attrTweenNS(fullname, value) {
        var t0, i0;
        function tween() {
            var i = value.apply(this, arguments);
            if (i !== i0)
                t0 = (i0 = i) && attrInterpolateNS(fullname, i);
            return t0;
        }
        tween._value = value;
        return tween;
    }
    function attrTween(name, value) {
        var t0, i0;
        function tween() {
            var i = value.apply(this, arguments);
            if (i !== i0)
                t0 = (i0 = i) && attrInterpolate(name, i);
            return t0;
        }
        tween._value = value;
        return tween;
    }
    function transition_attrTween(name, value) {
        var key = "attr." + name;
        if (arguments.length < 2)
            return (key = this.tween(key)) && key._value;
        if (value == null)
            return this.tween(key, null);
        if (typeof value !== "function")
            throw new Error;
        var fullname = namespace(name);
        return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
    }
    function delayFunction(id, value) {
        return function () {
            init(this, id).delay = +value.apply(this, arguments);
        };
    }
    function delayConstant(id, value) {
        return value = +value, function () {
            init(this, id).delay = value;
        };
    }
    function transition_delay(value) {
        var id = this._id;
        return arguments.length
            ? this.each((typeof value === "function"
                ? delayFunction
                : delayConstant)(id, value))
            : get(this.node(), id).delay;
    }
    function durationFunction(id, value) {
        return function () {
            set(this, id).duration = +value.apply(this, arguments);
        };
    }
    function durationConstant(id, value) {
        return value = +value, function () {
            set(this, id).duration = value;
        };
    }
    function transition_duration(value) {
        var id = this._id;
        return arguments.length
            ? this.each((typeof value === "function"
                ? durationFunction
                : durationConstant)(id, value))
            : get(this.node(), id).duration;
    }
    function easeConstant(id, value) {
        if (typeof value !== "function")
            throw new Error;
        return function () {
            set(this, id).ease = value;
        };
    }
    function transition_ease(value) {
        var id = this._id;
        return arguments.length
            ? this.each(easeConstant(id, value))
            : get(this.node(), id).ease;
    }
    function easeVarying(id, value) {
        return function () {
            var v = value.apply(this, arguments);
            if (typeof v !== "function")
                throw new Error;
            set(this, id).ease = v;
        };
    }
    function transition_easeVarying(value) {
        if (typeof value !== "function")
            throw new Error;
        return this.each(easeVarying(this._id, value));
    }
    function transition_filter(match) {
        if (typeof match !== "function")
            match = matcher(match);
        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
                if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
                    subgroup.push(node);
                }
            }
        }
        return new Transition(subgroups, this._parents, this._name, this._id);
    }
    function transition_merge(transition) {
        if (transition._id !== this._id)
            throw new Error;
        for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
            for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
                if (node = group0[i] || group1[i]) {
                    merge[i] = node;
                }
            }
        }
        for (; j < m0; ++j) {
            merges[j] = groups0[j];
        }
        return new Transition(merges, this._parents, this._name, this._id);
    }
    function start(name) {
        return (name + "").trim().split(/^|\s+/).every(function (t) {
            var i = t.indexOf(".");
            if (i >= 0)
                t = t.slice(0, i);
            return !t || t === "start";
        });
    }
    function onFunction(id, name, listener) {
        var on0, on1, sit = start(name) ? init : set;
        return function () {
            var schedule = sit(this, id), on = schedule.on;
            // If this node shared a dispatch with the previous node,
            // just assign the updated shared dispatch and we’re done!
            // Otherwise, copy-on-write.
            if (on !== on0)
                (on1 = (on0 = on).copy()).on(name, listener);
            schedule.on = on1;
        };
    }
    function transition_on(name, listener) {
        var id = this._id;
        return arguments.length < 2
            ? get(this.node(), id).on.on(name)
            : this.each(onFunction(id, name, listener));
    }
    function removeFunction(id) {
        return function () {
            var parent = this.parentNode;
            for (var i in this.__transition)
                if (+i !== id)
                    return;
            if (parent)
                parent.removeChild(this);
        };
    }
    function transition_remove() {
        return this.on("end.remove", removeFunction(this._id));
    }
    function transition_select(select) {
        var name = this._name, id = this._id;
        if (typeof select !== "function")
            select = selector(select);
        for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
                if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
                    if ("__data__" in node)
                        subnode.__data__ = node.__data__;
                    subgroup[i] = subnode;
                    schedule(subgroup[i], name, id, i, subgroup, get(node, id));
                }
            }
        }
        return new Transition(subgroups, this._parents, name, id);
    }
    function transition_selectAll(select) {
        var name = this._name, id = this._id;
        if (typeof select !== "function")
            select = selectorAll(select);
        for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
                if (node = group[i]) {
                    for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {
                        if (child = children[k]) {
                            schedule(child, name, id, k, children, inherit);
                        }
                    }
                    subgroups.push(children);
                    parents.push(node);
                }
            }
        }
        return new Transition(subgroups, parents, name, id);
    }
    var Selection = selection.prototype.constructor;
    function transition_selection() {
        return new Selection(this._groups, this._parents);
    }
    function styleNull(name, interpolate) {
        var string00, string10, interpolate0;
        return function () {
            var string0 = styleValue(this, name), string1 = (this.style.removeProperty(name), styleValue(this, name));
            return string0 === string1 ? null
                : string0 === string00 && string1 === string10 ? interpolate0
                    : interpolate0 = interpolate(string00 = string0, string10 = string1);
        };
    }
    function styleRemove(name) {
        return function () {
            this.style.removeProperty(name);
        };
    }
    function styleConstant(name, interpolate, value1) {
        var string00, string1 = value1 + "", interpolate0;
        return function () {
            var string0 = styleValue(this, name);
            return string0 === string1 ? null
                : string0 === string00 ? interpolate0
                    : interpolate0 = interpolate(string00 = string0, value1);
        };
    }
    function styleFunction(name, interpolate, value) {
        var string00, string10, interpolate0;
        return function () {
            var string0 = styleValue(this, name), value1 = value(this), string1 = value1 + "";
            if (value1 == null)
                string1 = value1 = (this.style.removeProperty(name), styleValue(this, name));
            return string0 === string1 ? null
                : string0 === string00 && string1 === string10 ? interpolate0
                    : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
        };
    }
    function styleMaybeRemove(id, name) {
        var on0, on1, listener0, key = "style." + name, event = "end." + key, remove;
        return function () {
            var schedule = set(this, id), on = schedule.on, listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;
            // If this node shared a dispatch with the previous node,
            // just assign the updated shared dispatch and we’re done!
            // Otherwise, copy-on-write.
            if (on !== on0 || listener0 !== listener)
                (on1 = (on0 = on).copy()).on(event, listener0 = listener);
            schedule.on = on1;
        };
    }
    function transition_style(name, value, priority) {
        var i = (name += "") === "transform" ? interpolateTransformCss : interpolate;
        return value == null ? this
            .styleTween(name, styleNull(name, i))
            .on("end.style." + name, styleRemove(name))
            : typeof value === "function" ? this
                .styleTween(name, styleFunction(name, i, tweenValue(this, "style." + name, value)))
                .each(styleMaybeRemove(this._id, name))
                : this
                    .styleTween(name, styleConstant(name, i, value), priority)
                    .on("end.style." + name, null);
    }
    function styleInterpolate(name, i, priority) {
        return function (t) {
            this.style.setProperty(name, i.call(this, t), priority);
        };
    }
    function styleTween(name, value, priority) {
        var t, i0;
        function tween() {
            var i = value.apply(this, arguments);
            if (i !== i0)
                t = (i0 = i) && styleInterpolate(name, i, priority);
            return t;
        }
        tween._value = value;
        return tween;
    }
    function transition_styleTween(name, value, priority) {
        var key = "style." + (name += "");
        if (arguments.length < 2)
            return (key = this.tween(key)) && key._value;
        if (value == null)
            return this.tween(key, null);
        if (typeof value !== "function")
            throw new Error;
        return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
    }
    function textConstant(value) {
        return function () {
            this.textContent = value;
        };
    }
    function textFunction(value) {
        return function () {
            var value1 = value(this);
            this.textContent = value1 == null ? "" : value1;
        };
    }
    function transition_text(value) {
        return this.tween("text", typeof value === "function"
            ? textFunction(tweenValue(this, "text", value))
            : textConstant(value == null ? "" : value + ""));
    }
    function textInterpolate(i) {
        return function (t) {
            this.textContent = i.call(this, t);
        };
    }
    function textTween(value) {
        var t0, i0;
        function tween() {
            var i = value.apply(this, arguments);
            if (i !== i0)
                t0 = (i0 = i) && textInterpolate(i);
            return t0;
        }
        tween._value = value;
        return tween;
    }
    function transition_textTween(value) {
        var key = "text";
        if (arguments.length < 1)
            return (key = this.tween(key)) && key._value;
        if (value == null)
            return this.tween(key, null);
        if (typeof value !== "function")
            throw new Error;
        return this.tween(key, textTween(value));
    }
    function transition_transition() {
        var name = this._name, id0 = this._id, id1 = newId();
        for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
                if (node = group[i]) {
                    var inherit = get(node, id0);
                    schedule(node, name, id1, i, group, {
                        time: inherit.time + inherit.delay + inherit.duration,
                        delay: 0,
                        duration: inherit.duration,
                        ease: inherit.ease
                    });
                }
            }
        }
        return new Transition(groups, this._parents, name, id1);
    }
    function transition_end() {
        var on0, on1, that = this, id = that._id, size = that.size();
        return new Promise(function (resolve, reject) {
            var cancel = { value: reject }, end = { value: function () { if (--size === 0)
                    resolve(); } };
            that.each(function () {
                var schedule = set(this, id), on = schedule.on;
                // If this node shared a dispatch with the previous node,
                // just assign the updated shared dispatch and we’re done!
                // Otherwise, copy-on-write.
                if (on !== on0) {
                    on1 = (on0 = on).copy();
                    on1._.cancel.push(cancel);
                    on1._.interrupt.push(cancel);
                    on1._.end.push(end);
                }
                schedule.on = on1;
            });
            // The selection was empty, resolve end immediately
            if (size === 0)
                resolve();
        });
    }
    var id = 0;
    function Transition(groups, parents, name, id) {
        this._groups = groups;
        this._parents = parents;
        this._name = name;
        this._id = id;
    }
    function transition$1(name) {
        return selection().transition(name);
    }
    function newId() {
        return ++id;
    }
    var selection_prototype = selection.prototype;
    Transition.prototype = transition$1.prototype = {
        constructor: Transition,
        select: transition_select,
        selectAll: transition_selectAll,
        selectChild: selection_prototype.selectChild,
        selectChildren: selection_prototype.selectChildren,
        filter: transition_filter,
        merge: transition_merge,
        selection: transition_selection,
        transition: transition_transition,
        call: selection_prototype.call,
        nodes: selection_prototype.nodes,
        node: selection_prototype.node,
        size: selection_prototype.size,
        empty: selection_prototype.empty,
        each: selection_prototype.each,
        on: transition_on,
        attr: transition_attr,
        attrTween: transition_attrTween,
        style: transition_style,
        styleTween: transition_styleTween,
        text: transition_text,
        textTween: transition_textTween,
        remove: transition_remove,
        tween: transition_tween,
        delay: transition_delay,
        duration: transition_duration,
        ease: transition_ease,
        easeVarying: transition_easeVarying,
        end: transition_end,
        [Symbol.iterator]: selection_prototype[Symbol.iterator]
    };
    function cubicInOut(t) {
        return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
    }
    var defaultTiming = {
        time: null,
        delay: 0,
        duration: 250,
        ease: cubicInOut
    };
    function inherit(node, id) {
        var timing;
        while (!(timing = node.__transition) || !(timing = timing[id])) {
            if (!(node = node.parentNode)) {
                throw new Error(`transition ${id} not found`);
            }
        }
        return timing;
    }
    function selection_transition(name) {
        var id, timing;
        if (name instanceof Transition) {
            id = name._id, name = name._name;
        }
        else {
            id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + "";
        }
        for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
            for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
                if (node = group[i]) {
                    schedule(node, name, id, i, group, timing || inherit(node, id));
                }
            }
        }
        return new Transition(groups, this._parents, name, id);
    }
    selection.prototype.interrupt = selection_interrupt;
    selection.prototype.transition = selection_transition;
    var root = [null];
    function d3_active(node, name) {
        var schedules = node.__transition, schedule, i;
        if (schedules) {
            name = name == null ? null : name + "";
            for (i in schedules) {
                if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {
                    return new Transition([[node]], root, name, +i);
                }
            }
        }
        return null;
    }
    // These are typically used in conjunction with noevent to ensure that we can
    // preventDefault on the event.
    const nonpassivecapture = { capture: true, passive: false };
    function noevent$1(event) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    function dragDisable(view) {
        var root = view.document.documentElement, selection = select(view).on("dragstart.drag", noevent$1, nonpassivecapture);
        if ("onselectstart" in root) {
            selection.on("selectstart.drag", noevent$1, nonpassivecapture);
        }
        else {
            root.__noselect = root.style.MozUserSelect;
            root.style.MozUserSelect = "none";
        }
    }
    function yesdrag(view, noclick) {
        var root = view.document.documentElement, selection = select(view).on("dragstart.drag", null);
        if (noclick) {
            selection.on("click.drag", noevent$1, nonpassivecapture);
            setTimeout(function () { selection.on("click.drag", null); }, 0);
        }
        if ("onselectstart" in root) {
            selection.on("selectstart.drag", null);
        }
        else {
            root.style.MozUserSelect = root.__noselect;
            delete root.__noselect;
        }
    }
    var constant = x => () => x;
    function ZoomEvent(type, { sourceEvent, target, transform, dispatch }) {
        Object.defineProperties(this, {
            type: { value: type, enumerable: true, configurable: true },
            sourceEvent: { value: sourceEvent, enumerable: true, configurable: true },
            target: { value: target, enumerable: true, configurable: true },
            transform: { value: transform, enumerable: true, configurable: true },
            _: { value: dispatch }
        });
    }
    function Transform(k, x, y) {
        this.k = k;
        this.x = x;
        this.y = y;
    }
    Transform.prototype = {
        constructor: Transform,
        scale: function (k) {
            return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
        },
        translate: function (x, y) {
            return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
        },
        apply: function (point) {
            return [point[0] * this.k + this.x, point[1] * this.k + this.y];
        },
        applyX: function (x) {
            return x * this.k + this.x;
        },
        applyY: function (y) {
            return y * this.k + this.y;
        },
        invert: function (location) {
            return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
        },
        invertX: function (x) {
            return (x - this.x) / this.k;
        },
        invertY: function (y) {
            return (y - this.y) / this.k;
        },
        rescaleX: function (x) {
            return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
        },
        rescaleY: function (y) {
            return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
        },
        toString: function () {
            return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
        }
    };
    var identity$1 = new Transform(1, 0, 0);
    transform.prototype = Transform.prototype;
    function transform(node) {
        while (!node.__zoom)
            if (!(node = node.parentNode))
                return identity$1;
        return node.__zoom;
    }
    function nopropagation(event) {
        event.stopImmediatePropagation();
    }
    function noevent(event) {
        event.preventDefault();
        event.stopImmediatePropagation();
    }
    // Ignore right-click, since that should open the context menu.
    // except for pinch-to-zoom, which is sent as a wheel+ctrlKey event
    function defaultFilter(event) {
        return (!event.ctrlKey || event.type === 'wheel') && !event.button;
    }
    function defaultExtent() {
        var e = this;
        if (e instanceof SVGElement) {
            e = e.ownerSVGElement || e;
            if (e.hasAttribute("viewBox")) {
                e = e.viewBox.baseVal;
                return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
            }
            return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
        }
        return [[0, 0], [e.clientWidth, e.clientHeight]];
    }
    function defaultTransform() {
        return this.__zoom || identity$1;
    }
    function defaultWheelDelta(event) {
        return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
    }
    function defaultTouchable() {
        return navigator.maxTouchPoints || ("ontouchstart" in this);
    }
    function defaultConstrain(transform, extent, translateExtent) {
        var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0], dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0], dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1], dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
        return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
    }
    function zoom$1() {
        var filter = defaultFilter, extent = defaultExtent, constrain = defaultConstrain, wheelDelta = defaultWheelDelta, touchable = defaultTouchable, scaleExtent = [0, Infinity], translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]], duration = 250, interpolate = interpolateZoom, listeners = dispatch("start", "zoom", "end"), touchstarting, touchfirst, touchending, touchDelay = 500, wheelDelay = 150, clickDistance2 = 0, tapDistance = 10;
        function zoom(selection) {
            selection
                .property("__zoom", defaultTransform)
                .on("wheel.zoom", wheeled, { passive: false })
                .on("mousedown.zoom", mousedowned)
                .on("dblclick.zoom", dblclicked)
                .filter(touchable)
                .on("touchstart.zoom", touchstarted)
                .on("touchmove.zoom", touchmoved)
                .on("touchend.zoom touchcancel.zoom", touchended)
                .style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
        }
        zoom.transform = function (collection, transform, point, event) {
            var selection = collection.selection ? collection.selection() : collection;
            selection.property("__zoom", defaultTransform);
            if (collection !== selection) {
                schedule(collection, transform, point, event);
            }
            else {
                selection.interrupt().each(function () {
                    gesture(this, arguments)
                        .event(event)
                        .start()
                        .zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform)
                        .end();
                });
            }
        };
        zoom.scaleBy = function (selection, k, p, event) {
            zoom.scaleTo(selection, function () {
                var k0 = this.__zoom.k, k1 = typeof k === "function" ? k.apply(this, arguments) : k;
                return k0 * k1;
            }, p, event);
        };
        zoom.scaleTo = function (selection, k, p, event) {
            zoom.transform(selection, function () {
                var e = extent.apply(this, arguments), t0 = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p, p1 = t0.invert(p0), k1 = typeof k === "function" ? k.apply(this, arguments) : k;
                return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
            }, p, event);
        };
        zoom.translateBy = function (selection, x, y, event) {
            zoom.transform(selection, function () {
                return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
            }, null, event);
        };
        zoom.translateTo = function (selection, x, y, p, event) {
            zoom.transform(selection, function () {
                var e = extent.apply(this, arguments), t = this.__zoom, p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
                return constrain(identity$1.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
            }, p, event);
        };
        function scale(transform, k) {
            k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
            return k === transform.k ? transform : new Transform(k, transform.x, transform.y);
        }
        function translate(transform, p0, p1) {
            var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;
            return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);
        }
        function centroid(extent) {
            return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
        }
        function schedule(transition, transform, point, event) {
            transition
                .on("start.zoom", function () { gesture(this, arguments).event(event).start(); })
                .on("interrupt.zoom end.zoom", function () { gesture(this, arguments).event(event).end(); })
                .tween("zoom", function () {
                var that = this, args = arguments, g = gesture(that, args).event(event), e = extent.apply(that, args), p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point, w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]), a = that.__zoom, b = typeof transform === "function" ? transform.apply(that, args) : transform, i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
                return function (t) {
                    if (t === 1)
                        t = b; // Avoid rounding error on end.
                    else {
                        var l = i(t), k = w / l[2];
                        t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
                    }
                    g.zoom(null, t);
                };
            });
        }
        function gesture(that, args, clean) {
            return (!clean && that.__zooming) || new Gesture(that, args);
        }
        function Gesture(that, args) {
            this.that = that;
            this.args = args;
            this.active = 0;
            this.sourceEvent = null;
            this.extent = extent.apply(that, args);
            this.taps = 0;
        }
        Gesture.prototype = {
            event: function (event) {
                if (event)
                    this.sourceEvent = event;
                return this;
            },
            start: function () {
                if (++this.active === 1) {
                    this.that.__zooming = this;
                    this.emit("start");
                }
                return this;
            },
            zoom: function (key, transform) {
                if (this.mouse && key !== "mouse")
                    this.mouse[1] = transform.invert(this.mouse[0]);
                if (this.touch0 && key !== "touch")
                    this.touch0[1] = transform.invert(this.touch0[0]);
                if (this.touch1 && key !== "touch")
                    this.touch1[1] = transform.invert(this.touch1[0]);
                this.that.__zoom = transform;
                this.emit("zoom");
                return this;
            },
            end: function () {
                if (--this.active === 0) {
                    delete this.that.__zooming;
                    this.emit("end");
                }
                return this;
            },
            emit: function (type) {
                var d = select(this.that).datum();
                listeners.call(type, this.that, new ZoomEvent(type, {
                    sourceEvent: this.sourceEvent,
                    target: zoom,
                    type,
                    transform: this.that.__zoom,
                    dispatch: listeners
                }), d);
            }
        };
        function wheeled(event, ...args) {
            if (!filter.apply(this, arguments))
                return;
            var g = gesture(this, args).event(event), t = this.__zoom, k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))), p = pointer(event);
            // If the mouse is in the same location as before, reuse it.
            // If there were recent wheel events, reset the wheel idle timeout.
            if (g.wheel) {
                if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
                    g.mouse[1] = t.invert(g.mouse[0] = p);
                }
                clearTimeout(g.wheel);
            }
            // If this wheel event won’t trigger a transform change, ignore it.
            else if (t.k === k)
                return;
            // Otherwise, capture the mouse point and location at the start.
            else {
                g.mouse = [p, t.invert(p)];
                interrupt(this);
                g.start();
            }
            noevent(event);
            g.wheel = setTimeout(wheelidled, wheelDelay);
            g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));
            function wheelidled() {
                g.wheel = null;
                g.end();
            }
        }
        function mousedowned(event, ...args) {
            if (touchending || !filter.apply(this, arguments))
                return;
            var currentTarget = event.currentTarget, g = gesture(this, args, true).event(event), v = select(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true), p = pointer(event, currentTarget), x0 = event.clientX, y0 = event.clientY;
            dragDisable(event.view);
            nopropagation(event);
            g.mouse = [p, this.__zoom.invert(p)];
            interrupt(this);
            g.start();
            function mousemoved(event) {
                noevent(event);
                if (!g.moved) {
                    var dx = event.clientX - x0, dy = event.clientY - y0;
                    g.moved = dx * dx + dy * dy > clickDistance2;
                }
                g.event(event)
                    .zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
            }
            function mouseupped(event) {
                v.on("mousemove.zoom mouseup.zoom", null);
                yesdrag(event.view, g.moved);
                noevent(event);
                g.event(event).end();
            }
        }
        function dblclicked(event, ...args) {
            if (!filter.apply(this, arguments))
                return;
            var t0 = this.__zoom, p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this), p1 = t0.invert(p0), k1 = t0.k * (event.shiftKey ? 0.5 : 2), t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);
            noevent(event);
            if (duration > 0)
                select(this).transition().duration(duration).call(schedule, t1, p0, event);
            else
                select(this).call(zoom.transform, t1, p0, event);
        }
        function touchstarted(event, ...args) {
            if (!filter.apply(this, arguments))
                return;
            var touches = event.touches, n = touches.length, g = gesture(this, args, event.changedTouches.length === n).event(event), started, i, t, p;
            nopropagation(event);
            for (i = 0; i < n; ++i) {
                t = touches[i], p = pointer(t, this);
                p = [p, this.__zoom.invert(p), t.identifier];
                if (!g.touch0)
                    g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;
                else if (!g.touch1 && g.touch0[2] !== p[2])
                    g.touch1 = p, g.taps = 0;
            }
            if (touchstarting)
                touchstarting = clearTimeout(touchstarting);
            if (started) {
                if (g.taps < 2)
                    touchfirst = p[0], touchstarting = setTimeout(function () { touchstarting = null; }, touchDelay);
                interrupt(this);
                g.start();
            }
        }
        function touchmoved(event, ...args) {
            if (!this.__zooming)
                return;
            var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t, p, l;
            noevent(event);
            for (i = 0; i < n; ++i) {
                t = touches[i], p = pointer(t, this);
                if (g.touch0 && g.touch0[2] === t.identifier)
                    g.touch0[0] = p;
                else if (g.touch1 && g.touch1[2] === t.identifier)
                    g.touch1[0] = p;
            }
            t = g.that.__zoom;
            if (g.touch1) {
                var p0 = g.touch0[0], l0 = g.touch0[1], p1 = g.touch1[0], l1 = g.touch1[1], dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp, dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
                t = scale(t, Math.sqrt(dp / dl));
                p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
                l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
            }
            else if (g.touch0)
                p = g.touch0[0], l = g.touch0[1];
            else
                return;
            g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
        }
        function touchended(event, ...args) {
            if (!this.__zooming)
                return;
            var g = gesture(this, args).event(event), touches = event.changedTouches, n = touches.length, i, t;
            nopropagation(event);
            if (touchending)
                clearTimeout(touchending);
            touchending = setTimeout(function () { touchending = null; }, touchDelay);
            for (i = 0; i < n; ++i) {
                t = touches[i];
                if (g.touch0 && g.touch0[2] === t.identifier)
                    delete g.touch0;
                else if (g.touch1 && g.touch1[2] === t.identifier)
                    delete g.touch1;
            }
            if (g.touch1 && !g.touch0)
                g.touch0 = g.touch1, delete g.touch1;
            if (g.touch0)
                g.touch0[1] = this.__zoom.invert(g.touch0[0]);
            else {
                g.end();
                // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.
                if (g.taps === 2) {
                    t = pointer(t, this);
                    if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
                        var p = select(this).on("dblclick.zoom");
                        if (p)
                            p.apply(this, arguments);
                    }
                }
            }
        }
        zoom.wheelDelta = function (_) {
            return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : constant(+_), zoom) : wheelDelta;
        };
        zoom.filter = function (_) {
            return arguments.length ? (filter = typeof _ === "function" ? _ : constant(!!_), zoom) : filter;
        };
        zoom.touchable = function (_) {
            return arguments.length ? (touchable = typeof _ === "function" ? _ : constant(!!_), zoom) : touchable;
        };
        zoom.extent = function (_) {
            return arguments.length ? (extent = typeof _ === "function" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
        };
        zoom.scaleExtent = function (_) {
            return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
        };
        zoom.translateExtent = function (_) {
            return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
        };
        zoom.constrain = function (_) {
            return arguments.length ? (constrain = _, zoom) : constrain;
        };
        zoom.duration = function (_) {
            return arguments.length ? (duration = +_, zoom) : duration;
        };
        zoom.interpolate = function (_) {
            return arguments.length ? (interpolate = _, zoom) : interpolate;
        };
        zoom.on = function () {
            var value = listeners.on.apply(listeners, arguments);
            return value === listeners ? zoom : value;
        };
        zoom.clickDistance = function (_) {
            return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
        };
        zoom.tapDistance = function (_) {
            return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
        };
        return zoom;
    }
    function extractElementData(element) {
        var datum = {};
        var tag = element.node().nodeName;
        datum.tag = tag;
        if (tag == '#text') {
            datum.text = element.text();
        }
        else if (tag == '#comment') {
            datum.comment = element.text();
        }
        datum.attributes = {};
        var attributes = element.node().attributes;
        if (attributes) {
            for (var i = 0; i < attributes.length; i++) {
                var attribute = attributes[i];
                var name = attribute.name;
                var value = attribute.value;
                datum.attributes[name] = value;
            }
        }
        var transform = element.node().transform;
        if (transform && transform.baseVal.numberOfItems != 0) {
            var matrix = transform.baseVal.consolidate().matrix;
            datum.translation = { x: matrix.e, y: matrix.f };
            datum.scale = matrix.a;
        }
        if (tag == 'ellipse') {
            datum.center = {
                x: datum.attributes.cx,
                y: datum.attributes.cy,
            };
        }
        if (tag == 'polygon') {
            var points = element.attr('points').split(' ');
            var x = points.map(function (p) { return p.split(',')[0]; });
            var y = points.map(function (p) { return p.split(',')[1]; });
            var xmin = Math.min.apply(null, x);
            var xmax = Math.max.apply(null, x);
            var ymin = Math.min.apply(null, y);
            var ymax = Math.max.apply(null, y);
            var bbox = {
                x: xmin,
                y: ymin,
                width: xmax - xmin,
                height: ymax - ymin,
            };
            datum.bbox = bbox;
            datum.center = {
                x: (xmin + xmax) / 2,
                y: (ymin + ymax) / 2,
            };
        }
        if (tag == 'path') {
            var d = element.attr('d');
            var points = d.split(/[A-Z ]/);
            points.shift();
            var x = points.map(function (p) { return +p.split(',')[0]; });
            var y = points.map(function (p) { return +p.split(',')[1]; });
            var xmin = Math.min.apply(null, x);
            var xmax = Math.max.apply(null, x);
            var ymin = Math.min.apply(null, y);
            var ymax = Math.max.apply(null, y);
            var bbox = {
                x: xmin,
                y: ymin,
                width: xmax - xmin,
                height: ymax - ymin,
            };
            datum.bbox = bbox;
            datum.center = {
                x: (xmin + xmax) / 2,
                y: (ymin + ymax) / 2,
            };
            datum.totalLength = element.node().getTotalLength();
        }
        if (tag == 'text') {
            datum.center = {
                x: element.attr('x'),
                y: element.attr('y'),
            };
        }
        if (tag == '#text') {
            datum.text = element.text();
        }
        else if (tag == '#comment') {
            datum.comment = element.text();
        }
        return datum;
    }
    function extractAllElementsData(element) {
        var datum = extractElementData(element);
        datum.children = [];
        var children = selectAll(element.node().childNodes);
        children.each(function () {
            var childData = extractAllElementsData(select(this));
            childData.parent = datum;
            datum.children.push(childData);
        });
        return datum;
    }
    function createElement(data) {
        if (data.tag == '#text') {
            return document.createTextNode("");
        }
        else if (data.tag == '#comment') {
            return document.createComment(data.comment);
        }
        else {
            return document.createElementNS('http://www.w3.org/2000/svg', data.tag);
        }
    }
    function createElementWithAttributes(data) {
        var elementNode = createElement(data);
        var element = select(elementNode);
        var attributes = data.attributes;
        for (var attributeName of Object.keys(attributes)) {
            var attributeValue = attributes[attributeName];
            element.attr(attributeName, attributeValue);
        }
        return elementNode;
    }
    function replaceElement(element, data) {
        var parent = select(element.node().parentNode);
        var newElementNode = createElementWithAttributes(data);
        var newElement = parent.insert(function () {
            return newElementNode;
        }, function () {
            return element.node();
        });
        element.remove();
        return newElement;
    }
    function insertElementData(element, datum) {
        element.datum(datum);
        element.data([datum], function (d) {
            return d.key;
        });
    }
    function insertAllElementsData(element, datum) {
        insertElementData(element, datum);
        var children = selectAll(element.node().childNodes);
        children.each(function (d, i) {
            insertAllElementsData(select(this), datum.children[i]);
        });
    }
    function insertChildren(element, index) {
        var children = element.selectAll(function () {
            return element.node().childNodes;
        });
        children = children
            .data(function (d) {
            return d.children;
        }, function (d) {
            return d.tag + '-' + index;
        });
        var childrenEnter = children
            .enter()
            .append(function (d) {
            return createElement(d);
        });
        var childrenExit = children
            .exit();
        childrenExit = childrenExit
            .remove();
        children = childrenEnter
            .merge(children);
        var childTagIndexes = {};
        children.each(function (childData) {
            var childTag = childData.tag;
            if (childTagIndexes[childTag] == null) {
                childTagIndexes[childTag] = 0;
            }
            var childIndex = childTagIndexes[childTag]++;
            attributeElement.call(this, childData, childIndex);
        });
    }
    function attributeElement(data, index = 0) {
        var element = select(this);
        data.tag;
        var attributes = data.attributes;
        var currentAttributes = element.node().attributes;
        if (currentAttributes) {
            for (var i = 0; i < currentAttributes.length; i++) {
                var currentAttribute = currentAttributes[i];
                var name = currentAttribute.name;
                if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {
                    var namespaceURIParts = currentAttribute.namespaceURI.split('/');
                    var namespace = namespaceURIParts[namespaceURIParts.length - 1];
                    name = namespace + ':' + name;
                }
                if (!(name in attributes)) {
                    attributes[name] = null;
                }
            }
        }
        for (var attributeName of Object.keys(attributes)) {
            element
                .attr(attributeName, attributes[attributeName]);
        }
        if (data.text) {
            element
                .text(data.text);
        }
        insertChildren(element, index);
    }
    function zoom(enable) {
        this._options.zoom = enable;
        if (this._options.zoom && !this._zoomBehavior) {
            createZoomBehavior.call(this);
        }
        else if (!this._options.zoom && this._zoomBehavior) {
            this._zoomSelection.on(".zoom", null);
            this._zoomBehavior = null;
        }
        return this;
    }
    function createZoomBehavior() {
        var graphvizInstance = this;
        function zoomed(event) {
            var g = select(svg.node().querySelector("g"));
            g.attr('transform', event.transform);
            graphvizInstance._dispatch.call('zoom', graphvizInstance);
        }
        var root = this._selection;
        var svg = select(root.node().querySelector("svg"));
        if (svg.size() == 0) {
            return this;
        }
        this._zoomSelection = svg;
        var zoomBehavior = zoom$1()
            .scaleExtent(this._options.zoomScaleExtent)
            .translateExtent(this._options.zoomTranslateExtent)
            .interpolate(interpolate$1)
            .on("zoom", zoomed);
        this._zoomBehavior = zoomBehavior;
        var g = select(svg.node().querySelector("g"));
        svg.call(zoomBehavior);
        if (!this._active) {
            translateZoomBehaviorTransform.call(this, g);
        }
        this._originalTransform = transform(svg.node());
        return this;
    }
    function getTranslatedZoomTransform(selection) {
        // Get the current zoom transform for the top level svg and
        // translate it uniformly with the given selection, using the
        // difference between the translation specified in the selection's
        // data and it's saved previous translation. The selection is
        // normally the top level g element of the graph.
        var oldTranslation = this._translation;
        var oldScale = this._scale;
        var newTranslation = selection.datum().translation;
        var newScale = selection.datum().scale;
        var t = transform(this._zoomSelection.node());
        if (oldTranslation) {
            t = t.scale(1 / oldScale);
            t = t.translate(-oldTranslation.x, -oldTranslation.y);
        }
        t = t.translate(newTranslation.x, newTranslation.y);
        t = t.scale(newScale);
        return t;
    }
    function translateZoomBehaviorTransform(selection) {
        // Translate the current zoom transform for the top level svg
        // uniformly with the given selection, using the difference
        // between the translation specified in the selection's data and
        // it's saved previous translation. The selection is normally the
        // top level g element of the graph.
        this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection));
        // Save the selections's new translation and scale.
        this._translation = selection.datum().translation;
        this._scale = selection.datum().scale;
        // Set the original zoom transform to the translation and scale specified in
        // the selection's data.
        this._originalTransform = identity$1.translate(selection.datum().translation.x, selection.datum().translation.y).scale(selection.datum().scale);
    }
    function resetZoom(transition) {
        // Reset the zoom transform to the original zoom transform.
        var selection = this._zoomSelection;
        if (transition) {
            selection = selection
                .transition(transition);
        }
        selection
            .call(this._zoomBehavior.transform, this._originalTransform);
        return this;
    }
    function zoomScaleExtent(extent) {
        this._options.zoomScaleExtent = extent;
        return this;
    }
    function zoomTranslateExtent(extent) {
        this._options.zoomTranslateExtent = extent;
        return this;
    }
    function zoomBehavior() {
        return this._zoomBehavior || null;
    }
    function zoomSelection() {
        return this._zoomSelection || null;
    }
    function pathTween(points, d1) {
        return function () {
            const pointInterpolators = points.map(function (p) {
                return interpolate$1([p[0][0], p[0][1]], [p[1][0], p[1][1]]);
            });
            return function (t) {
                return t < 1 ? "M" + pointInterpolators.map(function (p) { return p(t); }).join("L") : d1;
            };
        };
    }
    function pathTweenPoints(node, d1, precision, precisionIsRelative) {
        const path0 = node;
        const path1 = path0.cloneNode();
        const n0 = path0.getTotalLength();
        const n1 = (path1.setAttribute("d", d1), path1).getTotalLength();
        // Uniform sampling of distance based on specified precision.
        const distances = [0];
        let i = 0;
        const dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);
        while ((i += dt) < 1) {
            distances.push(i);
        }
        distances.push(1);
        // Compute point-interpolators at each distance.
        const points = distances.map(function (t) {
            const p0 = path0.getPointAtLength(t * n0);
            const p1 = path1.getPointAtLength(t * n1);
            return ([[p0.x, p0.y], [p1.x, p1.y]]);
        });
        return points;
    }
    function data() {
        return this._data || null;
    }
    function isEdgeElementParent(datum) {
        return (datum.attributes.class == 'edge' || (datum.tag == 'a' &&
            datum.parent.tag == 'g' &&
            datum.parent.parent.attributes.class == 'edge'));
    }
    function isEdgeElement(datum) {
        return datum.parent && isEdgeElementParent(datum.parent);
    }
    function getEdgeGroup(datum) {
        if (datum.parent.attributes.class == 'edge') {
            return datum.parent;
        }
        else { // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'
            return datum.parent.parent.parent;
        }
    }
    function getEdgeTitle(datum) {
        return getEdgeGroup(datum).children.find(function (e) {
            return e.tag == 'title';
        });
    }
    function render(callback) {
        if (this._busy) {
            this._queue.push(this.render.bind(this, callback));
            return this;
        }
        this._dispatch.call('renderStart', this);
        if (this._transitionFactory) {
            timeout(function () {
                this._transition = transition$1(this._transitionFactory());
                _render.call(this, callback);
            }.bind(this), 0);
        }
        else {
            _render.call(this, callback);
        }
        return this;
    }
    function _render(callback) {
        var transitionInstance = this._transition;
        var fade = this._options.fade && transitionInstance != null;
        var tweenPaths = this._options.tweenPaths;
        var tweenShapes = this._options.tweenShapes;
        var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;
        var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;
        var attributer = this._attributer;
        var graphvizInstance = this;
        function insertChildren(element) {
            var children = element.selectAll(function () {
                return element.node().childNodes;
            });
            children = children
                .data(function (d) {
                return d.children;
            }, function (d) {
                return d.key;
            });
            var childrenEnter = children
                .enter()
                .append(function (d) {
                var element = createElement(d);
                if (d.tag == '#text' && fade) {
                    element.nodeValue = d.text;
                }
                return element;
            });
            if (fade || (growEnteringEdges && isEdgeElementParent(element.datum()))) {
                var childElementsEnter = childrenEnter
                    .filter(function (d) {
                    return d.tag[0] == '#' ? null : this;
                })
                    .each(function (d) {
                    var childEnter = select(this);
                    for (var attributeName of Object.keys(d.attributes)) {
                        var attributeValue = d.attributes[attributeName];
                        childEnter
                            .attr(attributeName, attributeValue);
                    }
                });
                childElementsEnter
                    .filter(function (d) {
                    return d.tag == 'svg' || d.tag == 'g' ? null : this;
                })
                    .style("opacity", 0.0);
            }
            var childrenExit = children
                .exit();
            if (attributer) {
                childrenExit.each(attributer);
            }
            if (transitionInstance) {
                childrenExit = childrenExit
                    .transition(transitionInstance);
                if (fade) {
                    childrenExit
                        .filter(function (d) {
                        return d.tag[0] == '#' ? null : this;
                    })
                        .style("opacity", 0.0);
                }
            }
            childrenExit = childrenExit
                .remove();
            children = childrenEnter
                .merge(children);
            children.each(attributeElement);
        }
        function attributeElement(data) {
            var element = select(this);
            if (data.tag == "svg") {
                var options = graphvizInstance._options;
                if (options.width != null || options.height != null) {
                    var width = options.width;
                    var height = options.height;
                    if (width == null) {
                        width = data.attributes.width.replace('pt', '') * 4 / 3;
                    }
                    else {
                        element
                            .attr("width", width);
                        data.attributes.width = width;
                    }
                    if (height == null) {
                        height = data.attributes.height.replace('pt', '') * 4 / 3;
                    }
                    else {
                        element
                            .attr("height", height);
                        data.attributes.height = height;
                    }
                    if (!options.fit) {
                        element
                            .attr("viewBox", `0 0 ${width * 3 / 4 / options.scale} ${height * 3 / 4 / options.scale}`);
                        data.attributes.viewBox = `0 0 ${width * 3 / 4 / options.scale} ${height * 3 / 4 / options.scale}`;
                    }
                }
                if (options.scale != 1 && (options.fit || (options.width == null && options.height == null))) {
                    width = data.attributes.viewBox.split(' ')[2];
                    height = data.attributes.viewBox.split(' ')[3];
                    element
                        .attr("viewBox", `0 0 ${width / options.scale} ${height / options.scale}`);
                    data.attributes.viewBox = `0 0 ${width / options.scale} ${height / options.scale}`;
                }
            }
            if (attributer) {
                element.each(attributer);
            }
            var tag = data.tag;
            var attributes = data.attributes;
            var currentAttributes = element.node().attributes;
            if (currentAttributes) {
                for (var i = 0; i < currentAttributes.length; i++) {
                    var currentAttribute = currentAttributes[i];
                    var name = currentAttribute.name;
                    if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {
                        var namespaceURIParts = currentAttribute.namespaceURI.split('/');
                        var namespace = namespaceURIParts[namespaceURIParts.length - 1];
                        name = namespace + ':' + name;
                    }
                    if (!(name in attributes)) {
                        attributes[name] = null;
                    }
                }
            }
            var convertShape = false;
            var convertPrevShape = false;
            if (tweenShapes && transitionInstance) {
                if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data.alternativeOld) {
                    convertPrevShape = true;
                }
                if ((tag == 'polygon' || tag == 'ellipse') && data.alternativeNew) {
                    convertShape = true;
                }
                if (this.nodeName == 'polygon' && tag == 'polygon' && data.alternativeOld) {
                    var prevData = extractElementData(element);
                    var prevPoints = prevData.attributes.points;
                    if (!convertEqualSidedPolygons) {
                        var nPrevPoints = prevPoints.split(' ').length;
                        var points = data.attributes.points;
                        var nPoints = points.split(' ').length;
                        if (nPoints == nPrevPoints) {
                            convertShape = false;
                            convertPrevShape = false;
                        }
                    }
                }
                if (convertPrevShape) {
                    var prevPathData = data.alternativeOld;
                    var pathElement = replaceElement(element, prevPathData);
                    pathElement.data([data], function () {
                        return data.key;
                    });
                    element = pathElement;
                }
                if (convertShape) {
                    var newPathData = data.alternativeNew;
                    tag = 'path';
                    attributes = newPathData.attributes;
                }
            }
            var elementTransition = element;
            if (transitionInstance) {
                elementTransition = elementTransition
                    .transition(transitionInstance);
                if (fade) {
                    elementTransition
                        .filter(function (d) {
                        return d.tag[0] == '#' ? null : this;
                    })
                        .style("opacity", 1.0);
                }
                elementTransition
                    .filter(function (d) {
                    return d.tag[0] == '#' ? null : this;
                })
                    .on("end", function (d) {
                    select(this)
                        .attr('style', (d && d.attributes && d.attributes.style) || null);
                });
            }
            var growThisPath = growEnteringEdges && tag == 'path' && data.offset;
            if (growThisPath) {
                var totalLength = data.totalLength;
                element
                    .attr("stroke-dasharray", totalLength + " " + totalLength)
                    .attr("stroke-dashoffset", totalLength)
                    .attr('transform', 'translate(' + data.offset.x + ',' + data.offset.y + ')');
                attributes["stroke-dashoffset"] = 0;
                attributes['transform'] = 'translate(0,0)';
                elementTransition
                    .attr("stroke-dashoffset", attributes["stroke-dashoffset"])
                    .attr('transform', attributes['transform'])
                    .on("start", function () {
                    select(this)
                        .style('opacity', null);
                })
                    .on("end", function () {
                    select(this)
                        .attr('stroke-dashoffset', null)
                        .attr('stroke-dasharray', null)
                        .attr('transform', null);
                });
            }
            var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data) && data.offset && data.parent.children[3].tag == 'path';
            if (moveThisPolygon) {
                var edgePath = select(element.node().parentNode.querySelector("path"));
                var p0 = edgePath.node().getPointAtLength(0);
                var p1 = edgePath.node().getPointAtLength(data.totalLength);
                var p2 = edgePath.node().getPointAtLength(data.totalLength - 1);
                var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;
                var x = p0.x - p1.x + data.offset.x;
                var y = p0.y - p1.y + data.offset.y;
                element
                    .attr('transform', 'translate(' + x + ',' + y + ')');
                elementTransition
                    .attrTween("transform", function () {
                    return function (t) {
                        var p = edgePath.node().getPointAtLength(data.totalLength * t);
                        var p2 = edgePath.node().getPointAtLength(data.totalLength * t + 1);
                        var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;
                        x = p.x - p1.x + data.offset.x * (1 - t);
                        y = p.y - p1.y + data.offset.y * (1 - t);
                        return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';
                    };
                })
                    .on("start", function () {
                    select(this)
                        .style('opacity', null);
                })
                    .on("end", function () {
                    select(this).attr('transform', null);
                });
            }
            var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;
            for (var attributeName of Object.keys(attributes)) {
                var attributeValue = attributes[attributeName];
                if (tweenThisPath && attributeName == 'd') {
                    var points = (data.alternativeOld || data).points;
                    if (points) {
                        elementTransition
                            .attrTween("d", pathTween(points, attributeValue));
                    }
                }
                else {
                    if (attributeName == 'transform' && data.translation) {
                        if (transitionInstance) {
                            var onEnd = elementTransition.on("end");
                            elementTransition
                                .on("start", function () {
                                if (graphvizInstance._zoomBehavior) {
                                    // Update the transform to transition to, just before the transition starts
                                    // in order to catch changes between the transition scheduling to its start.
                                    elementTransition
                                        .tween("attr.transform", function () {
                                        var node = this;
                                        return function (t) {
                                            node.setAttribute("transform", interpolateTransformSvg(transform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));
                                        };
                                    });
                                }
                            })
                                .on("end", function () {
                                onEnd.call(this);
                                // Update the zoom transform to the new translated transform
                                if (graphvizInstance._zoomBehavior) {
                                    translateZoomBehaviorTransform.call(graphvizInstance, element);
                                }
                            });
                        }
                        else {
                            if (graphvizInstance._zoomBehavior) {
                                // Update the transform attribute to set with the current pan translation
                                translateZoomBehaviorTransform.call(graphvizInstance, element);
                                attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();
                            }
                        }
                    }
                    elementTransition
                        .attr(attributeName, attributeValue);
                }
            }
            if (convertShape) {
                elementTransition
                    .on("end", function (d, i, nodes) {
                    pathElement = select(this);
                    var newElement = replaceElement(pathElement, d);
                    newElement.data([d], function () {
                        return d.key;
                    });
                });
            }
            if (data.text) {
                elementTransition
                    .text(data.text);
            }
            insertChildren(element);
        }
        var root = this._selection;
        if (transitionInstance != null) {
            // Ensure original SVG shape elements are restored after transition before rendering new graph
            var jobs = this._jobs;
            if (graphvizInstance._active) {
                jobs.push(null);
                return this;
            }
            else {
                root
                    .transition(transitionInstance)
                    .transition()
                    .duration(0)
                    .on("end", function () {
                    graphvizInstance._active = false;
                    if (jobs.length != 0) {
                        jobs.shift();
                        graphvizInstance.render();
                    }
                });
                this._active = true;
            }
        }
        if (transitionInstance != null) {
            root
                .transition(transitionInstance)
                .on("start", function () {
                graphvizInstance._dispatch.call('transitionStart', graphvizInstance);
            })
                .on("end", function () {
                graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);
            })
                .transition()
                .duration(0)
                .on("start", function () {
                graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);
                graphvizInstance._dispatch.call('end', graphvizInstance);
                if (callback) {
                    callback.call(graphvizInstance);
                }
            });
        }
        var data = this._data;
        var svg = root
            .selectAll("svg")
            .data([data], function (d) { return d.key; });
        svg = svg
            .enter()
            .append("svg")
            .merge(svg);
        attributeElement.call(svg.node(), data);
        if (this._options.zoom && !this._zoomBehavior) {
            createZoomBehavior.call(this);
        }
        graphvizInstance._dispatch.call('renderEnd', graphvizInstance);
        if (transitionInstance == null) {
            this._dispatch.call('end', this);
            if (callback) {
                callback.call(this);
            }
        }
        return this;
    }
    function graphvizVersion() {
        return this._graphvizVersion;
    }
    var r = ArrayBuffer, t = Uint8Array, e = Uint16Array, o = Int16Array, n = Int32Array, i = function (r, e, o) { if (t.prototype.slice)
        return t.prototype.slice.call(r, e, o); (null == e || e < 0) && (e = 0), (null == o || o > r.length) && (o = r.length); var n = new t(o - e); return n.set(r.subarray(e, o)), n; }, a = function (r, e, o, n) { if (t.prototype.fill)
        return t.prototype.fill.call(r, e, o, n); for ((null == o || o < 0) && (o = 0), (null == n || n > r.length) && (n = r.length); o < n; ++o)
        r[o] = e; return r; }, u = function (r, e, o, n) { if (t.prototype.copyWithin)
        return t.prototype.copyWithin.call(r, e, o, n); for ((null == o || o < 0) && (o = 0), (null == n || n > r.length) && (n = r.length); o < n;)
        r[e++] = r[o++]; }, s = ["invalid zstd data", "window size too large (>2046MB)", "invalid block type", "FSE accuracy too high", "match distance too far back", "unexpected EOF"], c = function (r, t, e) { var o = new Error(t || s[r]); if (o.code = r, Error.captureStackTrace && Error.captureStackTrace(o, c), !e)
        throw o; return o; }, d = function (r, t, e) { for (var o = 0, n = 0; o < e; ++o)
        n |= r[t++] << (o << 3); return n; }, v = function (r, e) { var o, i, a = r[0] | r[1] << 8 | r[2] << 16; if (3126568 == a && 253 == r[3]) {
        var u = r[4], s = u >> 5 & 1, v = u >> 2 & 1, f = 3 & u, h = u >> 6;
        8 & u && c(0);
        var l = 6 - s, m = 3 == f ? 4 : f, p = d(r, l, m), y = h ? 1 << h : s, w = d(r, l += m, y) + (1 == h && 256), F = w;
        if (!s) {
            var E = 1 << 10 + (r[5] >> 3);
            F = E + (E >> 3) * (7 & r[5]);
        }
        F > 2145386496 && c(1);
        var b = new t((1 == e ? w || F : e ? 0 : F) + 12);
        return b[0] = 1, b[4] = 4, b[8] = 8, { b: l + y, y: 0, l: 0, d: p, w: e && 1 != e ? e : b.subarray(12), e: F, o: new n(b.buffer, 0, 3), u: w, c: v, m: Math.min(131072, F) };
    } if (25481893 == (a >> 4 | r[3] << 20))
        return 8 + (((o = r)[i = 4] | o[i + 1] << 8 | o[i + 2] << 16 | o[i + 3] << 24) >>> 0); c(0); }, f = function (r) { for (var t = 0; 1 << t <= r; ++t)
        ; return t - 1; }, h = function (n, i, a) { var u = 4 + (i << 3), s = 5 + (15 & n[i]); s > a && c(3); for (var d = 1 << s, v = d, h = -1, l = -1, m = -1, p = d, y = new r(512 + (d << 2)), w = new o(y, 0, 256), F = new e(y, 0, 256), E = new e(y, 512, d), b = 512 + (d << 1), R = new t(y, b, d), B = new t(y, b + d); h < 255 && v > 0;) {
        var D = f(v + 1), g = u >> 3, G = (1 << D + 1) - 1, M = (n[g] | n[g + 1] << 8 | n[g + 2] << 16) >> (7 & u) & G, Z = (1 << D) - 1, X = G - v - 1, C = M & Z;
        if (C < X ? (u += D, M = C) : (u += D + 1, M > Z && (M -= X)), w[++h] = --M, -1 == M ? (v += M, R[--p] = h) : v -= M, !M)
            do {
                var O = u >> 3;
                l = (n[O] | n[O + 1] << 8) >> (7 & u) & 3, u += 2, h += l;
            } while (3 == l);
    } (h > 255 || v) && c(0); for (var _ = 0, Y = (d >> 1) + (d >> 3) + 3, k = d - 1, x = 0; x <= h; ++x) {
        var K = w[x];
        if (K < 1)
            F[x] = -K;
        else
            for (m = 0; m < K; ++m) {
                R[_] = x;
                do {
                    _ = _ + Y & k;
                } while (_ >= p);
            }
    } for (_ && c(0), m = 0; m < d; ++m) {
        var P = F[R[m]]++, L = B[m] = s - f(P);
        E[m] = (P << L) - d;
    } return [u + 7 >> 3, { b: s, s: R, n: B, t: E }]; }, l = h(new t([81, 16, 99, 140, 49, 198, 24, 99, 12, 33, 196, 24, 99, 102, 102, 134, 70, 146, 4]), 0, 6)[1], m = h(new t([33, 20, 196, 24, 99, 140, 33, 132, 16, 66, 8, 33, 132, 16, 66, 8, 33, 68, 68, 68, 68, 68, 68, 68, 68, 36, 9]), 0, 6)[1], p = h(new t([32, 132, 16, 66, 102, 70, 68, 68, 68, 68, 36, 73, 2]), 0, 5)[1], y = function (r, t) { for (var e = r.length, o = new n(e), i = 0; i < e; ++i)
        o[i] = t, t += 1 << r[i]; return o; }, w = new t(new n([0, 0, 0, 0, 16843009, 50528770, 134678020, 202050057, 269422093]).buffer, 0, 36), F = y(w, 0), E = new t(new n([0, 0, 0, 0, 0, 0, 0, 0, 16843009, 50528770, 117769220, 185207048, 252579084, 16]).buffer, 0, 53), b = y(E, 3), R = function (r, t, e) { var o = r.length, n = t.length, i = r[o - 1], a = (1 << e.b) - 1, u = -e.b; i || c(0); for (var s = 0, d = e.b, v = (o << 3) - 8 + f(i) - d, h = -1; v > u && h < n;) {
        var l = v >> 3;
        s = (s << d | (r[l] | r[l + 1] << 8 | r[l + 2] << 16) >> (7 & v)) & a, t[++h] = e.s[s], v -= d = e.n[s];
    } v == u && h + 1 == n || c(0); }, B = function (r, t, e) { var o = 6, n = t.length + 3 >> 2, i = n << 1, a = n + i; R(r.subarray(o, o += r[0] | r[1] << 8), t.subarray(0, n), e), R(r.subarray(o, o += r[2] | r[3] << 8), t.subarray(n, i), e), R(r.subarray(o, o += r[4] | r[5] << 8), t.subarray(i, a), e), R(r.subarray(o), t.subarray(a), e); }, D = function (r, o, n) { var u, s = o.b, d = r[s], v = d >> 1 & 3; o.l = 1 & d; var y = d >> 3 | r[s + 1] << 5 | r[s + 2] << 13, D = (s += 3) + y; if (1 == v) {
        if (s >= r.length)
            return;
        return o.b = s + 1, n ? (a(n, r[s], o.y, o.y += y), n) : a(new t(y), r[s]);
    } if (!(D > r.length)) {
        if (0 == v)
            return o.b = D, n ? (n.set(r.subarray(s, D), o.y), o.y += y, n) : i(r, s, D);
        if (2 == v) {
            var g = r[s], G = 3 & g, M = g >> 2 & 3, Z = g >> 4, X = 0, C = 0;
            G < 2 ? 1 & M ? Z |= r[++s] << 4 | (2 & M && r[++s] << 12) : Z = g >> 3 : (C = M, M < 2 ? (Z |= (63 & r[++s]) << 4, X = r[s] >> 6 | r[++s] << 2) : 2 == M ? (Z |= r[++s] << 4 | (3 & r[++s]) << 12, X = r[s] >> 2 | r[++s] << 6) : (Z |= r[++s] << 4 | (63 & r[++s]) << 12, X = r[s] >> 6 | r[++s] << 2 | r[++s] << 10)), ++s;
            var O = n ? n.subarray(o.y, o.y + o.m) : new t(o.m), _ = O.length - Z;
            if (0 == G)
                O.set(r.subarray(s, s += Z), _);
            else if (1 == G)
                a(O, r[s++], _);
            else {
                var Y = o.h;
                if (2 == G) {
                    var k = function (r, o) { var n = 0, i = -1, u = new t(292), s = r[o], d = u.subarray(0, 256), v = u.subarray(256, 268), l = new e(u.buffer, 268); if (s < 128) {
                        var m = h(r, o + 1, 6), p = m[0], y = m[1], w = p << 3, F = r[o += s];
                        F || c(0);
                        for (var E = 0, b = 0, R = y.b, B = R, D = (++o << 3) - 8 + f(F); !((D -= R) < w);) {
                            var g = D >> 3;
                            if (E += (r[g] | r[g + 1] << 8) >> (7 & D) & (1 << R) - 1, d[++i] = y.s[E], (D -= B) < w)
                                break;
                            b += (r[g = D >> 3] | r[g + 1] << 8) >> (7 & D) & (1 << B) - 1, d[++i] = y.s[b], R = y.n[E], E = y.t[E], B = y.n[b], b = y.t[b];
                        }
                        ++i > 255 && c(0);
                    }
                    else {
                        for (i = s - 127; n < i; n += 2) {
                            var G = r[++o];
                            d[n] = G >> 4, d[n + 1] = 15 & G;
                        }
                        ++o;
                    } var M = 0; for (n = 0; n < i; ++n)
                        (O = d[n]) > 11 && c(0), M += O && 1 << O - 1; var Z = f(M) + 1, X = 1 << Z, C = X - M; for (C & C - 1 && c(0), d[i++] = f(C) + 1, n = 0; n < i; ++n) {
                        var O = d[n];
                        ++v[d[n] = O && Z + 1 - O];
                    } var _ = new t(X << 1), Y = _.subarray(0, X), k = _.subarray(X); for (l[Z] = 0, n = Z; n > 0; --n) {
                        var x = l[n];
                        a(k, n, x, l[n - 1] = x + v[n] * (1 << Z - n));
                    } for (l[0] != X && c(0), n = 0; n < i; ++n) {
                        var K = d[n];
                        if (K) {
                            var P = l[K];
                            a(Y, n, P, l[K] = P + (1 << Z - K));
                        }
                    } return [o, { n: k, b: Z, s: Y }]; }(r, s);
                    X += s - (s = k[0]), o.h = Y = k[1];
                }
                else
                    Y || c(0);
                (C ? B : R)(r.subarray(s, s += X), O.subarray(_), Y);
            }
            var x = r[s++];
            if (x) {
                255 == x ? x = 32512 + (r[s++] | r[s++] << 8) : x > 127 && (x = x - 128 << 8 | r[s++]);
                var K = r[s++];
                3 & K && c(0);
                for (var P = [m, p, l], L = 2; L > -1; --L) {
                    var H = K >> 2 + (L << 1) & 3;
                    if (1 == H) {
                        var q = new t([0, 0, r[s++]]);
                        P[L] = { s: q.subarray(2, 3), n: q.subarray(0, 1), t: new e(q.buffer, 0, 1), b: 0 };
                    }
                    else
                        2 == H ? (s = (u = h(r, s, 9 - (1 & L)))[0], P[L] = u[1]) : 3 == H && (o.t || c(0), P[L] = o.t[L]);
                }
                var V = o.t = P, S = V[0], J = V[1], N = V[2], z = r[D - 1];
                z || c(0);
                var W = (D << 3) - 8 + f(z) - N.b, j = W >> 3, U = 0, Q = (r[j] | r[j + 1] << 8) >> (7 & W) & (1 << N.b) - 1, T = (r[j = (W -= J.b) >> 3] | r[j + 1] << 8) >> (7 & W) & (1 << J.b) - 1, I = (r[j = (W -= S.b) >> 3] | r[j + 1] << 8) >> (7 & W) & (1 << S.b) - 1;
                for (++x; --x;) {
                    var $ = N.s[Q], A = N.n[Q], rr = S.s[I], tr = S.n[I], er = J.s[T], or = J.n[T], nr = 1 << er, ir = nr + ((r[j = (W -= er) >> 3] | r[j + 1] << 8 | r[j + 2] << 16 | r[j + 3] << 24) >>> (7 & W) & nr - 1);
                    j = (W -= E[rr]) >> 3;
                    var ar = b[rr] + ((r[j] | r[j + 1] << 8 | r[j + 2] << 16) >> (7 & W) & (1 << E[rr]) - 1);
                    j = (W -= w[$]) >> 3;
                    var ur = F[$] + ((r[j] | r[j + 1] << 8 | r[j + 2] << 16) >> (7 & W) & (1 << w[$]) - 1);
                    if (j = (W -= A) >> 3, Q = N.t[Q] + ((r[j] | r[j + 1] << 8) >> (7 & W) & (1 << A) - 1), j = (W -= tr) >> 3, I = S.t[I] + ((r[j] | r[j + 1] << 8) >> (7 & W) & (1 << tr) - 1), j = (W -= or) >> 3, T = J.t[T] + ((r[j] | r[j + 1] << 8) >> (7 & W) & (1 << or) - 1), ir > 3)
                        o.o[2] = o.o[1], o.o[1] = o.o[0], o.o[0] = ir -= 3;
                    else {
                        var sr = ir - (0 != ur);
                        sr ? (ir = 3 == sr ? o.o[0] - 1 : o.o[sr], sr > 1 && (o.o[2] = o.o[1]), o.o[1] = o.o[0], o.o[0] = ir) : ir = o.o[0];
                    }
                    for (L = 0; L < ur; ++L)
                        O[U + L] = O[_ + L];
                    _ += ur;
                    var cr = (U += ur) - ir;
                    if (cr < 0) {
                        var dr = -cr, vr = o.e + cr;
                        dr > ar && (dr = ar);
                        for (L = 0; L < dr; ++L)
                            O[U + L] = o.w[vr + L];
                        U += dr, ar -= dr, cr = 0;
                    }
                    for (L = 0; L < ar; ++L)
                        O[U + L] = O[cr + L];
                    U += ar;
                }
                if (U != _)
                    for (; _ < O.length;)
                        O[U++] = O[_++];
                else
                    U = O.length;
                n ? o.y += U : O = i(O, 0, U);
            }
            else if (n) {
                if (o.y += Z, _)
                    for (L = 0; L < Z; ++L)
                        O[L] = O[_ + L];
            }
            else
                _ && (O = i(O, _));
            return o.b = D, O;
        }
        c(2);
    } }, g = function (r, e) { if (1 == r.length)
        return r[0]; for (var o = new t(e), n = 0, i = 0; n < r.length; ++n) {
        var a = r[n];
        o.set(a, i), i += a.length;
    } return o; };
    const G = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&()*+,./:;<=>?@[]^_`{|}~"';
    function M(r) { const t = function (r) { const t = r.length, e = []; let o = 0, n = 0, i = -1; for (let a = 0; a < t; a++) {
        const t = G.indexOf(r[a]);
        if (-1 !== t)
            if (i < 0)
                i = t;
            else {
                i += 91 * t, o |= i << n, n += (8191 & i) > 88 ? 13 : 14;
                do {
                    e.push(255 & o), o >>= 8, n -= 8;
                } while (n > 7);
                i = -1;
            }
    } return i > -1 && e.push(255 & (o | i << n)), new Uint8Array(e); }(r); return function (r, t) { for (var e = 0, o = [], n = +!t, i = 0; r.length;) {
        var a = v(r, n || t);
        if ("object" == typeof a) {
            for (n ? (t = null, a.w.length == a.u && (o.push(t = a.w), i += a.u)) : (o.push(t), a.e = 0); !a.l;) {
                var s = D(r, a, t);
                s || c(5), t ? a.e = a.y : (o.push(s), i += s.length, u(a.w, 0, s.length), a.w.set(s, a.w.length - s.length));
            }
            e = a.b + 4 * a.c;
        }
        else
            e = a;
        r = r.subarray(e);
    } return g(o, i); }(t); }
    var Z = ("undefined" != typeof document && document.currentScript && document.currentScript.src, function (r = {}) { var t, e, o = r; o.ready = new Promise(((r, o) => { t = r, e = o; })); var n, i = Object.assign({}, o), a = "./this.program", u = (r, t) => { throw t; }, s = !1, c = o.print || console.log.bind(console), d = o.printErr || console.error.bind(console); Object.assign(o, i), i = null, o.arguments && o.arguments, o.thisProgram && (a = o.thisProgram), o.quit && (u = o.quit), o.wasmBinary && (n = o.wasmBinary); var v, f, h = o.noExitRuntime || !0; "object" != typeof WebAssembly && C("no native wasm support detected"); var l, m, p, y, w, F, E = !1; function b(r, t) { r || C(t); } function R() { var r = v.buffer; o.HEAP8 = l = new Int8Array(r), o.HEAP16 = p = new Int16Array(r), o.HEAP32 = y = new Int32Array(r), o.HEAPU8 = m = new Uint8Array(r), o.HEAPU16 = new Uint16Array(r), o.HEAPU32 = w = new Uint32Array(r), o.HEAPF32 = new Float32Array(r), o.HEAPF64 = F = new Float64Array(r); } var B = [], D = [], g = [], G = 0, M = null; function Z(r) { G++, o.monitorRunDependencies && o.monitorRunDependencies(G); } function X(r) { if (G--, o.monitorRunDependencies && o.monitorRunDependencies(G), 0 == G && M) {
        var t = M;
        M = null, t();
    } } function C(r) { o.onAbort && o.onAbort(r), d(r = "Aborted(" + r + ")"), E = !0, r += ". Build with -sASSERTIONS for more info."; var t = new WebAssembly.RuntimeError(r); throw e(t), t; } var O, _, Y, k, x = "data:application/octet-stream;base64,"; function K(r) { return r.startsWith(x); } function P(r) { return r.startsWith("file://"); } function L(r) { if (r == O && n)
        return new Uint8Array(n); throw "both async and sync fetching of the wasm failed"; } function H(r, t, e) { return function (r) { return n || !s || "function" != typeof fetch || P(r) ? Promise.resolve().then((() => L(r))) : fetch(r, { credentials: "same-origin" }).then((t => { if (!t.ok)
        throw "failed to load wasm binary file at '" + r + "'"; return t.arrayBuffer(); })).catch((() => L(r))); }(r).then((r => WebAssembly.instantiate(r, t))).then((r => r)).then(e, (r => { d("failed to asynchronously prepare wasm: " + r), C(r); })); } K(O = "graphvizlib.wasm") || (_ = O, O = o.locateFile ? o.locateFile(_, "") : "" + _); var q = { 171280: (r, t) => { var e = nr(r), o = nr(t); or.createPath("/", J.dirname(e)), or.writeFile(J.join("/", e), o); } }; function V(r) { this.name = "ExitStatus", this.message = `Program terminated with exit(${r})`, this.status = r; } var S = r => { for (; r.length > 0;)
        r.shift()(o); }, J = { isAbs: r => "/" === r.charAt(0), splitPath: r => /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(r).slice(1), normalizeArray: (r, t) => { for (var e = 0, o = r.length - 1; o >= 0; o--) {
            var n = r[o];
            "." === n ? r.splice(o, 1) : ".." === n ? (r.splice(o, 1), e++) : e && (r.splice(o, 1), e--);
        } if (t)
            for (; e; e--)
                r.unshift(".."); return r; }, normalize: r => { var t = J.isAbs(r), e = "/" === r.substr(-1); return (r = J.normalizeArray(r.split("/").filter((r => !!r)), !t).join("/")) || t || (r = "."), r && e && (r += "/"), (t ? "/" : "") + r; }, dirname: r => { var t = J.splitPath(r), e = t[0], o = t[1]; return e || o ? (o && (o = o.substr(0, o.length - 1)), e + o) : "."; }, basename: r => { if ("/" === r)
            return "/"; var t = (r = (r = J.normalize(r)).replace(/\/$/, "")).lastIndexOf("/"); return -1 === t ? r : r.substr(t + 1); }, join: function () { var r = Array.prototype.slice.call(arguments); return J.normalize(r.join("/")); }, join2: (r, t) => J.normalize(r + "/" + t) }, N = r => (N = (() => { if ("object" == typeof crypto && "function" == typeof crypto.getRandomValues)
        return r => crypto.getRandomValues(r); C("initRandomDevice"); })())(r), z = { resolve: function () { for (var r = "", t = !1, e = arguments.length - 1; e >= -1 && !t; e--) {
            var o = e >= 0 ? arguments[e] : or.cwd();
            if ("string" != typeof o)
                throw new TypeError("Arguments to path.resolve must be strings");
            if (!o)
                return "";
            r = o + "/" + r, t = J.isAbs(o);
        } return (t ? "/" : "") + (r = J.normalizeArray(r.split("/").filter((r => !!r)), !t).join("/")) || "."; }, relative: (r, t) => { function e(r) { for (var t = 0; t < r.length && "" === r[t]; t++)
            ; for (var e = r.length - 1; e >= 0 && "" === r[e]; e--)
            ; return t > e ? [] : r.slice(t, e - t + 1); } r = z.resolve(r).substr(1), t = z.resolve(t).substr(1); for (var o = e(r.split("/")), n = e(t.split("/")), i = Math.min(o.length, n.length), a = i, u = 0; u < i; u++)
            if (o[u] !== n[u]) {
                a = u;
                break;
            } var s = []; for (u = a; u < o.length; u++)
            s.push(".."); return (s = s.concat(n.slice(a))).join("/"); } }, W = "undefined" != typeof TextDecoder ? new TextDecoder("utf8") : void 0, j = (r, t, e) => { for (var o = t + e, n = t; r[n] && !(n >= o);)
        ++n; if (n - t > 16 && r.buffer && W)
        return W.decode(r.subarray(t, n)); for (var i = ""; t < n;) {
        var a = r[t++];
        if (128 & a) {
            var u = 63 & r[t++];
            if (192 != (224 & a)) {
                var s = 63 & r[t++];
                if ((a = 224 == (240 & a) ? (15 & a) << 12 | u << 6 | s : (7 & a) << 18 | u << 12 | s << 6 | 63 & r[t++]) < 65536)
                    i += String.fromCharCode(a);
                else {
                    var c = a - 65536;
                    i += String.fromCharCode(55296 | c >> 10, 56320 | 1023 & c);
                }
            }
            else
                i += String.fromCharCode((31 & a) << 6 | u);
        }
        else
            i += String.fromCharCode(a);
    } return i; }, U = [], Q = r => { for (var t = 0, e = 0; e < r.length; ++e) {
        var o = r.charCodeAt(e);
        o <= 127 ? t++ : o <= 2047 ? t += 2 : o >= 55296 && o <= 57343 ? (t += 4, ++e) : t += 3;
    } return t; }, T = (r, t, e, o) => { if (!(o > 0))
        return 0; for (var n = e, i = e + o - 1, a = 0; a < r.length; ++a) {
        var u = r.charCodeAt(a);
        if (u >= 55296 && u <= 57343 && (u = 65536 + ((1023 & u) << 10) | 1023 & r.charCodeAt(++a)), u <= 127) {
            if (e >= i)
                break;
            t[e++] = u;
        }
        else if (u <= 2047) {
            if (e + 1 >= i)
                break;
            t[e++] = 192 | u >> 6, t[e++] = 128 | 63 & u;
        }
        else if (u <= 65535) {
            if (e + 2 >= i)
                break;
            t[e++] = 224 | u >> 12, t[e++] = 128 | u >> 6 & 63, t[e++] = 128 | 63 & u;
        }
        else {
            if (e + 3 >= i)
                break;
            t[e++] = 240 | u >> 18, t[e++] = 128 | u >> 12 & 63, t[e++] = 128 | u >> 6 & 63, t[e++] = 128 | 63 & u;
        }
    } return t[e] = 0, e - n; }; function I(r, t, e) { var o = e > 0 ? e : Q(r) + 1, n = new Array(o), i = T(r, n, 0, n.length); return t && (n.length = i), n; } var $ = { ttys: [], init: function () { }, shutdown: function () { }, register: function (r, t) { $.ttys[r] = { input: [], output: [], ops: t }, or.registerDevice(r, $.stream_ops); }, stream_ops: { open: function (r) { var t = $.ttys[r.node.rdev]; if (!t)
                throw new or.ErrnoError(43); r.tty = t, r.seekable = !1; }, close: function (r) { r.tty.ops.fsync(r.tty); }, fsync: function (r) { r.tty.ops.fsync(r.tty); }, read: function (r, t, e, o, n) { if (!r.tty || !r.tty.ops.get_char)
                throw new or.ErrnoError(60); for (var i = 0, a = 0; a < o; a++) {
                var u;
                try {
                    u = r.tty.ops.get_char(r.tty);
                }
                catch (r) {
                    throw new or.ErrnoError(29);
                }
                if (void 0 === u && 0 === i)
                    throw new or.ErrnoError(6);
                if (null == u)
                    break;
                i++, t[e + a] = u;
            } return i && (r.node.timestamp = Date.now()), i; }, write: function (r, t, e, o, n) { if (!r.tty || !r.tty.ops.put_char)
                throw new or.ErrnoError(60); try {
                for (var i = 0; i < o; i++)
                    r.tty.ops.put_char(r.tty, t[e + i]);
            }
            catch (r) {
                throw new or.ErrnoError(29);
            } return o && (r.node.timestamp = Date.now()), i; } }, default_tty_ops: { get_char: function (r) { return (() => { if (!U.length) {
                var r = null;
                if ("undefined" != typeof window && "function" == typeof window.prompt ? null !== (r = window.prompt("Input: ")) && (r += "\n") : "function" == typeof readline && null !== (r = readline()) && (r += "\n"), !r)
                    return null;
                U = I(r, !0);
            } return U.shift(); })(); }, put_char: function (r, t) { null === t || 10 === t ? (c(j(r.output, 0)), r.output = []) : 0 != t && r.output.push(t); }, fsync: function (r) { r.output && r.output.length > 0 && (c(j(r.output, 0)), r.output = []); }, ioctl_tcgets: function (r) { return { c_iflag: 25856, c_oflag: 5, c_cflag: 191, c_lflag: 35387, c_cc: [3, 28, 127, 21, 4, 0, 1, 0, 17, 19, 26, 0, 18, 15, 23, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }; }, ioctl_tcsets: function (r, t, e) { return 0; }, ioctl_tiocgwinsz: function (r) { return [24, 80]; } }, default_tty1_ops: { put_char: function (r, t) { null === t || 10 === t ? (d(j(r.output, 0)), r.output = []) : 0 != t && r.output.push(t); }, fsync: function (r) { r.output && r.output.length > 0 && (d(j(r.output, 0)), r.output = []); } } }, A = r => { r = ((r, t) => Math.ceil(r / t) * t)(r, 65536); var t = Yr(65536, r); return t ? ((r, t) => (m.fill(0, r, r + t), r))(t, r) : 0; }, rr = { ops_table: null, mount: r => rr.createNode(null, "/", 16895, 0), createNode(r, t, e, o) { if (or.isBlkdev(e) || or.isFIFO(e))
            throw new or.ErrnoError(63); rr.ops_table || (rr.ops_table = { dir: { node: { getattr: rr.node_ops.getattr, setattr: rr.node_ops.setattr, lookup: rr.node_ops.lookup, mknod: rr.node_ops.mknod, rename: rr.node_ops.rename, unlink: rr.node_ops.unlink, rmdir: rr.node_ops.rmdir, readdir: rr.node_ops.readdir, symlink: rr.node_ops.symlink }, stream: { llseek: rr.stream_ops.llseek } }, file: { node: { getattr: rr.node_ops.getattr, setattr: rr.node_ops.setattr }, stream: { llseek: rr.stream_ops.llseek, read: rr.stream_ops.read, write: rr.stream_ops.write, allocate: rr.stream_ops.allocate, mmap: rr.stream_ops.mmap, msync: rr.stream_ops.msync } }, link: { node: { getattr: rr.node_ops.getattr, setattr: rr.node_ops.setattr, readlink: rr.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: rr.node_ops.getattr, setattr: rr.node_ops.setattr }, stream: or.chrdev_stream_ops } }); var n = or.createNode(r, t, e, o); return or.isDir(n.mode) ? (n.node_ops = rr.ops_table.dir.node, n.stream_ops = rr.ops_table.dir.stream, n.contents = {}) : or.isFile(n.mode) ? (n.node_ops = rr.ops_table.file.node, n.stream_ops = rr.ops_table.file.stream, n.usedBytes = 0, n.contents = null) : or.isLink(n.mode) ? (n.node_ops = rr.ops_table.link.node, n.stream_ops = rr.ops_table.link.stream) : or.isChrdev(n.mode) && (n.node_ops = rr.ops_table.chrdev.node, n.stream_ops = rr.ops_table.chrdev.stream), n.timestamp = Date.now(), r && (r.contents[t] = n, r.timestamp = n.timestamp), n; }, getFileDataAsTypedArray: r => r.contents ? r.contents.subarray ? r.contents.subarray(0, r.usedBytes) : new Uint8Array(r.contents) : new Uint8Array(0), expandFileStorage(r, t) { var e = r.contents ? r.contents.length : 0; if (!(e >= t)) {
            t = Math.max(t, e * (e < 1048576 ? 2 : 1.125) >>> 0), 0 != e && (t = Math.max(t, 256));
            var o = r.contents;
            r.contents = new Uint8Array(t), r.usedBytes > 0 && r.contents.set(o.subarray(0, r.usedBytes), 0);
        } }, resizeFileStorage(r, t) { if (r.usedBytes != t)
            if (0 == t)
                r.contents = null, r.usedBytes = 0;
            else {
                var e = r.contents;
                r.contents = new Uint8Array(t), e && r.contents.set(e.subarray(0, Math.min(t, r.usedBytes))), r.usedBytes = t;
            } }, node_ops: { getattr(r) { var t = {}; return t.dev = or.isChrdev(r.mode) ? r.id : 1, t.ino = r.id, t.mode = r.mode, t.nlink = 1, t.uid = 0, t.gid = 0, t.rdev = r.rdev, or.isDir(r.mode) ? t.size = 4096 : or.isFile(r.mode) ? t.size = r.usedBytes : or.isLink(r.mode) ? t.size = r.link.length : t.size = 0, t.atime = new Date(r.timestamp), t.mtime = new Date(r.timestamp), t.ctime = new Date(r.timestamp), t.blksize = 4096, t.blocks = Math.ceil(t.size / t.blksize), t; }, setattr(r, t) { void 0 !== t.mode && (r.mode = t.mode), void 0 !== t.timestamp && (r.timestamp = t.timestamp), void 0 !== t.size && rr.resizeFileStorage(r, t.size); }, lookup(r, t) { throw or.genericErrors[44]; }, mknod: (r, t, e, o) => rr.createNode(r, t, e, o), rename(r, t, e) { if (or.isDir(r.mode)) {
                var o;
                try {
                    o = or.lookupNode(t, e);
                }
                catch (r) { }
                if (o)
                    for (var n in o.contents)
                        throw new or.ErrnoError(55);
            } delete r.parent.contents[r.name], r.parent.timestamp = Date.now(), r.name = e, t.contents[e] = r, t.timestamp = r.parent.timestamp, r.parent = t; }, unlink(r, t) { delete r.contents[t], r.timestamp = Date.now(); }, rmdir(r, t) { var e = or.lookupNode(r, t); for (var o in e.contents)
                throw new or.ErrnoError(55); delete r.contents[t], r.timestamp = Date.now(); }, readdir(r) { var t = [".", ".."]; for (var e in r.contents)
                r.contents.hasOwnProperty(e) && t.push(e); return t; }, symlink(r, t, e) { var o = rr.createNode(r, t, 41471, 0); return o.link = e, o; }, readlink(r) { if (!or.isLink(r.mode))
                throw new or.ErrnoError(28); return r.link; } }, stream_ops: { read(r, t, e, o, n) { var i = r.node.contents; if (n >= r.node.usedBytes)
                return 0; var a = Math.min(r.node.usedBytes - n, o); if (a > 8 && i.subarray)
                t.set(i.subarray(n, n + a), e);
            else
                for (var u = 0; u < a; u++)
                    t[e + u] = i[n + u]; return a; }, write(r, t, e, o, n, i) { if (t.buffer === l.buffer && (i = !1), !o)
                return 0; var a = r.node; if (a.timestamp = Date.now(), t.subarray && (!a.contents || a.contents.subarray)) {
                if (i)
                    return a.contents = t.subarray(e, e + o), a.usedBytes = o, o;
                if (0 === a.usedBytes && 0 === n)
                    return a.contents = t.slice(e, e + o), a.usedBytes = o, o;
                if (n + o <= a.usedBytes)
                    return a.contents.set(t.subarray(e, e + o), n), o;
            } if (rr.expandFileStorage(a, n + o), a.contents.subarray && t.subarray)
                a.contents.set(t.subarray(e, e + o), n);
            else
                for (var u = 0; u < o; u++)
                    a.contents[n + u] = t[e + u]; return a.usedBytes = Math.max(a.usedBytes, n + o), o; }, llseek(r, t, e) { var o = t; if (1 === e ? o += r.position : 2 === e && or.isFile(r.node.mode) && (o += r.node.usedBytes), o < 0)
                throw new or.ErrnoError(28); return o; }, allocate(r, t, e) { rr.expandFileStorage(r.node, t + e), r.node.usedBytes = Math.max(r.node.usedBytes, t + e); }, mmap(r, t, e, o, n) { if (!or.isFile(r.node.mode))
                throw new or.ErrnoError(43); var i, a, u = r.node.contents; if (2 & n || u.buffer !== l.buffer) {
                if ((e > 0 || e + t < u.length) && (u = u.subarray ? u.subarray(e, e + t) : Array.prototype.slice.call(u, e, e + t)), a = !0, !(i = A(t)))
                    throw new or.ErrnoError(48);
                l.set(u, i);
            }
            else
                a = !1, i = u.byteOffset; return { ptr: i, allocated: a }; }, msync: (r, t, e, o, n) => (rr.stream_ops.write(r, t, 0, o, e, !1), 0) } }, tr = o.preloadPlugins || []; function er(r, t) { var e = 0; return r && (e |= 365), t && (e |= 146), e; } var or = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: !1, ignorePermissions: !0, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: (r, t = {}) => { if (!(r = z.resolve(r)))
            return { path: "", node: null }; if ((t = Object.assign({ follow_mount: !0, recurse_count: 0 }, t)).recurse_count > 8)
            throw new or.ErrnoError(32); for (var e = r.split("/").filter((r => !!r)), o = or.root, n = "/", i = 0; i < e.length; i++) {
            var a = i === e.length - 1;
            if (a && t.parent)
                break;
            if (o = or.lookupNode(o, e[i]), n = J.join2(n, e[i]), or.isMountpoint(o) && (!a || a && t.follow_mount) && (o = o.mounted.root), !a || t.follow)
                for (var u = 0; or.isLink(o.mode);) {
                    var s = or.readlink(n);
                    if (n = z.resolve(J.dirname(n), s), o = or.lookupPath(n, { recurse_count: t.recurse_count + 1 }).node, u++ > 40)
                        throw new or.ErrnoError(32);
                }
        } return { path: n, node: o }; }, getPath: r => { for (var t;;) {
            if (or.isRoot(r)) {
                var e = r.mount.mountpoint;
                return t ? "/" !== e[e.length - 1] ? `${e}/${t}` : e + t : e;
            }
            t = t ? `${r.name}/${t}` : r.name, r = r.parent;
        } }, hashName: (r, t) => { for (var e = 0, o = 0; o < t.length; o++)
            e = (e << 5) - e + t.charCodeAt(o) | 0; return (r + e >>> 0) % or.nameTable.length; }, hashAddNode: r => { var t = or.hashName(r.parent.id, r.name); r.name_next = or.nameTable[t], or.nameTable[t] = r; }, hashRemoveNode: r => { var t = or.hashName(r.parent.id, r.name); if (or.nameTable[t] === r)
            or.nameTable[t] = r.name_next;
        else
            for (var e = or.nameTable[t]; e;) {
                if (e.name_next === r) {
                    e.name_next = r.name_next;
                    break;
                }
                e = e.name_next;
            } }, lookupNode: (r, t) => { var e = or.mayLookup(r); if (e)
            throw new or.ErrnoError(e, r); for (var o = or.hashName(r.id, t), n = or.nameTable[o]; n; n = n.name_next) {
            var i = n.name;
            if (n.parent.id === r.id && i === t)
                return n;
        } return or.lookup(r, t); }, createNode: (r, t, e, o) => { var n = new or.FSNode(r, t, e, o); return or.hashAddNode(n), n; }, destroyNode: r => { or.hashRemoveNode(r); }, isRoot: r => r === r.parent, isMountpoint: r => !!r.mounted, isFile: r => 32768 == (61440 & r), isDir: r => 16384 == (61440 & r), isLink: r => 40960 == (61440 & r), isChrdev: r => 8192 == (61440 & r), isBlkdev: r => 24576 == (61440 & r), isFIFO: r => 4096 == (61440 & r), isSocket: r => 49152 == (49152 & r), flagsToPermissionString: r => { var t = ["r", "w", "rw"][3 & r]; return 512 & r && (t += "w"), t; }, nodePermissions: (r, t) => or.ignorePermissions || (!t.includes("r") || 292 & r.mode) && (!t.includes("w") || 146 & r.mode) && (!t.includes("x") || 73 & r.mode) ? 0 : 2, mayLookup: r => { var t = or.nodePermissions(r, "x"); return t || (r.node_ops.lookup ? 0 : 2); }, mayCreate: (r, t) => { try {
            return or.lookupNode(r, t), 20;
        }
        catch (r) { } return or.nodePermissions(r, "wx"); }, mayDelete: (r, t, e) => { var o; try {
            o = or.lookupNode(r, t);
        }
        catch (r) {
            return r.errno;
        } var n = or.nodePermissions(r, "wx"); if (n)
            return n; if (e) {
            if (!or.isDir(o.mode))
                return 54;
            if (or.isRoot(o) || or.getPath(o) === or.cwd())
                return 10;
        }
        else if (or.isDir(o.mode))
            return 31; return 0; }, mayOpen: (r, t) => r ? or.isLink(r.mode) ? 32 : or.isDir(r.mode) && ("r" !== or.flagsToPermissionString(t) || 512 & t) ? 31 : or.nodePermissions(r, or.flagsToPermissionString(t)) : 44, MAX_OPEN_FDS: 4096, nextfd: () => { for (var r = 0; r <= or.MAX_OPEN_FDS; r++)
            if (!or.streams[r])
                return r; throw new or.ErrnoError(33); }, getStreamChecked: r => { var t = or.getStream(r); if (!t)
            throw new or.ErrnoError(8); return t; }, getStream: r => or.streams[r], createStream: (r, t = -1) => (or.FSStream || (or.FSStream = function () { this.shared = {}; }, or.FSStream.prototype = {}, Object.defineProperties(or.FSStream.prototype, { object: { get() { return this.node; }, set(r) { this.node = r; } }, isRead: { get() { return 1 != (2097155 & this.flags); } }, isWrite: { get() { return 0 != (2097155 & this.flags); } }, isAppend: { get() { return 1024 & this.flags; } }, flags: { get() { return this.shared.flags; }, set(r) { this.shared.flags = r; } }, position: { get() { return this.shared.position; }, set(r) { this.shared.position = r; } } })), r = Object.assign(new or.FSStream, r), -1 == t && (t = or.nextfd()), r.fd = t, or.streams[t] = r, r), closeStream: r => { or.streams[r] = null; }, chrdev_stream_ops: { open: r => { var t = or.getDevice(r.node.rdev); r.stream_ops = t.stream_ops, r.stream_ops.open && r.stream_ops.open(r); }, llseek: () => { throw new or.ErrnoError(70); } }, major: r => r >> 8, minor: r => 255 & r, makedev: (r, t) => r << 8 | t, registerDevice: (r, t) => { or.devices[r] = { stream_ops: t }; }, getDevice: r => or.devices[r], getMounts: r => { for (var t = [], e = [r]; e.length;) {
            var o = e.pop();
            t.push(o), e.push.apply(e, o.mounts);
        } return t; }, syncfs: (r, t) => { "function" == typeof r && (t = r, r = !1), or.syncFSRequests++, or.syncFSRequests > 1 && d(`warning: ${or.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`); var e = or.getMounts(or.root.mount), o = 0; function n(r) { return or.syncFSRequests--, t(r); } function i(r) { if (r)
            return i.errored ? void 0 : (i.errored = !0, n(r)); ++o >= e.length && n(null); } e.forEach((t => { if (!t.type.syncfs)
            return i(null); t.type.syncfs(t, r, i); })); }, mount: (r, t, e) => { var o, n = "/" === e, i = !e; if (n && or.root)
            throw new or.ErrnoError(10); if (!n && !i) {
            var a = or.lookupPath(e, { follow_mount: !1 });
            if (e = a.path, o = a.node, or.isMountpoint(o))
                throw new or.ErrnoError(10);
            if (!or.isDir(o.mode))
                throw new or.ErrnoError(54);
        } var u = { type: r, opts: t, mountpoint: e, mounts: [] }, s = r.mount(u); return s.mount = u, u.root = s, n ? or.root = s : o && (o.mounted = u, o.mount && o.mount.mounts.push(u)), s; }, unmount: r => { var t = or.lookupPath(r, { follow_mount: !1 }); if (!or.isMountpoint(t.node))
            throw new or.ErrnoError(28); var e = t.node, o = e.mounted, n = or.getMounts(o); Object.keys(or.nameTable).forEach((r => { for (var t = or.nameTable[r]; t;) {
            var e = t.name_next;
            n.includes(t.mount) && or.destroyNode(t), t = e;
        } })), e.mounted = null; var i = e.mount.mounts.indexOf(o); e.mount.mounts.splice(i, 1); }, lookup: (r, t) => r.node_ops.lookup(r, t), mknod: (r, t, e) => { var o = or.lookupPath(r, { parent: !0 }).node, n = J.basename(r); if (!n || "." === n || ".." === n)
            throw new or.ErrnoError(28); var i = or.mayCreate(o, n); if (i)
            throw new or.ErrnoError(i); if (!o.node_ops.mknod)
            throw new or.ErrnoError(63); return o.node_ops.mknod(o, n, t, e); }, create: (r, t) => (t = void 0 !== t ? t : 438, t &= 4095, t |= 32768, or.mknod(r, t, 0)), mkdir: (r, t) => (t = void 0 !== t ? t : 511, t &= 1023, t |= 16384, or.mknod(r, t, 0)), mkdirTree: (r, t) => { for (var e = r.split("/"), o = "", n = 0; n < e.length; ++n)
            if (e[n]) {
                o += "/" + e[n];
                try {
                    or.mkdir(o, t);
                }
                catch (r) {
                    if (20 != r.errno)
                        throw r;
                }
            } }, mkdev: (r, t, e) => (void 0 === e && (e = t, t = 438), t |= 8192, or.mknod(r, t, e)), symlink: (r, t) => { if (!z.resolve(r))
            throw new or.ErrnoError(44); var e = or.lookupPath(t, { parent: !0 }).node; if (!e)
            throw new or.ErrnoError(44); var o = J.basename(t), n = or.mayCreate(e, o); if (n)
            throw new or.ErrnoError(n); if (!e.node_ops.symlink)
            throw new or.ErrnoError(63); return e.node_ops.symlink(e, o, r); }, rename: (r, t) => { var e, o, n = J.dirname(r), i = J.dirname(t), a = J.basename(r), u = J.basename(t); if (e = or.lookupPath(r, { parent: !0 }).node, o = or.lookupPath(t, { parent: !0 }).node, !e || !o)
            throw new or.ErrnoError(44); if (e.mount !== o.mount)
            throw new or.ErrnoError(75); var s, c = or.lookupNode(e, a), d = z.relative(r, i); if ("." !== d.charAt(0))
            throw new or.ErrnoError(28); if ("." !== (d = z.relative(t, n)).charAt(0))
            throw new or.ErrnoError(55); try {
            s = or.lookupNode(o, u);
        }
        catch (r) { } if (c !== s) {
            var v = or.isDir(c.mode), f = or.mayDelete(e, a, v);
            if (f)
                throw new or.ErrnoError(f);
            if (f = s ? or.mayDelete(o, u, v) : or.mayCreate(o, u))
                throw new or.ErrnoError(f);
            if (!e.node_ops.rename)
                throw new or.ErrnoError(63);
            if (or.isMountpoint(c) || s && or.isMountpoint(s))
                throw new or.ErrnoError(10);
            if (o !== e && (f = or.nodePermissions(e, "w")))
                throw new or.ErrnoError(f);
            or.hashRemoveNode(c);
            try {
                e.node_ops.rename(c, o, u);
            }
            catch (r) {
                throw r;
            }
            finally {
                or.hashAddNode(c);
            }
        } }, rmdir: r => { var t = or.lookupPath(r, { parent: !0 }).node, e = J.basename(r), o = or.lookupNode(t, e), n = or.mayDelete(t, e, !0); if (n)
            throw new or.ErrnoError(n); if (!t.node_ops.rmdir)
            throw new or.ErrnoError(63); if (or.isMountpoint(o))
            throw new or.ErrnoError(10); t.node_ops.rmdir(t, e), or.destroyNode(o); }, readdir: r => { var t = or.lookupPath(r, { follow: !0 }).node; if (!t.node_ops.readdir)
            throw new or.ErrnoError(54); return t.node_ops.readdir(t); }, unlink: r => { var t = or.lookupPath(r, { parent: !0 }).node; if (!t)
            throw new or.ErrnoError(44); var e = J.basename(r), o = or.lookupNode(t, e), n = or.mayDelete(t, e, !1); if (n)
            throw new or.ErrnoError(n); if (!t.node_ops.unlink)
            throw new or.ErrnoError(63); if (or.isMountpoint(o))
            throw new or.ErrnoError(10); t.node_ops.unlink(t, e), or.destroyNode(o); }, readlink: r => { var t = or.lookupPath(r).node; if (!t)
            throw new or.ErrnoError(44); if (!t.node_ops.readlink)
            throw new or.ErrnoError(28); return z.resolve(or.getPath(t.parent), t.node_ops.readlink(t)); }, stat: (r, t) => { var e = or.lookupPath(r, { follow: !t }).node; if (!e)
            throw new or.ErrnoError(44); if (!e.node_ops.getattr)
            throw new or.ErrnoError(63); return e.node_ops.getattr(e); }, lstat: r => or.stat(r, !0), chmod: (r, t, e) => { var o; if (!(o = "string" == typeof r ? or.lookupPath(r, { follow: !e }).node : r).node_ops.setattr)
            throw new or.ErrnoError(63); o.node_ops.setattr(o, { mode: 4095 & t | -4096 & o.mode, timestamp: Date.now() }); }, lchmod: (r, t) => { or.chmod(r, t, !0); }, fchmod: (r, t) => { var e = or.getStreamChecked(r); or.chmod(e.node, t); }, chown: (r, t, e, o) => { var n; if (!(n = "string" == typeof r ? or.lookupPath(r, { follow: !o }).node : r).node_ops.setattr)
            throw new or.ErrnoError(63); n.node_ops.setattr(n, { timestamp: Date.now() }); }, lchown: (r, t, e) => { or.chown(r, t, e, !0); }, fchown: (r, t, e) => { var o = or.getStreamChecked(r); or.chown(o.node, t, e); }, truncate: (r, t) => { if (t < 0)
            throw new or.ErrnoError(28); var e; if (!(e = "string" == typeof r ? or.lookupPath(r, { follow: !0 }).node : r).node_ops.setattr)
            throw new or.ErrnoError(63); if (or.isDir(e.mode))
            throw new or.ErrnoError(31); if (!or.isFile(e.mode))
            throw new or.ErrnoError(28); var o = or.nodePermissions(e, "w"); if (o)
            throw new or.ErrnoError(o); e.node_ops.setattr(e, { size: t, timestamp: Date.now() }); }, ftruncate: (r, t) => { var e = or.getStreamChecked(r); if (0 == (2097155 & e.flags))
            throw new or.ErrnoError(28); or.truncate(e.node, t); }, utime: (r, t, e) => { var o = or.lookupPath(r, { follow: !0 }).node; o.node_ops.setattr(o, { timestamp: Math.max(t, e) }); }, open: (r, t, e) => { if ("" === r)
            throw new or.ErrnoError(44); var n; if (e = void 0 === e ? 438 : e, e = 64 & (t = "string" == typeof t ? function (r) { var t = { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }[r]; if (void 0 === t)
            throw new Error(`Unknown file open mode: ${r}`); return t; }(t) : t) ? 4095 & e | 32768 : 0, "object" == typeof r)
            n = r;
        else {
            r = J.normalize(r);
            try {
                n = or.lookupPath(r, { follow: !(131072 & t) }).node;
            }
            catch (r) { }
        } var i = !1; if (64 & t)
            if (n) {
                if (128 & t)
                    throw new or.ErrnoError(20);
            }
            else
                n = or.mknod(r, e, 0), i = !0; if (!n)
            throw new or.ErrnoError(44); if (or.isChrdev(n.mode) && (t &= -513), 65536 & t && !or.isDir(n.mode))
            throw new or.ErrnoError(54); if (!i) {
            var a = or.mayOpen(n, t);
            if (a)
                throw new or.ErrnoError(a);
        } 512 & t && !i && or.truncate(n, 0), t &= -131713; var u = or.createStream({ node: n, path: or.getPath(n), flags: t, seekable: !0, position: 0, stream_ops: n.stream_ops, ungotten: [], error: !1 }); return u.stream_ops.open && u.stream_ops.open(u), !o.logReadFiles || 1 & t || (or.readFiles || (or.readFiles = {}), r in or.readFiles || (or.readFiles[r] = 1)), u; }, close: r => { if (or.isClosed(r))
            throw new or.ErrnoError(8); r.getdents && (r.getdents = null); try {
            r.stream_ops.close && r.stream_ops.close(r);
        }
        catch (r) {
            throw r;
        }
        finally {
            or.closeStream(r.fd);
        } r.fd = null; }, isClosed: r => null === r.fd, llseek: (r, t, e) => { if (or.isClosed(r))
            throw new or.ErrnoError(8); if (!r.seekable || !r.stream_ops.llseek)
            throw new or.ErrnoError(70); if (0 != e && 1 != e && 2 != e)
            throw new or.ErrnoError(28); return r.position = r.stream_ops.llseek(r, t, e), r.ungotten = [], r.position; }, read: (r, t, e, o, n) => { if (o < 0 || n < 0)
            throw new or.ErrnoError(28); if (or.isClosed(r))
            throw new or.ErrnoError(8); if (1 == (2097155 & r.flags))
            throw new or.ErrnoError(8); if (or.isDir(r.node.mode))
            throw new or.ErrnoError(31); if (!r.stream_ops.read)
            throw new or.ErrnoError(28); var i = void 0 !== n; if (i) {
            if (!r.seekable)
                throw new or.ErrnoError(70);
        }
        else
            n = r.position; var a = r.stream_ops.read(r, t, e, o, n); return i || (r.position += a), a; }, write: (r, t, e, o, n, i) => { if (o < 0 || n < 0)
            throw new or.ErrnoError(28); if (or.isClosed(r))
            throw new or.ErrnoError(8); if (0 == (2097155 & r.flags))
            throw new or.ErrnoError(8); if (or.isDir(r.node.mode))
            throw new or.ErrnoError(31); if (!r.stream_ops.write)
            throw new or.ErrnoError(28); r.seekable && 1024 & r.flags && or.llseek(r, 0, 2); var a = void 0 !== n; if (a) {
            if (!r.seekable)
                throw new or.ErrnoError(70);
        }
        else
            n = r.position; var u = r.stream_ops.write(r, t, e, o, n, i); return a || (r.position += u), u; }, allocate: (r, t, e) => { if (or.isClosed(r))
            throw new or.ErrnoError(8); if (t < 0 || e <= 0)
            throw new or.ErrnoError(28); if (0 == (2097155 & r.flags))
            throw new or.ErrnoError(8); if (!or.isFile(r.node.mode) && !or.isDir(r.node.mode))
            throw new or.ErrnoError(43); if (!r.stream_ops.allocate)
            throw new or.ErrnoError(138); r.stream_ops.allocate(r, t, e); }, mmap: (r, t, e, o, n) => { if (0 != (2 & o) && 0 == (2 & n) && 2 != (2097155 & r.flags))
            throw new or.ErrnoError(2); if (1 == (2097155 & r.flags))
            throw new or.ErrnoError(2); if (!r.stream_ops.mmap)
            throw new or.ErrnoError(43); return r.stream_ops.mmap(r, t, e, o, n); }, msync: (r, t, e, o, n) => r.stream_ops.msync ? r.stream_ops.msync(r, t, e, o, n) : 0, munmap: r => 0, ioctl: (r, t, e) => { if (!r.stream_ops.ioctl)
            throw new or.ErrnoError(59); return r.stream_ops.ioctl(r, t, e); }, readFile: (r, t = {}) => { if (t.flags = t.flags || 0, t.encoding = t.encoding || "binary", "utf8" !== t.encoding && "binary" !== t.encoding)
            throw new Error(`Invalid encoding type "${t.encoding}"`); var e, o = or.open(r, t.flags), n = or.stat(r).size, i = new Uint8Array(n); return or.read(o, i, 0, n, 0), "utf8" === t.encoding ? e = j(i, 0) : "binary" === t.encoding && (e = i), or.close(o), e; }, writeFile: (r, t, e = {}) => { e.flags = e.flags || 577; var o = or.open(r, e.flags, e.mode); if ("string" == typeof t) {
            var n = new Uint8Array(Q(t) + 1), i = T(t, n, 0, n.length);
            or.write(o, n, 0, i, void 0, e.canOwn);
        }
        else {
            if (!ArrayBuffer.isView(t))
                throw new Error("Unsupported data type");
            or.write(o, t, 0, t.byteLength, void 0, e.canOwn);
        } or.close(o); }, cwd: () => or.currentPath, chdir: r => { var t = or.lookupPath(r, { follow: !0 }); if (null === t.node)
            throw new or.ErrnoError(44); if (!or.isDir(t.node.mode))
            throw new or.ErrnoError(54); var e = or.nodePermissions(t.node, "x"); if (e)
            throw new or.ErrnoError(e); or.currentPath = t.path; }, createDefaultDirectories: () => { or.mkdir("/tmp"), or.mkdir("/home"), or.mkdir("/home/web_user"); }, createDefaultDevices: () => { or.mkdir("/dev"), or.registerDevice(or.makedev(1, 3), { read: () => 0, write: (r, t, e, o, n) => o }), or.mkdev("/dev/null", or.makedev(1, 3)), $.register(or.makedev(5, 0), $.default_tty_ops), $.register(or.makedev(6, 0), $.default_tty1_ops), or.mkdev("/dev/tty", or.makedev(5, 0)), or.mkdev("/dev/tty1", or.makedev(6, 0)); var r = new Uint8Array(1024), t = 0, e = () => (0 === t && (t = N(r).byteLength), r[--t]); or.createDevice("/dev", "random", e), or.createDevice("/dev", "urandom", e), or.mkdir("/dev/shm"), or.mkdir("/dev/shm/tmp"); }, createSpecialDirectories: () => { or.mkdir("/proc"); var r = or.mkdir("/proc/self"); or.mkdir("/proc/self/fd"), or.mount({ mount: () => { var t = or.createNode(r, "fd", 16895, 73); return t.node_ops = { lookup: (r, t) => { var e = +t, o = or.getStreamChecked(e), n = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: () => o.path } }; return n.parent = n, n; } }, t; } }, {}, "/proc/self/fd"); }, createStandardStreams: () => { o.stdin ? or.createDevice("/dev", "stdin", o.stdin) : or.symlink("/dev/tty", "/dev/stdin"), o.stdout ? or.createDevice("/dev", "stdout", null, o.stdout) : or.symlink("/dev/tty", "/dev/stdout"), o.stderr ? or.createDevice("/dev", "stderr", null, o.stderr) : or.symlink("/dev/tty1", "/dev/stderr"), or.open("/dev/stdin", 0), or.open("/dev/stdout", 1), or.open("/dev/stderr", 1); }, ensureErrnoError: () => { or.ErrnoError || (or.ErrnoError = function (r, t) { this.name = "ErrnoError", this.node = t, this.setErrno = function (r) { this.errno = r; }, this.setErrno(r), this.message = "FS error"; }, or.ErrnoError.prototype = new Error, or.ErrnoError.prototype.constructor = or.ErrnoError, [44].forEach((r => { or.genericErrors[r] = new or.ErrnoError(r), or.genericErrors[r].stack = "<generic error, no stack>"; }))); }, staticInit: () => { or.ensureErrnoError(), or.nameTable = new Array(4096), or.mount(rr, {}, "/"), or.createDefaultDirectories(), or.createDefaultDevices(), or.createSpecialDirectories(), or.filesystems = { MEMFS: rr }; }, init: (r, t, e) => { or.init.initialized = !0, or.ensureErrnoError(), o.stdin = r || o.stdin, o.stdout = t || o.stdout, o.stderr = e || o.stderr, or.createStandardStreams(); }, quit: () => { or.init.initialized = !1; for (var r = 0; r < or.streams.length; r++) {
            var t = or.streams[r];
            t && or.close(t);
        } }, findObject: (r, t) => { var e = or.analyzePath(r, t); return e.exists ? e.object : null; }, analyzePath: (r, t) => { try {
            r = (o = or.lookupPath(r, { follow: !t })).path;
        }
        catch (r) { } var e = { isRoot: !1, exists: !1, error: 0, name: null, path: null, object: null, parentExists: !1, parentPath: null, parentObject: null }; try {
            var o = or.lookupPath(r, { parent: !0 });
            e.parentExists = !0, e.parentPath = o.path, e.parentObject = o.node, e.name = J.basename(r), o = or.lookupPath(r, { follow: !t }), e.exists = !0, e.path = o.path, e.object = o.node, e.name = o.node.name, e.isRoot = "/" === o.path;
        }
        catch (r) {
            e.error = r.errno;
        } return e; }, createPath: (r, t, e, o) => { r = "string" == typeof r ? r : or.getPath(r); for (var n = t.split("/").reverse(); n.length;) {
            var i = n.pop();
            if (i) {
                var a = J.join2(r, i);
                try {
                    or.mkdir(a);
                }
                catch (r) { }
                r = a;
            }
        } return a; }, createFile: (r, t, e, o, n) => { var i = J.join2("string" == typeof r ? r : or.getPath(r), t), a = er(o, n); return or.create(i, a); }, createDataFile: (r, t, e, o, n, i) => { var a = t; r && (r = "string" == typeof r ? r : or.getPath(r), a = t ? J.join2(r, t) : r); var u = er(o, n), s = or.create(a, u); if (e) {
            if ("string" == typeof e) {
                for (var c = new Array(e.length), d = 0, v = e.length; d < v; ++d)
                    c[d] = e.charCodeAt(d);
                e = c;
            }
            or.chmod(s, 146 | u);
            var f = or.open(s, 577);
            or.write(f, e, 0, e.length, 0, i), or.close(f), or.chmod(s, u);
        } return s; }, createDevice: (r, t, e, o) => { var n = J.join2("string" == typeof r ? r : or.getPath(r), t), i = er(!!e, !!o); or.createDevice.major || (or.createDevice.major = 64); var a = or.makedev(or.createDevice.major++, 0); return or.registerDevice(a, { open: r => { r.seekable = !1; }, close: r => { o && o.buffer && o.buffer.length && o(10); }, read: (r, t, o, n, i) => { for (var a = 0, u = 0; u < n; u++) {
                var s;
                try {
                    s = e();
                }
                catch (r) {
                    throw new or.ErrnoError(29);
                }
                if (void 0 === s && 0 === a)
                    throw new or.ErrnoError(6);
                if (null == s)
                    break;
                a++, t[o + u] = s;
            } return a && (r.node.timestamp = Date.now()), a; }, write: (r, t, e, n, i) => { for (var a = 0; a < n; a++)
                try {
                    o(t[e + a]);
                }
                catch (r) {
                    throw new or.ErrnoError(29);
                } return n && (r.node.timestamp = Date.now()), a; } }), or.mkdev(n, i, a); }, forceLoadFile: r => { if (r.isDevice || r.isFolder || r.link || r.contents)
            return !0; throw "undefined" != typeof XMLHttpRequest ? new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.") : new Error("Cannot load without read() or XMLHttpRequest."); }, createLazyFile: (r, t, e, o, n) => { if ("undefined" != typeof XMLHttpRequest)
            throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc"; var a = { isDevice: !1, url: e }, u = or.createFile(r, t, a, o, n); a.contents ? u.contents = a.contents : a.url && (u.contents = null, u.url = a.url), Object.defineProperties(u, { usedBytes: { get: function () { return this.contents.length; } } }); var s = {}; function d(r, t, e, o, n) { var i = r.node.contents; if (n >= i.length)
            return 0; var a = Math.min(i.length - n, o); if (i.slice)
            for (var u = 0; u < a; u++)
                t[e + u] = i[n + u];
        else
            for (u = 0; u < a; u++)
                t[e + u] = i.get(n + u); return a; } return Object.keys(u.stream_ops).forEach((r => { var t = u.stream_ops[r]; s[r] = function () { return or.forceLoadFile(u), t.apply(null, arguments); }; })), s.read = (r, t, e, o, n) => (or.forceLoadFile(u), d(r, t, e, o, n)), s.mmap = (r, t, e, o, n) => { or.forceLoadFile(u); var i = A(t); if (!i)
            throw new or.ErrnoError(48); return d(r, l, i, t, e), { ptr: i, allocated: !0 }; }, u.stream_ops = s, u; } }, nr = (r, t) => r ? j(m, r, t) : "", ir = { DEFAULT_POLLMASK: 5, calculateAt: function (r, t, e) { if (J.isAbs(t))
            return t; var o; if (o = -100 === r ? or.cwd() : ir.getStreamFromFD(r).path, 0 == t.length) {
            if (!e)
                throw new or.ErrnoError(44);
            return o;
        } return J.join2(o, t); }, doStat: function (r, t, e) { try {
            var o = r(t);
        }
        catch (r) {
            if (r && r.node && J.normalize(t) !== J.normalize(or.getPath(r.node)))
                return -54;
            throw r;
        } y[e >> 2] = o.dev, y[e + 4 >> 2] = o.mode, w[e + 8 >> 2] = o.nlink, y[e + 12 >> 2] = o.uid, y[e + 16 >> 2] = o.gid, y[e + 20 >> 2] = o.rdev, k = [o.size >>> 0, (Y = o.size, +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[e + 24 >> 2] = k[0], y[e + 28 >> 2] = k[1], y[e + 32 >> 2] = 4096, y[e + 36 >> 2] = o.blocks; var n = o.atime.getTime(), i = o.mtime.getTime(), a = o.ctime.getTime(); return k = [Math.floor(n / 1e3) >>> 0, (Y = Math.floor(n / 1e3), +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[e + 40 >> 2] = k[0], y[e + 44 >> 2] = k[1], w[e + 48 >> 2] = n % 1e3 * 1e3, k = [Math.floor(i / 1e3) >>> 0, (Y = Math.floor(i / 1e3), +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[e + 56 >> 2] = k[0], y[e + 60 >> 2] = k[1], w[e + 64 >> 2] = i % 1e3 * 1e3, k = [Math.floor(a / 1e3) >>> 0, (Y = Math.floor(a / 1e3), +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[e + 72 >> 2] = k[0], y[e + 76 >> 2] = k[1], w[e + 80 >> 2] = a % 1e3 * 1e3, k = [o.ino >>> 0, (Y = o.ino, +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[e + 88 >> 2] = k[0], y[e + 92 >> 2] = k[1], 0; }, doMsync: function (r, t, e, o, n) { if (!or.isFile(t.node.mode))
            throw new or.ErrnoError(43); if (2 & o)
            return 0; var i = m.slice(r, r + e); or.msync(t, i, n, e, o); }, varargs: void 0, get: () => (ir.varargs += 4, y[ir.varargs - 4 >> 2]), getStr: r => nr(r), getStreamFromFD: function (r) { return or.getStreamChecked(r); } }; function ar(r, t) { return t + 2097152 >>> 0 < 4194305 - !!r ? (r >>> 0) + 4294967296 * t : NaN; } var ur = [], sr = (r, t, e) => { var o = ((r, t) => { var e; for (ur.length = 0, t >>= 2; e = m[r++];)
        t += 105 != e & t, ur.push(105 == e ? y[t] : F[t++ >> 1]), ++t; return ur; })(t, e); return q[r].apply(null, o); }, cr = r => { var t = r - v.buffer.byteLength + 65535 >>> 16; try {
        return v.grow(t), R(), 1;
    }
    catch (r) { } }, dr = {}, vr = () => { if (!vr.strings) {
        var r = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: ("object" == typeof navigator && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: a || "./this.program" };
        for (var t in dr)
            void 0 === dr[t] ? delete r[t] : r[t] = dr[t];
        var e = [];
        for (var t in r)
            e.push(`${t}=${r[t]}`);
        vr.strings = e;
    } return vr.strings; }, fr = r => { h || (o.onExit && o.onExit(r), E = !0), u(r, new V(r)); }, hr = (r, t) => { fr(r); }, lr = r => r % 4 == 0 && (r % 100 != 0 || r % 400 == 0), mr = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], pr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], yr = (r, t, e, o) => { var n = y[o + 40 >> 2], i = { tm_sec: y[o >> 2], tm_min: y[o + 4 >> 2], tm_hour: y[o + 8 >> 2], tm_mday: y[o + 12 >> 2], tm_mon: y[o + 16 >> 2], tm_year: y[o + 20 >> 2], tm_wday: y[o + 24 >> 2], tm_yday: y[o + 28 >> 2], tm_isdst: y[o + 32 >> 2], tm_gmtoff: y[o + 36 >> 2], tm_zone: n ? nr(n) : "" }, a = nr(e), u = { "%c": "%a %b %d %H:%M:%S %Y", "%D": "%m/%d/%y", "%F": "%Y-%m-%d", "%h": "%b", "%r": "%I:%M:%S %p", "%R": "%H:%M", "%T": "%H:%M:%S", "%x": "%m/%d/%y", "%X": "%H:%M:%S", "%Ec": "%c", "%EC": "%C", "%Ex": "%m/%d/%y", "%EX": "%H:%M:%S", "%Ey": "%y", "%EY": "%Y", "%Od": "%d", "%Oe": "%e", "%OH": "%H", "%OI": "%I", "%Om": "%m", "%OM": "%M", "%OS": "%S", "%Ou": "%u", "%OU": "%U", "%OV": "%V", "%Ow": "%w", "%OW": "%W", "%Oy": "%y" }; for (var s in u)
        a = a.replace(new RegExp(s, "g"), u[s]); var c = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], d = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]; function v(r, t, e) { for (var o = "number" == typeof r ? r.toString() : r || ""; o.length < t;)
        o = e[0] + o; return o; } function f(r, t) { return v(r, t, "0"); } function h(r, t) { function e(r) { return r < 0 ? -1 : r > 0 ? 1 : 0; } var o; return 0 === (o = e(r.getFullYear() - t.getFullYear())) && 0 === (o = e(r.getMonth() - t.getMonth())) && (o = e(r.getDate() - t.getDate())), o; } function m(r) { switch (r.getDay()) {
        case 0: return new Date(r.getFullYear() - 1, 11, 29);
        case 1: return r;
        case 2: return new Date(r.getFullYear(), 0, 3);
        case 3: return new Date(r.getFullYear(), 0, 2);
        case 4: return new Date(r.getFullYear(), 0, 1);
        case 5: return new Date(r.getFullYear() - 1, 11, 31);
        case 6: return new Date(r.getFullYear() - 1, 11, 30);
    } } function p(r) { var t = ((r, t) => { for (var e = new Date(r.getTime()); t > 0;) {
        var o = lr(e.getFullYear()), n = e.getMonth(), i = (o ? mr : pr)[n];
        if (!(t > i - e.getDate()))
            return e.setDate(e.getDate() + t), e;
        t -= i - e.getDate() + 1, e.setDate(1), n < 11 ? e.setMonth(n + 1) : (e.setMonth(0), e.setFullYear(e.getFullYear() + 1));
    } return e; })(new Date(r.tm_year + 1900, 0, 1), r.tm_yday), e = new Date(t.getFullYear(), 0, 4), o = new Date(t.getFullYear() + 1, 0, 4), n = m(e), i = m(o); return h(n, t) <= 0 ? h(i, t) <= 0 ? t.getFullYear() + 1 : t.getFullYear() : t.getFullYear() - 1; } var w = { "%a": r => c[r.tm_wday].substring(0, 3), "%A": r => c[r.tm_wday], "%b": r => d[r.tm_mon].substring(0, 3), "%B": r => d[r.tm_mon], "%C": r => f((r.tm_year + 1900) / 100 | 0, 2), "%d": r => f(r.tm_mday, 2), "%e": r => v(r.tm_mday, 2, " "), "%g": r => p(r).toString().substring(2), "%G": r => p(r), "%H": r => f(r.tm_hour, 2), "%I": r => { var t = r.tm_hour; return 0 == t ? t = 12 : t > 12 && (t -= 12), f(t, 2); }, "%j": r => f(r.tm_mday + ((r, t) => { for (var e = 0, o = 0; o <= t; e += r[o++])
            ; return e; })(lr(r.tm_year + 1900) ? mr : pr, r.tm_mon - 1), 3), "%m": r => f(r.tm_mon + 1, 2), "%M": r => f(r.tm_min, 2), "%n": () => "\n", "%p": r => r.tm_hour >= 0 && r.tm_hour < 12 ? "AM" : "PM", "%S": r => f(r.tm_sec, 2), "%t": () => "\t", "%u": r => r.tm_wday || 7, "%U": r => { var t = r.tm_yday + 7 - r.tm_wday; return f(Math.floor(t / 7), 2); }, "%V": r => { var t = Math.floor((r.tm_yday + 7 - (r.tm_wday + 6) % 7) / 7); if ((r.tm_wday + 371 - r.tm_yday - 2) % 7 <= 2 && t++, t) {
            if (53 == t) {
                var e = (r.tm_wday + 371 - r.tm_yday) % 7;
                4 == e || 3 == e && lr(r.tm_year) || (t = 1);
            }
        }
        else {
            t = 52;
            var o = (r.tm_wday + 7 - r.tm_yday - 1) % 7;
            (4 == o || 5 == o && lr(r.tm_year % 400 - 1)) && t++;
        } return f(t, 2); }, "%w": r => r.tm_wday, "%W": r => { var t = r.tm_yday + 7 - (r.tm_wday + 6) % 7; return f(Math.floor(t / 7), 2); }, "%y": r => (r.tm_year + 1900).toString().substring(2), "%Y": r => r.tm_year + 1900, "%z": r => { var t = r.tm_gmtoff, e = t >= 0; return t = (t = Math.abs(t) / 60) / 60 * 100 + t % 60, (e ? "+" : "-") + String("0000" + t).slice(-4); }, "%Z": r => r.tm_zone, "%%": () => "%" }; for (var s in a = a.replace(/%%/g, "\0\0"), w)
        a.includes(s) && (a = a.replace(new RegExp(s, "g"), w[s](i))); var F, E, b = I(a = a.replace(/\0\0/g, "%"), !1); return b.length > t ? 0 : (F = b, E = r, l.set(F, E), b.length - 1); }, wr = function (r, t, e, o) { r || (r = this), this.parent = r, this.mount = r.mount, this.mounted = null, this.id = or.nextInode++, this.name = t, this.mode = e, this.node_ops = {}, this.stream_ops = {}, this.rdev = o; }, Fr = 365, Er = 146; Object.defineProperties(wr.prototype, { read: { get: function () { return (this.mode & Fr) === Fr; }, set: function (r) { r ? this.mode |= Fr : this.mode &= -366; } }, write: { get: function () { return (this.mode & Er) === Er; }, set: function (r) { r ? this.mode |= Er : this.mode &= -147; } }, isFolder: { get: function () { return or.isDir(this.mode); } }, isDevice: { get: function () { return or.isChrdev(this.mode); } } }), or.FSNode = wr, or.createPreloadedFile = function (r, t, e, o, n, i, a, u, s, c) { var d = t ? z.resolve(J.join2(r, t)) : r; function v(e) { function v(e) { c && c(), u || or.createDataFile(r, t, e, o, n, s), i && i(), X(); } (function (r, t, e, o) { "undefined" != typeof Browser && Browser.init(); var n = !1; return tr.forEach((function (i) { n || i.canHandle(t) && (i.handle(r, t, e, o), n = !0); })), n; })(e, d, v, (() => { a && a(), X(); })) || v(e); } Z(), "string" == typeof e ? ((r, t, e, o) => { var n = o ? "" : `al ${r}`; (void 0)(r, (e => { b(e, `Loading data file "${r}" failed (no arrayBuffer).`), t(new Uint8Array(e)), n && X(); }), (t => { if (!e)
        throw `Loading data file "${r}" failed.`; e(); })), n && Z(); })(e, (r => v(r)), a) : v(e); }, or.staticInit(); var br = { l: function (r, t, e, o) { try {
            if (t = ir.getStr(t), t = ir.calculateAt(r, t), -8 & e)
                return -28;
            var n = or.lookupPath(t, { follow: !0 }).node;
            if (!n)
                return -44;
            var i = "";
            return 4 & e && (i += "r"), 2 & e && (i += "w"), 1 & e && (i += "x"), i && or.nodePermissions(n, i) ? -2 : 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, e: function (r, t, e) { ir.varargs = e; try {
            var o = ir.getStreamFromFD(r);
            switch (t) {
                case 0: return (n = ir.get()) < 0 ? -28 : or.createStream(o, n).fd;
                case 1:
                case 2:
                case 6:
                case 7: return 0;
                case 3: return o.flags;
                case 4:
                    var n = ir.get();
                    return o.flags |= n, 0;
                case 5: return n = ir.get(), p[n + 0 >> 1] = 2, 0;
                case 16:
                case 8:
                default: return -28;
                case 9: return i = 28, y[_r() >> 2] = i, -1;
            }
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } var i; }, w: function (r, t) { try {
            var e = ir.getStreamFromFD(r);
            return ir.doStat(or.stat, e.path, t);
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, x: function (r, t, e) { ir.varargs = e; try {
            var o = ir.getStreamFromFD(r);
            switch (t) {
                case 21509:
                case 21510:
                case 21511:
                case 21512:
                case 21524:
                case 21515: return o.tty ? 0 : -59;
                case 21505:
                    if (!o.tty)
                        return -59;
                    if (o.tty.ops.ioctl_tcgets) {
                        var n = o.tty.ops.ioctl_tcgets(o), i = ir.get();
                        y[i >> 2] = n.c_iflag || 0, y[i + 4 >> 2] = n.c_oflag || 0, y[i + 8 >> 2] = n.c_cflag || 0, y[i + 12 >> 2] = n.c_lflag || 0;
                        for (var a = 0; a < 32; a++)
                            l[i + a + 17 >> 0] = n.c_cc[a] || 0;
                        return 0;
                    }
                    return 0;
                case 21506:
                case 21507:
                case 21508:
                    if (!o.tty)
                        return -59;
                    if (o.tty.ops.ioctl_tcsets) {
                        i = ir.get();
                        var u = y[i >> 2], s = y[i + 4 >> 2], c = y[i + 8 >> 2], d = y[i + 12 >> 2], v = [];
                        for (a = 0; a < 32; a++)
                            v.push(l[i + a + 17 >> 0]);
                        return o.tty.ops.ioctl_tcsets(o.tty, t, { c_iflag: u, c_oflag: s, c_cflag: c, c_lflag: d, c_cc: v });
                    }
                    return 0;
                case 21519: return o.tty ? (i = ir.get(), y[i >> 2] = 0, 0) : -59;
                case 21520: return o.tty ? -28 : -59;
                case 21531: return i = ir.get(), or.ioctl(o, t, i);
                case 21523:
                    if (!o.tty)
                        return -59;
                    if (o.tty.ops.ioctl_tiocgwinsz) {
                        var f = o.tty.ops.ioctl_tiocgwinsz(o.tty);
                        i = ir.get(), p[i >> 1] = f[0], p[i + 2 >> 1] = f[1];
                    }
                    return 0;
                default: return -28;
            }
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, u: function (r, t, e, o) { try {
            t = ir.getStr(t);
            var n = 256 & o, i = 4096 & o;
            return o &= -6401, t = ir.calculateAt(r, t, i), ir.doStat(n ? or.lstat : or.stat, t, e);
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, c: function (r, t, e, o) { ir.varargs = o; try {
            t = ir.getStr(t), t = ir.calculateAt(r, t);
            var n = o ? ir.get() : 0;
            return or.open(t, e, n).fd;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, r: function (r) { try {
            return r = ir.getStr(r), or.rmdir(r), 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, v: function (r, t) { try {
            return r = ir.getStr(r), ir.doStat(or.stat, r, t);
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, f: function (r, t, e) { try {
            return t = ir.getStr(t), t = ir.calculateAt(r, t), 0 === e ? or.unlink(t) : 512 === e ? or.rmdir(t) : C("Invalid flags passed to unlinkat"), 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, j: () => !0, m: function (r, t, e, o, n, i, a, u) { var s = ar(n, i); try {
            if (isNaN(s))
                return 61;
            var c = ir.getStreamFromFD(o), d = or.mmap(c, r, s, t, e), v = d.ptr;
            return y[a >> 2] = d.allocated, w[u >> 2] = v, 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, n: function (r, t, e, o, n, i, a) { var u = ar(i, a); try {
            if (isNaN(u))
                return 61;
            var s = ir.getStreamFromFD(n);
            2 & e && ir.doMsync(r, s, t, o, u), or.munmap(s);
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return -r.errno;
        } }, a: () => { C(""); }, y: (r, t, e) => sr(r, t, e), d: function () { return Date.now(); }, k: (r, t, e) => m.copyWithin(r, t, t + e), q: r => { var t = m.length, e = 2147483648; if ((r >>>= 0) > e)
            return !1; for (var o, n, i = 1; i <= 4; i *= 2) {
            var a = t * (1 + .2 / i);
            a = Math.min(a, r + 100663296);
            var u = Math.min(e, (o = Math.max(r, a)) + ((n = 65536) - o % n) % n);
            if (cr(u))
                return !0;
        } return !1; }, s: (r, t) => { var e = 0; return vr().forEach((function (o, n) { var i = t + e; w[r + 4 * n >> 2] = i, ((r, t) => { for (var e = 0; e < r.length; ++e)
            l[t++ >> 0] = r.charCodeAt(e); l[t >> 0] = 0; })(o, i), e += o.length + 1; })), 0; }, t: (r, t) => { var e = vr(); w[r >> 2] = e.length; var o = 0; return e.forEach((function (r) { o += r.length + 1; })), w[t >> 2] = o, 0; }, i: hr, b: function (r) { try {
            var t = ir.getStreamFromFD(r);
            return or.close(t), 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return r.errno;
        } }, g: function (r, t, e, o) { try {
            var n = ((r, t, e, o) => { for (var n = 0, i = 0; i < e; i++) {
                var a = w[t >> 2], u = w[t + 4 >> 2];
                t += 8;
                var s = or.read(r, l, a, u, o);
                if (s < 0)
                    return -1;
                if (n += s, s < u)
                    break;
                void 0 !== o && (o += s);
            } return n; })(ir.getStreamFromFD(r), t, e);
            return w[o >> 2] = n, 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return r.errno;
        } }, o: function (r, t, e, o, n) { var i = ar(t, e); try {
            if (isNaN(i))
                return 61;
            var a = ir.getStreamFromFD(r);
            return or.llseek(a, i, o), k = [a.position >>> 0, (Y = a.position, +Math.abs(Y) >= 1 ? Y > 0 ? +Math.floor(Y / 4294967296) >>> 0 : ~~+Math.ceil((Y - +(~~Y >>> 0)) / 4294967296) >>> 0 : 0)], y[n >> 2] = k[0], y[n + 4 >> 2] = k[1], a.getdents && 0 === i && 0 === o && (a.getdents = null), 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return r.errno;
        } }, h: function (r, t, e, o) { try {
            var n = ((r, t, e, o) => { for (var n = 0, i = 0; i < e; i++) {
                var a = w[t >> 2], u = w[t + 4 >> 2];
                t += 8;
                var s = or.write(r, l, a, u, o);
                if (s < 0)
                    return -1;
                n += s, void 0 !== o && (o += s);
            } return n; })(ir.getStreamFromFD(r), t, e);
            return w[o >> 2] = n, 0;
        }
        catch (r) {
            if (void 0 === or || "ErrnoError" !== r.name)
                throw r;
            return r.errno;
        } }, p: (r, t, e, o, n) => yr(r, t, e, o) }; !function () { var r, t, i, a, u = { a: br }; function s(r, t) { var e, o = r.exports; return v = (f = o).z, R(), f.K, e = f.A, D.unshift(e), X(), o; } if (Z(), o.instantiateWasm)
        try {
            return o.instantiateWasm(u, s);
        }
        catch (r) {
            d("Module.instantiateWasm callback failed with error: " + r), e(r);
        } (r = n, t = O, i = u, a = function (r) { s(r.instance); }, r || "function" != typeof WebAssembly.instantiateStreaming || K(t) || P(t) || "function" != typeof fetch ? H(t, i, a) : fetch(t, { credentials: "same-origin" }).then((r => WebAssembly.instantiateStreaming(r, i).then(a, (function (r) { return d("wasm streaming compile failed: " + r), d("falling back to ArrayBuffer instantiation"), H(t, i, a); }))))).catch(e); }(); var Rr = o._emscripten_bind_VoidPtr___destroy___0 = r => (Rr = o._emscripten_bind_VoidPtr___destroy___0 = f.B)(r), Br = o._emscripten_bind_Graphviz_Graphviz_2 = (r, t) => (Br = o._emscripten_bind_Graphviz_Graphviz_2 = f.C)(r, t), Dr = o._emscripten_bind_Graphviz_version_0 = r => (Dr = o._emscripten_bind_Graphviz_version_0 = f.D)(r), gr = o._emscripten_bind_Graphviz_lastError_0 = r => (gr = o._emscripten_bind_Graphviz_lastError_0 = f.E)(r), Gr = o._emscripten_bind_Graphviz_createFile_2 = (r, t, e) => (Gr = o._emscripten_bind_Graphviz_createFile_2 = f.F)(r, t, e), Mr = o._emscripten_bind_Graphviz_lastResult_0 = r => (Mr = o._emscripten_bind_Graphviz_lastResult_0 = f.G)(r), Zr = o._emscripten_bind_Graphviz_layout_3 = (r, t, e, n) => (Zr = o._emscripten_bind_Graphviz_layout_3 = f.H)(r, t, e, n), Xr = o._emscripten_bind_Graphviz_unflatten_4 = (r, t, e, n, i) => (Xr = o._emscripten_bind_Graphviz_unflatten_4 = f.I)(r, t, e, n, i), Cr = o._emscripten_bind_Graphviz___destroy___0 = r => (Cr = o._emscripten_bind_Graphviz___destroy___0 = f.J)(r); o._free = r => (o._free = f.L)(r), o._malloc = r => (o._malloc = f.M)(r); var Or, _r = () => (_r = f.N)(), Yr = (r, t) => (Yr = f.O)(r, t); function kr() { function r() { Or || (Or = !0, o.calledRun = !0, E || (o.noFSInit || or.init.initialized || or.init(), or.ignorePermissions = !1, S(D), t(o), o.onRuntimeInitialized && o.onRuntimeInitialized(), function () { if (o.postRun)
        for ("function" == typeof o.postRun && (o.postRun = [o.postRun]); o.postRun.length;)
            r = o.postRun.shift(), g.unshift(r); var r; S(g); }())); } G > 0 || (function () { if (o.preRun)
        for ("function" == typeof o.preRun && (o.preRun = [o.preRun]); o.preRun.length;)
            r = o.preRun.shift(), B.unshift(r); var r; S(B); }(), G > 0 || (o.setStatus ? (o.setStatus("Running..."), setTimeout((function () { setTimeout((function () { o.setStatus(""); }), 1), r(); }), 1)) : r())); } if (o.___start_em_js = 171458, o.___stop_em_js = 171556, o.UTF8ToString = nr, M = function r() { Or || kr(), Or || (M = r); }, o.preInit)
        for ("function" == typeof o.preInit && (o.preInit = [o.preInit]); o.preInit.length > 0;)
            o.preInit.pop()(); function xr() { } function Kr(r) { return (r || xr).__cache__; } function Pr(r, t) { var e = Kr(t), o = e[r]; return o || ((o = Object.create((t || xr).prototype)).ptr = r, e[r] = o); } kr(), xr.prototype = Object.create(xr.prototype), xr.prototype.constructor = xr, xr.prototype.__class__ = xr, xr.__cache__ = {}, o.WrapperObject = xr, o.getCache = Kr, o.wrapPointer = Pr, o.castObject = function (r, t) { return Pr(r.ptr, t); }, o.NULL = Pr(0), o.destroy = function (r) { if (!r.__destroy__)
        throw "Error: Cannot destroy object. (Did you create it yourself?)"; r.__destroy__(), delete Kr(r.__class__)[r.ptr]; }, o.compare = function (r, t) { return r.ptr === t.ptr; }, o.getPointer = function (r) { return r.ptr; }, o.getClass = function (r) { return r.__class__; }; var Lr = { buffer: 0, size: 0, pos: 0, temps: [], needed: 0, prepare: function () { if (Lr.needed) {
            for (var r = 0; r < Lr.temps.length; r++)
                o._free(Lr.temps[r]);
            Lr.temps.length = 0, o._free(Lr.buffer), Lr.buffer = 0, Lr.size += Lr.needed, Lr.needed = 0;
        } Lr.buffer || (Lr.size += 128, Lr.buffer = o._malloc(Lr.size), b(Lr.buffer)), Lr.pos = 0; }, alloc: function (r, t) { b(Lr.buffer); var e, n = t.BYTES_PER_ELEMENT, i = r.length * n; return i = i + 7 & -8, Lr.pos + i >= Lr.size ? (b(i > 0), Lr.needed += i, e = o._malloc(i), Lr.temps.push(e)) : (e = Lr.buffer + Lr.pos, Lr.pos += i), e; }, copy: function (r, t, e) { switch (e >>>= 0, t.BYTES_PER_ELEMENT) {
            case 2:
                e >>>= 1;
                break;
            case 4:
                e >>>= 2;
                break;
            case 8: e >>>= 3;
        } for (var o = 0; o < r.length; o++)
            t[e + o] = r[o]; } }; function Hr(r) { if ("string" == typeof r) {
        var t = I(r), e = Lr.alloc(t, l);
        return Lr.copy(t, l, e), e;
    } return r; } function qr() { throw "cannot construct a VoidPtr, no constructor in IDL"; } function Vr(r, t) { r && "object" == typeof r && (r = r.ptr), t && "object" == typeof t && (t = t.ptr), this.ptr = Br(r, t), Kr(Vr)[this.ptr] = this; } return qr.prototype = Object.create(xr.prototype), qr.prototype.constructor = qr, qr.prototype.__class__ = qr, qr.__cache__ = {}, o.VoidPtr = qr, qr.prototype.__destroy__ = qr.prototype.__destroy__ = function () { var r = this.ptr; Rr(r); }, Vr.prototype = Object.create(xr.prototype), Vr.prototype.constructor = Vr, Vr.prototype.__class__ = Vr, Vr.__cache__ = {}, o.Graphviz = Vr, Vr.prototype.version = Vr.prototype.version = function () { var r = this.ptr; return nr(Dr(r)); }, Vr.prototype.lastError = Vr.prototype.lastError = function () { var r = this.ptr; return nr(gr(r)); }, Vr.prototype.createFile = Vr.prototype.createFile = function (r, t) { var e = this.ptr; Lr.prepare(), r = r && "object" == typeof r ? r.ptr : Hr(r), t = t && "object" == typeof t ? t.ptr : Hr(t), Gr(e, r, t); }, Vr.prototype.lastResult = Vr.prototype.lastResult = function () { var r = this.ptr; return nr(Mr(r)); }, Vr.prototype.layout = Vr.prototype.layout = function (r, t, e) { var o = this.ptr; return Lr.prepare(), r = r && "object" == typeof r ? r.ptr : Hr(r), t = t && "object" == typeof t ? t.ptr : Hr(t), e = e && "object" == typeof e ? e.ptr : Hr(e), nr(Zr(o, r, t, e)); }, Vr.prototype.unflatten = Vr.prototype.unflatten = function (r, t, e, o) { var n = this.ptr; return Lr.prepare(), r = r && "object" == typeof r ? r.ptr : Hr(r), t && "object" == typeof t && (t = t.ptr), e && "object" == typeof e && (e = e.ptr), o && "object" == typeof o && (o = o.ptr), nr(Xr(n, r, t, e, o)); }, Vr.prototype.__destroy__ = Vr.prototype.__destroy__ = function () { var r = this.ptr; Cr(r); }, r.ready; });
    let X, C;
    function O(r) { return { path: r.path, data: `<?xml version="1.0" encoding="UTF-8" standalone="no"?>\n<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n<svg width="${r.width}" height="${r.height}"></svg>` }; }
    class _ {
        constructor(r) { this._module = r; }
        static load() { return (C || (C = M('v7#aSX4zZD5FF:nb3Yo453i">HXKHHngW*$OQCry4e8#8icFr,9uSxAobr:]&5,DH`"^sbV5#L_PSTCjSNdss<1/h[Mk8Vfq5$Gih6q^_Z4!YNd<bgs6Y0Uq/YRSN75I,(OCNSoRv,Ks>,09x%vid3>!FjNkU`o^fV*#K|@S>Jd^Dor`*c9$"d+V#=&8aNw>x:Nr45u0CB$oh|g.B9Dg;!}11}6j@]^7H&kNs{QF$hu^r`g[@5hx$*eG0j11HVxU5bekvBmWfA0[L+6&{^l(]%:fz%`_>%OfGRGQceoqo3lsC#4La$)N9^x#e<+b<Ji;"e@CyR[7=%wap.X1o%x<i[B7`^gsX.N^eJD2,l=25mE4ClsY%JA<$jyju^w7nkSP2wUh0^5?1yp]#|UFD/SSoU!HzR}2TLY*GV}6!o!;g*?N&U!?0etlw?i3;{qRs6^;0*YwPp?f59tdQ0@_^VKN:h$0*!.cD*t[ySA<ohZ3Rn{UN,dVO_6:3@}ZN01ulvG+`4p2f!dK`?]F&ehy#d@=NG_fY7d^vm,]QU~6R`(bb0o|{_p,S;_4/Sk7d^Sb.=rof%+,9i,@GR0lZ)h3(O{0@VWV.tQ;A*Cjm3%sx;wuwv]k,]o:hU,c^U.sf`W$1$YK.3er,50!~H33urw?;d>7VgXH__y&5:n8zNN,pq^Tc:$oAM.`)nxY_=;96qa>J{`3<^u2`8x>Z^QSWsPdJv0gkPANx(*L=oATHV3?:jezJaWJ!jkVy|W+SPK?Ga10=!!dowm)?VISZhsq`$;U,hP~aq_q}0wTs(L_1;CV_tz[e!lru?$fB[WpP_?q**a+A/tm3OoO)s+I4;Mr%Op&<5/8io}UL3voZQ)~#UPgOs@]*z7e_Z.=U>mDGiK9:=c>Wl#>jpre$<[_4,L@%g|g#ci/i5Au/`$_!cD{@fDR2mubppLxUX"RM}^P^@}7;6!6g>4U0m<Ne^}PrUS#+,8VW0k,bn)GCxpomyU>V`Sk&.,_?:xIlT7iLrt!3$s4N+T&WUDGp8+N]0TRkxzNu^OgC_aN7$HPJn?EHq90GrBn%U_trpH#;o=oSZj;VF"9Xp!."[+bb!UNvh>bJ^v[aNf[3wIrwh$Xq2&KO,H(1aRL`_@bK/6;<]jb?,9YN09gQ{c^wBH~lDbm"}hdlQHINnH^uq?]kxL1ZG~r||Bd11Z>;7@V;L~g?7eH6R<!&:^)R(u?R+&~n[_;q}t7A9)}_e7.(.<9o,&@(#d.X3QhQZ/;N@m|k?V]vCQaf`+Z7;)|J{We/292t.#n(.t_:3{|Tgz4>#n&~SUzE9SMt~}K6|j7f=&6m6j=#F^^|Jo&e*=}R+*3_55!F@m9ryol_%Nt[VRUVlz=t2]{<RCt7DcuThYF<]nyyxR]&v@U6Q%]kba,G6jp4<bgc}IS|C+>G(^gY(OAE2`X];t:5[?r$avFGVM9qb?,,]%`/Zm5xH%mv&c+c=RHp}a<pu$7Ue}RB2}zroG1Q.LktY|&:/A7QHFXhVpu$7eDwL{85{z>AL#Uy|SY[$D%/{I%}Rm$8{K<(czU&OBSu$[1Yxwp1~dQjC(Kn/M<TnD8m~%)*`T.[`~G[;dPkd!e$lT]A;fVwC`a<Fe_SF>X$l"+/ow/`2%!j0ZkCnWMT!,oPU=G.p.d$RV{K<1>lr0.,29L8i$*:{]mKj]Uli&3vhwd3a%8AH<aFscz}dz.B3EcVt;Vy3@<,"r=HqcKET~4+ZD(fdc4G,_K5ZTK{EUfPI6jqi>U^44`Meh7Dll9HpHdwg|WiU,c6+Qr,U6QKnhr+t$I{*VUSZw]^ZnmIYJ|%drEtZ_t%`+9n.]U5?$=n3_G]37UKjB}y&$_[xTrz7x{x[V_(y5.m3l~V3ZY2ED:b)Lv0fHy_3P`U+~07.WKEFc1dGJ24Mjj:9){nsW`tFvlGJIjw`":SUgd2V%q;xk7e@Z8D+v5moVbto4<[@RU|JF2.3lc//!Iak"%]``!lVoR%]5DyYV;zByY^gNqV*o`V$g~:zR]9&1y_#z<yH@jKZ+uH*v6tdKjn|zr=#j"[3qJ|6m,k**mJ|hZJ|ro3=YWyrcuz[+rbF[q|rf}@}?eZGu[;:JGW>RH;wDbez/ESNP5?VY|j7>Lg>+V3,;#NioV>]E=?GNm<uU;gTNyh~MqV*Mxsp?eAjB}^VK[W3dxh]EDwsz!%JmpZh$:*w=a@vWMbW@m|y$]zniqQZb5>Un[4<,&w9SMR3sB9`7DYHZ(FL~N2L7r<y=(V{dJ*7_W"6L?~NcW"6&nB,6=WsV%hEf|sIm$"Ij0Yru:rozLUk5:jUReZGi/>7yMhk4l1<XW8pvkOF.7,27VIS$6R3L{wBh>w!YZR^nY?|4<v]+`;ao3n:7p0;yhH&W=X}t,/.H:y&I9Gkk7vl&O*3M69U(opdvSGC+_oDs]T6|@Oyb=@W:g;)n.z;oR1{b_MsJ2hiGyHgahmL[v$_K2f[spmNV:3tC_a=gTFzH`qF((l0h8yMz[;:r@<,k[e=5M>.Pz9{%RvV7VarkW_.<r@{td3.m^6G0s,Bn|c^ss+V*&s3F7l98/7$,QQqg=7UBZH/o^~61vf3F.[R=V0~:6f`fV8m#xt@0VN#VoCh<eO^eK<eQf*@]i`[*EOm>*G3shT0h$G%0[T;ro!KAPhM~+,@FITVy9<+Up!H&Cb?]Tbq9K0ftlK2tiYL+kDz,M_SbNFvgu=SR^KK^mRU).Yu<od9u:J_8u!z(&LghjA0zl6*g0pwC>$h|ldD?Q.*Y<oR0/H,Irv?>9P>5#;(S1hVEqRs~<sebXw=.U;)wnk=UUeE[+/~[4+z"G&sU>lR_of;%6eLfM6=w5k>+ZF=y~6G^,4gtl4o,u=`[1&h[,|_FM?@/r^`bQD15RIx)Ij0jzZM?@9/u/~S#"?,b@YTA3`,d@&1^AV,_YN)jFa5MTf/IrXGuRGDOvPawCk7PdFU;dRU<<+cB%j]%&)0G(`?Oidv<%c:Mvxr>@S@wv!$_|NqL`IK+c"GLQ"#S%n7>TR{`+.Sy,RerH2}g?q;#qQk}T,0IT/e8Z!cRUgd7yz@nbJP6bLo5]XT4Zy5"<8?7H?cEhhqc9,.gBB6d9hO]v/;Fsc9Hp^1hO$k.emlv6qeK80d>8hlXj0~kE;y4v@D7~gUyIs@<rKA<pqm$p36fs$6E%sq5j@!<+Y<Ir%O6=roswqog9sqgKc;_[J/E><i5=q$J_`!SBc^*|),VgesApp(rppP1aP{H}MVc`x]$$6lscCnV]g=iM|aC8MhXG,K_TL,kA4j,FU74>B]%o8wh]wvrU4?x.&ol91t<ipcP9UhL8nC"ycz_Z.6DItoI+}]=|+,i[3E7;PyO8X=A5bZ:,^&z!X@f8Z3Q1,{fzK/,KZgfLoR*{6hQJn/t~|&s$8pZh$(*`.s+?H=F={f4wO(~bAM},pU5I<p,3+[nkfLI([,hy<iL3SeO7C&WMfRVs$H"/J}$C2UfuI82},J_:yjE"/%@6L8[Z,&QeFyU>R`mSLa]T:<q99,(#1qH`&`<gmVH6@1T,%7.g=7CZV}fR=,Q8?R!FjW}+_%.gOm0~@.k@YppllWf5~bt7Z{I2J(X%|(_K3)B]Q~3i;^J@6)~N+o4auwm1>7p3"@}+~S6^Z~S43$h<n},l%Td=n2$:H@h~W%c%#duTtoP_va]OEK9^Gclw9$V+0VJ#eOY*%,oVEa2g1aJ(o1U(7gwm^T"{:Vo3z!kp6(&#c}x>1swZhkU/`98%jn%k7Xd{H1<V8u}bekqk"GS;`_I^&;LGrolyZmg,;__gbG"@15moz51aSYW;9>7oSeC>z*k<R()NK8Zfrl]/<.}C4Lgk/F&Y5gQ0oV79fLquL9L}B3/9;0;rJr0pjWuwf}ekg`tU&7_1xumUcG#[jPY*+IMbl7ZK!eOIF6]V^5A0NjuSkPB6OD=oMQlY|,9Y.zf}{3T#cphPB6m3!0y*<_X+<_kPY*+I{d.czUh9cQIanqZh7pn(RHc*dR28ioR#y3],m%VPP/;K3)^8pK9ri}Qeybj)UUU+8_(]W1td];Ir(OLKKj~N`&D%ion9u:DVApoQM3wv8,,@E38|mKq4Ebh,YMjjWZ++3h,]^VK~*czU&e_{;%*JH,eD2r)CCj3w@f5Pw=F}SN}3NF3y6?I(2<y|mK5|.Xg`j]dcG+>#|[+bRqzR8[E38|B~9K@fRam$!$_zsps;W,i>2C5>,{M=w5D`,]|3/8,6INCjh],6r0(&SF>.a<OR*7|]s|i{X*KK,cnYQSrogk]#Qvv![&0I[:s{(rRr3Mu6u:rZl[V`"@64Gy1uWUl7a3X*KKNq@iN^Pg.[(UNnH^ssk7TM&eOIF67K9Yepr$c{&pH,+i<}>q%#W,Y<I(ioo:spV$Q~y57n=6|U5?od5gO_9.5O99F;v5RHYp}?lcnJ[1&Nyj2X*TOsZ}!PdjzX2Q.s@+Q^cjqM;I[3*V2~QsBP|jh#78(4QDp7Y}9]!kRM%DkWe00EM^q#^W%GkWN3I.4{UJs40DSLxHy0AH*kdp9]d;X&{_(*/v[u6jXYRJ==9%ep09W&o!q?V?m<FGfCqT_m==SS;.L^?$:$4{BYJ)?x&JqTG.SSb}hm]hYB6EW<"S<hy4wDedn,nx&krt~HfrbS}WuHvf9<t4@D1#t/T^;<V2h/[t*lHT@8!kL5LCr9J=cSBX4J7=F[@v1jx:;/IC]h^H6kIu*T/x8fp/#j85lEd,I.Z/YC%k_06kW5%ESLLm.Yi#JXdKlv$<_X9"{Kq4mO)yd*/v6OF5!MVtXH=5=vNvSir#8y}A_P!+B<~y&uPPt%a}%{{[cL@D|hN~h}@E|eQ!*!B:{A>Hll1~@E|eQ!*!B:{A>Hll1~@E};Q!*!B:{AwJ9/O~+J^9fiujB6]BKm4Y1{Knl#H?Q,f05H)EuJ3~g}bS>WzI@W<PV/pB$XPTgS:4pEBk+G3~.sIW)i;P#kiX>EnzK.1(YC&Ry6g#*4bCzlemZEa/YYP0AHtg=%c#2/VB=gM02kxXmHxU"C!kyXcFi{O2n4VE.rSG9<]F9wFlq6Vj#X6U,|}w!<pS&4:Bwe1xS/BBje8)"4$4ID{b4wsPVt<IU0}X=tAP!!eZKz`XuE)<!MbthJ~`$M6q?"[J&:}X{tNIXj#yXB98fzuLzCj^Y}c}%5CXbFi]t8~WqIbh;#fZHurL<M!yrB4uCcWm`[fLQDFN!5%L.D)g9Mtt#P=5#y_uEQJ*#yEC><!+,yGCB(=/yLVE:u9MytVNU0jZ>"1Ng@!y]u`N1B#y,B):9ZhL%E06eGyL$D`d9MLX&I4w#MMX*Hw+<c,W"IsUgZNBClmOoZPB&lQwkLKF><<cjOA7KO6wDN1cGcadMYHa~c5D{cDa~W"dN*G0AuygvzX0kY#eC{G0oY~QuOP0A6BJv#HaHXITXDK6k0BPDa1c1?DNvOrCSpwzdOPa6d|/DaEX!Rv7MOED+=C614)Q1?DaQX]VXDQ0kuTtBdeOex^tvzcc^FXJEN!c]I>1wz.YJXNUYw%FlE=ID6#cYG%f]5I01BUVIwuI"Z9kQ0H0$u|Qb,sP]IXCaRCN#40pg.]iC{I0+uP5vzgcnJMbD6V?e0I!FhF6)4EQ+:Iar50QyuGN.4JR@Mbxbv,!%%a}c}gMO)`iTTF*bxI+gP~r64M0yQfxhv(:/l1?6?EwQM,BYbTdX7{)sL+w;H6]v/@vsGlY#H%QB*AG[vEXoE}!GWHW7:+_0?*FRu1J+"f5K>scGM,FzYFFp7e](n]vQ)AalF~r"Cx?.FnuNRIuD|wc^vWX)IgjAg/0XO8IxZ/hGXqG:.AYsiNYn"wH9uyS;1*[I0]uj9uGhO$Dne`3vzic!0]$BdjciIBrg5<4(TTJrdTQcwABQOxD9c5dvc`vnM9DPm@cX!`vpX#HY!iq.n{vvXUID=nTu/`o<FIv<GR(>mt?@[9LWEbiLH"LMw2X~JZoui*Mti]FYvcUrvVx6(j"FE?L33"F}v8X@0&SV9Az}vwM:Eep}ELudfy+cYO4ddh5:I)y]ZZHVd3!sLuHUf88j+CuzbtfQ^ZjCXxPG)bf+yTC?!q6d4+!*+MuMgh53!xL,Ej,I$tP;I`h.(/Bf0"Wx4_wIOpxajKXsO764)3!w"YXIK(H:1Yt*AWHddGe:1.y3C9%2{6R1LkF*|.I2+ku6W;H7RQz?Cx4Omm+qu{igM<13+I0AD/w88bja)(f1p8!6LhGTNcfkjdXgSCQcf4+!uTb}@Tj1zsDgdM@jC{SqY:14+:u*ly2tPIz+x9deep_4+]u&eTvUj~A)x,f1pP&|9%LDI`ncf[y:xWiTvgf^yHygkTvVjTu3Nr9PT3k=/cYUFkw=8V/zB:Z_0h#_W~G77fmX/|B=g!{gS[4GFmlRNiZ{LkD"d=5iZ|LhEw+!+fL0DpgY0!y<u:O3|95gtZR>O$5GX"IBz9MmtAM%dI07BH[_kJNs4?P[lY0YqR07j?PV9JlADEzE*ZwaMeE,fS2Mf|X6LND*kDTWRp+A0dEAu[Z*0aO~Eybp=o9dLuZ%tGwUDTON<@[M<qcX!>ECgtH!F6zn/f<;*6S,xkXajDg]:[Y.WO#2h)s@YAXat*Y1w>#|B>9Zb00u?1Pexxs@f?HZ+G^_=Y/1Hhe}a99X$9%#1B&taP{~7~P?0F$hR$%v9&;{dqp|!}8!lj!&Q=jA;iQ$]Qe9?[=BP3)6FW)EAh&fxt}Y$d{DJWgG%]dxy<LGSz)eIBvSw{qoOCY>g8a$$EACYd1EM&dDzFz+MvZ5xFNKdvZoGu%H7|DWOn5tf]l?!9%Qeir,ib24]I~|,ovo+rmAP%ebi@YdKQHg5{<]#X,hw;ax%^}J?6r3IaEs`;,z_1)1LgRlFzBxiOw[Kkmv{ai],jI@%5cSxR8c;=I0L:;l,zl:#B)fI^.t,yr]lf{X5Ok?05f^0w>%{lfu;<CWOFe"=D$P8}9QNgVm+|C^cq)mD)1L`8:Om"1;E2;q%te.D@ANNo2Kg@pY,c$nfPYU;YP$+EC,)LTng%PP_^!nf<^#TF%/oWDsDP=VD?^OJK?{|g?LesE@QWmM"$E!xX]GejG8ckTrTqu@==gulF2b{Hk{ARN1H0k)UAQE*pf5,FjiOAy64W).(`mFJn^nFh.s+6p`yBg*8s^(lqQ/<^mEW?;5skEE%h.w(z}PG0GT)I]+Vj{TRn=&M)L>KCN4I/O*C/%Mg"F"]]xxFCg!*q+}IFZ4X0{:QP|5V]R4)B8DrH)C!0fis48.1HK65klun60F)[k|YpOIE5%|fh#ME6nIkgECtVj")c_~8f.<}2mfiUmQsH}iiQhi9pK{YNR[E]([CUR7vof+a"PQCXL40%Q]ad<~70(;KCW]Bga/FB;zFgV:Bnh]ah=omQ_vZLYqf@,$+g{1VlQ=0rO[)s%8,RUAW$itelA/&;Juh;MQ8SDYTU$d?A&Et|>9ikR09+=ch,j(v}P(v4Hk9%LY4^,osT_{RyKT)JiJY7^[CfmYG5*,;TZXvXvM<kM6aBI}14L1dku/F.SL@(dh$M?8WIAK1M?^hQNsu_0|>E,[fn,g{a!1Wu}fvvtD;aBG]_l(Z`c(8@h>Lv}[su{;,uLBq/V^$ED*R/&241K1d!*8(kngg9$0_.|mlxIIqIL:{]hY6<:C$clFQHRJ0>8g{AL(Q6)jq1M}@Mf/E@dc,cc<t:y()DRXLI*NrPD^@1xGl+[EGR=@=PKeUW{v{U16_Yn+{LdGm<hk;QyjVLt_m!d.XMAoXP7S[iBs8mNUQHCj._UK]M7hK>C>m(n8YU!d;/F60[whpIQ884xTBY41.>pB&"fhw[/9V3])q7X+yS5l]&q.#>g.}35jx>=`r.Y.CP,Q|5Vdxr;|g]C+%%g42^yK;@=>/21dI*LL(W@Z<:p&L@kJKW?RX[kBtoQ.@7CyjG{{{{{[{$q;Lj7DI~pRSn6<jB|x#G1V>8mx)#;ZTJBk0_TuVUTD^[fU7AQ!nCn^fo<M^}fP7$SaWNg//}mwqu4?%<X$%x;M;[;j1X{zao5DTm8mtqLP2HDljI*Ae:>SFP<Z!xSA<Z!qO~9xiP]}9y{H^16TZua}mI*J;PcUKqCTZ&e4tbG=K{MTZ|PjG3MH9/(Owv6xiI*U+UCCeX{6ufe83GWvm3qO8Ua{NLrX]U,[bGr2Ojy}6wVY{p[3Wxc?+iwzVNNAO!iQilHbw}6l@0PIRpo&3iy@OpNx7k0(#!t`PIR^SwG~0J$=ONaW6OaQYR8t:_Nu]RP|GBO(BbwL=n02c6d,K+dRa@<;_1dzV"[#GQijN~/kN/cOZH5X]}77ufemN*#A{*5;7(G+dON4f_b.ZGr#Vni"[+R#GQilHzz:8zVX]qd^dMrs:y^EPqldIHNAe.ulfH5`O":xGXabe&gxcrere_:M6NPM,YGC8X~^XsM0A?_x84IpXth2924Q;@eF]].247q(BZrg9SS&r&:!V3k^2mCg2Pooa,5[PR+F}Z$~FH2X2I~[omY=1s%>U(ds>[La`M,+Tw;G%X/@ea]^yPX3CWE/z;&1UQN?VbXd{n7|O!)8:tJ349qZcZC_f]B33h!%&n&X/Nn6k7[ps,e.`rea]PeS;(o$PE%6$g[Nn7[6t]m{Q?.},V/<dGn55ir5VnO&uERhau_X+aNf(VK8a,GF?Y@_i_&fY"bAw.(q%zH:}kCP.THW{sM1^]`>0xZ(><cm7TM,t!!p`Cz[|u6>>g;mj!a%Rd1Ow<zmU;LO=]$pp,9J@p3dv:ceH1EP5]PbX*U{h!B^Th^xujZE3JcSyxrDHPkBDo""Yey.oQo:i%EJF@D81!iXu>x!GKbg!WG0fQB)MARKn*tC5HXa@omfYgw<_t0?`(Kt1%[ZkFfs|H[Qa{|0o2v$Ulc;k;Ilyb$.yhR|{y]|>dxo!d#4y7:e.W7A@eK}6{J;Ut:0NB3<GAFrjwm{b41n3Eb,1~p?vomqF9;6I>X>g(fnfAJ,)%Vo0C`_CwCnYiU*%Jw5jW1?hZgu^MK:KfR8]5<%{h0]w%{3$q[%]h&WJ?.i*~9rkhqF7WJG^nXw(%oZDG_W[f9aHU+<xw*1th`s4p:qV<}5W}<*9:qu|@S)?F`O45S)?j3(Fp.1aq*v+iJvZ),wV@r>dyuw.8VI%,^H?D24{LDp[r4^N/3;q~G1|w._ywkZjs{eRHxfn!?LLZ*G[<_1J/kxx4<O4~KR$PL|kW!j7#FQhdCl,*2qSLf[O57`&[|Q#=uagnDL1g[*X>b3/Rl*GW$9w!ejnOo3/WGLqI/HcZO#T?63x#MkL>}va;ll]1,sp7aS:lw<.p&eT|Wu&#uwr6D:@q#+Z>vNIed2E9F8a!GUYBz[V^`M=jDhWeRh)&<g)Nb8(YQPZcM1+FY];f>`yZZHn=_:uwC;n6MF|lZYS,a:qCb>Glsf*91:.fL69MJSdb4syLMk0+r)u&kbXPt)6gjjT.Oy|sw|>jz/k,0x]hN|7:HcDdcMMMi{:O~p$e/808~7fA<c7a3`,j!Uow*UKi8yvPI01&bKNK.xFdc8vQpIPHb,nCW7F(*%e1kA+2%a48VIMpRsWo)XuO&MGOGccO&nFOGccTW7F#*[+82jH[R>8o7zb85OnvD?%eF<S!Vh{gF@2=3$b9$)J*w(3bm7!i7D*T#)JY,pq@:KHLrYEto_de/jkJ^7T?9hi=tpCXE9{x1alK`fh=^!nv_gkxUARas_NPr;%:wU8kk5:+)S))9nV8e"FXN097;"%EINR3$n*!)tOU=PRY9porwK$""pwLrfso7<+bTrogx4^+#.8pL},fC<]_Lhlku#Od{HB$Lqu5IyF{Ly@6r/F@r<cc){O^xVj.ys]Q^IJ)4wg>7?uBxu:gGQBA(+W:gb*=d>>]F+9hKeT^bg<T/g55!abpu|bvhjEY*oRzbiXeB=f29$:z.^%l>@UOI2{!{J85_M59H#yvMEXM_6r"YqF"<b,<ZQNc4>*N/kL=J@Q*(MLOy~z4NS~FE=fD,0yI4k`d^EwL_KWL2Rng|R(#fxg4tqw8E+4ecgmSuk|bS)|X!Kd%|;@;n"?V09L@2:zT7p2m?=Gv(8VE{CC?uEd$qzVH6{J!;<Ily[8/3oU#PZXL0>VH`$z)DprH5o^`8G%,Sf;Zgl2olexo&!X@qtlX71{T~eedTw7[}<d,yul>H:6lrf5Yu;D6z=gD"V>&omxME%.>1%+JYG1Xw:wpJzq$hFYoo{{;xk:!7`8`ql6HrFy,]SYq20L>[po"i?7b@yht>yKNzL$;j#}Z;~nWxr.N^%!Dg}JGgUVMS<fYMr|"zkLkRkLIFm`Ijb#&^nh4v0*l$Y":)[!TFDEW&Intrkm)UO:;)94:j[j46MBNQ^4uTm?GUG(Oxb@e$9E6,r&Cs}[3gA}z/$M/?]_@f<Qm4p|UV)e[_%_w.,?#J;fFVG@)^G_mhiQK<a..E5*+?__~,~F>JlM:5rScC3_BmH;t6sN/3/@alx$>"FjnlE[x;KM#g"g^Z:,FDL;~2QVJ#"hMQwKct/?n?xV^(J>b1YP?(a60pf17W^_G?q<|tfGL)XKHqWqYgRRCb?^o>9sNk@2;(&rtIMx]jp3[V|@wR+BE^X:Bf8vw*oBuv!B>EI]q<%b{:)|J<c:Y%kodygXUSh&.,PM`.%oRU//4T3ME:#vAd,@|V$v0f([(Khus:x,+X@WndD`g&QZfbLQ8:EFEIh$FbMLw!7WLLnZx6|SL2l;z4R{qu`LNf:&eGdvxslR`Bpix8BS8Cu%%B}2V}#.i^hx!XZ(6zj8H&p.M}d>ct*~4&k^28Lir.Fb8p2?LRwl."9J.qCpS9G%CnOh!Il2Kgn9g`H5`)$GkL3=W_qEroN3]`OtU:$/F1bw]Efj,Y1Cv?que)2jx,4Brx&Vo<+sbbvSk3(xEjz4*mvqyy<)f@Y$T+g3(x9+Ir}+*1r}DK.]qe6M],E2pV)9A==t%WH#^D}%{]7!ZuN)NUw1L$$:l6+q$xPO*Y$:[2?t>xHN,)Z5+F)y(eAlwxM$@qOFR))wF114[`sRTHud.|tgYIMu?QSd?vOyLi&CTCH%Y5m8h`~tRpmM`|@EC(=9GkcRqLj~,rF;/2{L,K`uLr&PL@gmiue]Mqd|hp3mz:~U.,v"73ktj059gKTE7![y!Ex^>}4.)w;B+dIw5E~g!|sx&VQhF=Z@M<5da&0}L6|,v6/9|loSrwoc)$4yqZi_&ej+gHxE<]rw}GLVg[J}DxC5.l)Fq(PF;U%lmk{;m6+?VL`y/K`yf_6&2MsL}ZLG8%}Wh($y~M0&E%H{W=P9F}VYXF,)":zBqr6,I(t]t@I`A=^za5CR<t<#@Hdel9`#.l5RzrgdBRH{#m@rq{1)xflV{Ph9=^+9l>6>hGG}5l1<wr?=r)Ms,va2(yek!QUv:K0M1D+%79)5R;qg+Wvh(Ge+S_p:X_wU${7Gz~4iRr.U)`nXC*fBTgu/6PT{9=V>L{nke^GvucY2$)5./P31k<c0giR7QT:uNX)TkCkq^2M@4nmk]gQwekGX8&yr?:1AUXXs3n8!U9Be$9(.Srs{`i/Qj(}^,]ls*v$%,*/pZ^5>lsCzQX3C&orF=H?gju2@E(:?#MLhQXx>v4@_KK|jrDU?7rMoQ+k.f8,LLOhFFJ_#Z:UX<HNm<+f_u+Na3_>2G[qL|Rj#tw>wxBz"T*9PFiH^bv,11+}CnsT81Apc/Z!SF5}y3Dq/`h_KG??<LiIjRH;0[f.#8y%s([@B^+0VH^ZlOrmeq),tPNLn4k4H=r+!T;a*Tcq@<;Z/[;V.A?Z/dX34ZD3%$>Ycd2nO9Bm/90.({E".;0@<5F<HDKe1c}rIiCjz<>@Q(HyNlcH$N0[cEbE8`.xsoXJ[H%fd@L6=jZaV^x#+*Xv55d/t=c<5~Mkxe>CKU|EdSS73Jr[a)1vL/.n7EOVjSP"IO#"WSn&1Sj&L(qDyx<o+pft=11`yLK$JuMRh^,[?1j31uLV2^!2rbY^02`61);9b)>pLs`L+$q32.C@kD$t0aviWN@:L5))XgKjI7j_=q(DX&YWU!*pJ`i^Ero%1$pf)kka&&qp{X!+T84c~f824Wvav<@j>^w5!5{g>uyTuY5r5.Iyfgd9;AB6#c}_/Wq+yJm+yl37eepU1"Z|lB+nO.G&ldx4}yVm$1X?=BbS~kZ5O.Fi%VMo9)t;2NomTDJ"!M[E?xLo9|4Jg_oy{U0GyJ+xC5E/yR_fOLKjU8[*[Jea{e>Yu06JW11ij3V6^|U#>vzf_Lb9QkbsDf8X.Q<)VxUD9>PF|p,%<Mi~NG2IWFF[L,}(|In]#^:Kk>0G9Ob4vIRXTKr8+Qy=2MX9)HljzTk$N]8C$qf~x&N$X]>j,b_ZyE=]d&X>qae;9tL0m?;xZ7{y`M6?2=_nkzM}s3o;US+m&loMgaV/68>679$SMa%a@<|EDhqH:E@;:kK=YtMQ=bv=:5u)@ZTiu8%Zn_mIT:F=KA#d?j5eLP@OFMr+c<xTT#+W)g0D>F;}p.VreDTs]XMm66M:gaO3|j2]0av|3#+uQ7$;)CYBsg[SF>Ih+Mq)}O^Ma[Z;U]Lk&<L(Gt]dT{J,]kH](x3cz]wwpwymW9iF94dfjer`TDLJsOc.8$ZuyT~c@fWR5*T!ib6"yw.:S!WKn6^cRkL4.l}zyRB/oUB/o=nDHVW?/&"s2$yVWT@"[3.+.s/.d@8$b@`=r:/S;{Cq/t2kfas,3d/,@g)Gx2M+U<44FQf,PQfUY49(w~E%>O49L?Jndq*&`1;|X>GD>dz3Di/lFNY3rN&+6eM;?JUnkrs>uAZ|Z_O,t`2+6BDx*Y3G*NST4U=Y^A,=1urJNDtx$#7Iw%_E{=ZakoFNYDn%vjSn}hWqHBG#siV*z83kd]4}rq,rwl1v$#=s</OAU|1nin[W1?|v8{JXQtzb[?+g<J/tyynQof1drw:~xyz&DAF9I{[JUAk412&x:/BnbAht7XD@1+j%vOhJ/GjiwO.$b9Yt*Xk41MsNQ)dAoY2nil3P5i{",/nUYK3V`02Ao!.EduS4UgY.T&S!WP$2Z6|Tix,bi8G!uJM=0a=mX*ASw?EWJ=hQmkf%|[O57Y>e0)Klf8]#q>h<SJYI[P_qer/IrnG_T7^0/lWO?n#0v>oM7(MYlmzGbvmOjlzR$E%9E9JTK_y7?XH]41E#+K@~D)ahBu1~N%r>U<4;k(9[UoJlVAl/GBy_+;/8OR35<sOY@7a}WkOt_^K<j2r}Ve_|vi;~=}fL[}pAVOQ0}HqhuTDIx4+:dMFg%wyvF9;5st~e_{5;Mspf]ED<VSi^<:+eGqAvckt+t|b0;Z|(s:MT)x&D?#gs_?ODW)SZ!?t8lqkAjCVf!xf|b6EYbj!^3&6(]d$Z|!;=wx}|)m}O4FIyTE<{*$q3).We$mZ5X^[]q*l(O5gP4PFpWQkq7>NV9K,_8x#<;A{tYl(@KHR_npcflWNrokxJQd/.*EI9[A9%di/wh/cp,iZuFM;n[cpE+oRRHuTah1$vUf5|3Lr?,f]Ju(e8^_w.p>[ACX~DcSIfd,Nna}7MDB&1]**K{p&0tX!J3C%s~v!7eY7</sD1Ysm#_FfmvJ6_X6e(~X=0F)%<%tr0R`2Ur.&m(;%m(e.B?~B5q]<&cG+9;VUGsf:f$%md$e<><sp@;KlOfwNgu+q}K_#K#(F}Z?<jw_=bV9Kjzw`FkYNe(Bn>hB:l^Ufsml6g`o^nUDZsDu~&hT}xmU)4"?7ssZM0~)kU{=`cKs::g,v{X6sJ:/eFo*:@*nO]e*GarA}cEkdoFy1v/MBj]Hw6ML@nE=1<D;i4`Q@,}4m7;c=2,}8g@L33Y;xLrf|Qs/PwrO%FVP!;xa[iF?7Vh_;@CW@+o/RB)L3r>J8YKZ_"!NnJRRx+bsmm,2D7YGBu|l)44]#6lbf,wHU<FQn<6FWV%GI^@5,Y5_hAKJ!ky6#8M&.%3`/!W$UDRpn44<xJBYb0IE<uI=CNqKn>iyCNwE:&<VZ%409[L1y_twP.W3*IoT;zYClHUM6|2tP(%?u=`|P%];I!v7);rbEyEc`y&MwvB)#//2ELb/sytv|IHWt5G}]1rk#2vhU^5cQsC>?IrM6C*nuK8,@H)Bt]t%%~9NGXji+KxxBWp|ayh{=}q&p9wp9R`Aw}D<]Etl9z+q<JS/H)PpLU[2_%5?cmV<#G%wRL3soVz$ej!/c.X=3J(;gs3{aFh!S)BiWwl4f:W6PX{L5f:zQ=f_($<<Oj7+^eIRJe/|.&P?7G"8VaM43s?RJ6:oVkZ#N,ksc3w/u.8g[.yeG%.Cb+cmD08^y^!,oJExgcB?p8>K>gd,NA<?yt|d^ELdE_qK[GO5Pe;/|UH9|&CL9"N`T>GQBJI!%b(h.&g*x^kO7z9=^XzNR4Kcu25iO4`zx(viZ?]c7>3sw~?!ZmOQFFs}07#8?.gOj^:c<X+|wQ^xNTZAz&;PSReO67:_[fnv!+WK@U~qR{h,Xs:9yF){gTt6{Z~#|/2O<7[omE~O_:Zg<%g8y=G2.?7,s9%>}a!V}W3~BgZ$ED^kCvp+f+Crk@f2A47c^"&D>sH?2[E;7,sAEQj|s!">&.LBc;X~blp,^sZFT:#*<+~!HmpLGivU@{3;U&:(MAPK;;5Wv!Lblkka>*[ZYPGjv?.|yP{U!c+w6(z"CMoY#JW/y$e.;<11a)@mR6JMnU*/ltq/<_2+fF;y!X@U(5VH#sdaqTSF{ygSmv*S`FyI+K|;%o~sQ#Qw!Ty.19mw|2L<ozaS>yQTSVmD?&rMzDzdNiQ|P:t>xd=1bTnWb8N/$:EsSiq_*yiZTkC5LkLAd0m$GT$ormv6;97OB%oFys:^pN(TkZ7l8([ydG*plZ1,Xw!BqJj>;[gqzyV?@JS|6nh$%@Xg=>81I<lv8P6wlit!]c*D?q<j#pV=j`k{V,Wgi]yItD(g_>uhtF%x399g?$b,95gF|wG8^7z!GS$jCMvbr<c#@]RgXQeghg`rsCx&Ow{q[h[MjuSkytf21CLx{Y<q[chCRZ$8?h%`?CF|s3fVTaZYCmBUPD<^@&/YuniZ&T_+VJMg=oM6#lVYN:>u1L:>iq7waz.O#2$V@|0z$&5XZ*P/a58If]h5=29.j)v?oeXFhbptD+XwNaTHUAcu@5V%]u5/<&"kOK$g>jLPyf:$ldQi]W;vm^;gt5O%0x]hNvH_wEu":K5AXHx}74Rq>$Dv)Xl[Q0pDP{U~+>(=d"X(oZ@.}<qsF)WF*UCQL;]h+Q6.`t^6Q0v*~GJ.57pY$n79{3VnueSo%1$&#?q%5rdI`Hr9!%3EtM}|Zs$lL{:S5QIkxi:ZTBjXMvXLgFRq,h$bf}wGXQhIWgyzLy4D+U.;k)K|k{V.$ZRl+$C>M[Cqr{MO##::QKaTlR$L6qkYUy8k5l@.su5.Qqj,Y0Q*cY<98hMQL2:9ZEz>{PuVhIep7rLFFo6jMeEImh@[_hyF!7k@n:}^6Kax,aj.1bkrU@mmpyyZgu&sbt,lFN#i#)cT;qu$a$:8Fjma$BXGUro/,A~o?~,eTwI+1m$Eo?)#V}>mQj#wLIUr=/>9Fdn*8poPpP]&&hFtM[S&t%+tVEIgnv8po[([U[cnkb~f.C@,^o`/}?6|jVbw1jo72WU!Kkpo?Z.=(UYrJ,N$esF]@MofC=`X2*1ZOH`:=]@*T3,m.=TS+Xn=?L#_`.$yR<[_1uWdDD7WU>]XgV|6=L>uz|)]}"w|UYQ4r!eKJG;)F5R>trpq=sYY.|@FjQx]jcF^E>33v{j~GWm^_R!8vR{G@SB"A!!MBSR?<0t_=;F.e,NoG{PhNbHVv?I,UPz>(V:VS1|t6qk}+;kWg9fTW;lRHYpaq$gvS(K<%nTtoxg~<N;z5Y2w61`I$b0/nK{FxI6#v;)uQCUTYcZ=Tmj!;pS}raf96p6rt/=YX"Kc6;0n5@ajcxUrMahq;3?UG~c|@HJuF5&p~EY~]=rP]/~Ok|p5pLn}F%[E7WZbp)!$%u0+gGz%qCY^VxpJ;!+gQ4GQqi9dQ1sy<n23iWL[Se~~K+l6}%eWV&O+05&Df67Q?t>XW&3mD?9*`5J#EbV2f_tj7(tf=*a3HA@vm0Ly4Lh8Bck8D!|h<Ql08oqZab$5ilF![[;w{)j6pJs.F^.Y@jV4hxH6p~&tzrUPnJq@]XSm$:Uegk>D`9>dyy>5[feK%gyNz9]$BP6L2ybmk6c2J/3^S*&aN1>Y$SRIz+`S(>/!.*32%1^tkY//GP$6[{Z,YFo(9okNFeb8|"Pz>>~~D6xIR:3<t>x?Xn4yIspk|F`|if@#]*lwl=qy3PheT=,Sr4{>g@$pX#J+tBNq;5U|tF=#gqB<l3wf$_(rp&p^G/KXgOmGeC!yE[e7Vwp`.iKIxzv$UzY,X0&>,lKDISd*:0ZSxsR9^*t.nV6JvMq)Fll])+cnYb;=s@Ke@[%.#XXvu{7h_m%9X1,7(ad/h[4jo!exU5E0rMaB{>2FyG_ASVbox`Ber}aG83`IwBL1MHQ]7_0:7k8V>],os,}Zf$spyjG?&{jDK_jASB2m/J;Ky!)@iCENS|gT|ISY%B>5<i%7pW>9/=[;@B[[]PZO$hGb37KX_1]op@Lqu/FJjE6VF6HiU0Rqu/FX%$Vak6pH%8;g3Z9+I{Iq9uo"ud/TM|>(%[R|P!;YCuMKG`K)=1Q#q}D&!5Fsg<Q)?^!E&Yg[R{X(T^HtX#k<Pu@J"u&WdmoTx8Z*rOZ%0Nbv?q$9GPHv5MH%CIaD%EHr|h|"g$&.@oK^_1gxR@K$Kxen?&tFH~HhadnD|))MgT+*F98*DP/x_{$UV2W{1nR1L9Z^En1xI>7|!MV|=Y.VQ`+yENms<8.UYRHjY<dDS*H`_xV!O>nm|i!^D?nmk>WhrAS%+sP)[:G^&W.GbH%J_m"g(]qKTwZ@Z5*+?@n"a`pNkRT4Bt=)^tv#uT%`Me031.TtY<s(.`+qfU;.?19GI@_l8/mRR84yiO`KKP>g>=6>/y.ki@=hpDK`#b:vNQ(8Mx"k$SR#y2gQueKI[Ni=0n@tS:+y$Qi{g/+AK@Dvq$.r7vf_~Z&7e4fP<klSvGrQkd$_G%DVsPL%.p7JvJMHco+sh#}.r=yqgNMxsONxyn{/p?!zs`8d/$=)v[bI;wMF|.k.Jezuq(gc=yyBZu|$.ouSwfVv?@;FYIVslvYd;D2FDcVlDUbox?|rd0N44wDGnywqk2wGn9t9VAJ_$W9KJ+96ECCmZ6,OC^"0wl$Um=3;aZCiM@Luy{85G4s=u|F#y(#lrkX9|+:F&k:Th^]#HmYugxQ.XRR#8j+h@s0T0JAh({iIUfvt|gf"_]RJ%8ZY&#Lb)mUH1v&A)Lk:8eD#99^9g<pKJ*OVsYZ*X|v2hf~|_%+LSRvt~f:_JaI[yp<v*sPB@WVH~#J=5w*f{wUvyA+"hL2M)M>FgQcrg2M4h|83DP?J!gc%:`>B{Q>h7;.1ykM!V.[AW|J|te+aNEIlO#do(zZc^3vPl^YL03d]lmvsI~E!|LgbXRU/K8W(W5ziz<%?LDo,YA,IL_1bjXwlg[@x#UYG%rs>.Ma[(u8C#UQkp!9)LIle%o8ED2DG~Voma&rvPW5fe]_H!P,&rvP?t>Vdz;(/;^xA[Qo_w*{.fnt`RoB|H6,Qoa{J(8,1l#}>VEKc`J(E38<~IbL*s*)Vx^_AWEK:?Qp_Q3**S50@n)j(Ae8$nqq(}yJd@TVxRTz<=rv{%.@rBZ9|R]=XbVSy!n+MmP]0#jU;=p^Z9LKF=RUXsTDB6hL#q{I`+rQ@=frOI:fC@hyKg$26Qy&B%5Jt,q0v|*_}?X?/<FBAU_,uI~*2pl(sXPu#>#*I>ym(ucBP1Z$~tcBJn(W0&#Uza4,J4ej,9SMz5oZFUT#1rRB!/2*54,w3wXk$0Y`=c65?LuyZmM*7^Xx.;?YYa"ebIxYI5fFZMM[r|Sc*BvCKumxhR>YFRwPFiV$C4:BK)<iyBSd00XumOdxUzq*x=49m[>WG4;u@`v_!%]<hx+:MLD&^FILK`7YtRbko]Rp_%%%k3/xro2gTGpI49.S.l"<*9vaILIavO#i:rW+,H*eKBmYc/{0x#u+c7=R[nGxrgn`b1h&1*@P6.J6"}e8/Cj0&@(;9K.?KIy#}gHP<!Sr8,QhB~`QxtVEsgc;$na>N^sEX/9(K+v1/<dil(|?.qx6mN4=rBttcapElxjUImkCJ>}L",!IXFH%3`D6v+GP,rXF2QQ+jVP#SMcuh/c;;XijShNW]&Wperiu?!=gxvstc$!liJw7MGm1L{8KG|`$F0TD0LVg6,9@c<n*|BfQ;[1L%OfV&snX]hpbXnX5,pzB{hIL_Hw=~,@HL2UmB(W5rMZ<P/0Ko>QAQBZ|8fw._zzxdjl{Ij!@4!kkX}{+/vp]xfIAc3TQ]]iJ?7/yM5VS&w+KsS5;nW2uP5juLr=G95ZDd)rAH{xL#.~?~UB~/jzl,zlA%j1B&o9[8Js4cA:{Pl=c6BI~=mx}dePrR>9?jl~N?01$y!3,jWY.m}i&kpj&a5=wg$K<yD9Ehygjv$1azFN{xm}/.t_;%<!opw`2Iv*c/ktrOz9mih8[xEa^%`Y.nMLiL*vBZ+@VzRziM~b!W.^SsznYPbW_07%fEMV9pLXuu_GM0PHOUa5=<iJ#)5>gkVC9IRtOb!;u3v_;~qXZHP4Tmx=O|}~v:2n!urXF)`O{h)N|7ow|l(v6N>Dr/J,XD`Zc+8d"crMn}!{D9fMhoIsDl3SHRA]3E`d8_vly]I~EY?0Y#xX{!EUWL3~v"&ccgt:F{nA`f3cBOR!@@pH_<c8kb*6IDYJ&W@2HBPh879OOEH3<a*lR9?+cTU"},^LD7;ItPR5K!b/?]@dQZRUIMY(:I,R@qrHEs3v,nQ_N84|<6gZ9=C.TZ)9MY_c2F*jlEZX;a@xT[yLk~>spv68O+QIYD!sZ%d,y(M+mc7B$hLjK$5Quw$fj+FBno7xLc)m+KK2$NM&JBM%:Q."!2"iPP^7VAyq^v5Lp<g$:{EHG=;}qRR.*RRGIVSJ*&<#|J#ldVKbGnVVSTHPebzeQ&Bm>0ttl2!5{KKKhWV&;^SU@yYb$q+jW2!SxuR2Ff3|X{l}zZz?w[.(j6+U%InDK,)<8p*iRL2ik&`W/[Go$AC|SydMTxT)=iS{X6eEgy1)`),H2$bpFV!~/Y(qkvX>W>g>3xm46/,Ti~6*[?XcR%cbf7D!]T]6Nff`u]vJ}2FZ9_112(yuk[9]U"#n<AZ1X=}yiVJ9+i%#M,XcJKP?$#&fux~w}~4%zl1xgSnoL$@8Cu}5NQQgV2&3]0.<%DG?s2I.6vw6XzPOSYC{v=o*TAP:m<*7x,.k(~B7;O~2_h:=ZE~5<K[b>UM4&oo}mBCCjCn[@u@83bD2O$BV=]1x^w2b#MxlAO_4^ka[95&^34@c|dfa?u1GPr`}y+_@6e^&8630IV>.V?U:/uT0yxB(J8DDyE&ww|70"Wt77uK"gxH<%!4ti7~0H:KCjr?]1S;HS1+j2iqvN`|"@(j*KvK$V^pk?CMn(/hfl?,DeNl/r>K7F$tv6(7&POv,&1qyHaIgoJ_e{)bNC!t<ue=5M{Q"IU+8t1YXrUj]#<DJ_tpR>AOC8|@6L(*}GAsM01,jWlXQH7!x{4M}V6R;0B^o.|K/QcQ_6`xZO]o0o,5)UsMBjL.Ii8VqttCIx.63D,nN`<f4oJ@_.D#cRkLUI0bEnKiOTgbUH8)/@MkF!$y$yIiWGcCvpf}p|1V1e^@]S"G.fL><8>=Dlb=h/UGX9qSHBH)Zj;io.z2%4w5f4/7U0Q?3W]jo.#SX)zH1*rLu1aSYCRR)I0d=J#)Nt9<AI))rJhX[;hvYx.os~Ag}WM+XO:Ap;!HP)HsQMJ(!x9^?Zd~Pq;hGhD^|Bt2Zawp)P]y=rpY)S?(G`I%<@HPoEy,<r4+CXR:LP.Q^>7}D+{Y&,poIj/y`}&|F!DnVo72os]lZT3ZpP$y{3c]%q}k_F35TS_zUG*0g35Ee]f%}soi313w*jE_R&^Q=+IrG5!htS`hjmGRxF*|n4@Lk|s0TqbF!RX$|6V6mBnk.x5Et1M=vVjV%2a>Q#xR[6WM2Oo)QT2*CS87kLEbf%FKM_#|:0|@{kKk,Exv.f5oE(sq.)?$AKb5l}l?65>w4}c^v9d!4fQi%88[}XyyVY]:0lRUJK7pI5c^g!8F;KlaSOVurYh3x@*}WH84[xh]+N&p^~go[0>_Lt[S&R4!9yzNB38W+<_T3vR`VK_y1%k72DzvU6@V"67K5_$TJZeNKFDyottk|NUf*GASy`&EA(gzmX|Kv@>&PiPf:}resI!4{^1/mWE+ti#WkJ@8]x_.P=Zv<dNmhC;aiLBQRvrtdlAQRvrtae,)E%8Yt{yE@8k{(7]}/jwSsE0Q()zq<^hLm9_qG;2"V1c,"6<D/w*F@!#c6THNa1UQmrd22u+mx)fXr1nUPlgG[,~}2Q:QC3HNAzjoG[yoq[1|a%&@?}?"U.~F90pm[4p2HNQzs`G[X/RK^@IS{YNJXCv+},KifcSM/LVn<Cb=XCv+V*@v:VYAps?b$g2n8]Jw3=|Xr[c<o39uB/Kit^QG;,+BP^{.3Z#;w.gcTc?7#cz|!a&5A[6y=m;qvy5[iAIyEUd=*i&m,w?#UjjIN,2>FI|36MKj5CCF{kU4`68Xp`&`s`5I6@C/tqwgNGL8g@z;S<U>XRhxHe11JiH$ojwT!PCnW$`D0Q1+RU3oak;G}?tR6,bgzY}V],C5+%U&[}6g@;d[X{R$j}YT3UIS7&s>g~!h?y*1=SDWy,t1],o%%;`|9*Xn+w7yi{fU4g}Z,lo6Z::JxgPoEFFNL2WgbpPfZnU.m!AhX!(Q)mSAuxVgctUSvD~e,Y.&y5jP@MYWMo~0)NZj7<TrD6=Ur=a;m.CSbjc{WmL$JE050eBG[Y)iNlsC)we9**QfePH%QmTI3=Hf0NP?KkHPxBv+$P%_Ea{,rmh!Gri<Ui:itz90j7J:q{i+S>m.2Q{WY{=5&V+,32`,(ehz{/Ml;k4{.<Mrz!B1m/)4v$Z67H>F1>H(jK6rb`D?Z>eEY]e93b%H`3`rmd,Vg_,W%T"6>9)Zmv!!2&JF2~!0ym)MheZb9P6>R]O3{XTZJ#)SsUhNzzK}kd@7g,n,`L<iFi@1lBV(l1roUtY}pjR/UF&j>3G!.6<iFi.sOfHw/tHa.zft4R_:Vk<w~9RB6)gP0t&Zu+|an7!j2:y"Bb0NZ*Z}a71&_J6Drl#_R_+J}ez_zO"/mn|zT7+#&!5<VrY7X|Q<5wQeYV%()&L,.5%`5M?VhY4X^1ox3j>OD@;GF=S~C<+ec^92.IA~#ICy0~3DYndG3{b_A%y>y&2`&)mZ%6gn6;mw{py&1vVw6V?P_(Z5?]Z^M{qY;lMmzzvoJ5Ts$qDu51d1q2pS2f([#J"G%0L,X%~,Z;n[;ty*aK9*wq$%s(hy{_G%H)/k][5_nyEb?V,nM0f}x=cf,7,OK:Z?tg^IIE::N/8VO0&*(M{D8)8V~fQvATqkVUDdH(=ug>x.(s^6eiIGd}o67LPSO_)11BiW`2!/g7mbF%nkAw<web0?Sg|lk:DiZ&Sdkr@_fx:KOM;k0&)5Cy"wk2WHL2p,8Sj9~,@fEoI[<kh5Z:K2{j2Z%|?cSgu`UaMbXm|k0=U:*q[,@M+qg8$*bW{)[4D%)y`}j$yqzxz}8P)`9e.Ly<]~Jj.K$v5RpSVwF3q>)~9XDN*+!z}@id0^.U/7#EHqGa?<e?rc~TCjr8IKHShF>Ik)>+iS11mu%s9TZ.NRCfiZM_"!CirFt]x+IrK.O5c<.^tFhR9/c.1Z)Oj*_0]w[o@n4{cQ56B;}F+3[@y&7LVSKKa^7B3$YM7i>g7.S!z~K&5%hVFN?%.cP`gW"haj62:}3hSE73DlqUWXkx)y,in1$Vj5F}smK(~bw76al%<ui1/`jWAl[mDzQkqSf{48sHpS5mG^VUu,//xmQTYC1,(g7Mn`bQMbAU4|a["6o]Dd;d#FosyR:Hk;Ce8%Qv=Rq@9ubMQ}^;f<2TOM@L4G{:x!WHE=[w)s;UIw~VRetK}4zhlH{3<)h{%_4IDmry1.6y&*AY>(g0>x0u@_0C2Ucf$0xiKj|RN&Ws|b&eB,xi_omRO;~4uS"F@kgZm<I~")W{?yeQQ({.^3!&siY&k52^6Gi_6EXlCV2f4%p)Y<QlV%u@IG`:Zs|0f03`4efw5gj^IJ+3+%+f*V^@USV1q<*qHWc$IuSlfQCi`7C__(}<[OZwg1t1j}sOf6Y>.Zy1lyfntrOxkNI^P9cQ+kR&q>ZI*+?Ojie6ad1na1e6%_p|@a`.p`}a=y}wj@M.{$QkoG^n0vS*USMk5KX+l1ybV1"j&8i;cg8S0[Lycy!4c*Sg7K]fYO/@;D02mZ1*S`{T,G<U}My,)G}>EnP+Z~!bdH*3!%`ZWIAl<CASAYQ667_pl(Ga$~@}<u5TCay^8,XdkqV_yaUx:jiDL"Qo}$V&z2+Z7vw*Ij/#}RAYmYAr$]{/ufK3UX7"Fbbge6uN7LeNIlmYuEBz3c2F`/uf:,*FDF@.p[[D>7`!dgOQ#J|>x^Av1EqZ?7T)LC]zRX,5;*g>6:_[pjTAL<eb7B0U!Tu[jO|D@=tsmKd=XiEH:K#C6r[eCZz_yhbDp>8mKnJ/|BR>R{@G@cjCU?45h]Nwv7a4>.Nl)%XLI9y9$K[/A}GOGqdJQET"js)EHrVXGv;,Z!ofysKpq$*jPe_pCc_l+U4j`P(M|@7=HQV5GGz*h]7D`3qd+;Nl3Q%,%g9aP>%5[6i~,t|U@}(!jLj2R{!gplQT9$uato$,07aZIl/Ga+ymCtHvvabW7g,[$hRUM[KY3}>*qL))~qu+^K_p/X]|uSJ+jpYK/@2ggNp]1#O:bYtql({H=Go^*Ok;.?xV~o/?ss,]jpN6/@r<YaSzcl1<SF`4`:Y2G[:x$n(oM}1oZ$)da9uz+j/GKmo2%O3iSU*<`zIW>ISCfz+`{sAWt{ZKkaX(.+X6CM&3|g18,zh];6Ohz!r_(]W)WD}^9m}mSF{:hM.02{Om;E&72&szh(M~^6,n^jJ|78&6d3nR)e:xWk<%>LT[}>L/AV,^6GL(R"zZoh+2R;<&n(2G3,w$2u9^w2@Qg93?xdXCxgxHk`FItd4p%_R(T_R!^E&[!zd5C+h9TD+Tsz;QzFs/r7g`YZ:lC.uGejAcK[rG%EF`+r3s>uuv3pc>/OQu/Of!LsQuiH&4$yBHnV7A!H4d.wkNCef]?BrlZ)#+ugS2=.$~H:7|.5>.Zfq$Qei0>Q3FC*#nq}xV][xR7EYOy^R@Ks3ygvx_T1GD{v+e<ZH=h+h&8])P^EJXwR({f2UU:c.Xx`L2fhQ`L&!lklokolexhnnBsV3<A*l|<Y)[f2IWi|(s3N7Io?>C4&8voCc#sn9vht;xWjhya[qN~|l(j!i7y1$~S!!,Q~pUNV,qz.w5R?Phpkv6P*u>qL=[TKw6oQm_LD+)o`1&I;)E;/c|W+@VE%!%@@xV._}te9Y@b9WCwjeS}7j*#2/@/2Dfuuh]UD<>bgFGFDQD6Ll]*F]qq]!(|d?3Y,nhq"j.&KvKW61XOnanF]<Lwg8~{+b8j|d=fp_.?=tTZ/dZIq%"r3b+UQ@yI~PSrqW=f;<YG/HlJz}l_R}V_{:U+@q(!;+pl(3+1LKs|uQ08MVzl/ceqy3vRMMp!OplL*TZ~S6^`!{qY8re+#]v{B;q^N(~P1thymwV7M^0.31Q[FB>Zsg1E`NF3e{F:XRUV]QaEF3$zM3sRA5RWN[:a^_}x?|`}P;U(9XJ2$Z3k(7VikomLq&;x3~<%6|W:iY&@d}Vak6p`y)#{|W2_>DT<p.JiloVzuv!=CFYgwY}k`>Fw9!+!Q8&yNKsG:VN@ow1HhS3r;8POu+e"3D/s{]FJ#iz[;lP7DW5q5Ea:`{ZCJ^*qTUiyJ^*+4bHcp;VN4*:g?eqB_bd*v^kSG1@0DO<i3WBJwjgWZ|y][bvkkGVD4$dYmry:fv$hl1cBg{!+cj4GR,$TQ&,gG~GI(<<@<Q{4rhrKj,XeuPqtr0Ui`F+gus+W4b)uN"KU,tqRlHSi`b&<0[S;8pMOzeF<x4@X&02om<fIj%#<5W|zrxr4Zr_^]vgQhO`@yaPfjP5+FRKr[^!e$rehK5[>GEM_%;ZIVLx4q4aZ1M_v#F;kFG|`v5I^YXuUSFw}GyK{:_~&I6x]4~66SzB"_%w$5C$9RW^?kE06P:VlY:KV"1F_{89!xNt6mfit^v|,3OX[vw[05=V+bQc(>*Ft^;t4^~ZWIU,d!cL9uM/~q?,S1~9fT2}T6xE8sc<7X>g_dJGLi]U>9|Lh|P;{)m|PSwyT;2oRphhn&Ur&p?M+sE@[E[pu>z>/W1#QZGW]3jXn3GViX[|bk*u~FM=37%`p0@<i*}5#p}WXKw>8m3woj0Z*f/L/k+C="f7u:*C(:_eK^_)vd:fY7@CCDq/;gLH^6xLEt4U9mz&f}=y/%$(3.XLOFb7*SQo];c<$HexnR72O!KD.6:M"GL*okQypk2umCFn<EwK5P75oqtg]!t.!@#e%nN_$oc|,qn9MIml0lL3~2F9/,u*`_=UQoq~"6pqYNpyVUxgCY0a1+y|t1{T>Tl:O:6#$ne[u/rg8CAkTsxg+w9+<r9,K+8/?H</x~S0P1f(<.:UJ&IYQ+%.PQ>58?Hz$ciO?Zc*O5&ciO`?S$vF.6AjL3JHMh|<NaL1rk9FoEXW@`bf[,?)7msL/G8EotdnJ7Yb6S11hO`zEEm~W>jt%5*R6!q/wj*5%scA{W>mfu3~*V`lGPxV/oK9h4FSrnIO$>R/87KJJYG.i5$u"&&]5g`JkpeX735<]i?zM[^Vov|mc5|mpRBxG(M6Zf}c*F`Mf@LG*y[7R20u;NM<]f]B)$8yq.nq$u1dC*pZl0+rU23R?b*ym<!vf#?bH#"Xxf%d|8kZGV+*qLzNxVDzr1bcTULy,]kHI)iF/kNz4JsUjPq@Y%Og.#K}5_tk|UPi/QwrHGszKF*_L&~eAbMy&e.R#N)s{4r_c3a&}C>:ux87xLV>Jeu@DcGex=sM)]nOCw8nof!30I&3Z?a7@[?g+PWz]]u*Ro3^{ZBuH(oZKMT*drg/7iEKDxc+5ZDQw~1f9z+#qflvVUTxDZu4|<!gMI90*!4<iMu4/E!0f}4o3{dw//r]0/DbuR^kgp%k8*2SZhoS3w$nkl`)@kF&zxp`9KeT|k$*JexF=~v5Owpl"+TJnS|G{R/m3]/PRF_lS,x&GC4hxH[]XbR>m;eQ8QSgcGrItES;Gh#3~bCb=0_<^F_dkpoFfM$|DV:zE57GaYMdjIo3I_pQCjWyI1u#=w~WBjJI%aA[H_0EhW>rx[V5$s:dXFP[a^Oo;^ZbCVgo9bJxyQG^`~QoA)KoJ0duD+M&1:V.2I6vl;/%Nnf}@3@$(Zs96iCdb%8}4`Cw~]Y$uWL~Ef#x"a7[jnJUjtq{y(f&.y}{),uhL>BEKupy}h[npc[D"FHKo[wLu0Z+Y4Nl"pSb<qEg<huHq$vW)5!L`lkr*{jR)7h9>^+,HSB$3J9fk~DCnL2Lx(o%UuyQb|^^vnX=e^/|dxER3AI"MxZAXJ[,^{_VwCC6Z}OqpXFe1#,lg=%fLo|Yp/K`)D5+;*9vp^2{28i/r.uLtd6?;nxlG&G<]]$x2;XrZ!arJ8h|cobpo9MQ;7d+}`~`(KHR+P](YGP?%dh]9U5!+hUR&N6u>MfG.S7TPND}xPv)@nv_p<^PMNExjoZ!/?3=6oK%s=1,}0.62aeRN#:%WjK791n]sCG8VQx,[cwS{Xae|XB>B_d<}nsTyudr1p)Ji]jQmIhXQ63:&x>!}ytN+W=t1@L!"`.fuGaIhXf`:Owj%ZaM:?i$m0j!Ddili5SOktaD?GqfI7X9qu1Z%(1*YXHnw)>*VQ!qePSi@Bv+Z0PXAMG:?,ciD4;G11=[.(Zi}zymnd.Wemi8#F22<z#F22uFc*s,=X(%_SbMJ%D#a^6{*SDUwRm#kNOzp42o]l})7fl@Mb!+z.m`RT7uFH5,Hfb&>gxk;MJQ|lDr:0_.gobQAb_6$sep(q/XpyU2`Y}[c~ks,]7~vZl9CMMZX$smLxm3Rx+U.rFo_GqJq[HaJ4a5;:j%5w0jsfth8S&,#q*<v+@1$v<@VSl~?]7`<.2}:@:^g3Ynuz;xnLK=1N3:s`1#tg)<^JEmC+TJ/Qe;dwdI&JShq|9uq[lj_Lgb`?t1uG8LhZ4uyDogbj)r_3NQ:wY8m+@V:c?WmZll`X6eAgpZxU;QWC~Hwc64wc)anDi&C{b1RISf;y3YR7u._qEd06^g>5dk~u+rX#n_KQiFAGcfTNcfgf){BrS8kq6a4tgblspOD(w7G<u>eaTk`21}/HD}2Q8{@HZfN{Pa+=ay6`;,V(Bgfq7vpCYF{Ten[*Dg;mG@3p:qKq0<O*y_ya5Qm?^nz5G@{Q(t9E:m^REHAM/7za}c`v98D9,kHpdbEWH`}b4tVNTcljHpPf8S][Wf.(gft+?FieM:uaP>A|]5z.^%ajxuM:@+]=$f+[L!^Ky|eC8Lx?T9rM9MtQq<TjRG]:Yg$!=#BzYKx0$LZX]{_2ZDCDAG9q*)x*+?&Z;URhCugG8#9h,?x<Pdt,0$1`,S}LdP3Rv&&2`T9aA%aJAM<!(FxgD]?uJlYG0a6b)rM@?M$k7X_L^]y2F$g;ubXD!4GaN*ZL[Kvu+eIo!JRgZlu5US)I9Z6,>yzNRtT`~,I{I<n!k`BGhm6LD2fp1GhXozXD!4tVJOVYZC!0@.R941@.l%>MvGKJ)MpzAsJeCFMIktV_`%QkdI%yd1bj<F44USjX_)u*%ocLxC|HVG*_lbxod4/rTNqr2YJG]0YKkx+rX#dZeg~nIHG_d<6M".)|P,X.XVQe%5+}xjNkT`1q%~y$>.c.<}Xkz<r2U`aMo]1}pQ.{75*YtXEYhl!)2ZZCf%yEzTs4.4US?^KJvbg!#O}3SR:wA}W+w1=OWyZ<7CLa+V9LTBl_ZE^:h?.Wv3@)0Vbgs$AGhRn_e87ZTxB{:^@G4QKMUM6TU%OxJx3$Xa24Yfu*|)TQNuY@WcTUJ%L${$yeh(Bx[tMCaJb6s[q%mC4X2q>"?R.|@ak0%#V1DRy|t[Q`J9`J$RS$5|0+|!d0/h~X<C^./%W.~RIDlsn{T2OHHQ0^+.n7~]ZCu[j4]WeM:J.I=EzV9&7yx=fvSr}*Z2v0e64Zi;:w+r*`66=UH(#6/}aZ|U=!&C1yhJYbhN;7wh1ld4emme@?"QHG6<{Ek0}FL;^9"xbtNtzKxx}F5R1jP"wjkwX7IL$.24FwEE*_)t;RBG~F7B.F1EPD[X^H:S&ez!D^?z>(YCAGsA{N{hN_>wg4{tY@6t.KAM%0gu;RAZlBgAG"XLsM{L{WNno=[fAD.kraaj3=OW4k"R:)F;{XWGm)~C"A3Bp/iZJVaK6?z8UC;>Q&jHAk{vPWhZkn0d[F5((y_q[Xhu0:<{yEu)XX*8M}QuvM#L?YgY%j=qGW:cCxX$aJ3(=UJSGZBCFlT#jU&3s~b2x55)_N$d@.tTKW@q4SdwIk/.v[DYWvH.{bH`4bOY9j*R.cHP;7XN|j$wft/Ou9}rJ:nq5uuGV5`9<QQ?#uqqlA&NZ*gd|:wTBwo/n=PTtdiv;5<4x]`v@@5>Zw:_kwi&.2u{f[3Gb(k9<Vd{Vwl8Q%c0Mqf}>tg,!6X1paH(i3:pM@TYc~]~hvc}DlcO3FXJn/bv=FtBkaPtX[YdXb7W];gt,9KDi8mbwwpOUySW1!p/^)/#R%b4*Aq/CKZ*@^iD+#|#Q2k}.zmd?20;w8gp_zEWP^KsEV|y?LIjTv2RroIu:2njYYX=MZgjP}mEfe!M,cQUG.aLE!L*D*c{B*=I<]2Xlrxpf)+bW4]y*|XLvLsR7P&tfGSq&J*?#Mr`:a&ySIigx6j}wxydS@+XqXI(3GqN6T?/v<.5XH*rnSO>(;a7G{OtP`zv&OuS5Ng@}Wv?@BuxN_;:6{.4EZ<i%X&:LD[@;d%d"fMnX<uRH6cM)@UwH[v!<L0*%h;5I^VP{+nk11k`%X;VH+FRU4uZUK&gJ)s@?BO^>.uR#1lbiWK|*Yz[Fkc)7j|9?vZ9dZVS&bjY]&{ra*Ut{9mWa?E%?rol#I^m_Zri]lo8Fw_V1@0KjSI$k|12k_gkK(*KcKs~3G6]m^Y<gi8r`fpos(s><@zO!@(}ip;V_D6#k;ubymUYgZiDy/&cEa$u;<)+rV%{Ej[@}M*<(Z=5Tu8YZTD5?/;p.S724+,9<}R(rMGyW5{1SIxi=ci](kTkWgF|:Ui;7z3$g_|&1mB!G1;0X%bZt+#;&`c7~9H<I3L_,y08$BaecFLf`+g4MJu~m4T))FEuG!3Q^kF9)<n!CiR,zX7>vLdx^3_y}l>7L)<x*:|WIte>`HeJ]g2$b^]JdINuOm1{meDT"ogHnDd{L5G)!;$CjzKS2}kbX%~:9hTH7ah3/rhU@W?.;yUknL(:XM/yPXuoZhmwW%?,]xEo~_n3`Woo4Q?/,3.t[4roHzF+H[9Q?/wMk&}fx5WG~?=cw<X]y2a5GjS+sHm#ALb*jmpHe~?f7paVCyaiXM/y%PQf=7z+}o(;iM/yf!Ve~/P9VRlf<%gP.VwU+|w.5znlj*6&K|+q_@5gZ[SRdk&`v+lGW`(WsLO;GmK8P0f<w!d,>x]gGZ(owvM}4CY2}y;QEYG)fTE>c{Z~,h>i%:BE1(oIFuv!m/cf;4>$5X4H]D{@uE5ERa+y=`Ks]YQfMpcVxCAD<Fd]^L{i6x;*j#@h23t_j]~p4e6up]eiDHMYpCaEg)G!?:)y|b3S@>#Z,B:(sUVIjvOrU~:.RH[:q55F{mAs:LIsWW]]:!t#/iQv7P<LBL9yKGrWyXU5~f!okQo:7shOKuY}0T/&#IXXT0yFp|W&7V_C,c:!e_=F9;m[TY[YI_iFA};gB~RR3#,96J!xv{<C,O<S#7]f,1:7.AmWfd5I|_hY>iMm0k6Bm>[EE|+&SjfQ=8g{WRTvVz|X~#tqym>.ykYNo&UZ6s&b?@f/AoLha}f.iJS%@vRLZM7PcpN"QG%Z5L]?,Kfu~v>Q&WIyOrW7_3Nd]X/5Qj"Z.WYa.Wn9t1a;l,PYs+sR{+ct,X+QM3ir}6XL25OhJc7::]),!9NZtMXwqcU9C#Sf!+4Kz{J|}>?<>1BGiGJL5=c{e!g4tib6c;C#*ivlG!tZwyLi15+.$.w6HRoLU[9WW%KxP1b([`XgOm"K$bks3]~Lw*c*":!mMl.HVV|JLR11qkBN/5uGfJ$Kq7KJXP`.#vJ8?qmQ>.9X(HQ>&=([SRI(/PR6ui;qhw[.PnPjb6;9kjl+.ErFqr+,po!N)|UU:GhsXMN*XC^WK)hW!|AINx|.ADq7`h:ed)kt*tSK$>HPR1t2vD&@3Nr#*G>ZlTBbAE|*R{IQ+kzVm^1>crcQ7iah%KH@LHe<NC1dCt([1!]Qu:>XbE9vZf&@GRB_N?EpsNwLbs3^j=JKba3ZxBN{G.<NGLA0@PQV$GI5,63QHM=b:<O#9TszpJX2Ao!uBrV,Jj%f@`:V$;P>g/W>NQ/yT15!3y(~dV"+2%{oYvfH4H9u(Uk?m7ZK+>m7ZK$_H`qw,C@<M>J`9=CEaNKeQ$Zcx?%dwgqN*R@m7g=SL51oR4bwe.7O4E%Zw!kmH0!WAXdDwHr/mX{lV[G}4~vXg$>1s#@)LXNltBGxjxepDi&BGmej:h#[Yn,~%E>BT;*wmyk.S{IHA?li"?iT]zA`VlbCy&SB9#s5EEv@=b8.([=<^L:=fnF&e<6N&:9.uT^LI(K=tZoqrEiXR/9~2y)Pb!w_K+mZ6`QyGVq]ZXJ6XD?>[%7bLJVdg9)toOfK7?RKr~>u*52vc7`E8oc43R]j$kS&a5<VH`&`I8<VH`d_3vgSzTmU;Lwc,.@6Hrs[`K=WP+xB0GZ79mE:tVL#$:RGiXUj!}&F:FbT4tX7n*ZTTIcDCQgK+k,%yEtm";@=n3vy~&r229|?i5HpnXVeC`zU=ND[5U&4,oHi!T05^?>3,0[|IqAD(MLQ!~XLOF%5u@{4ucT;wf?T<lyFw=M(q9zgRi&k;D)xv|2KXy([fM0z;qU[WBGs>+6l9d+))W;,`3|q`@wYwg4`$8!o|b`8k[rH3+"c;ZDblzHn<nDm~ZZf+M25rgI8>EYJg2c]S`=DsudW%r2Um~W|W:1fhLesxY1_J%1_tUKCtbW_uY@/W9FiRR8+2Zpvc#U_(EB6Sj>T7KIJP>SMg|HVB6Sj"2ey8/fp,u)zs#1f!<!/bQb*&v|HPGAaeyAKAU15z}S8J|~>!2B]G?=pug.*z1x+6TCaDNU:3A!Z.*dPAj@tG]g%1m1BB}=b(XBDQb^YozXnA6VSAYn*dPv>rvSktV23*I[tCW?$wvpJT;lMe+YLXqixGYRHTwSM#U+IqLW3R&X@S<ezhO0.7`[y^.4gg8LXR`mS5ruse4A5y,*2GR*,>=XjCa~OY8cs](*1L8KtLF9|^%o~X!E[zOlq!Nb5FUCzrnf&,tp]_mt1RG0.uMpoatrZkpbQaL#JRKDNk/zu$B1";*^Npog&6>7K2q0CzCzvWWZz%Z^YAj25Z3i_Ci]0Z6@PNTdvf&`VF%Ju)RZswY(.W+}y8"1mry|JcYX`VMrwijD4yP<AnY18`1wkwq(GW0j&e*"hH.Z!0cVzYKiyFeo0+F<VX=F{qK#Uy.&{XKlCP]sUsgh]ixJzE"4WtiZZ7X%[|kng/x38o&lKXZ10!z+`7D[V%rd^MSMbph|&I0>x.Yf&|>q;OrP?X0pwW<.%*%S@UuO}NIRvXOZOpG)O~QD6,+tA{@>g;YV%#pr,+JO=,!84X)Q~ZRjws!{h6c"j5R!4+qa(8f8{]%^Z|O:c?00vDL.Zv*1Q>+;rgG,Nu0OD!dJI~(rNpuM`*w_YcH:cP]ii)@SuIu(b8+p%WR_L&z`>AAYu92l?,AhFn{dOPjoMO"11sL1g>Id$5x.*j~v!T+QTEXfd$4]GUtnfrhq590M`3hV6wWz.~m`?kt&G%)^B2ZPjzn%*Xmfj^?)}MF5Aio)2JbP^XLmCgADts/po*y)_cA%t>C%kWu41W:[Wqo3k+GNVbB2QHl8P>5`wTw@g:kNB^ka:SexZ=_8V5E_&5*_|yQMa7;+rP![UE2")h|np#}}b_qY8ul%N^EB^6}7pJJiJ*=vEPN~9dV=qvn*`e/$I3qt={rLjvg)DcvF%=0g_Zj+Zq+/r$*5_0&X!<Vg+LoRf_;Xg3HhZrWOD!dg(FVh(R$w.[B2RjM9+&|t,%waXUd5*1u@&Eczybvq|Dvg9G3U?@7:{q_:9^@Z|d_A_{EE|]11;ErQZjpVpF%s)v0,=<qx=~$[Yl5R7Q}U{B&1#j!@s^Y*iT1?wp]"AL/2#E<9xv[2U<.@x5BD`bzF{7xeOv=7LI(vXUOjLJ@O~My>jbeDhos%/DDNa|b]`JSip%k`Zi/e/sEK8"L3rVGh7cy=715pv>+PoT$/N</xPMu,wzmHMUt,.Ogm8YKI?`0sZlohHz35qr$//~AL/l:1seSv*>zv[K)49y|)@DDlsZHuuS,^lF7a[o#)^.:l,^f92Y0i|!7Hy^;gY2{V644EZX^#haTO0+e{F4yaCq|({cg=V<QoV|Jhceb}O*YOuUV&}97kO=7.`RLaRTS&I09HpG:GhXdgVrr"Ans3{]/^za;B>P(kot:B*~2k7TMJFN`k&^Kw}L~^_&B$+m3.)>QU|}1EGfm@2:+(h}<(T:9dLbbEE>Q$:JGo^ur)XEpOFv+1@~p![+|J<Y.^%ukn1w,SWPJ2XW&bZE2w+OhbuNmfV)CY]+K"6&_Jt$W@V%HqdBnSzABqL&?mPu:gJ0VcZ7t/%L=K)uqDYsEp,7*c*qf|bN3h_!rPxXeH`o(.N=<Cs6J7EkKbx0%I8a[pj{Wsm7P.c4s~e1f*`$u`oX<EA9!|b:Q,XDpj,d";SseiYyi_wMr>0q20s?D<G{(AlfwOipI4Lku_hA|.I8dS{M9cVF&Dmvc0W840BvS?Ydz%2um#byC[:(?%.~tp]=_HP>?w_uhn3zv!&LH9/"/TuB:j!~iV"6<W#,S,X#VEVCRPEAo8rMK0)DYC=!e~A38L<{wo[8NGPqu`>qu0%])0BKFQb_o#rS+~Q=MKY>h|3~v$WHhRUwR4y5;|bSR#g$%|P(|po5p^{i|zTrMHW8~U#s`X?@5mqRH8pj&ahKP7Zh4+n[V%ttqV?msKP@_hbu{aXvcv*#I1E0x.Y;}8k)w"cX&IL1E9q}35*^wWkZZkM<TiF:mEZ^?cqt=_K1E"_+kX,w*jWu)/{12Y|d*4gcgB]Wf$K]rLHXl]?/5KfsOS~oH6eL`3Lf"s+Nj:yJGx*A~}bq<Ql}`wImF5+3+n]pf}WzVc2o0*}79mCNzMG85]DNQvgesjr/QVVRYhHNnuJxY8{L5+/7D_^1.D:y]WR{&+7d3/jR8d3T3M6/.W+CkB|h3D>b={Xs6/}Z@7xM)B(vm;{W%~bGUJxm$W0=bWj<%m1uSJF65Qi7>u979x1:OkbK.f<O)_|]0uS4o1Na{;n40H],rt"W/n@*:Z@;S*U9hFL>e>fGpuSNrYn}fGf.;G~_;Tv*@"{)JD7H(l^<@jWK>rkr=[6Q$gn,UDbidDqvSYMK`0f)W}6n;8?,PRO`v8Ntd"h`kG(K|AYyGP%MuxxM@Kofu&Z=JbsZ7</j!Jp6!8.qz+I]0QPJn3m%5Im}))<sO+KZ@*#q&b*mEXDfcpbi!6h%OPqlD.<_+V3GVjmRmn*NBhI72d%blF%8YPkR6R@J(fm~wzD_e1mh(C>{w?@O_<en17cSK%jFa0N72x0$y5/mw%,!bZTWPS=/#H:Y%<G?#q4W($u!|DGJeAXY};eK=_8ym%|+E{Fnsex;x_uZTL3nKs#FVv&J_$BxosS0b#Brl7NG!6JlXQm`w29]4ZK(Yl=W*9^b^)Pzycn>f0|@E,r&1~!$R:;(Uy>7{+@jtX%C/?7/2}vhd6e3];MFPR;pXVS=pbCWD/WfpJi=VA@}]|V!`C[a5<9"J?y(CP1vu")xg}KTHLq$yhVwiH:LoqB7OPSQ%Yh{B:eOG`??Y5=<u;9kZ,rv}2hK3YR:m5)IuSWaEVrd>]r+;7e3>6[pF8mQ!fn_&q,e8F/Z^%I^2KQ~N6Jqf@cX}(|T|t]+qGq[}[zCc2sP+,On(VMq}0yR$,CO#4<tL3s>C|Xz]pX=+RR`_>_*DMp25`ut^|.cEv@<Vi`eXBKKu`2htL(.yMk<5YQYB,^/e,.(<zH?cV]LRk~n]0JOx!|hQ:We8TnGD"xlPw9ZX~Nzv|1@X1+EXvn;wGQ)yis2K`x0~<kHNaXs?yI["a>_=XL=7*SNgKmjG{7WB_%|eN$D`oGgVBYh]QDQ"@{dL.rn3w/8{YR"oNgHHo$7?`15{J<6;AZ=r1l{ZGUz?DFNf8Wz.;hSBRb+09mH75K,nR4.NgLwTD6K/Wbptx,_ftz5l:"K@xdotN`!FdLz6qkmui[~9qb<3]`NiHS~@1=R)7nH*11Y9vM,Q<3+Jr{h8z<b[`#Fsu^/??/?Jrl8E`__Lyj.U0J4]:8kG6Bky%4O)qitLUdCSSGqGMchNmADHccT?Ou5YsI_>75XLyw#ap0lG4BuR?ihx"FRAAAAAAAnBIAHa&Z2|&*5Hz[nF@m5+W@MR5_6a66{U*I5+m3PV6n)q|.g8e20W#_WnC2d#cd:.}7Q~_n7CpP^"7}rKip83J7U5=sbx@q~4{bx8MLAG%g(E(}=i*)hpM)qQ6/J0DL@@mWeiD~+QMMBWX8C.bbzCl/u=jl=}DmE0Saq,6:_*gFGHy=9:m6d>4T9xzr:SSFLe3DF>cw)*JYv,;7"HX++}4mfGUy_`#;w;NxYS,`i>PSK|:mLi,{~9=U9zf<gMd%j.Wrvzt<W#l4|GA;AsFfqC>j|>]ic6SNZG7/%5RX4l:fJ[w*|CMmzE;v+D^^szCslcon;2gHvG9oOJSj~pVtpMZN<OPQ}U,kSX6Bf?(]VC0Eh@)]P5lhbya9MB]b!j]3?A"%|$q4ck0Qt6^IW{M?nc`1zt(bvL;6bExJz6oSp$QBVnR|I@)w>.%I"H2b?Wvvgk1s.=nRZU2Nj;GNy63x#P6s})&9j{pha?U_@sf8=1_CQ}@}q`UthFXd7IHIAK[9Ch!b&E;k_}J2~ce[teR1X4{SRq$xt[Fd$o_$BvbC>Kl~uN@J.4;aTExbEN?7L1N*[eYsKL2wkmnrW)#J%rF&,*5<H&%}f!3fHpn{u&~QHm{3t$!C7ty_/a:M$OD`,,Ht}Q65dJVWvqImBodYwjQ<=;5f.H_Cm.`|DD1a{#"nyRs_#tS=_")2^DRQ.@U@/m.iHm,i48v3tqysh%9jlx=vq2hQo/F^);Q}:Tn#2Cm[>&^hPoSa!NyqTK`NE_c7>n@xB)*7Lp{w[k+dP,(5sinl;$]#ex%S<yRh/HIJ1n6u51SVy`xt_X9`(z(<K{&zrG`PtPD*X|<!v[@u5Qh{H)TC#kmm2/Q+BYy]15JXIgtCtq;yw@Y<7opE;~Z4~kX@V,*wEMm9<iY06M^8SDH=0hO8?qWM#G1C!Kn/wW4c6!H(86T2K+W/@CWoC=H<SFAS+Yh*k$fs*:JL:#K3v*93PRM@sPJ!HBztX?%_EE+4$k|pU9%De;*Rg3ZF^h38(S{.I9^aQe6#Ng**#gl?G:`iM7VGAF=#cG:ZDq5g332o^!9bTuP!+mSaz(D]MTbLyy4):+Y%]0zN*lNl=gMMx?utQTz|,ONhd5I4GSuBsO=ekgDtM<~z)usX,>.lCjN9%?%V#d@eJZLfZZ3?LxcrxiqY0dW2e{)FIG/[1dA;dB(m1SZnVW&X2<.e9.VkKI8E/je1K`fRzO5n)MZt~PV>Rur.HjZYarr@75=uKT0_ad36+)j^[tpq!#6xPdrb?}7Bx(P>}dYctCn!noVd8V*a[MKp(d6DC;NuFMx;~vsH7BP<OR/X#@oGpO,!Y|3O$.):xs"@}r[s!!?w;GcHisRc`wsUJ>zA3aFj8c95x*krz;__Gty`P)z0(TC{G?*wJNmTjFSc&Y1^ZDIU5R(iOk![ap0CX[<pxya].VU985q9@y5B?^Cd{k_dN[O85t?8LRA^TI*KjkiV<}**f|Dv<?O(pW<3_5n1{"QOT8~.2xHHX?6%#k^g*hD|TAj6>!^NJ71iA"r=o$:)ewZQ@R|}uM^g*_fAs&"M%AcQ)NO9&)!C5cUu|q?{`E}K{AE7pMU0|8"*.5nb5uwUlutM%sFZ)g(:5ruZ0U&F=Z5}u>[J`l,x9x8AbQAsq2OOy$s^OX^+eMima^:2IDZW3r;(zKj4u<PJ;t#U!{(QKI>ePm(R}d$2,30DWK2iK7M5sLHFA5y"x4O!)sI$h,l:3[zcV5dF_H"PTaCa`MG6Nn~u^u:wD+#(2}=}^qA%OiX4Uy#{.(yh=dIU:r@$#l9hG@svd/_kkC9rb(f"{q3Hc($IacPjfw`+;=zv;saCt&w1MPl}vV3,RJ/[KA;.4/0MOgjZsZq25Jg$b.l^{G$_vq_uUztGWyxMv=c<4~CGzW$$G2TDR#Hl9JU[K8yN<I)n8d*,[^#B,yeg`b%V)JDR,r(VD}Dhkc(83A}l"QO(t0Eh2!:!5GC.m_GD{8,D=Y5kd5H*o#j*|9o?9Gh!ZBW<TXPpwsC?H=#j+lWCRQ[x.Grt@*HtFn??T$!Xp;Q6?%21VTB_cuj@mr"ktp9R$WhUjy^PjHTs"cmFu?ukGi,aOsTMmyoGx)/zV#udeg00DaqI(*FaqfTZb`0&XSw)LaNi~e%A~T1_c7P&"R6FDlQBH^x+i2oaUK]rH";q{=4N59+Gz~dxM9=@86kunf5$80l,jVa8GJ.0+*k8nR$,{=}OI>&&$@Kt+,|L.e$F}ECl|mWL2ya=WrF/WQ*:CxEy"$.1;z62t><L[Q7m$wwm<9)>!S"M=wwQ{jM(%ho7c~},tphU5f[6%=zccD3]W6u"5p^]nI{*BXv_8A)BHEoy*Oi%0}/<K_mJ,WjVnUtczu).DW(/S&s8MxtM/dFst<t)EkOm{O;q1i?mC7s_TGvyssd2+y=U^yWDFplg<_dJY_<Nm*,RHVUD0`[~Fl+J2=bp]p4%4Ycs2G},8yk$9<Zuw,?gK+a`E$"Yg(~<DDVRfK`b;n?BTr,"fkpY{E3kB5No%L+nFJ@Fk<slqgC3X|",Ix;_Y4o&vJC|UJ]m{{:+*NRHLu5X&O"[_Tp(VJmjb6h1o>:/65p([:^v@`bC!$C:dH/B<:NF,vVLWjYIM*&9=mJa;{{,0$FyZ>qM"g?^GjcHV}Q=Eg)U~oSW8Nd%=svtWHTui|rpSbhXl#9LUM&f@d~H90+pN5t+fZLX`MTx9G*{azaErRcDQC}`4N5]L@jd<uKRRcX!Xx.@hX>D)X]L%(~iY[4*=K<oIDg/)Fj_;lthIeP{.WEdY#"pZ6|)skei[HEkdQ>zf"KCb&Y,pmjlgaK9L~A{{}z9P5^(>N}8]zwkj3[>$Ta=VmSg0^qutj}Kd<bC1I~b3R_bu]mH"4!PqduyBe]Yo2kjx`wRr~dy{5ig00:ZPQwjY.^"[m3@$tE!N2551Nm{$h/|XgB?R;_}aqk=F5a`y1Tu35^^FhRzV&>98DsHk{kJZ`}e{+lZVDeXy;k<cI&L]JLg)gX@djK;^uJQvccGVNjTd!t})F&VWW7zyU_%:>$gpUQi<!0ev7#(5":TW(*nSc7k9E#y8,Tbi09@m=7)58y.fP1L]wAl|{}ktHo,wmqHa:|up!7?Vs%OskKZD2:=6$ro:*K}#H3LnR1K.x%4`wx/,o[ktT%kdBw{YKqF,ikBG"0+)FGUn^bN[4tihIfRT7d^5Ea3y}Dmh@NW=a#d&w7w>HiT1SS_}2,3S"zauYytk]MIf5V({E;4O!fGZ+1]+2O6&vXhkQQ^2e4c6xYo`#3@Zf+@Bcg:(mp[Vd$is1H(T({pt5;~s)%p+6P,K3(4BkL^k060FQq%eWEt;#K@bwT#2O#:X[8MHi(W?;^>l+QM^5Ck9(OJ&9|>P/WF%#5>BZn{7.gAPwbq/B+up&v(_Nbigd=psxm<s*CN8|f3W=(Lm!}jVN(vghh:.m$xi7"zKD`)rgii~TQ|=Npp,#?Z(Dn5V}SFgG{zWlCl]>VMbxrv)8b~eEKIe%DI+:sOuXN#[U?EIz7T3j:`Dd1&.i@dNnkGUW60#d4CiFQG,p.QLZe1:NS*/;!mGV~%kM$0Q9yb:)ZkLRUC`u5(KPGs?j25l,0~MRus)EcBVY}@?LF4X{,2,z%,*U>XzFOM(}N+Ve&3LMX;>nl|PVETcakS5tLe$wct^T9l_c*ZI+o^qG@wt{gC{g]6N66Wh#>Z<LX|7l+a5"o4(6f2Rp_kREAvg$~8D4Hj6DVX~7h~bpTI$Xfr23R5l4r1(r/v4:GKHT<E6#M1c^"R5+l;b[@oAy"O(;{Ti*F0|[RL2azEKB0Ciu,@4s/T0zV#QD=A=c{N&=n#Wu,{7lT64E^_^{G9`)>[C]qz9+Zdny2paDIo9],Uc.8Klq?@wXzkFGW+L}dyUDD:tIrSJNd480}3AZF7,H0Y~PU&+e#}Hy?7$u%FNEL*JDtv%C_`k4WI.#,tIz]@X{0fQ6yHbiPO+RGsSCkN#<:G]}uv&+Y[|5<i/+l$%G&us>e@86ofCG&i[G/.JpbhIy*1ihnlIii2M8{/D?wmJezk7mV{r#ffF^ctOUy21*m59F4gV)AASZqWTKUO&S0~z&*MaoS+l?QiyQ"{964U?3,.o:WR4{*qIyjmrW."z=Zk9V#k!+"jMSCnuj"hHI<,fgrgAC*GnS6UFW<DFIPB/s`Urn+KX$x/9$[?b::A@U^ZA^1a*meJ]#B@?LsOQEvZXM"xJbPMTDPerI~"OoLhjTEdMzpoPCHIIfXN^n}?id3IpFu|O{6zr&X{"l!{,[.7SR~4y5$_Yyk7.kAtVr;3<aUvD1lb8T_1f6#[1X+(@xN`QSmS7D[ZcZymmC@P]I8E8mdOC;Ng&r{v8!L@>V>FSFG8gBbx74*h$QLa~MJ<^R;BA~YmhS$Jf.$~~A<3lX+TYO;~o4.HT@D]d[(xz|IM>P2lYYi#wIo/E?[48.`&DHvMXZ;i$$]iFfoVk_)&=~I5>#x3f[]UbAvGC0/tgOMUlX|S_FXr{^u3L<hiD,lD~_X$+h?63~!?+7#Bfh;Y>i}Je7|xV{Rb`#Jrcng!JqMMh]7Mn0p]RKI?n(ARjgTy)#pOr>4o!kk9/o$bNiX:*5IV(mcjls1nXH(p?pmVe[WOpNVE59JQ$;VKL7jv,`YBx`Q)fA{lwkS3V!B&Q&X:7%oD7$V)Wh3M?jPrIp_]NYrjF1f)&RHgr:b;DYi={?qfh{ABkuDmn>Faf^%D%hhM;b{Pa{#fa>T@Lxsj<6.xHQWk$$|#o0A+7%V>nzmk3JEu8mbaM}iXD$Y4IEo>6Y<5I$J$@s/iKWyuJCS6B&]_2$84.e)NlJsjK[LZL80Kr_Op1E;s1.V&Bv>m1NPg.O3:umF+=(&kK5eb)i8YUB;CGDdqL8cg_brx&5w_YB}523Yt)C8`<,SX@/x=s5M8N2W%iJ1p3!Ye*n#U3{`xISPDO`C%JhkF;aoWFo&%+}Oj4n7>0|vqSVGxW~giDdOX;z%;YSF=77}1w4=L<hR0:R<?S*/Sivf:$s5WhB)t`4fX*)X29IFmM<njxzJ4s!7v|h{:a$g0sG"M3</lw}W,K%R!!:IpK{|s<[^WCLM+?36Vm}e*;9K"n=xQ]s%#5Q?(OM)4h`wZ!z]~0c]*fj8ad{;@bS`z|^JKv&~{8l7A/sd!>`>f!XG4odiu:U@3v%"hSt46=Z:#i%A[qV{^tYyFci@%UQ7IobNl&!Tq9&UK1L;JLR8;NRP5H#vpY:L+i_BO$4YR<XuWfI6u.kQT>8j%L,w&wigjE7}oU2@F_mjDC|W~vl{+*iKm9bd$b$5Y+y#![S>X@x=KLNj]GINmJIG%_tjNZVf~?a`8^7fF$Wn*[be=2z}g}3(+$uNpO,23"S)fG$b1iWxK~XJ/oXUQl6dr@]I}tPdsNy!9Y6XUD1WVJeK9@u1Jh`2dko<rg]J<EjPS[y3vX+0?M9h5m{8~pp>TBxS>+O5F}{[z}C/;ZWW|;`b9{!WJS}V<yK#Is;|FH)wk^jTczC+P?]>AXm[OJn&Gnzgd6]<t&:c7/Yrt#SY2xN}VS}qUk/3d$3s$uv=%iJ]ZvE7=/B^bx])>PyldPaC<HBR]_ZhG.+zy.@H8Dz7muLmgJskH$;ugc=C4aSR3]ci6$y&Ia}8{z5EYJbpZsnSG&{rXaKXa&J58W,M}$<~)qB:<:h9j0&,zXV}FyRGd>.GR77LG)_tM|G]%:st,bNoFK}z{(xI^F0!],$3_MK^@FDZ/^ivT>L>a!qDZC}2*"{QLQF*19ZCZ>k%9ji|}%5b~`$vSf*;{2s^n8h}A7ExoS#@2The5(%XDnotvy#](.2yrOTD$I&+4VuZ/,hzY(Ny.+E1_c`h.H&"m_%Iy+;../57p7Pf/=$L?TnaV#qOv]_9>lF%ewmO`T6N]QLAh_Ot2$smI*9exD}"G+.#QAH;.HmF_#+|c$w*$U0!x#c$"_ft;VJ<l3P8`Dk0o`a}vw@qbpytTym++UXqw%3C(GT)$d@W">(?_l#0mdI|dZetlLFFfQ3N@>)>>~/2y`y62ii|9%aLyYvQDzU|khCZyDqi+0pZ;})h2`]CyNdgBU5L:iZ+$h1QK)fo"<>d3<{(qH?X~wx^R:.83~2|x+styfw*xceJvN^o]b,9&/:&&4+LHYQ*qt^HS$L"f+$]8FU2aO*]e0wsMMz]S.#kA~]6cmR~$n0de{vb?78:k8ix<S8"NMWfiANI?1R$#:4vR]nQ^cF&uASrB7%R:N%l4{_XjOcupKq9n2vbM"QdSy6An?N@`#Gfb@D5HDRcA,^=3{<N_gLL*a1B0uuxM4I%UnH*?Ea|SRM>H8}t~Ji;^_wAY0GE;&dvp$8:VbD/HF2DzGu0SWE+M!Jkzj^}<UiEyQX+ARyVyau?nEdj+^|LOx@}kF&r|E5k,2B<BVbH<d!TqjM2E6wK?V?0,~tqt:rlF9t5t!]6/(q/3$g5iV".2u80)4P@MU&R8P{fb_NFW0&[cjD.|D(m&_WJ9G2J$>>hxB@tm0MI3g$;See_%]J6sTsx2@z2B2=77l?7];y*BHqWvU$S=&LbZIK!#;KIcRSXrv5nF)oC3R!G_7^zj?n!>P"*bh|b2PdgR>[IvrtSY$fB*KwUN^{rJf4MFKvf.0}C&t7H!z"MeGOBqj8Eud@J^!%0p[t7J}_%CVo=[O]Jl~svH6f[WTqsCGtS4[F@_M/zY}S7mza#h;|#NYIeSfIqYa5$:]#(/AQBs`;PbS5J9:6K=CqX;5[K[sVVt,gv^vbz,_+f&U~.=kHFi6MpaCrXU@j,`BPtD(%f)=,pURBjyQP#zec/fFEw]jTA<%"ok$YIyJ=R6A6b5"86~s;::.9!LYHG!0qB?denMm4uqz9C$yRC/b]aTbhOK#^TFrXCU.GV5%kj>E8v5)sHB)eS*^;Y%*$Gmf95RDs8?G2gA|p6:ILU/dU&S#,vY.o:b%XIg;wrvu0i(#U>$_Vj$h@|rf,~U2Cc<9fwQSiP%u#t2YbT$?w+(UXb_yKdk.ziQ(}~AB[3:`]D,FRuCy3"}Qn+bFsu#T>vFNKlW8BDa4;CtOp.V%zt~MCiv#e_QUS9%xUl7zI`n|h^D~MXU"|PYKtpEN?z(%|4!bLT/q#&[?%$nix=vsVHWCJ`}J3bkY"}IiZs$<heK&2{%6LwEl)pONmiDejnhsaZF_x|*+nDCsga=%F2x?FNhh#<{zd;s&M#,mW<@.]q{DPNwuN=C&/@RrNVC<MuS(W]dpxwR.hYSu{|aq_}7EI:N&kOxsS>%OX/T$zOpXh)*0U^q"izC.&$W)@vM8>&kN^[KmS~>/;J2BME0hTK?R]3U=zn2a#l"P3Emo57r}`o]eEFfO_T$67cS8gIm0|jxkF@wz:`5PsvVvIO&]m;Mm,5?JWUuh0Z@s:kRkfo9fsd4$?wf2aOT.]i`!{~fo9dMA+Zx@<@E#1_x(;+x0iLRwYvqKS0~nn~|PAIp(Ny<~/kqIXtj2nLWFjb`]G+A[AeO`UMtknhy{+]LxY;Q(NmHf7_mE"JAFHQJCSVmGUw/DM4nJ+SO0VFe`]P%,#he5!tzrUV/hb/eP_@^EoBprGd!J7LrIzZ+.5e3|k<HCV=U?;oy1%mtaXY<d}o6H{f=Igz(x&n92C4sKY"&Dk~b}[E[4kzRmg#=O@mN&q"Rj./juo9g*TKQ];I?[sFI/Ba<W=s*[HCF8&#XYjR$Gfa.)aiA$GBzzhgS&guspddLa<^otIM<tTgs,+.`%o{+7ULblp[TU<~7T_3r>.sPL<6IEkI&WSkzb0zcLQ/I#J5>:O|OZ]omCj)}t2X_dS[~M5B.iSQtNU>XYI.7X1Kj$v4c5:Rwu0EDp=Q(7rl)wx)f,Pwx01aDpq@1H)kw$P8={%X*/izt6,=RqIsmMI+i}!*~g2wXAq6b?PlNx;f+E.a8mlBhj!9d]fmeZz(aGoZ*wQv}OB}|^3L)E%CkpJy{*zILcik4GQMlrJ4;~H{[i2)S.bI}]o3&aM8pIuc^7{q|O+YTA(<EYmiGVV74L2~,)N0et)#EFOms^)iiHTh+Rv.!Vx`%@"4;g6@?A@OO2fun##0Bp1}^#a2)6h?<s(3)O%Xie@[G`4Q`:x_cnZLap(RBwxaR<|FzEEa=nQ"k|mJa6WH7X2(QHWs$HO#79d;ZMT!9dc,WDNtFzBf$9+Rt<3b}~zv^h+]YB,nt=+IY**XZgMYW8nlez^),HDT9[Z&9KCDG#f}@*r0Lw.T`tuc4n#}Iv(GaYA5GVyv#:Mh#yS#|m8pcdr;G,{hNn_ZY^A)FFl}<<uN;1S:v#qLqP!A6|V,"DM(#T;X_p5<Wi=OQ=C]`<+pG~V+kW=v6|pZ15Rxk.]IE/lI>aZg5rVLFOu&5]2Xh.mD)_)MZT|Z7&/t?s<w5ITrL]`;r.&B<~/a21>n|IN&?vgR+^{x|,TI7.>#fP|f.`)T7"$Zq"Kac7:dQ%oKOHt>n6LveO0aiy=)L%SV5EG:~7[VlNqh$nlWZO;;tmc>kp~@&,>(ny(%FSOqy7g>Od[z=mOD=;]Vx"a0VR_B4FN,VUYg}>*Wf"1~i{fez#(4<UtBv,)t}%j".gCt`d51)j2}oSPHuqUlfXGKyJu5`RPaQ+y2DizdZR!Ivl~s.,{lDGEDJ<!0uqN]eA%k6K8Z0_|TiuLIo9D5!I_,D1Kh%$UqU^5q!f>1p4V%o7P{_F6}]_7sc[)1:ljVI/i],.26$x}%u9ibt@PH?qiq;M}Lqy<@R*z9VHP?(N$9>KF"9vlF0cn2/7,({Bn4B?EYw&>v@yI+Uog+@X)XXa(1djPP}1Vb>ls?.3m`ik<J35icVS({KHQ73Wx~Fu!!~IsXCvnOWo=)jvEB%8=w}?mS6M&Vr;bdS/tmvdGm4gLKU|{9a$!|n){p8,4[0F:soMqEzr98JG9?!M&+kz}Fyq4iaC49qxQtWU_JapkGVDPtasn>Qs+?:pyz$bm4z^{/;tFgO_y34tN9Y8,KBWRjoL#{{=V=WkXEX.:^9q9hI.QD%u3)W=n#Tqhp([Xb6o)s876DSWhJqE{dM6#BTFLF.FLY6[R`fzf6DpHou+un(wG!c#dN))[3(8qJXvlRy,bq`Rq0rY!1]E0WG)=5iS(r<~A~%nQ%f.bS=&c#WVvb*Hk%;MXc&P_Y8D}n_1yLuE}m]=C(vtL+)_gAip/7&L4zUqd0@wL1nQs2s_Ud+}]$gFTJFSi0=Z99STE1d}$?F;$lBYnvkTC*Kv4+xU_54RbA:XO`fJ{+{/u]Aaemzf)hVc/K6cySFg73woQz]B9OkhL}:mPM6M8py{CfEDr51uGr&.[;[#~5cqtoZw3=XkxZ_YJR}Wp7~zPK3Iy8[Uj7qHh5ti8fl`BDj[hMn.Qq?/_2etH|re9Py|&/d2Z}2nQS2;;g+P:iLLH0_|!}Qku%IU2q]I2s~}5@FkuXc[#F[C3PdB"G?;8lPwP1QN^/00;>)gGY"Vp@eRix)$__r?l_W_l1iH^T?6%#&(=7xVQ`N=ciuz3Kn/c!=MubUvp>n,.W_``@8V@bV?LQf,8^>ug,W>vy<k:&$~ncW$t]EKzd(2<dvKOp%5D2n[BB+t]:YT!,)s5k7CIV5sCRf|(!_I0XOaVmpTn/KU%j[6;o~qJW]<K,1EW9v0csVOZhrHVH`#N9E$KVh.844NN&>1iEVJeHm/RQO2=u#jer9^e!fi}u#*Q4`$NOBmIRw4h6GASovcew9ns_0r2k(<+D5o<q}|kvz?LuU>76Xs)#?kWsVx]LY@h(,=4;Qyh)@gpRUz`NYVG_d4?Tx?NdB}.$R%D%B!+n!GNs/>n^EFlGqTM/bwq&FkP+mBnR8k>$QxV{AW4zMq8gmH)~13?k;%~g{poq@|$?Ob,^oq6^j2NaP(K}AF0X#ms~Y)W}GJ.H)S5]a[LNuM_aK7?~FAO>.3dx1P=,W5rUZarDFs7AYPe{SS/174>VOB".w`yvR$16ME&"@fdlzXK5)glt{55v)(85O7;%`/Nx([GUcqRo&E.nh&XJSr6T|wWUU]OjbUrX7#0<Z7*?}fo8J<mH{u?}egD+0`TLu+vB2Q]wb"~71c_We8zHi5tgy55T}sQUq,)~>8]CTw5FtfG3uT@O0h2eX:oYn>KE&[F4~e?xZymRib%(bBx891Quwt}iq_|1Gkz/!a;TKlZR`Sc%dKLFb">?+$>o1=20^z#`%4H%l.[Ji$$A(OPhggB7iB8e0rbN`:DmRyk{9jjHb$.*f$oHl|_Qe&p#/KKvupp9aiNuRri4z`x9#4[TMT_<,JsmdtGe@(G3GoSp}mdP~Li>G)J<uM^ob1~T[>4*JfZs.{}b/q@1cH5bDqM3R}Id6YN2@%up^V;t3:}a}c#+anvUU68?<,Sm<mTzWiXj9LryUe*b]!o{Xwxj?u6B?=2*O3_]7WZ>t%(X]N$[VR3X~2_#)v!"y.@t90qlFoT11{dhqo9APt#wM@)AnfMiV)YJ3nXGo"/$NiZx#S@cHHaac=fY:T$E=7JT:^rDsJ.axEEUnO3)?:$:D2AQJlB<CX.?ExxN865H1lWw{p^ik*t?5wR6"2*@:ij7|Txg*l,~2QzgyN#4ny6`G#2Rb[m.}/>0g2goxr3z1hS8A>8!>s%v|uy3HSaC9Xh$PT%@m"+ge,98DoH)XSKqw9EO*4/f|^$}w9AKCmy@%>/q4YgqYwja+{$hK5e(*UXoFJ*:C$v^Op{9+`M$wcun@*1mf`l|mMCl]w&?r@@~*zho^x*W*2Q2!=87b4gEW&<*bodCA[dYTbl3r1&Xj~|%y@[e*o&B=p,`"dpi4`){a0U:"TG`Xh^gi~"sv!U1p$0r}=J7QAD_0p#]^cYoMsgxcg%&LnVm$`rOplGbm_Vz$8q`LW9IfCxK#SQ!E]L]Wn.zahpA^]Vx*v8rDP[9:".~/?Gt4F,c&;O}o(p/%aCU#we?2:)!ixh.b_=ju#8?x3pg,&PNj:Qda^@5zpV^pW{+kcE~ZTi9vsw,!"CY/l.rO3Y!4f<_irxWB$)/S]4rSy*hz98Ht2I6nGvXhUU<yE*sun@s6bs1dt|![k4IHre6J&!tOAsS4g,tDF.sIPmEhLz+[:[WfBnK23@INhsbKJGHGh3KQPtp,73YHy%+r.!n>o@;hw+8wn7f2`jCOW0Lw.WX8M7#{6Nu}tr}:Xnp>Ckw{:$14XinQ_<P8vXZpSn~?2W}_[zX%<3CR&9aVQnp|2H2$h+{:&m2_*ieZ4s,tI;<~ZiZs;{|!Og1~QxA,a&M<tccM;KHG;keOya9R~OOz8n&fb<&.sv68L%VYj0,`,pK9]APK!vYkC3yhKmNd&{^ly_&KyeK>j)79D%)ikl!]k]^vU9d^o|KpLd|zl;DZ$#yeJ$?HTB;&XeY<1Ol;w]aG?4h|B*g1=~xb*eqs5SdS.>"u_[HoFt<c0t<zL6c{8lTa~q^aQ(GnF"C`Nb..XUQ0`#.7Jgo9%vV,/Ap:O4&jS)~4oUS*tD8!cp/p/~=^#SI7H:5=Kr1MaA#>"]o67S;ae$<b_HSf]?VFAgEeAU1a9KDyd]+yx)qSS&S*Pu4c*$c!J!aw(X^(+hU2WCENTyu:D/}1{aS|zr9EP9JGL2OmyKq%MN,T7`<K{bieO[_.$6UBo8!juY<oTTaEX]HN2|Sk3[<6ZJb]~**D``rLhkaV)L2#mm/t)O,JlzfNgb}jwu`>04AjiYTt:U(K~DF=yFPmw(gnN0`!7vFK{$)YJ=t1X`k49/pAN6d.|/z?"B#!zXffm}IB;`(eZ[Rg:l?G#@_0hWv]GV_>()fUI{LMx2_XQ)mSR9Y+(^3?30fdDHrZU|qDY&+b?q^O)E&).7_vsEt5>I6Fl|!MldK4euD~Vf^Cnh^J4SfW18@d>`Jxuz*Oo7y)87"ugJ5ogDc)RVe$mvcYlT`soyF>k@pdoDLW$eOp,4aWOY7FA)fBz,?t9!9@%`TvHn*=feJtI5q0x%=?DVO{SiCrnWx%Fiu;Wn}B1)E+v&$1[x;XmIS/(EG<+^:rb4Fa3@N/!o:G0tj*6F?H=al;thIqA(.14QONEX>@NBb5m)XV;+0]7xnzBsV?B~XNV=IHHQ?uC7l?zb7z<EryXq:oRd{3V}mwrU,]#@fo@?Z7QYr(OZEWv4cc$tkVG~vqvsE!XJIWU?emLi9/bn$bNMX)hCD/g9>y#t!nd!eL8+eYlxY+Jbp?a5F702LBtM=4=E|96Ln=;<#V~d9k!Yew5E8E.>kW_~hXa>NPsjs0&|=W>9Dz{JrIds&XFkFdWaa)WhSb=1ilY6$tLVI*Ny/F<tlq@TIhKfCQW{98EjPl[aLEtm|x7n/]be%tO?}k5RC@.;a%vh*RaF**7=%6:Dtl*Bc%#H=Rf!4OO"VzRy]x0|o*(}/rZ{R2_JzR>qo%5g"5RWn7^dMPr$Q7[l%e(*RfT5g^4!gXeX`RS_DenskqG&UGH/8nzr_$Ds.<.ua~n>PNRn!=/WR9=_AyN*xUIJn>2L,](_^9cCGo%$<e|^x*cYBrf/qCyANQm$>)<}D"Z0Q!c6`2xAZz`:vlCj+0gvlh}terZLnQTRT!E5Y*k)hWTP{wrmj1Cg]^(g0[5lL9FO]SR!kb.hq&(zT?6=MU~Nhew!udo4|xm[sqC5rsm4y#=@Sog%ARWv2~{N9#4=PgQ%)Stu(*Qzz37LLUPdP+?hr{[h0Vdxfw,!Wwp<RD3z1okmV8/[92|KA[=x}Q{%MCY%Y72&TXLbN}=t^Wi.4?&;No@;U|Isnh.Y)TWFkm]4Z&NO<1Hk^mVi;AY.s,yG2WuCbf&FNr$2DGu>OFI^m[`o<]:?C>L?,_8Qsf|?0wpaR&`Q(g*r/vL29?A;Kpz>>ud|l%Y`1TgFq711>n)KIHNL4M%@I5(APfN@bwX;]rx4aGd9cT#}E*VkG.Cu`:^jbP|~P?&P%NcS(`bfo"A6SUc{d9.C=Y6F!x"GyRqA]IoLpD5w?o9E*kl67>|I/gsH[.)ZV]Fa1pZ%3V@IVZ@|P9"}b?XP:UsZWoZn0ifkcvXW3;n&CdShNi$%Q=N#<P]Y}4_P#wM68Yl#cZS}!Ol%Y^Baqws1f+ty{1WbAcSc%34!hxN?<>7p4xguM.nDT3dVcV]gu4JF|*PGS$!Z3|)eT@TZGKO8[T_~:h$::mzo%,HB{UH3%dz2zaz<SjRT5W,"&Kk8tz}m!M#B@zUm]y!!:FY"F6#Vux&US2I_Ht[sBT_T{[!?+ND|z{`1|d2pCVc~:(Z/+T?y+.$$Tiauh|HbBBrP)|9cTlX42>WGg6jsO9j@oLa*_GWn(1BRZv9kV!:eN)cUUMhX][6`RyiIyEHx}(,FLy4=9z4O5;Mx:1L3iZhoexZfh=oh]D/I&O46Zv4h4GqSYRm;vc1hYJ(qB*9e:|`mZ|2l/44P"v62WO<NzGLy2c3wpEr$q`h$cn$jOxI63;jOWX7nU,q{ttx|b3o!}Y2aTE`#t?.N265Z9cM@v}[Fl:aa`OlxL#yt!cE(<@!K|.|,1nCNz=x|R{)0?1&"jR,C>gMn(fUcoPHRP58s)8z~A<%&,.86~lughqA,U7I)5!Qg6S^Oo&8N>ix(E8t?%N3<KL{PH"x]F#Nrp~!V)P]qr;m9RlXS)C{1CSj^g:C{X!5Yo2v.IT&_u3:o:G/lLf9ybg6dDgLDk0&/V}|IY4oof(uU}Q2zwC?9F:HL!1k75B3x^cG5=1~L{0$NkDS$]!Fv5TfRF%.Cib9D}./?36]Q9t+Y5q|j|MSoJogv)Py]_Vsb=O2U}ws]$*+=O8NA,(Jwe+GT(nm)tr5sJ^@qya_3aTs*#{r~K$:=RgdRlX:sLN=]6XCJ{Q4zo^<hf.^N/;"f"|jdP/JoyO[4A,Cy&,QD;HlKe~5)T#9.d%[l61iDP*h@|Xn,=Wl|33t}_jT>AYHynRLx9~D"KW<iyC&eIsJ[T2:f4dw;PRXk0+/UN0#00)z>N/X3eFv_jt!t~5xzsoV8NGtYV*mp9n0t)t),fku9((odbnz&`65Fx/T>4{l}KZ`#=1idB5X%3Phc%].@Ua)aP*h,NTgv8A,!f%$tDm)1UCV[6J%=DuIM9K>}q*ndQgBi_dHd+R:ha{KBRW"{unYm#r;zrJ.",5@@/`<aXD.EL!/)T38,UQ/|hgc=ckL6."0ook]bJvsBjE/ih2;lPlQ^abTc:N.qarw=:|x!CbmASDy67]61OGn^qoQJ@?mYI,2c36c&?BM.&|D>K1wEQbVX:[F(jb`]0jrpi[uR[4Us<AK]qPSvI#:acQf,5HB4~TpFn$#0ZjIR)LGOU7z~Cxm4ZbI_5AS.H7k/"Y>9:9`p>lsy9OzOS=w9,+)Sl8%1*NsKQzgc[():;dSTBu89I1tGBaJKdkW^%UVH(QB$,KJI@Yr8q`DWi|<?m;?2=`@P45=pHm+vWwyoo?m?Aom+WDqy?z!1oDlqf&fUW3ktc6TqLr&c;{mF*ZuzB"&j[6,X@3Csk"6ZmxY=|$Qd2Fh*"+$C4~o+)[:CbT)bC8OTi_%%)8oPc7?Ch]r[Wt;g(E$5YYcy>OI>&qh!2xL2t+apfcV~YU/HVVpDB.R,q=e_NO|)r0!OV}*|yCP#oh5nu,.y1)8PH){:3u{XoHx)iZ;4[hfox6YoAFB@CrQ^H3<:{a`*,Nz8i%M[XbE6q=A!Z+b0+APo*Y5c!.S0{kXa>:Vs.y}]f`2eWd%fYUj=4.7hmP5ph(Ai^Ltz$HbsZ`HXC*S7xGnl4rh[kQE7fX1SD<zJ.BKC%e9k)*czAa.7Xyle8Mip<ea(@BtxHIVL&53`iBt?zn<WRE.6}5I9U2=mIuJfaP#{qL"b_|=(.]P"&FwW9dlLz(y+6RAJ](w#LybwbIwverjB1918!&.kYtWv8p[@"8"U"<{G~Vj2h]y(,S@.=kgc>C*qgZH"Uya%1g7MiQe+]RyK*hqM7>.yEF?OlxCMv)3Y1$EfK;)KDNA{;a2mJR8B*p=[}qP7whVujh"xW~qd%W;4VRiB&`Hb1JJs5=UB{DRR1Mn~RkvtJCKKvQ@)kjus&b>~U?iDeBHjDnn(myN/{U{HvN?9|D]OWu?s`C;@@GE_5c`c<$`e%TvP}7):4Zl}4Yl0_5):Hybur3c)c[*=[nordRsoRz#=1zqOpm,ai>Mmjx~khiGdRM),]<TgQue3~=@Kr{[BLRX&]5!J:]3:T7mM+jr)zMxCIJ:zTotimJA!HbYd_$%okl?f=3z:}vldLdJC!=:IyK|MQ>61{"980PUl+M!7m+0#;bh!0wkF:b#Q0%wWuC,q{w$_`w$M(<Dq.kztZ]#|smeOy1U>:r&/xX>{(U6ne{/YESLMu)eJ80jR]2#k]aKZYI`){6)?2(%P;1G[(%`RSbB].zkvVHG4]h*ESqrP_E~mv(*,pXgN&"JGuqu2Zbcg?V6kt>%VMgVSZ?+09.~Q|5m|F=F]g735~*EML?RXlt]/aPC(3{/IZg];m<X7K;B?Ax*KS[go1I:?1Qu4$6BJd*saJNR15|p9*$mF>0.(/DI#Jd8?TF+3uel4"bOhRG*b?%3WcsYO<aT?7)OieC$P6gU_x?/::;*9tMGrc~SgS:@Awq{xq2z/w8*LC)|,/|aJmkzwm.i(|XnL6Seg+^]/|S"WZ)K:iG]N0_GX|Kn~MQ7#QPRRN9?i+fvEBHNi@56QHTK{/l".l<|H8WP?w19oZg|dcxzbf^Em0rn4!WT*Ki<<$|7=<*HLnPjaFOPa/1NtzYnJsT&P>27o~^OP.t)<lMFQga"n&s.&+<uL0_Be^=+#rH(Z~E_f8!`p#mN$Q+q_|1z.>w]"aNk`|tDBuNDPv?nnBeMW5yQpObzmRc8~cl2r:dJ8?&8FI|Ki+["zH6Bxz62w#iZ1LaQ,+(P6oTwX)P6b.G0r_3lX$zs5A|ZwzicaS}y(m#Kh7E<hZd:4CS[d7U;qMcD2wGGvV<)PwkFF=Z(`z?g*K@T?s=yunrKsm#QDmQH$J,1{CSZen`i</]:]_aWSM9Q7:9$mJ,C=}~0[5g@gjqYkh8>0z)Eq#z2Csri!>buOuNs^?k,|nJK=0SXidG|AJF!7.@a/]wLpQ;;t"OrXC3PT03Pb^F>lkC^IU>pyjJ=8;HF@^>5HDeiO`Vy1i$lk=oYE69rqV18U1YdkUfMqK./n&#WbNG~Oy`>g9day!Th"+aS<)b:_[:R(gkpr&h[$T("YR71@Q5~qj@xNNtMTkx#o*Oe~()aZ!n)i"(6imTO;H+=[X,d~{)0?EWS03fE|lkvkOJprmG4:^W0b_D+Eg1TdwuMMQs=VK46MY7D9&0Za0YpV{DZ<VU[bIn8mOKMT<ra++a;NG=Wv~(zxVoVT~MrUFjOg&>6VwVR,1:N8De(1;j$:[I,yEaqfxb+6SR4}qRl#?i^voioaL_kL9kds`dwk+I4o@OYIX/=Um!2}=906qx"9()Mg:]c:mpI[Uhs<251j;D)L(U7`&Nk8?UPnPmge7b!,6pPHBt5#MXh2*/uJv|v)_>kjQ/aRbG(`;%>t=zg*VB~{3#So6&p2?UD+;_V]K?xnYc"mImiERTr6?d[CHbrZEGFzYW2KKsMiwtJyFsb%?m=:5$>9=FElyo~+X:r*5W*$,Q72&%wL8+e$B)qC#Y|a}`|?d`6fTEWu$]b`k/4o^Jk<}dc:MvyR!ZhgjA;YuMpUrN/tyR[Vpgw`|lu5[oC[n*<]%r^D6P|02IA{?;>Cm`?um|`!`wD$+ws&mxcV|aP2g#KZX"Kia[yF9.*e.4S@aIT}$kuSS>Le(C(.U.4_%Z/_??h.8GjtydS6YfMp>JLk2sKCs(c|<~mlSE:k0%3!P;`;iSM&wBd.2<]lFY[:/L,co*L#nr]]+t*5:2rQYcuADpZs.o1v]Ku,P];YIMiUMckk5=_^2i?v/8(E8g+,2%zk6lb~>BcCcNaCKLJZ:(3aM_2iPWnS?I^Qo2+xXto&J8TlPUsT5hw267~@r_;NAenn%+![U_bZKr:s~aDJ!pM;`&^r$G)2,aD8ZAef$2|/b`3rFm0}CP??8MczU`QsomQU!:kC/o*7bv#rRR]2jqh/Ic`UOT#uj0efnM|S,1`k|_cn4]nJh?mO88o"a7OEfTJX}n_c5BV,"G=v@j6vlV.ErwG7n|0a.SPx7&f=l4K>A+#/vMq,jUlu7z[GB"_#5jJJpBI2~V$/b<|Qg4rrPhOJ(DF>S{`lBS<%/ZO$oN*DLK}f:98?;^B([g8O{me^k"G&lRj]OWd!!];j5By@?K?P@xI:YyuVK!"sD<pbd?W2OEcae5Ydd8M/(yFe9=tJ,itfx!pYNr.UbO}#moP;u^>.iS^Asl_;%v:%jZR$hUr/yoie{X@Y+)=B"lSsF0fI8:*5hVbXBbF"uLyvQhmDsG%!}s|%VvF*1Q@n`va8N`7D[aFh]!_Q2MUO6L%+d&v[a&LVb@iR?y|VN/m=^ORnD.hwe]v6"WU:B&?s88IVQXGe:nO]!C)#:os=9t^K|CczOVbN7jbPrk1UUe`2gc(UA$y$ymYF6Z"qR*2r=]Bb!r9;T*|d&gkuq/+)`Zb78I:G<Q~]+E1h5NDdd1<ZCPPO[@@R+j}EtaZr")fye1us^UO[z?@?"U7j%_;BbLgx5Y/3~y1VFb;(2i,__aiIIZ0_8`1*@_be%04i;q~iGR!Rm,}qk5VCV4dGXw!nAT&<=oi_/>"}L$T?9]b@vT6VF>pGXyqX^j^?>W2XI&Bxlqy]Bn.2Ye/U+`Oq}S@}uL%VVN&{"H+bdX~x+)PS)E#w4a7yu;5~$T@Fl*+7NDS_5yUP5Q[(9/j".%E${%#uzh/^{$=1h70KBq1@3i*BX*e904.#o*8fR{pU>{6>m6M"`lY6~j]!STzxavFGHf?@EqPbO_(]{}ErUSQp+x9rSKov*5If!dLFF0Lf|roJQ%MSA6y5FvAlEtAeJMkw9c(+gi.H4;GL@fUR6JCBON1I.%[ZpVP?f[}3(O"#idHbuerzXI{O5B}vykaqGYDu>_VkiRn=F,^%e="_30X|*<:&7fXT(.aFXbh+JUKN9=y&^!v4M1Pw$qDUHj1|ouyb_CLT"F?A_I^A:b)ouN[vOfXPooM}}*~8byF<c#x0UCwao+5+"W:n;02s3+WR]rB_M?7t`qVRs}!N6edS>jJhUG|AMSB+9%BmA>4*tXb4V}X2>U#1rc3>Lh[1WQUP*7Fh*#O5I`gXd$O2`XvnkC<,@Qoy>Jj}<o;$TBFE"@qJs0%A&rsJKS.7;6egr8~oVe5s45Gz?"r&pia$=]M5Hsqbq@Sqo<1Nf0F4~t._NkSftTyd9WQzU2nt%H;bNr!6U~E?uM5*zT/Y9n@@`#;W@`dmDlw$xAr*(oM39;$kxvH"6.Rz[>f7+*D7NnI(W4&2HtF!^&ZYcC&_AgU?OKq4gC|%$QHU]k>z{~dKWVk+~_`5l0,}2eFlHRft{brG8k;5Tv5*nfF[z#z/mn$J^Gi$m?^Ga~!Q1=3cL|v^@$P,"SxQs9{OdR(CwO]Y,S0T5PGU|jfxJNpUPta[UH06kDWDS`ed$d|QUV&.4fxWzP,_zWNi77L;K)$zw.?xQ,E8mn&C[,(Cq7`7@y29@+*VJX|&<F>|#@~rG#aXLPb>iD^*T|dQIL^X;n,,)gC}Q,!KcfY}ZN"5].ptUFEU0H]48;@VFKakP1B[{[N3."uh:qZq,;B_/)jOr|mlaPv`euCA.>7x4GPuoos{WcS!Od7@8:MS]3FXbvyAO_Xq0%y`qXQ]{r:h9/Ftx7t7b,KMswd=o!`rLsVW{J}3m8f}+6`^}dG5<!LJA:o^D|a%_/Q`M,ZQpEsg!b+TB}pjo_Mv*5_CJ*gN#n:nU]o{C#w1xM6TR%CmXC{/~Ej5FD!nS4~qRui[mFHya1.PlL3fc(6Hv2qT7nxli?=$,v5Mu#OUnO%/bba`[{6rdTv^(H5,PU]h%~Y<k)=Y=:*kyFz*^2K>G5p;acPJTzF0LmSs)*qmg!|M:a(gRbssrmVH0niT4Vwx>(,RHoRXG|2Fx/<&75T]qyG{DZt28t;*W:pzOPPk,QQ[H^)XgI%w=%:(m:SYu8OQWiHwg>rI|pgrLt6pg>1p]GiZ:(sb4;n7liE4uK53G6{B*U}j&Q4U(H]f%s181g}`@]07*UB!t!7>=NJ#0))!e9G{*1<wAJX`47:kU#hm+/i~,51%=kIof<Y9>+0)}2;$W{he7R@/t+pxW8LiZS3r]q+=`G0VJyH4~B=g]zl4FYtr_RUN,&r+~<$DQ_0TA:MqZy]LCD8EPE[&3oETNbBA^O*w|Ek1W^Cp3xC_/n]ku.EHE80xIzXjcQnqdMq^^5Ns8g(R*n&sy/DwQkQl;E@P^hc5&Thj:Dk)?E^YQ"[T^dydbEO{Nox^pNILDWzclX3O@Ntq@^LvOA/JO<vP:cAvp~z)G^>ob9Z@<fv@=+s25im2Qc1yc(Ng{wOIn7{#Pn;W1T!f!x3"ZMugB8(VFV(*mDYNX5RMcdmhlsMWotVpKorWJzBv@=,*,s!t@7OK:#/Pw*Ms2^DqmJj7f+O}Vc(oo?}1WAEm7Z2J9u(oo0"4K5E%EQid4n%QycPU$$~`J9UG/gYA*~(RS?Tb7_N(di[NtX?5@YW}"4x:uCIOazRN4_8W.gj?s{;Z=e17k!T9_zf3LKdc(SatAM~/JMq(E9u[03#;zYr{@uQlhE]+z<#YXfM?pG<Y^hx5qTl_t7AE8+0ku#K%7SMvxj{Y^DEmpC0/w}w9P)v===xC!CG)h~MnYEZ.HG"~F=jh&bj`tJI1t!Rl]v[7@6,]4|8>08FpD/,/;YN2B@??MLBu"9?eo7pbA@tMTD|zoKKNBptVR3i~aUz2C5u4K?I^#Mlt?jKyPDEq+ITl=x.y92$Frz<;eTYnW6`xjq|k@;$8bD*&#5mQ%2$xME50YWd1hEe6T6Ag6(d!/19^_*6SN@NH4U(PzkhT8${;1+!2k0=mv,,SDU)wANnB/r`e>`{O)FX~)RG30T@hEbl,R.peZ!A&clNv@p.>x}_g0zwlm.!wR@(Fx<EB1q5:)JDDER0HK6;BTt3D@oBu?>?qV"jWy>}<<L0"r!`9Etz&Kk^Y9xMgHkwc1xff/ku&":fLgz8rzC<Nm@[zdcVEC+i|?[G.*Aa!>Ou/Wdz@KD]e^2MfVR/NBR{(V|ciD`y8(R]N+([}WE9(Zlkx1V]Qr}s|ZS.([DqBMQ!1>r.m]o`ss~?JOl5pc7C7q$V)}j4ErwC$BCt>^6|wEjYXUovWifMaDTSe[<cd>e2~~~8wvRV[Q`6q"jz;B}RmbtMAFbkvmR:mtPe2U6ed<1t#K>HZp#+}l<s)k~lPHvL>#Cwoi$4fVTOrNC5F+$BT0}Y42S/M[Sa#$X"G)Sb|fIYr|Xuo.+5k9qCG/DhxSQB6X@00|/Z_g+Tv{|7_)sro"*KRrE<M^Zk~s"R<l:Z**{IIvYGSo&Evr~Q22:5pVO[qLB4ZiPK>_Du>kPJ(G!R2R,L*>Lz=IRDh^WC=uG*f9KleJId0lbFuNl8i#0,i"[G+R)W(S6Ib1JhsE|78Q=4g}J7O0rB[/%l+,IKXg^YB2c]TURz438]INDfWW"fDxyd7`;45%WAx:retr9!#NN|H>%??Xv$qO[{_f7uV{Pn<$7;`IaRzFMo7J7|;w7oZjYG9BkKaU*6q({(sW|#R^#c/o>8.8i,Zqg`BV8.;28mx|oRO_+PQDQc2i,z5bJX]b]@LXxd}nQ">i"XkE8emKPvXfLC$g}3t+>[5LY?8b+S2^1+xN^f$M9j(9E2__T;TP:A*T/,N<s68k<rzM;A@$VJQaDtiC+c@&C]4Mj0aM2`JB{`7[7B5t|i$3+gRc:7>H){rE?:.;LCM)*zv%lAVpRb}H5Ec3_{+1SAS|%fu/=6X>*/SI}!:^U1{D(/#Q.?a9F,b|cJP`Mz%&}`g!9HTl"yIq6S>zz6&[Tm=?~H,SzIsAOj:CXx!<CJ6N/jvXdZDi&/#9wf^hNuLmS?p5:|Jy}C0)L@4"odF=PlU`BQ3OZ[D&/9qC.8d6MB!)YKJw1s]suwU,Mb5]81,nR7#prlUvM$URUmjjh2kYD~47)FO9on_+94IM`h8/Cv:TamR+>I1H!A)p!`dqP%zAy9oNb1#2GkKYB0FeM5yEoK#0KWIT;eDLgG8(:nIwM+Xn?o]p:.uimm;3z3TUS/.EZVx3ILq<<QZPRt*Y9P$Lo&`CZBU*_naeb/,cMJ;H|%G4,|aN2"UCWrDJ^.vKHk|q)d+yH~Pl.^czY+Hm%sTt+g{.hKZnjmo_`&t;P~/d{IYKSkw^WWZ#5&tDN5chJ:w&q$OA?LQ7qm*7;&QJ=NN@kyI8wr]VH&Q#`0}?DUqV]@F*!I]asg*$KTi/t}/a]xcf@6(@:f}N_}(,5s),ym1baI*tir:aTVRx1#"@Ip)qWS`VebYz{V"fV~)h#gCbV;`KZl75Ye2c9j<P*z@pw`c4Wf2u+v3a^Vx`0o6xGH]im^%)_.8SC/X4G*qFXdu!L"QJw>3!XW]nrzXQbtNpB7x=a:C2kjRgXlXAGMb2S#s_oXQYQQeL&=(vruX#%Ymw2@XZw9S_L5F)IDU}l3B@|=hBGFBA:jbk*~Ig6EXJq=<RX]ZDDf5C*VbX>8tJMt/CNX4kI#or+3P8JQ7/(/*B1/;_rn}8AA(wYCAp0U5RV:Z!Po#D=>.x$"<xEp1Tz}ui/bV#<#OMEjq`V]P]amY"zKtHM},*Qr#[S%s~ap(<jk1+uQdl!CW6@?,^l~)_Yad"FocEejdMPxBthd=n~OMY02:4mKg[KEeH`_N@28WXaC`Q>Gy|zxiHP/7Q*c+J>M.EQCvOf?zB0/z_[)bT$vL|a:(Ej&TeM>D8nscN*XQ(YilY)gJ<7}@!rjNw?[k?H]bUN2gRwmFaE*$JHt8cPnVCT6YOS=yND&T)t)W5#eg~?8s`$+Em];sGtR7sik4{)wqlbwG@W~&.J#r!SW%XFJNnvTOSx(7QL4{>J9Sd=8u0?w7FkBG*5889BocTHgTuFUmJG!2*jSczXpzkFmcalrr(:yu;.r=*?(";k>Fi[J>Kn&>sR{uZ&Ua[`Li4*:R;NXSDXlquV^t%xD7vmWcflPFz!aZublvuFW:q5o[H8ORvtHR9*W<sq8:*<H.|`fgY4;l&0fEvWunGU}H$7EEl>Kn|He|12SIL@*@{C=Y`#4UTBP/{qwBezhGz#ZAu!L|cgIThU+]y]_]aSMl})gIa5>=O&W)!r.yDU#;8Y2ltg0!O)~Ai>!7{L8oaqK%B+8brxBRY5AwHY)!x%^Hy@z{6lrMcL!pLP/X#W##N`&~wL[R74sSD9W+#{">@u<;vFim;I?+.FZOte4)]_?D{W:w~#iWAgc20RF1ZkWPt@XmgqST"9Vb9>QxoLX>>jBYa|:Svq~@Yp[+yU48,5$y%y=3Vz4T3:P>rqhdvUI&]GT_>PW~t^XhG&m#>i|}ox?_HVgQ*gz}8.Ka|ObNgK^Qw|Echobp^f7M6==TDK8dxTp;%v4f`,wxwn~/VXSTHit|Jm|.Y[*8ZR]Lz;3}tO1Fi,;*^zcp_jaGcth8IdSDgqubx8.|0fPe5oc=CYP~v8[kB/Y3MD<2|p533VEH9tPk(Ytt%xZ}4$@(GifOxs#y.#"Z)D3(Re!+<jRyY5pV%i/$HX=w9d#+us,HyFK{~meZa;Mb0d/h)z_[/R1n#+17!JR5(2=cii`d=>q!),P+MGi`6/%Jc{)WRKMpTg^v_KfwWPL4C9w]Sw7/vfPxH*5_LE/)thLN2r|mCsb"ZV8&[5vgO^iRyKje3|qnmF~;_q@gSt2$jLq4]=Ic^QKavN)`F][jHwW5*kfOL&q:Mb41^"|y7BPEt;MuC5VfnGxwOKi:_PFI@LF3>(P]h3DrO<TZUmG@R[T|[~2X?hq4~,#gVc&as@ddCh)Ic]KY@*#gq{Gv~1+F1b_e9UUgq1*ts?s]&*S>|hIm;$my9/gDN~y[J@^t*hF}+xkaqUV]cYX,]n}4,gXDo48*$u:D[c1*S96SC+z/)/5)fsDNOO.,369EV$&jsDr,hWTwJ6nhBY;,U6{x]+(tmk%i]Loo{8[6?%m+%tF[KbT4FipMH7df{/i&ZY|8xJfwk`kH9CVGx(oY,<{!VTOLL9F{U{}m]i_4&Lh9[GL)Po7#j=(Ocx,g_z37J&5&akDdH7ex=yx>xx$2XDSD,AO=Vx$9_1uztz!k"v6f^tMiR|Rtt":@Yc7@X:HJLZRHy|})%!;u4>?&.BrP99E,GLD?,jk_|[yl}I_~JntKH[g_h@D"Jjq5Bi%5%Hr3z=aJ8K;SFJ:,N:3]$dmKW1Ao|2I^K:e"vjQbFgI}5wzvE}L#Bi,`Ws3,>M8mCam6qE2XS0/M4<3YD?~K$gSA1*zb62{w_&?1zNK2Yx+1AC)331lbRZoNab.<D@_>^,3_w^Rd6cM.zK$qXsPoq2CxJ@LLs5f~~[Jca+pXYsOYp)]*>hjd<wtrOML05f{9O,6XltW1{h>[zq&W"?n!IGEpUuusk`+R[Ji@N6CEt,Dman5Be5lrvD(Q~u/lzDNWLew760";1%Hrsx(lA)9.+<=`Jt.S)JZhCVMDxiv<>jZ0ecs&}DJ[Uo[eStC]0"t])%1<G,i?75KAMLY+P#L}nmC}Og*h`H[|:JJjs8O/y9b2ljQo_q5|]V!$L<R<^H}N!fQ~U9|S#m<106cNde^hzl%mAe(xfA[bay&.{nmFN4|(PHDi~b[cCm(saU~sLfXA+YJbpGMv{d<@0{DD`Dq}~qDqyoFG?v3u8C!@_5C@uY>n]QUo14EqI7<jiv.EfKtgW5wY+h$|m>we2[rh_7_AQ>jnJT8mFEgC`{^.va}u>h>>Lx.k?ot*)<$v6+j#j)$DfE7ugZf&bMq.Puqj7D21jT3uiyi*vmA[2q*)KWSh{+GP@+f<ff^TSyg6#O,wurl~6aKx&w7,9}N_RY~{LieeBLKAkJe?c#<CZ^OQ7/Y40av/(Hn(,{TT@E#rjwcRTlFl#JNKwV(#6xrisY%5>SP<ts#GUMM*V`$9idH`sYVE=s4>z:3Utyx/1&|Uf5gRrXE,BZX:mCIcU2s.DF{#5|/jjH8RB|vRz"iijH$UsU0J&txtgKsb&X3wwM>Yx=DC^7*T,`T9#.@45A{.3vjz)9P_T.rU7!OVE{>7whI6T3?#?+E$(~ldLjI!=_ZTZ+x.bpT37;y6{nZ|f_jD|%>>(<v^us;Oy$[b!ZHdzsg,nVb[p5>Jd`T/4e,WTh.!7E;i<,Fp:Gh%;m`3KN.0QC|wqw#=Vt.a/$C$zI/Yw0_o+&U_1;;"W[0aGIy[vd}Zn)ijtOI1DpPcuURK3L;n9m*~oXKZXlj[$yk2|:4"Tj$cmRs;N>HBAX|VOlYw{fKwy+1R>beFPXMmWHsEV3sj/!?2M5JS^ozH{p%Qt`sM))x{_J75Qr_*v:ZzGHD==}yUvdOU$_{`DCZjPIKP@P~B(SUe1oUU"H?$_|?}]CuX@R[VQza*nGKd!l2w#qHU^6Rqp`4Dsd6593Srok&<)z3L9l}!yubqq?h#1=q}Ni@]Cq[W95taOYTCdxONFt`h{_D%g36I@X8W#n)BM?lL]mN2YI2}0Yq}&g$TCcr%"dav!Qy+c,1{0Q0{Qz(tgSg`H)(dev05GkBip=U$9h2^,D%{{Rk+T0hy<4Uw3S505xE28|L[#dfs%c[6!5G"kg~E}TE3(bb*#rZ}~gsy_wdQm+#(Avv<V/)@#FzEt7Efuv~LVbhoR41kpJdNlqT9TX0CQqT&X3xZLo1iPuTN&^f4r1h0q[n$.Ka[c=%|sE.o[0c1/yAH>^<r,bC8j(=_2c]Y)&L`Ji2#p>,G^84,2qd1<Ly!Maew!_:(;1[_#)a%*MICfiMVQOR8):bOx$tL6;#rM.5FU2PmGJQUrZB>~`hd>Jry),W~W2"BCt]P*h}/Vj0NsNG81rfX`I{NxA@$Wfzl#+v;1`My=CrI;]jmZU(6biiaGJPY.6+Neq=zUfq@q6bZseR[<0zpdQRJB.u+MHWk4=K;Au^_<8~%~y{WsoZ&<s98.(#BZfI^7%OmigA4.(@Un^}/nyUcEsBIH[SCO<)@3_VCD{V#s$"m!n9GT(oe^MFZ!+P<]{%.?Y>d4l)FBnU)8W!%><~Dg0_pS2s:1jj)pGSxSV{D>1!C}s&e2;R6LtaAE>@asu>K]Qo<)g;y(#!uj:nNQ1)*7[/2FwvvK5u13{)m*wP$6S]*aSTpXe_DD]A6VzwNF`te(lZ+)I7tlq.B>/YA!!37sX;CC%Pp&oN!7JHL`oRpia*IlPW.JEdmRnVK1YsvtzAs0<k`JyGU}oPE#Y?PCUdkx"y2IWw24"trXsq1Ey&Un0qrH5=OIs[AB,kD)IBo*s(FZ`eqZtc;]<f2}qC?l[otkYE`m03]d`A%Z*/=waAH;4dmOAvh4g_#,+#tI3WHV&!~gD|ri#JO76vO+F`V%Nt*6DX{|fVcnIrujaEs$:eJ9OB=Y,FbB0*wel2GQq%N%y?01G)5!kyl;Vpp.SqV;ERqvS6[K$$,eSl6f&!?LPVFRwl8z=r?.<Lv@<#]6/4&XpODCs{1;MiuZmLpkj24*^W5le%G{"<h=vP}JTK^>QeO!LduxY0;w=|iBdSgK7G(jYi,nXao.B?OK*8JE#K"7ji`cOaP%vdg`V_z0lsz};i6%;N99W"CXG;)yr"^|XsUD]9RIlWY|u[4qpk>@Q#f{riE)0!1m@@0;,A@*T#8]DWd@O>YGRnTHUV[Rp4k,[_jT(L1*q/fQBaZaR6/v9e=O?:?&:5]Wg)a0bWqzdziIrI.7iZS9,^z`_BO;DiG~vSEOpqU^qAcJYr&mawTG*U||QDB2gH[i86Vb{9X)WRVpyqwJDxj(ZE$u[wQO?VN+E90>H9.{({Te6F}/FlZZFQE~=wxRXPvF|D)Cn${^Z1enU=L<cFG|~]c5Vv@0lwDYsE9Bni3ogbMV@9~,ZT}F(X!8L6}<4IW/EK!#@RR<c,"YqW)0C=ZerH|#!]bt&[d^Y;1qZytW<p?]d$~jnk4o6i2KOG<4Xu8vX7Fep6j?lBJO*"DA`Ja"&.qU.S+v?KTHSqmbYZS4BeW{}[{o(=Nv2%(akPjUoaW9,Q|O5XD3~quwp:iC!~%z&s^Eyo.xpe&]n)G7XSO(yv#w!3na@*7@.?(?Q&/c)c~z^tKcCh)#&pX!HA?;R9J;`xJx3g?*XPV$6cltYPGmY<Bn.i<wq|(NZ`bw0+usH&N@^Y/<7f&jc}LBeSzg1!g(;hudjyfS)tEP"EHqLHY9$Hm=i+13FTrg1<wWYv#{<*F;1rB)Dj%NvJdo/3Pr*Q]&sYSRqlMiiC],OoFC:!=2.(8"O#b=tm>ZLtYO&X!]3,9QRT%c2[d!YG)<:K,<;xj]z|eJ/3l>&irw{&LSa;aFl/pe5>QBW*qRs5RVpqF*y:h/|Y)X7l{ud9%_@M,q1{>GrC)2#._L;2,K=e!ZMcWDLOl1S,58LPW40:T"t1B/Iutx0Ur^_:430[)U.qC0}@>rO#dB~Q{oo<ZdZh5}OIVXx=4,g}Bk<O`XxbmS0$K1a>o3Xs0nnm?)KqUX|4b]&tG6([y6)#$FhPMt/`fHieXH.R(:t_CC^!QS2UmI:KSC"&ixY5F]|w%EOI=a4DK,`f@?`aw6Qb0s8&nBL6zT`|K|?uD_xV^}*b^NcMg^4lWyWqHK*&iKyL@tBu1[2wzD=5`!DN0~/NP%ef2>OFpB^kr4UFgd{!p>z6gSYkMuPN,}ViupRR>`Ec(6WGG!BG]mtTa_^P(@Hiv1AlkFY&Y.G!aRL92Htsxw40Zd,[ZMkk[%.zu_c`B8x"aBd$2#%v):!~m!Xz8$B+}GBrd~=sP}3KEKu(u7iu<+?iD.d!Qv*feaA17^Y"IZ[N*l!jc`+"}]!L0Z0i7;_H{GHY;XOdBv2U;FOpXkHR+Dg)t&di.yGtoD=C]1Z"Qe)!<$IH:"(>$k>*;Ic/98gC4~rTCf#J/Bj%MX)*/JnKVw^u8@Og.jOxOVE+NT7T@<(z?qO$_"_aI!5dy.W]M+6t@hfp]y<of"=LXj!!|1#p9prdsEnMv7f1ZbBj4*[tW%]PhcYHXM/v>{`*HU1Y6<J_e!0|g.%l=p2QtMv4HRe/]IR0K|>A@D]j]HbAA0n#MVG1kPKd6lsh*DwL>L&npF*?_b#Ezkn?M:EOxjb&*6*xq3jYUO9BS{,3o*S2,igxC{z;N@un07:)dYjVS@4:5N@1[ww>%q$YlLW01~eS*PvI*3N}O|c?)1M`aR{hN!dZK$Fp[lBs<aCabQxG(rs?:oyI5>StKiiT[3>5!N2k`=9e/FUNhVf]bbA#e2uTJeF/{7]CJt`*{%s#g,+Ti;H<!3f"x**]3F7|O;Lq~+PG[ez}?K10.(IV:JO^7tm@&(WkTJ_6I%(suah`w~Kl0RXt,L]wi#_y^>@7n;u]4$?=7]it&"SWg`v"x0(sbWo0iyT(lNbOh^N!%WuRkV8vf#HO9|^YGBME[F;e3)G@du12/Jd["K!h(pLjTl4TJwQJyu3U6kl"%>`KWPNq/N?6_qBgVjF.GUd/s"@BQ>+;<;0p(]Sohg~CIx2,3,=W|EtaWiXR`SFrL}0]oB/B}wvhD(m^G0XnI+{x#7E{!2/]<o`pzU^Y_B6NDvBXRv#_q&nGdaG;IL5OXXV8n48&)pRK2Q91X4P"U[bWTu!2o=9|J2#0Xv6e&D=)E_l`L8s"PH=:tg1ET;W?,$OZ;Dfu%/cu<J@4Uo".wa"VtD7^)R+nRRK$Hx"9%7k@8(@JRoM~&+RXp{FqXYbjLv.x`snEu@!|P,}t:>!!lFMQ6&yJR4^dD%~O?ug~Ncu,=7}(|(/]c?a/l=s(QfF/yh07[TDiG3NxL=^1[t+n&a^$on<f[R4(7d(7R!YUsI$s`b}|43r;1}zobN>+?o9aTr6#kP=^YAyDn3vh9cUzD@3u!aRv*_4f*l5(YjVvuMyX:C8hF#qtU:T<Z(Pi)ILS4P&tGEii_gFlZR"cr5eB+J4G*Hhs.a9Tia1viU(s4sce?.J7RxP0Dm>.k.+Vqex;lH%lBvCR5!,0%)|*Ae5NlwiR9qlCYw`UF0<LK)H/7G}ez?Wmcl;/8D]KG"SPmK+Epv9.:1OW3%<QB17*;yaYfcCzw}6_8%<x~L<)B3~+TH!~F2H/N[T)I4:LS^_peU)3J8qE,;C6LkG3*s{|r;H8_/FJ2BCS0pU!uyBD~WjShV{KR8nZ.LFGv@1$_}X9R_)+kPvVC#pxJH3r:3{.suXBBY1*+mp~n@q9g`~0pE.L$&)]K;|bW|qYu33{Z?1hV&O|aULKZO!4hc$kcNI/q1GQY@pC:"d4<RW:Bu_>.p$cRg/pj>]x#u<f`h1W{F2s8E=b&<wr5lN)%_iyKvCP]1#CLLl3umIHyIweznoK3?;eJ#!KrAua?ntAC!&tvi/~43tiq5Gk|A7WDMw7A<a)>ZR~T8]V*]FKq(((W:3[%B<SRK8x"k{{JSNX#h3Aw:BycI[#=9yLdC)e|l?;RtV4vUhsjetJ*b#AFHDq0e])+$hS!j3n&U*n`gjlFF9oXgEpXLmpBt47o(oseU^/"wgz&oFJ)mO?B>?MydSqVd,d?}S|gx16O0gDfgUPI%5,Iq]*ZA!9xoZqERGywCb4}dx$<|#?,#>8,`3SB@9@v"S5w>mw9"$GiB]_SBN7@q(mJo9";qOM>hQhV#=c4V9f+>f&2NLj4ffSf}UckW/:3OE=R)DhJ8|*bCB69g##R[vcD{_Cl@B?}.RAtk2n3`aVz~fZTit)74&oIzK"Tc=8j<oU(y_$GzZ5l$iL#<A8%lyt|VKCrR8:^2K9LVP_o!uqH$K&;BJBZC|/D+tR&BR9kzO|l^6Is|Z+DP(|3>3dT&[J}wtr3n.*EgF)Os~@I6W0ymjxdg6o_ViSVN+K{vip^fU((wNiknhXSg45G(6gM7L%^g~f?wvsl/xI%IPp7xVGpg63wdENC8NMNg.poQe`nU&NKBCMG/@N<DGJ`z?NVs)TW2uW?<4m{!P1toH6QQ4V*18r[}F??"08r^eq|@=G`g^DyqZ=O:,+SKsURIGIMNbX1{1(JRs(y2Y:e7q~^X^&qmt}PjmplA8b<7yXqvP7f+8tj1{i@n0U&,7NZE8+&wB%46IhlFp+dM#oPb#sYg]jBvB+z~cV:"+%?{?Y*.Y}gB?O&*eZ#cS77]laV}q1eK_&ZUPG&gZ:ynY=^V;+%Gcvz(Wv4Gzoi>$<X.#f@b0YfQ{&95+{$<b?LhftQ]t}Guc|bk&Z"Ru9dG.nlcVGu>mN"MD,%W6h"gSR*~OTJriF}>^uy~e$KZYjHoPVR^,n.&8%Vu.2cB!r=w7p+|D|Vll]J7XLix*?Zpfp~Ap{]df6jtYg76^nkuwjkgA9Svg0D%/8hmyu@Qf,}M(}U4zjK%cX;#`~n.v,H96RJdqhoWf}F}TJ$x<BEUI89H$N_!p!,p>"Xr10yxua[Lb/(O|`>Oexk9U}{RquRI/t_5&4dntCl>_kBrP%~m=+[pMI=bhM,q}nHKd[1RQx{J{KJ7~kuoRqgsdCOGUy9D!u|cNn7&ZgrQ3wGrNl":[cyV/V/Ek=Yii,IS,XzNcj95}86HUvXA@Q~6gP+w%FMv&@`HnEfO0R^q4FrXJ4KGkx}^Rtz3(Vqn|5;s&ewVFCI2aD@Md`zeXb<lo`3laoj!S.,T?fw/YXy1{Jh(fF2&=v#bEq@p==(CC=x8)0<1pHQ)i!KH|kVF>"!z!nJvfR9T+|F]?KV`=7kk(PZS|IMq=ZlkF8af{SwnjX3J&5o=WBkpj!y7?Mt%5^FpoXQp?$o9^d4c4eYjx%OiUxtsUg~J2l&6C/WnUml_1eR]C$A|Mc!<3)%=O|xGb&CRlO=_?R(o[s:z9Q~^bi@ZOglF+Ay+k][N{n!hKFAbT;Kb&Huo|/OJ[~o=w4/;CO9;t}b4(i]0zM)>^i$#(zV@qd*RG:{[qi~uWzm4X/r!:jWi!B=1hc,Z[Rk]+BGFsq.tniX&rLi6RXwIPW+NCK<j*TVq.^^!0_KG`[_&*$l5Y9[(WC)6Q92U3m=x%)&.*tc:WzeTOvUjqQS<G6Z<s@g8lp?2jGzOEr+x7~0L2uKSa}+GkKYYoKujlD&F=}0*ci)R;Hv~W`CJW|xq=.<_+y627gl$7#dgFg/s}`Z?sUy$u:r9vhE2N:?h~#{`};HTYwd:rq?++sDV;qmkrnPoP_XjBGG%Sa_|,cT8vNUxQrK.mV#Zb$#liqf$3#E_*!E~987[qP=AQi,"QJC1{*a8J+GL#`K{EStp{mwmB#H{Eg>i2*$vl9Q*rAU)qC{F)G!bdlWK{&xkkS:WW/lURsCEvcYnF_ShxlpT<k/68:~$$|vWXN<UzJS#UD;"vsX1ZYQi:}>GJ.NuSxk)6L=<Z:D^Pm("f=J?*nH>@S)*qo5%lYaj.m1CgFQ[/uI$a+K172@!U1q/,u1h7V{ZHk)[_d[zZS*6O]3.]e%H5R0^JFPSp8:UwUvF%k<>*S8HQ?r+,Vkt9&iZY;z:GY&BiFu2jl6f9c=gbeHJCh;T8*jTi>c`@wmmrnrG<;~`d!L4K,W+kFMu1nelmfg@+&3<x8cHt`|5o|Q#DJc@NP6RQ8il?;bYoMq||_u<Cp>}*e6HtQad,#aHm?M#R7k^NjK0cut7tKK_PH5x)%:!0o;y2%#oDiw/VRjYtQrF2l{1_#R8)*+N5pY8oi7aF%n6}NA#$YV&"}VP.9ibb/8Jgb[D4ALT?j}ic6+9_*Nn&B~eB+:oi_67Q|>X(zA+IaE5Bcu^qOi.w^jBHAEJH6w@<d&ld$9s|j_Keal@ZR[!ZQC<FK%JSs$;>IWOyCS/YU7dfRAf)..YIW;JB]U0o|?#C_P!Fck%yM;4JI<}pfIjEo)m4Aq[kPJj+`U.(`;CBU:^]6Gkyr7Nb)U&sQ]`Sd;2PLq!poknuA:B=AEF7|twcO5KCNRh8vd"4Z7E:Rb(y3:.oeLwXGccoE}QpazaZlNyRQ_Z]%<lS%P{`q7Iz<2zS?]Ydm^,K>,_`&9XjVhELuQe^PYOWMYeSyvyS3?JR6Zw~E/g:{N4qDP"4dL4B*p[fV3%tz/QnPRePd)<Haxx8K>Mkp*Ds`@:+I}!6e2anwonD>e>I+v]:[m&=Rw+|U?JJQ;=D<iR@T,jjv8mc9CKS}[kGkR@$0G>~%O#(&<cVn6WN{uq$:zh;u#t1l_]5V&?]>efP&&Tq}}~Q{PYLULls3i"<!%`;BiUk3J_(vIqPK_yyW&@MOv][:~fiQcW]cOHDhGOJ6<[6j)R`]MSHqM#m%B<)a;[IR7gWGeeF?80d!<!FS=U>2m]~P8"4wJ(TAa?98[k,B.<z(L.m8]7O=%W3zrBfP~)vzkG967yZKca|20XG"qOMj$HR&`j5`@vYM,QS<V#p;L[e`8`h`Arq6}uFhnR,*+e?*[F|`KJ."uUcoZPx2to[Us60=B:oQarg*PMt~l%Ec~;GMP(@W=XyE<rk1O|S[yTG>KbQ30um.Ea#%J:cjBhV.8f.CRKNdfGzSq>(cQXQ?rT@#k5jAy4s4SB~|i*$doSzR7B?]g"v^1fb?`)Ni(dK@#Ig<R3T7jOk@8UM/<&TF$>PdqZe3,~QukLdnDc4{#o:mw1V?SUEa3~!i>4svnDrSe6`hTkifKn<raG5yrY;eQ06l>pA44sc%j"laMp/}l%o5lGbx_GAYV%&BIteWXa&#Fq_`Fp}Mv~&oy#MMKcr1;AF2+;5:(m[0ZueQl;`J)PHhLL>hu~@ZBJA)?D?lP./[=L/6Xr2m.><ZNX%z6&$PU!Y)_8RILa1[br:G0fP?f:OM>LlUFc(NQq*Ra^yPb:Ggio!3<E:86?L8qS>FFLxE2ipn1jX3.,N9JvVj@atT_qt*,+ic%ZZ<$xs83vbxXH3zXZ{]v+[V~v,+C!(v/0r/Z64vnFRCNJ6;0WF.hqU<~C!B*a?0e05)qad0cN7X?~[Z@FNx?^cAIUh3k;k^CiQRQ$9XnRBKdwhCMd#}3)&,.5WQfc>s0GgvTpy5f)%(K8!x&#6:%o4)TOF;]7jzaKCv,+=x3grZo^trJlwrzE,yUvYrvD3z*~0zUbSoucT$b$;6Y1`;:4^uEI90|U9<,L.|:@:x5A!8|zu4Ys4&W3lwoGb~~goJjt41_BiM^DppsZv)kn[|c(bMoe#7nP58k=nfB#&o/I;>WgoH.Iyl/W0jM&_QGAKqi2,x~RDrcF/sbq(8X>;kO:|nwzc33}rKA7)a4LUmB3e>37Zc,lt?SeIk[k8vQ9.li2Yc,sxYO*F&[zmqZY.N7]p^2;.!bpnIsN*T+~q;`<uRaE#t&FU=3ovI64~p$_.:V{fvY51zH}kcGrb~%<E?2f5)}w@G]&y?&C?tJ;]G]BV25f@vhR`yP4cy3/0T*e@v>:/G`JHgmPSBr|g%*HVr&>vi{zusi8uQC3(|<<vBW3rJNShv>^iza@^r1knN;odK[E7+?bjxq^3d9|4sohi[$nyQ0$K.k?H"1Qa%L{>^C<u&4#5(s;]5*j{R{[dKFt:c^$cT"go=6:FrroLhTlsHIXEM#)k^TfRrCdS&7#RVl@$"q7s,BXP(s<5i?9x^PoR.l`H@}QM~n.I:/#&TMJ{$NVhywFgP]]$rdufgeyi7xsE,+~sxEH$A|xJ`D972Y6rEy1QRdIhJnk:QFX1[C5Xr(3&hD*fF>j+z(B<G5FGK[`8#{&,Bky/gWM],_Q&6i*"1Sz+{#LgzTW)(D#ur65ifUEbRQ,qd;lqfe6}Ca5,.%=r`tP$9~".Kw5Sv8({:fe!+tfU3@zralbeO3>Ocip$)_"!rC9M.4O46N1F]U~A:cWOVG/5:x(NYdTW>Q5JIV{Zody/"a(U{et)e7r1z|]7+_py?}n1dz?9R<vs)(m(Hm_$4>vp]8o[XS4^7/"!Yw)BZ3DS3VQ<SKH:t*]*gLCS"}oJGdqnNj.(w<Gf<mr;x*~:*mxNAF;fLGuiR8x@X>dD]>QF}g&Pb0i1yIAGJX~@0sF^35@&9Cgiz52qeM0U4h2;6g!xat,,wI#$<f?80Zp:5GifZjL?e5yyx}dBngm2gM|}&m`]@?W|F0D&_[jVOh)STJ+HFBg]3058)Bi>omgR4h7*UFCJBx|(]LYeiX0tV/ku>ROw|n,@JLJ+b/C//V~SHPC5i"uf{/$T.0q0{E{Exy3x~rBz]Q]hu!DWCD><h/gc)a>Z3|3Mkge+ZY9S1R2@ogy726IMaSgW!/@=!3+;Tp&2+lM9;ygX]Cf>joMZgOGa)XFf*Ec;9n0UV@Ruuomi02L*j&QggWZ(Un6iG&n0S>FdW$0xs{fxaI@yN*1U_8Mf%PO,:u&@fp/3Bm>DV0kdViX?]17{o<taI(`]npV}27>gIdbVX3m:AZ+^)b%a@::3A6|<M]DMf6d>9b;c8^B>9bk{5s^^"msN551/O0El~ocW@{5b_]w,s{B_NfSOMs+|j[X16u,uSz){TypUnkjkg>8ao{w!eiTmO4)O.aqf#{>g]SR#$`HY=w*.X)7kr.M]9pQCbiZCD^|JWizxmAxv;/+<opa~#gavQ9c{qRU)/phGeuru9ykE2b&.m([FB#BA(Q6=URXO:d?1CfYQ9B7a^1<wdfJd^u)XVMuC~!=SUQxav1)jE[y$cg`$(!tqAqkN${m2%x23qR[gY.o!%j5yqk3gc=h?MHz1Oh4w1Or{u1Vcx&pjg(8:/m@EMgRHN^AmH&irV>OVdp5&ssrr~sbF,<saY$moR_&2%@"<}[a$I=>|)MIx~%4aN=lo`.&2:l.j}vU^?n)xXH[+sbop{RqV:)p?]v*MO#9KOpD(e0}4f,@=*JoQqVvgj&s%75=r"<Dg!@+dv8qk[TZV^B`yL.R{2ghdAXg,J)!)t{(x?H;]LNY5Pr!9CckB4J{t=VE+Z5h4pj@[iO&LbVQ`^3mh$MjET|e7NYuV=eI2I<I7jf{Y%j"<e1:2N&eM;@{=3KnOkNb>0vEj/)b$5JrxO4?j!Urggp!.Qr0,W}SydTzqliU`FeYrENN=p3rJarAO5([26<%OE7=]T!L7jwr`o~K4?dMZ_^}PRFK9ru.rU]M]|yw:l>.z5YA7Mp5&%2++Ds9zS_.,+peR[MB#e+z.LV[MAr3Q{/}yGqe)/iWY?Zm[eR2Q1FvMJnSUdf:HL>RBSL7+(|]<u5~$A.~b3N$C8"wM^@/YUU"YSa"Y$9I8S=>USMa7BU>g1G^c:H*kR68W0@!9jR"%muK3"gq)UQ^Zdw+N9s3jYOn11vXsl`TM@+Fie;z.Hqmo@mEV)b#h6cDzFrSXKKvx{a/&bzCY3/*bTEMG^y"cB4&P9hN_cWcoq=*VwUYaf$GTgrDsTQzdnVx%j"JBS"df;b[[j^(u}=8.O10^rY(z?8M_,fw^WY!j(xd.Iv1a;z+.6,%JfZaO()YbdzM2HqnzH+P[>stVUx{"DY4q^R5s@@T&nC5nM9(/D%|$f,).:R=dYf/YF88nM]_i<u8ndH:5H/bjL3O34@K.l5XJk!+N:J~V+9Q]@&qu:d!nzT=}LF^@jrpE|`L[EpNMIIx!hbO:I;K5Zss"7?S|PSew/"$7Yls>mo~^B(V=<U<a6$?0QNzitkYiKE>F~E=,By4?{Tiw<eB:L+)0InBTYfA)D5U;VI^psjP#lE?=FH<$kMKK^TzBeo.ScTPz;cT5gjtL9sBMRm43$w;5G;?k(zR=jfnrde$cdeAEwCd@jC7YW5kZJzp$+|f|HJ#9>;]%`m;,Dj%)}bfh<j#1obUa@NC*/Z6RXcN_2i0q5s4YGpA5FYk^i9.IzR<qjO1;,H<9O{%&>%J@frKWbux?}@]E,$LZFq[S.;X>YT@JTeaZ4qReq?y$S#7qc9G)76mH=(%Y`mjwv%>,H2|q*pB;s~S_b5h40>(Z>z"<6plK1;"Z5^Z>zhfeBKD{O$R_7J^U`oqm7oak:Yz%<Xde|wuqT]y]S#M_p[c.gEP!iFYfCMdq}7u4ak0):W(=ZR;kR|83{"$&r%!9o=dpn5langM[mgBa5Cx?@@c:c:1kF!.C0#@1dU]?;mOu:;MRE~BHs@))H+TVa4{IGAGWOpA$X<D9U!+@WFUcX?DjN4[*P<rPNPBdgYN/;S8zQJ`LT8FMSuyb:HoPIrI=wh;)=Y:H`4s60MhIakb~BZ<K*VW>tcn8K`8<0V=<HsBac=[|2K~=VB(.RXng/qTv7a^Ej7eJyO.PWicn`*^>?DGfs)(9i.r1hi/fC{[<[`AKZ1(xfrw#{YQh$<jYJw<eTs=Y9Ax5>e`hg%eF]}n=BBb[~_&TKpSUH6?k7OhDqjKK_{Sm<PJrgHLpSz%&E+>yNiV7UAb1Y(}{Y0"<h)zL+`A/f(N?X%<e6$A1Q:r:<#yZ8q=q>E61jgFU7Hp3a3:yjoC{{m,cw3D!SoO%HHQ$b$Id[69aG^I)JpG^=#J:`^,gp4fhJgN!lo!9l=X56^@n7g:C3VkTw!(1+T}iBnVGakJ(Y>=3Q!)+?1E8i0oV^@}PFxz;J7D3MDnW+CBt8FYf#WDjSJ~w(Pca7P[j:yjuI<E^.IGEKK?GImkExY_.C{O$B1W|&]s>X5RS%Q@(U+I<7aCVy^#,}]x$hI}kENU1"C3pi|x{%X5[sK^Np~#jS)X>oyRH5{(HB#Q8@@d~.Gl*f;P3U.m+@J62z58lKIXOx(*1<+jKuSyZLDooZ(vxkAxvdTDwFt7"_#zYhuRZb,[xiA.6iEUU9?GEo[CG^g`9*/h;{oIXWu90K8YSB::n7?sZg*ih+%<T]@C{Zgu%UUVzI]po|=F+cWP?@6pM74/1x`(q.$;b04ofK$,.YhRTqGX*M(,~Djy5r?=%9y`[M_:2G{~a~n5Lzd(nzT_{2n6lcV,uZjl@a"k?b424V~W1@mDsEdhb5Dg.vPG6s_H+T*Y),$^[s>E:Ul(LoUW$MxW>kv`+A]bm*WkmmWYf{UxFk!#Ed:l2yW7^)~GZ^p/1QU5P[(KI`uFZx$<(]YL@lf9t<h2JAAhS=zwJs|7SZBuiXv49X@qaXc3jmi@DShAJMwVEQ,kTh5R;(Q`UCijnoBuhXv~g}i/#amgo+iP31._3[{|JcFXxN[PG";:0giM8cT8X;xU+K`4):WeUdRNCti`(|NR+{z90<p(&T*Wh5g;NFCGy7Kw3uRtm<0TyG1^5R6~Zz$Md17slTRx2L8D$#{%VT+o8~,lI5Y9rl]}7x]TxIMG(gSi<R*(3^4<TfnZ0)AhX:p!9dcQCe/w!h?MT{u?!FgA&lBH#:jx80Y]nXXM"(PWri7XX"<3^fpvwPgK1&31%ouBYhu0N][lC7x<k98cvL%}?{gX^RjHj(uV=w$b!xl,,75QXofNbYBu<9p#Ck{(9Q4cjxUCorQl<q^P%fK!dqd>kQ=vAr+xL@;)*O6hj},Frhf`uNh@k.FjlF0b"$7;!l,HczJ0m92)(:Wexi^/w5H9QDVl&00^wI(p8R4r^kr.a91}=$q.|T$h^K*]%zsia[qM??LUv)xiKe7~<l#tO0j:)IqeZc:1^"YJT^Zf4,TYY}U1WFj$?frUnM_6>!{Uk_lQE+:I;LX:UluVMj}0J3G:z~cnx;z<enxqgA0$DQ2=jgzj>`$B3nH}Iak_p1Q6zb{:MyP0lbc6wDP!B0J|=Q&7++Uz."%=]sjF{DVo|+#?+$G`@vj%C?ET"v~81a(nC5)$nXO]%ZnWT_b_&s}DW2fcWQ!X>i*=3Rkq)4W,zS>?}I8}#6m;wi/M_zr7O5mDVp@[U]M9b;pt&M_!&#;Ej^C|2;zYyVFAuGpNV25L5$CgddeNLE+x0OX(@XfrX1i{B<%$vk?AoGlfeC21)~z|PzO"oWI>.|h>$%]&kEnb8;zqke^^~&@Hf4CmKdKK0Wo=1%,bp)bi.Q0>%gt"=v<ijP6`[t;|ZhuH./sJEr1w`<=LfB~<hVDZO^pDkB:?!AntZ,YiZXIT^Zb)U<QsNF_f^LONq!{%j(MNQ2/"5;5f}0o(dGq=jtQdu*b!}o,T!XHtQ1]<(NaX>|{Jf[#F"Os>11)=;SQ|0;%=;Q+68fVM9O!,&3fX{>V<K!3GZKjD]|f}C8`{%$PrC;Coav"dU,,jK1<z2GqC_JTgrfia(]}>5h^:V,0JM%<]D)e8,.,Hi6cURByfrs<qVh9&B.6e&q@.e_N{%_uDG_bq7]D8e9Wq0,U11ef/e!PXG@@G{JkDDooUo]q#YQE@{&e;C`2SR,@u&tr}z&yp$Rk<+5s"1;@:m,,b&Bs^+ou#O7G(@Wf*Lzb8^hc;f"g@}$2S2zGj/_2~MI<Fb_pwRB9R]Ypdeyp]qp6a,d:;MbB=3p$YfD5L29^{@.G2^d;*xD&9yeQh^Gp4gMO:jJ<,(@Y[6L*obsl0G8%w,1b%?=z$CT^M{PxrN<ZYfX6yS[h~!1i]ai^:w(,Rwe5|WpQ5y>>ahxUS=#9,k3lfp%0m="UePR75ns9qmxwtaf4bn|g~,Sb%?#Cx.cwl?[Z)<6rh99"}6lIY]aI|R~Y`]1CHxwKW>2x$C0%Tk1DSD_Voo6$4LQn{M.17<f;RBE+&8p8]1m8;$FY9V);pmZQ}khpU11)>gRUdM:H.!f0Krl@$)?%jeyqS(Rg<l2r9!vn3!=;]}&ty=5yX.,&3hIEqI!^(N/mpI&iy,?ya(^!nZt:9^Cw}6psWv</=;$uGqZRp4W~7#88k7<9;u;^tO6RSeP4;zf|%1310FHxe:m`]m8T^g`%)f9_T%"fZj}kx6s9${,b{q_/yiWh2qDv}]mNrR)1um1F{wtNLRGT8dhu?/ftHHOcDKx!qo}E${WuAemih9sSj|I.zIU2<{19/(_&6kM{^}?,I<187FH/$gB6)Q13_b5?34gD${As#D"TaEwc1=GLMHkTV^xl.MZRM@hcY[{FS}:J!{=AidG>Cacw{VQ<22`>^K*cMicjgMbYq4cOBaTa8vXXJ!OYDJ8Cmi.9|u9t1F/GxY[ky:_`f(*vGB*$9lWE;IaFeR+h@)e#`Fa)wIMX;Y.Ot?PYmDzO~ixiiLr/QV#r5G4bzeHYyk+#_({@G.s"lN[CWE(tyXPV;7O1]OJh4OJ!haa=4*_U[h"cUU&.6B+Xr+P24)ZeM|xdvv|X)~f?0+QFy2,U?WOD&ZE,C@6t}&wYJv$5m198)(PEqD@TNoG!xi:K99>)x+0b3lg+j#MxnE9"qKOkr$ATi<fr3OzHRz#|?C}Zia"P|9mqF<4`?0shV:cu(umE}*_&W)Z5R4POCqoaea91.n$wI{;Hr/AS9DR<RHHB8LRjmQeunJ67YWyxUjJ%zv97vT$JWi;PYdAHQ?|u+elAqo6ct=t0F32Btzfm[Ih]J!;2X+tp)4oofF4LmyCby/_;w7+,z_S);lgd0CLfyJ67JTf~mOTv@;mi4cQny)<eF#}9;8T0tJ!`mv6<5M5{,P{H|?;iJJ|?+jkt1NaO@a>(8Cdq{dCytm~[z/UlG))K6w+R69K6&i$Me@`86*qzg[`ftm_crhsx+JYa;vsfWvN}:1M~l,1Q(}Q#>9en2f"<9s3s}#Dpg&F]HkL1xM}4mx.Mn{i8O/="VhsW@whZJTs;LV!}%)/;w+0$#@b>z%g3WI>$n:loh|`yC[HrM<Yhjoz(M{&}Rg;1uQ~a)upP7ndOP0Oki&_iMRMpBuBLN_8opz^8qGlG1?z?c<1FrwD#)2ug2?jrQ1kKo["[)DJtYubB%8J8!M#l*{A.ST^KOZI3J_p2|X"Y)uxu~xT;I;Eb^UxyGq`R[hTsa%q`)UZOC`%/W}$u`LfB[@,{tDRBQg[VKpSQ_isGdRoZZ@89ywS[XazRSB$@1jn}A!GRGz+<qj6YD5BuX&U/jzr0>w_M!9mm(z6yv!D*Kw~L=.!q2.@:*su}+#mN`Y~kz_i%`weo,f28i@DP$.2G#bCi]h4!Cy(8AmEY`(bL@,"nXD}EDL`)5}9WDb;WE.Wzr?A$oL_>4L?tZ,1a*xBykrq9m0:QJ,|+"o[F;l&Fartrz!0F4g?i4*cEKKFW8JV<%1w(d;xd,^uMmII%3N)%iq~BLXA6Mv@o=H7*WN0.Aw.@"Fg,t?8P2KrKD6~[lK$RcNS8pot3bem6kpakMR$pww2zIH3Y689P=1IBopmWCd}uf%b3`Y(P8;F8mD!&^V98[EW~v%BMe:THEQZ>6kD=N]:`)4NRzv;^;!>,+L)*d;?j,^#.cWtwgD`X4!7?@F:#7jbx2hs[5is}@bH*j3/3id1b]y{)M`wPepgcE209,4Ph4~TD2u)Ia;&T]QcRirR$f6O{S.5IN){yG1G1G1G1FMHKWrd$!0O)[[JOt6lm+<v#vOicO%5uHyspLghRZYoufwbLcEopD:#O/UeXMEr}WwqGmuSMZe(HbjF/fN<7]>z@CB!|Y!_B`?/~z,(Ws<th0n*79vM<FT:B9kwIUc|:E[ejOLxs>iP4la8<q*8W!cb~j"&I}Qu?aHjD|HH/<@sBx~9FGy9v7c~P>B26I,.;YK&;taH~O>KUi8MRk!rOpqf:24R/<;SFR`VzPlz_H/Hq/xe9/<GveD:"Dy}C4chxY)^F.mu}r&bbmv6<k31;a9:%9+#$E<5Xo!")Bz);[H*kjzEn*piSBxh2kzM^?OCwzSooAg^9uG1BVB1W)A[GBQSt7"7#4lD$[q;b(z9tAmTc8&]=lQy>E0oO7R$GIM+,61f8~>MPp9^=5H&eSby/>!jINZfjXO!CXVdTNSZX>JO!IGwR6+Ge4b7voLmy_.^nXnbpXn;9*/Rg0d)V7~RRsCKh&BfD?vpKslogkxnGWKd7st}YpQR%hG3;oBK%]L^[,l*[?gcLSZaYn{`m/%>B#w{t;X"m*}V)~m=xwxH{Sb+hGIkTwgA*qRZ>RF${F4v!dWs:rs<Ks`rTuirpt$@ILx0s6*&,Q0Pse]E4/i(pOHrMY^Y@7W2Lx.4Ox.=#{!$06I{ElsAY{5g0#vMXK5!q!!;<UUG1}FCd6!XGwCRTzb,,_?u/oZXFJ,H,q}QGwC=?"Fo,;XAHo,kL5=WGwC,NWYT~gIKx(.;f9o;(@dyw6UbV7`j|g/jwwo7^w4Sn?#agF]uijR(,k|J.Op0uGl1|(p$t&X/,T.(x{p$t0X(BbF7hbD|tcQPD~CNCN~7##zv|stLonP5lq`+TdLDy[F`j,/J?B?H%9:zO{dN.]8oA8@ib|?d{Uk]&fB.+OZ00#AQ]_F"]4M{ha*wiWJcAbQ_NCkEf0V^vYRCg|2$IxdU<JN_"im_Q3*!nKhaae7SQACvngEV?Kmyh90pHE]q/#U@z#1EE:wR5050=hR/^HDQ&II,eICoo|HId6x(GIz1TYB:DN]_oBT7BOXs{Zi6RLkNih>9.Q20z_Dh8Zc%P<n}oTN_eoU.eHN5N61I%fr}b}eic$cP*uN7l=Vt6Qddma0O!,zWkuTRwda,%k0lz+.A1~;|K693f]$?M{9`_Y9(Yyi>]YQ&+/#%b0]FzWzo3M4I8.?q_sv$"a?fxMS:g{e@y5WF3KpTf?=cF^wDY5q!g;)Y$We8H+n`)O?eZQLV1o9kMUwa)aiL8|89VL35ss"8oFj5j{r:Ni5q,kp{Y&Rr+02"cWwM1uX{JC?6PR]p|jw2:i/w+v&,HGciQWl]9kd)G[@U}aeV)Db"{+0@N+x4t1+GlzKYeu}=Qg_U]ryGSwJMKM[Cf[|2;?jj&:57.7?9{X$g|}[RFB4K[=e7*8mg~}k0bxo?,!S(E9zG?qGI==sS2dCfw/ajNC.oF>D!sJX"1^p39W~l2TXtopz^87go?mz3>z)ezpsyzM)Z~R1^8]}iS2}ZWq.;s;uTCdz(rEmqy.u{Vs1j]"2(*KB=+zbKLO[K)U`M[7RWjpnJftGV{c%x_A{3rz0q_1_BK55dRCjtNQ53KfKrW9zG?wsC2ZCfwng)9I2)]9%}]Hhk(QesHN=/z5?[6P8a5Fo0p&%>g7_D<^RYM}+!_ruMRl>bYt0Ls4eo5MYD]gH4bAqZ;q*t}^m#V_.smF&PaMSQ+6Z!:KF_>l@#:!|[$|;aW5<?!p"[*]OAf~/ZZzkGIpsrL5~wBv;q2]lt(SJ;TePzPq~6gz(cC{j"i33zyx`Z2]vK/9$507hTz#*W2]b{@bN[,zmC<vl6Mu:N9]}{WQ_xoB|T.DJMgE5C`w`vl,LSh7oZ&7tN)1r)XsC_lUu1~Y%gI]9#b=]0?Y}7bG.7E>;OI2h@?j{n@9EDkVr<(B%`;FaM{,;u;>KX$Z~H.N.M~Bq$E|"]X}]{@o2cNmz)az`K[{OzHXv+SZ@TPo/M8kAg/qCf{qyxj8k1;"Q6ayo[rV([_KKxvTI3ZG;Sz.;<:J[6a=Xo#M+gaQJ<:WS$Wx_A{UE@?H[uQY;G:M2E[*qeJk*)%}~elt$&$zE%Hn|f_At]Z>J?wZ*QEw~"UJ?b}jKsdUUq&%*woI<)Xmk+$3KYBo:w){a=Kj$]l&UU=0]@gH"mR00j:S!=ynn3Wq_|hSeM[caGizE<^:}5z)=6DL%hybwA^|X6c.%<^,&+_`mxkR}>/f)ujI]cHJ+}x1!+$T2M[}bw|DF:}@oo,~!8_4PjJ[I~]Z%jimjC<k1v|[T@~|)PPz4G7;}dK|2G/,?J*@r+V=9Qxos]09j%H=]a/>_~jnx{{!haS5Oc:JxqKVDOk?%:S@F1;kR6jVj9RwEP!R+Gt`REEOM9Kca@aGK{u!q=R3XJze(FPFd5%fFZ"sDjY@d7ntQtp&_o9PE&8=9+hnK#VmE)UD_^tjjvOiZr&JhgPN<"PK%92/4H6;)Zs!qWH{ujj!qWH<ubDzM4LodfnWHzjAY]LF:`"p*xT|WSoz6jnvC(S6PM]j2mq)yk6N1Bj5qAhu$97mO@WN^2G0S$G_t{y{=hHhvTbXz!4VcWRf;}iQtS@360Uo~Mt,OhX(pKb_Uyi[(Y<?a80~/{*O&G%K8<^6O!9D]YHt:WOq05~56CQiS<lZa:D[]aI,t<r"2#}wh9cd(e?[eHnu{e7H:"<R`e4bzmI{eP6|SZaqB"kVYNoo6AEx7CQO6b9EgT]b@eg"wa7WaDR|NE]")Bzkt<LrixvT61uuP`VgDA0LyE^`Gl@2.W;Jzspvo9uuISokk]0ypGU;V]WJxNG[J5IuAG?dSc01;5gD%u8Ya$=h$P@:Mhi3*5sxxq}h{i0%<a(=?=%j}G5sc%jOYY>oz{IFv9NPcx=.dY>dEBOOC%0^=|oP*8VN~i)H%_FH<4zBqYU(9g5rQ`hvVI#EK=)ix`UA<^Ppvf1z!m#W^+#tOTY@NbgZjrM98{fb{"c5?]2xZGZ2d?7}OTNkP.e%xbjgGIUM;z*(N?tVHClkH=nJIb}je.^qz[dS8D(Fxw^e3Nbq;<fO$F]~MvK{.0e_:Ju4**1)%smn8)bdH+Jg7PfKzWzXaEF[/ObTkf~E}/|S7^UzDZSEnM4?}"K91JMm`6AI5[}Gp8aJ!.h[47ZjEwP=1Zi(RO(|op,aKg%Q0;TG4("+gb*{]1Wph(Pvav`}$N.zoIJ55W!+|MjMQwNr:2EcG,hNuMdADE.6z"IdN,|zb*a(QR.=st2,@Y%mR@g6Iu(!SH.ElX1)I1?8)5aMuI%vQJ.;wP+skX1P(j2M[d.XSF2s.PuJS|2}$uG(<zo#&^{opz}65xzq(+eN#A601xObZ}B`]+bJ,m1G,tq/|~hp`Ny@sQG2VfC##@}b9m<co5p),Pqhz4s}{&72=&,Pq[z5~Tev+r)GMAjFC),V?qdde_DT<![G].wa5<jed;0B!bKeXuN:io*F]r*#H6LN>^oF:xX18z,]uPdRTydJx5PTVCmL^s&i^I(,Do[lIposszR~Id6UU:@%Ix!;uq8K8.5*IgvTWBS<y3Tkuo"<o?kp{UAh#U1tI1z$~fS>Lk~r+>gBd$GX9/+v81P)8j9PJ7DxgGq|34#lavpQzP0uWCyHIfPGGp73?LiL)&aCy<pvctJ5q*xI)Zos@)HeEpXx0_S}w*bzD|?>%Y}re.^e;JzL8l@EO^aDCY!M_DDGw"t"YClr<FY"ztG|_AkASSzB2B.9dI(9PJEtq$Ie*4SR0CbS!XE3kwAwiak?!nf%P?0o,%j?!nf%P?0[M0%[!}wMb+GvOYzIa"hxO6x6I3:POo43cex?u?:R7aiQwdu558YFIi$LPDVT51Yb&gkw#>fzqvSAOf7?y7b37/khK`QoNEOcJ>`$N!Ff`m7j@vFZHSv^GAO<Ab@5H!|uOzlywCKF65lh,$0/Q_o/B(,Iz<e@bsTWi;c&+$,PMb&<fNoK0aa%e$2yiw/JP?DtMa(Z9SMj:{Ldj[v2|lP[T}f!FifwH+JpMFJeWNPQoK%6BYCr(:Q$29YGMKwMzz`}Q)#X.|X_6bO#/maLltz~vUjrc8a+=wS721^v*6;B81ezQkv;wdPKob:bp{mBpt{5LU#MDr/;Ze?5^Kw*;>F|2=z%/uvF^(M@QeL69Eoe5uLQ0aWpBRPZ01w9XhpLd[Tx&Oo(/V]*LbV`IXO>[;y"+EMgP*0i0rb;6cpf~D6+Jl.lZXOwX/+L}6+5b70cU/)re{Ya0@E!,4Z}z"nZ<S#s3+5/SQB.6D$<R%uf)>YfpYj9xb`NosRZx@HQnR7AEV?rVzY5CWonehuG5"78yBVtd8c(x!6jH<Yy_pu1<;BsLBSAmsIl8t^}$5!0DBfLo0pc)0!_FnL})#8wh83|*QYUIXd}(1r8m)UOi5]v8pxGe[zB^6mBvI<m?mOC!W@K[Xo3XL3pS4]frd1w+DZJ#n/uo!ED2Q<bK>X7KAz_4z8,RR#f|y8tZ6ZtNx~[Y>}_J&n{u@e~<7I2FAzh%,1y%u&,%y!_;<nR`3H7!3KqXFesp{tmWAJOQJ?x9/f!n}p~QQE2;=b|c6]Vs%O(mI,1ga<QH6L%oxQXG$d{p~)GwsT?]Xhu/grP<U;19X:N_$@H~Bp~yX!x=mrf^r!;b_`uGp6Ipag9qf,NlpQtr:p^5cP83qG!HQ2"R8zxja9SCf%!^S&Y6[xg@2p!hfzD<=.<DK*PG(m8vX=ouYXsC?%6n3cQ6]nua8pxMAj.nfF.nt%"`X=+c|,2v>7@(Fr}cY@]X9vzR)%!&FrBS"j3=A}[DDBoo[%qK@@RhoCRZ:@"t*c}RrZ@:~yG2[aK+&AUUE9kYI@l2*=UhQ&FrB1IN)XhbQ4)!Qvsp)X)6B<ca{y$:P]T2R?r^D{|JxTG)w~M`]c~L"?w?^ztDC<>T?ZR]%Q,SVAFFL6/G`Dac+Rw/c62c1up##I#s>u=LvJ@9PC++5SDX=IU+:SRh)CbwWR;^:^7h+&@Z,I@tT]7."Dl:Etxk5Dq}k`<x"Q7V+`#Bl:h&kWtt+/.z[dI:+{H6[F:4w+ctM2q!iRTD9_a0+.RVMJ;IQ%b4.IVL*xGM~iq^43e|?n9rb+C^l2Hz|kG]C,)cH*V%Y|X?[y;i)F;IlC;o.}z:2+b,zAK%U:+I<k3p?ex1dC_:U+cgffO<uWl~Dhzcg&~Y%.HR@%)E>#rU/_t*ux~%}1Y+ZF;i=_pJZjzP%{)6`TF6?*^5t8WS&1WI!?Em@*~[]_IUxD(IuD";GS*xv:?(8KuJ%q#Ltq!>{uHMd7wRjl]Gk}3zdh8p0(;%$sCTf0s"C]a[n:!?;|_]@&U>>eNaxa&|dqM2:.y?[.4ivOnuYH]^~rTjV53c&w4+Non?tYuLO7Rr($kE~CKHG%zpQgyno&uw:%bM,<#&ZX/w#iId9HV]!*5)qq^lWX)*19~?uqdg#3OLlFqg>iR6v#gBK(?%(%]=2ujv3YO}+X5y=(8>%k)<@`^Q0~%yfEPOiM61[.1)!`y$rZxXDA9;`Cs_p+X3_^"lY##+~C$|V#iLk`;e,mE>lIz]$q~+=C=#+NApNzLSEfdR!:xO9nqP)frF}MG;A_AV0wQj)*95]zWfb9j)J?LDYBEZKKwAWj8iyM!1BifmUM[Ql]b1u1Vq&elGr_giBaatj+M^:dn[KoiHlu<?{v#.[h_>_=fXumiCx0RW="1+4h.vdFU+{v;b4KnyVG.;!QKE.n:ub,y70q[D8PR;uN!iEu@,E|M8Jx6c{dyYHHn5C{%3Gq_Kxu=;+r<Cs)[&GhPnRQwYExGIZ5GHL61Y3/h^]~ely=V~tTw##1tRO71hcIny@uj2!r&Ovl[DjqBZ=3LjhxmR@{!Lx,^_SohaN+aj%wagOwzU}{d]chlu{`f9!9:+i](Xtv$8WHNf&E"<52%eg5[`D6r8@L0_vBd}]$K>dEY1WPidC$`G4x="k?kih&H~hVC~5|ps?wcslI3{jtn$VYPK%!,"w*hzMX9c||Xr{LO5)ICGjsQDL]=u95id)&0TAi+{sU#6}%y^[<fr6hq~p1KrC(C4cW[m,H!9)Tgahu1uPBx+HledPD@u/$(H@f${&Iq^XhMEs&@.B9xZxjia3IK^=Yr%Dmd!s9eacIb52*(Y8/cm/JDV:Kqvpv4;v;=&r~E*rJ2*HY8/W}Brw`+<.J$qefAgDE>nRSd06pH(FU3?(Pa^K"0I!/_``o)0uE[#[1a)X;DjVuuVlT@cJjsP[Ng&C{N*Q|fY!w8Y`ivd~i{.d^=UOd>1drSp"liH>h0{";Xl58B{68i6depUq2RLs$WXIG~LDVbi29Zs3)(%=9i0|}SZeRTjer{h1z/WrR@/mfy<zO1sOBrRLB)EFPirTDQYF^H%,esz!7IbSgC!ud!hw!QsmaJDWifF;RF)LAHU$]@Y@NEmA=InI<LKy{=B7;<Z"l=KJ|@,riLm5I$yJ8s7!&^ItY^DUsV$i>y3yA}uhUK<=;Ax?80$Ap?8!&j~^J>B@hf)>/P>9^6bb,_bxTeK"^I4|g)J~A4ZBM:[9goYwYhY6cub_,?/$&Hs=He>si%tOV.PLoI2$@Y)5ez%qXzR[=!W$IW@OFe|Fp4n4Ry!Pp6JHqztr~qoi7U;Vf/~B$MHCjm4^w*IOQ=FGyR_:6"ZSe45<~RdT=4(+mgEgozS(BBXZ3<HSFy6ScPmD@K*_yQ*Q)$m!ZTv<5D=&qd]ZxELzp$&Nz[lJ`Y%Xu)s$5rl[D0|2}$Kk|iVCj8:9c:!bb8ccLt^:*BlIzx]~DrMw3ikuN9ZK8!t%gzc)~8o>D6_dQPDYtsohDw"ff~Dz/)aFN}h?P_MdCTf:*~E8Nd?{nUU"8"GpXv*KCz@25B=mv43ph;XlJVEmzfM{w4;L^O38M@;:GJMno8ymaM=nVVy$ICi;rfSG%r8mk1)yKphIbNh1.&(8CH<.a]du1*TFU6EhXF^hb/_k6ob2{>M@7Oa5_/%Te.vReizKJ?F1ycFmAw(Y4g"_C55]Dtv@HaGC:EdrdDRY9K+a.fUo7xgH5xu,mSX`}neHtdF@a/r=E^5Ip6apJa^S6u#w*`H%;2qzB(q0ux2rb:P0[^{8?ca,{l2{5DTg(%3+Zl7)&d}vs_w]d$n5{C~;HdaQK`Mo5kb"X{*>D=,k(wqWR>qGHyT0g]0Ay{/K4l`[^ne0WWw{HdQI9N%{0xe0gU#Nh]ZD8|zQ:y%iY~/O9}c|[BsZUG6pGOAY6)dR^UMgGH"bP{J?1eagV_uLakK!XX)5eR*M*{J0Kr)G68p((oGE~XJvOdd^t~T@xJqc&qqz>?Dibn7<Gmu,7Cd,)Ya](^%yQ*n0D>lh4yg{eyL$E5ih4DNDC6&!",yG0fDJMXA_lb}h)5l,^cw!#B=kxk8Q&u!+1Oig5L"XGWf_9V6R65~V*/fKnl<[Etqs${ay{oWctzqW}0YebZIOR<Zlw&;Kp4*"G4b!7F]m!+?G==!J}@C~BaxLY;^oiAZyby}9fSM^HU}VDa#QYF.WEKn){<+1(u1~#[qInR"E4R"+UmF`@nN=,xGNO@i}<aDOHs!q(R%=lThz]a+X:@a}xa(#jU;`<4p~UZ0aByxmjlXhokv1v:0=wwGzp)SBP=fE{:Ux~PTuj_129m!`(xlB88*k6Qam<5IN*a#wz[vo,R8@w2&L4l$md^zKXsfXhQ>c$3`z@ZZcUy__a%wl:>av5a$W[AC1Q6,q`u4!GQ(UkX[@p"WaOj9_0!u]#T[x,sUqsH3xC[+((Mvu<(cmVPNg/w+I(#B?pcnW_{K#wE;wT$E2xU[d%/qrT;L|n`([4YA0s<QUW"EtKYLgW]}mvQ|@0B&9JBjl1h%zyI.q?u+Iu_9=G["M.Q:5UkG_wT?Pxd&Pc:,;!2x$%M.Dm0vc%rDuaD8|KGIA353h$6gaC8(!qd#2S$6htc%H2<,BoaTMaYbg*.=8o$n{>4.O4Kc@129q?`|x5LydBy?N&DNmGQH3u8FqXwuwEM!`*^`#E0]]Q8yjlRN>hqv!s1jMRAV=H^exE!Xp0k]fhm`K[&KdJVG;OyIe5gl0)^xv_aHlf^e4fCf!9A9N%JJd|KT>XHyblCS{3QVil{SI4"]]r3Tc3=>3Ia7/o!^.gL3;2#O11%n/Gx!6@`hzmVUx38Tefk9#hz%cixogI!*1.w,<hv73>z4j/AL1agbmgX!1wEr^Sb2i<aT=9+=_?|nb]b^%{#Xb%ZeT!u5<BCb+Y0vMSe)(Uqm{#G;U$?E=,.?LY6|rCDN*+!q!FWz1?@yRGINMaY0TPHep7ae,m6F<xk$NYYCc95s8h!;ZiInJhLa+YWgGJ2~KhXGR{x+Dia=Z@C!%h%+y>,P?"!q2$J!r?q?p@bj#}C}L9@05K~Ai=_tMdYk$@q?%tO14tE^NK}l,+#|T`ngA4j0ioIHNS04@m.~TQB/LN(n}r`?GH5)cCZOVC%GiNO!H~29DK!R,1#cR&TX!=w%.7ha8xMsKb$x<N,jPsVqp":J08^lSub3EV!:E#;kbZxCP{sk.Zsq_$z4f9#2NViYsLx)pJ@FW)wq8HXR)*eC6j,@S+/Ol};=<vFF|p#uaj,*3Xr"Qc`)yG?EDOE+~uh8"!F`_QJoR<z;1i{2wXR0NK!s3T"nFfWR%!!>*R++kN1t>XmQ;*3o?[Ao|nRM@2U[M)IGx.6`GigvZ[|n/(!EqF8x<*@X(RY<{]f(MvOcX[nc9|%^>KIy*^+wg?ht~gc9lxdh<PKF%f@hw]]@HI!lJC,)ueTf0IzI(Icx>VL^`VB28*"@Gim4C!+(9v5K7*)K:04pj9:)%X:6X[T[}^!W|2Ifea*z(pEEP`5kcfOGZ**mUO7BW(iN=@H6.+<D+HH=!v]a$A(DRBOA<V_.NQR]~1b$[U05<iX]+gdrldC?D6{U|PYH}{Q<[@^r/=}<7o@%8=(+cnUOr:*,@jF3Fa(d};s2"]]rz&BD78yy)nf4!Zr,Pom!a!F)%|Cc_5J#HY*q:j9DHus.7T@F`jg|Pk$m;sEvl8u.TebeVjMWINaTDe*6j:Rl%%FY}f5m[14m%q*2Eu"X=<(lKNvZip<=v^db.Z(Z+jt#;0e7ho3%y7j^pY,Zp,cQNY(ZjkNPsPjr9U35Frn!u{?0J}@1!:~!ni4cmF2d>X0,AoB%#XkxI<5v;:`f+Y(Z%aN0M{[WA^)19^@17vI)l1rQdDrd~//zFd]`}]R,#]G}99FJgjSsI;(Z80@`_6Oo2T){v^Z$5:9:y&IEXU@<d]JdY}l0J}slW7Pk4Ls&Y%RoBsR>xTcoyed#@;zzWP(OZvqbH,(!7)2Ze]0IhrW^fa`5!,!NTf@eb2oqE]aDC(F]LWKrm(3f:$>Q1OaFn6,l5Q$z!w47XFGZD>{BTCgAC5U0;O]jtl!R%4R%#XxG0I3+(#zzqEYhVCSlx&<@iW*.J|b1TYjkEVIvg%h1RC&,Bj]+:u&@#/01yX$e}n|:M+$eZDP@|[EFDgki<g2I=:Q%7==IpLwzl/kcZ4KbRAkVCJ~SEm{;SMmrua{YO;JM[i7$*2R`:+:NE7mrO;~+9^^ODVCG/`0tw%o~fJl1G;0$>Q%b,)=9@msxmUgwlTbCN6G[3ZbUGV^p&%>gz%SUubxnc:?6U{L)xwvyEvS}*<l#;E6)dd:k06Gx~gK<rw6*T%qN^1s`j2@cX=JYuPg<F@J;AUYH?aF)#%Z>wOPM[iW#<%}as6Dn]frT,>oYOlehaj+%L"5>y!_F`F95BW2v.z;,.qrmNTvYa=Hc5T|r$&NTsSf/FYh{,pqNBB&ePNxezmB2E:r:B2c2RC~])I_}K_h|n2G(3om&&;9soUoSpJ(1/b}bPgX>H+LN8zDjet~Z6v^zGeFtLmWu|RgU67|?a*>r=Ih)vm^HH{]@0M1^6R_y]#ydy$JXajuE`CFyP!^oDF_jj1oG8CIAIKy+OEZ,}&k@):Y,D[&cSka>tc0pb!Cu;!Yf,+q00I<`_wc]M]q/Qp1J3n(3;ilNH0L)ohpl,xKHEnv,zDW=T=T=HxFva=JZ=1)D71QnoF[C#30S)!u3(hK^m3R3fjxvGHo[cg<_DcW#_%_RwEtuNJ9Q4xcNBdW|iZfJ(EHP%VfxKi+rB2<*:*ru(u~lW/0.<K#oQ4#3XSA~{&QmW~dks|?l9_g1jsOIY5uML^ni{ix|4=#Q4V!=e1[Ok7;Q60Ir/ma&EIU%T^[~0UhEO:Y&DrV7q;sTm$`*_djFJQeT}nANY9VskmhC5R]vvkV,L/n6K!=5/,ypxWVlo9M{f$Ed;z:TO3V,6E?a$qrW|$!G6NN]@8$O);t^R!F.,g@p,WF101<tLK[#C`K|}U$JePD$fydM_%~aqtA>(;ZPs$4r"_1=lSluVag4=^Si/f&88}"`xh^JW|.Zm8;FCJVYH{Uau9r=H:FrTe*)T)r{Qf5E{v^l$_z&"bOv76ftGHvM$edRX/;5=[|bsaAyxmwD+d#Rw3nY3XS2hmp5bC&[G+EmqC([M_nPUKp%hB(}c0!+VX>u8kNMBvy(axrH|[KI00+_"Y;DX>ZFQEkt;?BGnNR*DK,G?"hZ>MN0*ZXHC``NSd=$S&v|8_y$JmhYtJ~C8.#.%mhPD$)TbxKmRiTb>RCRQ!fjSsXQ+,fM,0W4mgLU#Z=Tc>3#Sz7:)fqTKdFmMZ$qCh7vTd&q=;E1QNYz>uN~cKYx{9w&yJ6i*;]RL0h%#{mrl.,]NH=0y%(7nFC[NyagU5Ucmb>a!R>3"5Md#H4G_g@0=UChj<%4><k)jz6=2ztQ`Vorv10?wYR;(;9sY%{#enq8.*R8,Y5Tecg7<HPkJQZn/YBu4*F1Sy[/@$#XY%rJ=e$X}@|zYiYCY%8=`Rp.4`PpT<s;7g{I@l/]@>)1VrGH^,v|)e_c$YC@5onYN*DB=:;iwhMNKAK.j`eKHaZDT:Ts}[~mNv=R,gWdzbmW?tw3J!dXB[E~+aukai/2tkf(D?o7})oT"5*uC=iDU5]EH5(H`j.(NzReb+Um/{Q=W]I]Z,g8nz_#v0c|/a)pIfjG3Fj9~<u%qNYhoWIR1UVCVOakB]8ZP;^Wqo3vE]LpIHCjb7E3zD@_#FbM[Od#o8#N=1raZbK@Yz_S1Gp0P5p:_3<bRk<w33O8EAnL=,$Cdfu,3y">lpojte_4E<~+wq>)~%3RQm34Wmfi+PHwN@;i>^nZGgD;AAGUH`r?rUMh)mDrH#{jo@$BYTb(&0@0<twjw.@e2qL1>!RR]<+%PwN!u5R7$&/u({AxCP4[YMry^&gX@6m8J<B:[1O1:t8IS`/*w*DIb7,bd[}n~T|?3b[.=32${SYi%6@P5&vhXC}De.0:1Y#V+)+t|psp:g4T[*$l"P8n9:F%h.WR<04TBFciV^o)r).IQ?|:HCC<:K<dn=JbTr`h$V]d>s?j3PLXCQy/ZXxu]?C!Uj%.kgP^{WyLE_@mVuy]!6g>]J#:rJYhT`)0_^ABws5m~%NJ(9<N=aO^8r.mztj+7>(xE}go@YAsv%N_fJCDALmE#^T!JYMpltuyJY~y00G+r!36Nc^Eg~Dy7Haa/}6{V^h)v!+=B=!x||nX#LNLMIH2%dD%Nf}eWm]De?K!.I$]fr9/.=A;wTF~rR[*%mKuWVY0bRxcou6LBIN*#Y@r8@mS@0)XccDHA7}SG$wv^4D4<7TtdnM~Wg|3Jk]9(6tXZr0"?6C{Px/nxl!v7&iyWhYfqepvJYafGJ{6#7JqTt_bx.Z*/Yv#/MukOn9OGJ=R,9h5.az2>%s!}I+g[pW@fdMSD`B;Z&8$Be%G$^K(PKE{sPuPGy)"MS7lHnk}N<T%Z{!04P.U)|FNVuz}Zz5"9?B5G[O<]E5C>9ak5]{uxT|r"i,[{uwN8B5c"k]tz1h{7WAx}Rc.z<_&+IITs)pZ|M9?u|*HNN<ymb?|;M/+Pwb["2IWf{G]uNDV)|F]I4PoW:J$ard$7m/%e=yM<wZVGzyK0Vh~#VUv~(Yds?b<]k>2g:^gaWr2z%EfZECD3=fP#G0G)gE3^qAiPi1fgq+%S1PPMS@.T=jtIvmhE%5L6bJiDA|E|[iLD6xOH{kXCam~fF>ZV5:X*HnypWj9soB%sg?lyvBM`cnzhzCp:JwZg{?a"[~$C_pM"^$Ni@c{g>La455]?8)ZE^HW"f41>268ZxD,s|)Mo[KmEx(Hc=JN&+X$1y9R8*j}vBZ_eEp~7H2R62Z@NRh(_bLl#}rS>1VL6dPN>fr6$__/p|?7_aOH)9,M+ZN$v{?0*_TM4@L|"J`0)/jt^G7L<%x|VzfCS~^Yg#y?92y+<M~mpziF9mmzXWg(iVfyyJ=,3Ln1q/+.P$ci!:|ha0o<37J|EDlfwKNV%j2%0OU747s<Tp83UV3nFCAeADa0s.FjspiJSw:Lw<*w9Rbw&^(i9;G9SptGlGTEf`m!qQv$^(|%U+8d^bAh1:1c<bYR>5^anf{Pc|L.6?wj?eCvp7~o&f5.19Z>$rh]OC{LZx"[m!ihMnS|.GfFTUW5?;Q<4y15z1^D.pLDV?HU%Pq,`}RP`;^S;01Q{I>0<#<Uz5<sdfT%8U)x1SPSDcp<XW9soqdRE[>!oc(N%{v(|B]f<QkN`,`6L#~9R2_u|R!aqXHM,.j3QY^=_5?E<#}v_^s3{oVz<U6UEcX5fJyD_ijqaM1UP4&}m.uqB)/DkH~#CvELe$AiD@;EAT`&GI>k5c>MrHbKz4le$<?gl^^qw9V{CNnUX:J2cD!/H%M23+:al5&JoHGKzM6:z6rh2?/N#I[OE9OPZe32gF17h[BoM]HiKLdLHWGxk}X#5Pf|FT)NrIfE1+C/9]Uug[j6tNf1M&V(].=:}81lnAhH+Qx!/SQjZf@]bI({3V]&)8posYV59LM8uuY9_y|(Z1@k"9q,75(+Z10)"M"cdTz|+;GH.XZGsgo9h!iH$)Z#"z(c}=*pmHo5n2U!o[?<5fK*a@_eK*Ro3)fNz/@0_xKZie`ZRv1:xY~R43=!^5.Ou#I@*fOMw5l+/BGJ;V$:/DSk+y[D3Df*By:w3RHP_:(FZ"BK7C0_maxFiu7I{xm>cy^W@h&NjSRBe)By*?&NPDK"wM#tT|)c3ch*>>?C*WY/`Kgl7C88]d5tDPH*By15cB%[2CMXsF}$0:b({IKKi>7EGydn<~UUo>zEFF?a|tz]5dM8B{^5i6M;eR|9Y3TDRJ29HN:CHMUr[T*=w#KtkgkiWDtp%(XJp$H:52}[2w5bKQL2iPc8X,.n>gKK(?DKqF@EH*!y`Lri8_aFSW,">5"uBZ,t,_I^")35)yKt5gJUvn,*`c6inNnc9Ro~oWyr|md9{m>`^xdyUVwCdUc[W]+=4cQo*gClB)4wBtGPCS~oHRAS<0ik+l[w35S6t@W?gP}urLtRmaLD8XnV6/2:bVB~`H){QUs(sh_g,,.rU;o9U`M&{go9xI^tP(x=q/@K8jzU0v;LQjt,)DLQRH+Q~YD:u%Ui<ZZE+?8QJIRwnEghXf!>yDU*5r2KdorN?Gu%0GifS#Pp7Zw.5~&eR.d,i`pqKK8FOoWV!Fs!,zp1iQ0a:9EK!/a&.Gw^mvZ@edwYAxyLE/HqmM!b<H_#zp5N9TUB^_&%F!$1fDFL1L=qUE~&f=smu}+5:3;{N!wTYID;~#Q,jjlEOPpY;yINR>,+0qeHLzu^;Ddv11x]Ebtt6R%5HR(ljw+."`Ck2iAiq`FwMfBMb+t!IYf3+JRtE^~$y([[9NsP/hRYhuw3T_q/Qd64TABG$rZsQ(S&yO3q7OU@7@#CXBHf#yZ<+%itK,%9q&CQ/;[N#O83)mN4~E"_@IRI6pNe5&=??{RLkr7hV~3:|^SbM"t);(CViGQwwK,k!zyj+{E<ji]LDoXRcSdNK,KS4MeqOv5se!Lm.MJGL+8cW?p$h!H%+G{2<wz+V%aK_X=gTNg*??XcX!D68@A#64LpU<`.rhfdR60h{DI]]5/Zgog|kN%a=hb1}dH6OGBjY]<b/<B$lb$@[~Z}G4cu6pAiit`c&,ENh=w)EW|8,Y|Im3>OK!FxhR%@_:L1I9M8x(]E:^u<9P"v`&s<XL%)g/YRiKIR[Wu"qx:e${DpAr3mYieR%(S8c%J%uxKpx!_~e59fdf>4[=9^*ESJG<vxrJUPsfjz{S{dqwhc7rqGXw<LwB$[F6qqaxaxn]m!4g@w^ltV~MX<(wDi?)gwso)+mN>xaX.B,+X%v%v{~bZ<1Uc.a3!K=D";%@+)s)s)_<hFcxHqTfPKFTyvC9m!|nU<YNIa</?7_f"/ii4c2g02sND21EgA$keeKH~/Uy=+Y&PI^F"1.6q3mf!q)JCalc_<qWgoKjDflk[w$Et;!>M@0`YYl1G;Hoe3N/#Oo;1`x|;ki^V_V+spGFU=nP{VnI=i^l7J`WH4855N+>]@R*E%V>sVw]<KDc=**u>_PTFoJ"#F19>7fQ(rpf3TrJW~lpwWKv:J4Z+{$@Y@d8b*Y)6;6`lpg$zB;O7HfWky?wZ*#)}W/VM@UzA/ny0p"W/VG4/SQr3r*VcShWAU0rm>>eEo*wivuBt?QyYYXq;VK<c%2hg^}|gTpB6OoCGpdye%;TXAPK91pAAAmAwAL;lVk%`E=,Rro)"EE%yI)<h{lp/be{CU|?xFSEV*3_wr.8rwGz=V|T=+R&`NG/L@0?Xk*U_3w[&nxRE)/i.aG60g)2M[d%S9BoG4QNpo|!fQ<m1.@~HL<sS_+F4T6x9W6O$"+G2FR6!(.GJnNJHLwqct(_6a7wy^`@p?oieEvFxy(_Yg@bYl#(<^&^zQ$u}rtW4sF5JNzLY_`CmyI*fU9r*a%&f_}J}n@}@vjirJq7g9_@ssDr3f{_}VRRiwlc]u;2OTJ6QY4lg+RZVImwfVuI5KoVD)dG5oz;9+F#QhM!=(1>E+:s8)KSt^]=sZGo|}$xRCyMIO~(.[A^1dW)=l{n,JUX:Kl%YV,%9h4cWVsWw)DLz6[M>}OP[IX%9fBTQn8e5sAon^,exkyr]ZBA@Q;_Ek=%fU"{<*rQu^!)3H29IW!6g>Gy5el^C["n={v`7=r^C[{n_#F2Yha*1VKsT($uQ@Hsh3N/L@4$]lk[Sb_k9hTk],hrw)Yy[$0X(Hq@7ycSnLNGeTE/YH1tyq!tsDz4dx}#F2PkKnJS?.z>y>b6#{v`V<).TZDAw)qm$&_}i3@kDx.ec`E!9QyvnyisL<:ZHE|Gy]P|]Bx$(`4S[y&h(B;qVl^;q5Xu@@[CaJzJ>41)p[oo4*11&_{8n$XK{b}`<MLmohM,WmLfaE~{iyg&WTrVRN$CU=9#anC|t{KkW~I2L>L_4UR%.9br{,}hy]d=m^Y}C[Y`=|5,@(1vWQd!Y1`F2&U1liYi`j9lS($F"#?51c@$BdAfm4&L?vh>7#gQ#Blh%c2g02sNb>B.mS!dY:LlzS@7=.Ak.6X>*s~3p.VTC@cb4pYhC0QY{mzY4{b_W09wMLCnBibAorI2DQ%@6K(oD`,}c?H?HJOyo?L.%sgBe9B:,?0:IhW#sVaPN._;vKxaN>lKkcTpzXF0Ao~gJlt^nifc:mzLi[c2)1U(p;"b?%6<1Mv^pIPkQYfDF^!tk8Ifg"eTTW4=UQU!52]i%{(U"J=6a.&0Q(B!syr?dQib)K4$mB/Fr1Ca"hwrlBTJ1#9B/^SNT6j]R)aiV1j8nF@$af}]{=0#GSR8Nwsaz2i%~/)91`[,Vfg99X.e]4_yBUJH:;HeX*{5/39KJ:[=bvnB~3O1b@"F!v|l#$h{8T]n}#ja/jpL7e/3DIb7pV@rYi%6e(uE;*P[bmQ=DY<9I=mKT+Hc*&Vn6&RHvh*Q%HC<TICihKx<oY[B&6),W%OC:^G~cxixbjFn.,+1dF}v=Tlsrb8SC`l*6G=yw%eyXVywPi*3="Iiq/{%.UgK)xJpc$G@D`2NS/5>3m0{S:d(fVA{C!!HF^4VK_|16%.gLFCeH"[TE`"[mpN9Ii*Z0q18nU4MisDMAqYr~&MKygWdp[f]Q=dN&$BZ@|AK{#E1U1fQ$=0/[{NEFN"0*@s9b};EA[.ZBRKR2gvv(2OcCa;(oc"Y7lm!VFOPAZi%Y&vp5!uvrVSSHfu$[6nU37WeLh8&9dBUUzI^ujxpKHH(7:l05(oPlM21pGB$~{~^YbB1kO6)v^P=up%iEtZM1+WQ/woxXh^lL6UacaghMyQN;uEYEl|dDl9a9nL6;9PRHeNj{x=(j)yv5$vw=ni^eT.8ZkuR*(t[IC{tIEKVtJMh&K@FE@Ji[|8K7U?N&83K|.H@Co0lH+W#~e}!@Uquby`Cpow==nZ<r{wOcr/P~O2gx8z*(L#K5)Smq~h~+@Bew(Xk0KRyi,I@jpmK+z3ct`3UOgD`i^Lvka&oL%$GQZ=mrpC%0z~9ok*3R+:[?zIiPO~HNOQa3PG=kN&?npaGX0Co/!GlD`7a{wyz1j>#peRrMzK8IL_+o,M05)$<GIPx<D2ZUeR]I8(8sTnY[w06Q,0{}v(%*b3q2p}d!IGxU}ZE|9=!.f1UOIA[@ejK0UD0heJe]lp@Y4m`O$_/iJTN_|8#Qx&<cF<p}#5Kt%xw)Pi3A)PlYVC>6lA^12!KL/A[!~kM!v)p[]J^|6fD~@Gf,5:5rGop5.f1|Z!7wp[mAQy[hnY:EIr>~[C<+>`{wsjO]}CIYR6ga*cQa^`y`LItPbXEL.tT{aqX+|7*]0SZt&s1=)fm;X%Ke+$=LG9QM>UrZPtJdL<ok6plCTWQMvuL53Op8/v{k=GUfl&PQBLz7)CyzaClM`{a0&7I>7;).{}$=@ulB+B@c}]rG<>b:Q^]:;U^&kXdV1RaE+a62nlEgpDV3jDKoh(!M}!Z!J?D|U_*[j:!O>!QaiMH0teUZfd@%Z{Or!@&uQ}WY^U*GjNaTfrq/E[OY.Sjt$bV7?:;)p?nBW!bt[oztV@K^fHiY*y>csZn%~/hpChXZ9K#LW"nqwI(b]jUO_u5A@%}qWWYC34,D%{/[{`s=z!CSEUYZ&63;b!]FioF}8E!k%z_}hN8htwq`>kA9gpC0FBHPsH0o~VqZna!Mt_ut5)_M{"mntJ0r7~r,IgmU@sgIog]eFfyL27(5W{Y/3VED0.;EFjq0P$M|3rb2?aceMyjm0TNkGaI)CXvgt|QrN+0aR}>"Myoi@^nJ%#B!RivKigXq++X1+1XfVQ_PD}rRdzB9rFUbX2ZUwhV7LQtM9%*iEqPa9J<:Iwp|:Qcygl9nthjArI#M333uiacO&GXGuDv`3Z+;G)"a9@.j{D[l@.G*Z&0f|*JH6M@0U1K0+AP1t7I4RCwtG]+a1zwZgR!6R1UN>lhNh_795D@3W;FY!oZT<`j_^"4)8xr,l@t>epzH@gl#]yyzlR^;bU619gKez_>?8V;OrynWP5/<I$aoY^I:c5B?>;CWBZg9_("lYij:a6Ogs$MCV%9<E@"g|]Cn7z=7OjrKil@95c[7CIL50%K</*rS`fuK$rH?(LtbPU)1+I~_8[fJ,mzeBS`8:QO^&_>?8qy@Kye#((<YLOa:cYS9zo&,K55z;J@9t;w71p9+>%Q31+aGRlBKDhUT;JvmFK0*W=hIOG`#=a|`QB(UCC;5&i#0{=xPa*o{tBtO@Cf?Cdp$=bkrW5y4[FoMrBtO@L_E|We9Ac>H_M#V%^x}s#j5T?~(a"r1qKi][4Zs|pzW)(ID(hzFo+`K[q#fQG(mxZaE)?h[%8*xjgh{^KRhPTfz18*ACceo68%8),1m,&GgBqbY!VeCT|`;,kt=(5?|^,)lbK>=Zy,el=vv_w8sQ}Ep&g9B@iZ`3w[[0t/gq8uqo;F+087Q@`vpCt?`!11WD)Pnn*T)=<?XE6TS~Ci+R`a;c"@iR]R"@MzZgrz)|#R<i5g7RR?]12PFfQnIjgq7nZ$vY3pB{g.JTRI}HNJr.VZF1AInf>#e>B^B)GIPnv{x#~B*:mKWgHBSBb}*kY:)*l2.Z*wOGHR>YdZ>aVT$a&GPGzGYP`h)4^h4(NCXOm$TLHZGh|^`=S%"fb%K2U+^wKK!{vh$<Hsy8#GTuRiJ5r~5L!}Dx:^G!i#`GE+g@qHx=IM!9{Y!&Rr;a7L_Io>5X<QiouytYS>[Qd#^YtZ[6bi?N5&4KK*up@<}p;7ujYV!*ci*F)Suiw&0UT|EzNsAYLfDf=r**,Lzb<yi`87{HrGfTZ>S7XF|#Tr/6ur.:v]8F?H+0Gr<yz({V/)?;RA03[Dba`]+#?,MNv(rz>&P4G<{XG;Y,1L(eSRMhKRJZ5)ZTt4vh%c(c6d#}d@1J<wD;OF`]dIh,9LLo%)UmYOx9b;8a*Wj]<;/SluF6frb%_!tnP^v5DV@u!Z<]ed$v2T6w>)Z?7!ns83vqz{o,J!53}]](hHT>m:TBX;?T7lM;5O(`$Z&Fzf`.8znmpuDz<mZ@8v%j]$7b%wxCs`rTxvyVy5r5t##Iz7%1:)TW^z7QzuPz@?U]<(2/:;J>O!(9LS1jL0^{BuOcsCE+=)<3`CL6@P4a{))`fOGu]S4fvgg:rZ*1rdK+if|1A["^T<hrLl%Y5w~I*YELQb)#nPBIc=wpV%bQajeQ=I5gvV/]qa`X%K}Eg(Lm?z!OSu2G<M#<Pxil[pIUhTlEY~v,yz?8[=u@ajNR2uSe~C~tf~C^k]k]k]6wYf:FfN!l,IyhVR%W|2aN.t[TjzrK~w<@fOZv1:>xoBo1Oz^.t!ob/LHHR)uG`Woj~,t6GfNl;X8R5)z&QdnsjF*zHzSQb1vs`SK1xXRDvZ=b~^I]REe^"ob@wvAn"qqMvlM{5jdW,VD8SVtV_$!Ct8Vv*MS&gFqI5(1+R>J]:/<sj`dE>Dd4}E1v<ZdRO7c?o`BV]3`Cd)("Aoy@*H)eB*l1?@S%xw/Qm^.!>~ka<(Zd[1A[Xi=@]GqWGmroJT(hR~.9.{J_Ku.jb|k:vO~m_4`11?#,kCyjs:.,(Q%q;zf1%;jx[GVO6)IpX^vTQ7[w<@)"srDyE@="UsYhbyE@rUYGN*k,)`0qji=mj|#RogAz#7Cop@xVpdK+dW_s51<UOg./=C4F<ma3G@N;UyR{*VsDj=ifkkz)uK@F[j3=_MnyPc!K6%6Q&|/zu1Ip@?%sjiI]vT&wf1Jj6Q#:sbh$Hx,Jo/Ey>x_//PgjMG;X}Ts$+hHd@?.ZFbjK#<*h1+$|cKx!~YEqFVlrG@:/=P9Txm|8cmlc*J2wV=nV_+u+iIA{kPgMTa/t?evK@F]@(*sT^X2/*bB)bMyLO`FT4wu:E^wrvTh?9Rbb/Ez4dosgRDO)sZX*UsGq=?_nE)C!x&Y6VQb{@ky1?vPwh<n.(nfYrscT]Nq7V~zlY`DQsD+_bMFztNq[N;].q#p>IL@v]v"yaFo,I(Vqsn0!K2yb3Qj;my?x{/K4UsIxrg1z(b`T.+Vw&*Wm_e/|mfbjMk:,6I&<|XNfVx!qc[j^&VkSW0[T,ZW#i%Uo,,#<aZjN].2ZT20IM`c:xP4X4P;)/CIJdyz?v?FJEjBoKuaJ%jnFdv`1>?RT`Jci@y*bHfW+C&$pkPR%Qh*U@blmr@.a=1aR`8o&Cfn`LXV4lNqw3,u1`:lRa!xwV<s329sw8S${_Yxv9%(jRU,3xezrV;R/j^[w`hcij/W@qq:KU#oc_6w10?uZUYmp2g`Z^vm,(e@DW%J`m!S?kRWHyj_%7v64<.R<#de]9lg(Wm`G+jb`n39svtGJ{$upG,l`OxLCQMp*X1R>r^DCc5Bm.CxYiEj9fjzp(e$YOi#X{c"{n_ajf|PJi!gImpGIA^dfyPLb(xlR|N|Widbz.IRv%(xBJG[,SSLDA{wRaq.j/XMRxxGN?jFL!HF3PZ`|~9a)E<tp2HYMG(nh/}qNYhw&P<a!FTWi=Ilv)]POdIRhXx.e#8oi%Ru2qJ(x}Hdu14l.AZz}.sGq<+v=biSv%0cND>P]*gu$}="[=;m:bwshAhl@Er#oCPSV%5IxNw}ow6{[^nx9{M_lAh5Z|CH/e32*S9fP]N~,Yb7losnl@!j.TV^&<s6&~vRW%5>>73*3mDVj0~fC0.E$nR6cC}|G.E&bWrL9v9!MDYqVe}e4Q<uWDH)iEANczDS)H;E&yBX=P_UGv;/SNY_%x"&fG!qn8$MHu!N8B#Ay28C.vhjye=VMl0`D6O.!jyvRgSSzEABtAbAArIacA)d5OZ&Gs=UZBALo=w{9y6(+`)=FnR#*AAAAAAAAAAv(!SOK`2sd5j5jj;.N#!Pd%Dwe}UJTr)d.N:+!t$t=qVC1Z_SY+P"k/?jnJv1}~fw^4^K7h/SF7b5ha!Z2LOUs;,qeRw2!;HV18@"8%9dD3(EY}kc}]>"KuFRU1g|WZ^ni2cW{@?fG3o{6k}crby2=?Ij]8e`/nuH|C@OXJqB$]QD%Da5m@)biu.SMA_s&F(oqMl4q_`w6v~hwZgKeER[ZqopU?]js38bS{`Q/K4~Pc=rf78Z%IVL62E$V`VVTosl__jjG>CM!A~Mbe_`#<uBXb;=#3D&*aZ_0qR7<.9|*`]G{L}4{g3*p_d&v@;^IW67{u3QKL0dcA;y}V12<8*,^WnY+8hq4;GS{0|QsYFPZ$k5iVUffhnNO>?a3Ha.Sr|LR;lQ^.NwIFmN*P(":[b(UEZfZ)oXUZtxirzmlAxQ/`zZn0T]wvZ(Qj}+ILJadQ5_u(hia9yAx~OQ:"6N*}!NFOXr1Fo!FoLkC])0*ByD#R*EIe~Am]ugw4w[m0;j[p44[;}4sx~WbA@0wpAeb<tT4ga~"wx8iSKtgT,qItX#?OA{I}<6.l6XhX*3A5No%GgR(tq&oU(63VhKl(6PzoWj33tg*{G4Y"w99kI0H`BwyHPM]+j|1|RUDD?QhM*nq{?.c_X:5jn+hbW.:]Lk@I<ORi|$W3)`jfE!4!YS;bPbReMcHs_.u.Rza1V$=f?Dag<8KxdHHRn*0TL@w@~=#gW,pp420Gu1We{ZsEtrJ5IWRK)2qJ@1}B..g4:%;BHM<R65./Z,DjM`K,aeo>"2T{WhKXBtZ7p9wp0d4i!3#GO}v^)=Sa&"%&X*m^&SR28Wgw2oB,rQA`@{SQs):>iY]o<@mza%^Z5zE|Lj`K>b,Rtu7SULS[I5rZ=qbI$T9Cz2q6xWp<&+&IYx8Z(=Om|`zirOAsP_nd`f|y28ZzBB7Ro"<h;7ofkoV`VeWt"b4xODL2="$JGC(fUtaU;J=vedZ5*,n9xQ{cR10s:`F":x|?{={<+mI49jbk$k[oJ$H7m;}RH)cbkMk*+sZeM!Kiw4N2[9.jM`;)z6v[<DQp2bl@/q[V=q<g$cTzP<&D|(mR/8sHj@u9~:oRuE4SdARn(SmM;y]*=tJm^R!hyj2vGv8rrSZ8w:8E*|`dW!h2WAD8J5bmMt[Lsieg0[,$okJ9uMCbWhI}}V1~(8~:_H}:x,hPCrRwG&hJ*6"Y:qCqmVyJT^t5cP%~B>v7wWj@_sctWN}g?x$%_A%=`}rbb[FC>VzD`YNktGDJ@m3KR&OS*g3*oS~W/bHP5yM2{n[>Z={do[@9S]l{0v&/Q7X*VO2A5yq:2]VTq4Jg=7v>D|r!RD4^qyRSzrJ4~v}<pI,1!Rd_#na}u!pAT=1FLZZ/YYPYK7Uiv,*?vQ%eas1AQ8`9ip~jz&[7O!e/SFk3!}TYH^yGqy0;Nn>+GIG!Og^6u%|7J"y$^UCKI?S>eq.*YobZ!OCbxP8>5/+2:%q5r0vBd9B{es`*ORH>,jt:~"h9b1n^*SyDa:QzWde%f~j"F`w4&:bL9mD?06/`_OXA"JNn_l}kWmQa3}@bOkXqE>^v=Y`Q,FP%!Jz(VTxENV3(&g.HDyQ?RLExs@D+Xt&<PFGaJnT|8|h}B!*Yz_CejT^x!(zu~]>Dq;fTw^$n_?<`KKWMvV)vqRCUs:L#{5WNdBx8)&a5z=Uy.E{_~6.{t7saJRb)[>y1>c;SZ6+7`V3X1:]O;tYS+BCXVZ436Y(_)(MeOw0(>D4}5e,~Zum!.&#KD,~&!TNXDZ)Az[>/X]+kFP*#`$,,i`N~2ey%sY=OV_&FDH#nzOdov])BsCyN2c_`]6aGq*{qn)ud!d8S*vd5/S&h=WU1#arZQ+8QT`6|14abG$qTUE6m:c.1`H,FheU/]4kY7dlbZ;zYcqmCxo@<jOE|ak6P>RIWV3{+2e*7en;F(%Vr}tyk^|Y"d7LuVEu,xvl+m/;a%4Y=_D,Jg9Tmy5^x@pXY5x~M0xG)K1tAmD&//j4uT)wm|8X@=MP#J]OY5}1FD[1<v,W`nSt/Hij<0]4/I.C=nv=}wSz{OnZL6I)9H8=Gs14V4U:VNoBZs0GaeoF57SPq"1nt_$~1:Gpp}?9Dof&tK|9Fm90:5>r:ByVID=9G$ey+67{a.ACypq+tCvqcG%S6.s4EF%lE+Gm?x/u.5qet3{M*/xGUmo;Z;Zj7W%}:OdbL3WpF]*?,)R>.rVu4P`sRnftvU97bwYeG;_*X2XlThV*)vo0?6/=siO<cg!,|~5nc`Py@L,s,NB&W<1wGmk{h4mlEr?_ktFsJdFXHV*rY*3["pbx!<Mdq(l},aHayE?^OoeJ;fCcmDQ%HVGOl[f5B|$(TdEusSzzEnT`lJ[+3B.a@#LJ.oFaK"]xj7RK~|k7icC$L2CYZXxFVtag:_S)*2;l{;Z]3GJmS5ulAuQ>X=e,!nWi((d*acqqrCPO;Z;nSA>4?LH.^+"0`+DTEfZykOd5(/Az7E3rTP%)a$[ybT?rihS@VL@!jfDGO~J$/oTs*B#f>jK%0S$]EM.$?MIv>CS<[v)Pi<Yc"SGgBq:9b0#)X58X6h#,!v^Do8=<:D]RVo[e:b<1{@G$^r`P{*>8o<o!S~(!hpddJD~$94CVw)IZbv?~y1ZFP#qrE{D(D^,PD^*$y^I/59DSCsci]IfvC58sZ^E9ZLu,&I5,u}B!2.tuo_tTv&r<p>!"TENRw]]n8*0wQry_sJ6Fr?y.XygRZDiDz^`.k;8MJQlbTpzDb:.aN(RT7cj$KfXzhCU4%F$j,9}m4}0t9J%.Vd3Yx12]tHVlr7]ayW1Dta:Ja]z%f3h~;Yb2p/C0.pc:Kbd&.Bju4f%FYFTB|/C$vQ?EX}_]FeH]z<>FL#|VW(+@av8{SF?W[oGKf*/wrS7;W,!PP!a;1N0/IIwky;F2:!U4uXle#DpXsPr#p/PRmQMnDCz]+d#@RdB@o!1N};T{3j4r=fC!a@Ki9=`jp`BMD8o}w:^c(j@V}rnt;H+L%YbGvD5;:lcTNdxb/q5UsOfSr;i#^Tf@G4*gDLUe8=of(MqCpE5TU=?7RO`Jt)DKZH<qo#vS=H(Ij577m?(eL&L&*svN2h[DNtteJp3&bBC?9f]kHI2}Vu*y:VP^iGS@}>ts8.)*6jo;nzqzpf/e`@q%Cl2.Noej[pmmdlB+0g)(pP]rE/2y*O6#vCRfmcDH"%RUTxUo!QlO;+X40RYz:0JlZmg,$N2P"e*FG6>&u1mZC1A@yF&;aX(iEvVa8S6a8?Z#~@/697{tC32cCZ5+"EG6g9>Jz@ELIXDa|`EYc,HTjqib=raj|S[g*dG`MKoFP;vkL$s(o|R7oxa8CIs3G^~G=70Z&x130i.N>2bECt_=?bo+Fj!gX("2yB>Dh[?au!?T"@H6ZM"1xyw{eYOwGbr:4h(.CCTj=HT0M~Cbk/xZOO&yj.9ifA[B]V+uE@=#l=bm{.7S2b=3.cS^[^l!xu[Doq,Ge~oHJ7{in_9WYa!/A51IO:MX70:gM77vrl8lZ2HI[b*W}x+O*_hcLWhi2|x@18Vr[M1$,qzDXAYe]@mH@1+#N$|+J<~uf5HH,NdSPJINJ5yR%uE8AJ0ul/PEWQOyulPn!G~S*:?hNB?wVt??}+{2N!:!>TTw5XNrh|([.NEi%JL.UOZF1Mqwaa`{IES&IIv_gm)5g/T1NuFQ55,cevpA9d@W=89ah;oMl$15%W6Ioqh+N<mW@H7^1nim(0^fDqZ2!c8n}#qt+E2A!RR_Ga;Q5Qe5YiSfe"g=wvb}bqQR/u;FKPB(}h/*lhk2a.llBMBlLXC.JCS5#`%Z`;+c,m4ry0DKgwms:+Ec58zPa5[$Ac>%e9e4F|A%JnPcT4oVi&mtPTABGL}[1I#y|Qk/|j;D21?4xxpzUt}o}*nu*@Tqt8_udX9:IzJ9__/%(=qhq)?K?Imv|}Kj.k]scxGFtmrU{o9)r"?p{rI;Giw5u;yg_:m^+69)++|fIN/lP*=KnTtk,voQ#_iU@z0_IO0GZ2dRUNUZF$,WJOVkuxs~nv8Iu9ebY_eE8LoM!*K>.Zp(ChS_7Jq<CYs[jda;G8n6[[KIqSIrj$p^x*u!?B2vIhUW3Sl6cKe+.1iam[)jK28b&9|RZxVBh~UJ2)z/G_9W6dI]H6Np;M(E6sRb"sE,bZU~%P%iGdD|AA~9?CB<G0YfToeD|8yjbF[4eIg{6jTx,N6p$#F,4KPN]ugb,Q<oP=M?Y|c?/pOpbb:t/M$69&%@K*^|^T"E{[>&<~+B1+V^z*&ovu_~*Z&f>OhWBubH^ts8c[58emfE0dDYxMg@oe&AO4T6H6.>@5dvgX[BBv^k0+PtS7je/D6+"a*0kl?fxbYf?s$d2oh{)4KAU;[IM$l){!)rHxRC;]O$EM{X%qJ(gL[tDcS*z}(og8vQ`pLL65<}~6PM.SZCUByHihORmxNUpr&n]C;+Bzu62RH7[zf3b};e3ZGZ1e$.0wvq`wbXz56l4Qk!t3xhvIfq2ouG4qQ^S|z1}y1$XIQTjNsiz&]OK$[M6(?CZkS1E!~RR]}Syk!Z^m9S.Y$7Lpb,SMf.DrhNu`{l*W1M.r"gDF##Q@K,&HZXv%C!,oiMj&g}[:;tryOq^+A!N6b&3`zq1u8pWumLztQ8ZU`UAQ]ER!jD#[;3a~FmtUB!(K4sv!ab#mP[u#aLQBz>RA.lzKKh"PYeB<*z(=Ay`f7IT3L",/#0=xa<2ZCBP_}mD!<4o.Lmu.a6"}[[Ey>uFR=?Q^9W`K6}[=wEcEy~BmY0U$RP39buT*~9Ta4Iwh9Y^:DhH#aOd.eDsBR]*I3tg+/[^M+6j<JUay;)O%HGt0"JjZ1(XxnbB(>NCfW#PU.}Zj/,`FIIJ~=^ooy@>xoWuO.Vik=ICa2pdOlANG8TH4{&F1g]HyiS&UrTa]zqI9]i#E_<h]0CV}&hP^EIH199.Jnj+]+=ww(HHsh~bnE<6>bA%T)PxW1dCfqZDu4<yvtD4@a@!SutV&EA+NcY)1z@1D1o7|Oo,eyxq[mTm|4_p;^5Myzv27q8nzB#BCV/{(h}JcBw6No$Ak`^?+v%YavBRth,6}E`y*E0wI4}.t+s>MExc/YlGO(::Q!"")s;C:~kWBmQ.OaOji9FKyn;VTVR[smHg5Jr10XIU#:0hQA?N>%95&!::{5vU$dJReWO%&kwDi/8]>g(KRNAb&3Ki^;hSrl{|@iWA[|>)bw.mI_8_)z/SKku0M)]q+*Je%<u!l8+vJbJ$l/ZTE#j%o_%`$jezTx,!"!J*7Sn8J^)k@>gz1QB+R_0mR7a;m~d!rU[T`xF1;8*el%$*>(KvAUN<4~E$B0cc6=I}wTukfS|Uo_gHwY&Iw=dY;RqB+Y?W[:3=>>P/B:>5_c7WyFp^>CN}_b4Mm|JEts1mgl]:7kr{Q56JaGU[F3Et{=FP:gZZquUt7~<]q.<zsH5kyjn(=18w=GWtil5DFggSNnC:C%e[/79(XqE|GkI?am[F)e7lh!t~MzRgh^;t0F<um7$[8WCcgCH&+gYhXM4!4V8Ew$B0WvbsJhW"BwZW:akO$T}zjLa&`C.WcEadByPG}pzFVgT7KNeOeNrV01a0X~?)I"w!Z&R9I*%y&XZr`<>}?RZ=i~jCK=/Xdx,@=7"4O(!~d~6`H?"Tv4Sg;>U(Zn*.:k#Y9),HFVRi[KanU)^%F1[V#v=}Y)yKn/9khnBI"K23d8"1ww<v>^l~O/F}4RqzZ*YtUB[97dpP{vWel^S``3t`~GBq(=<KF51Sptcn7<kkkGH,yOl[9qNkE;+]14jjGF%;7(kJ`~^NFK6Ryhw@lFr*m{~ICd@_v_r4n>G^8m%][^)[u!}k,%/=(vhlfToYHF&|%$qYJ(D~$sZ!]*)i]iK"UrEKRd_3dWZAgwE0BJ$GOeX|AGPoa]Sgs5)rtwrP1J(@meI=Y#yRygZz/:^~|Er/a)gIjx1~R7ao*k8t^J$!,/vxPD$&BUK+21j1%`kKQD_Vq~q1Df(thEWvx"C}?XTiS=xj+mCLqC3)HN/6|!}t%$N.Y5DOd]zaR?8GIf:v<]X4xxvNLeJ3]v&}kB58C%PcP|52Y;EiPOx#^+avpi^C/ldvJKJd%GS9nuE+T25dRCI.}YNyr`$]AiR(?FBWYf,#?UL/~J`u?$*jqY*|6#4JpA0=lPG?9v9"NViSon(6ww4=D7~]XVh.I{PqOn{17J1,Bz+^I*&;Z(9tO{S#g]hE5*L7T4)]M43V12S/PFX`9?Wui4+PV&+xRxB8JO?U*sd4JCvdH8mBIsxW0){Ap&+XNNpFw2Tk_NS;~f&>`"6#6MdwMtk)MCWQpFZ)]7(^,EB7+*~<Y>`EZ8a;cu&wp*WN5HJ<k1.qxVPOLxm0hcat9whbh35JB#jp<|#}OGyhp%}zdMWmKJa]VzeF:S/S&C!+_qwU4`+JpTx7N*r31k;8)z*"j`D%c|fk6:iRw=*ZgO=O($F3v@UI08Qex|8(Tcx8_#YVJg"Tur~bF0S*#p5oBJ*KTWYS}Wj()8D$((_Ut(Ry5YX#OP.;XkI1VXWTc$KY<v*%rJ|_=guH6K,K9!4wU{77R*U8rAS;l3=KY^{{kE>CL=8xLUi:|yc#4PS}^yZ.]QDp`gJ7YZMX]uY5e^?Z>E1&52_h4uU>7|A4_ipNg5IEKLSMaSo*lJVTz%43q]R">>_r]l|"SB{Sh+CxP>7C=fJj&gJizXGF?pu<m.{|&&uy^@1*=yvYNEM*V8K,(rlfZJupK%$mJE;F)bLooknhrq94[op60~E*x!V]X]>WOXA%z4}):8_*YosAZWB2i:l>H/sg5,,~6";$O$~0{W0mFm&!cy7%K)`U5{H]qE$lOKI>[}$82n87>"+8pg=i.,D_d%og>}VSMC:1dM5m{qR^mRyChO].mG2Nk8Spz[%`o$k&KR0%j>![kHiR[NwkHSQ|"]WDM!G~|)u:s_7}.33MKvpk^R?C;Ntvu^x>RbK0*F`r%Gw:UtZC5?%uchFmVqm.)=F&n;1%fRJsMguao>$fC[)3|3hN9<lr3X.&W*5m8gp^srInqI=(L+g(,"RK,h7l,D*09r%S,vv!J,"H<1Um1*t?l1oj0>m3{era4s,I!6<Ubu3sa[&"28hLISe<ALJD_YWs)M:4gT]zi^Kg+dYiTmoQM:=^|MQT?<5r;w(k@gt"FhK`50=p,f<O~$*WlFR@d9B0ii+T9:7}Xx7=(2=EE2:#d"|#sbH_+UOQ7f[R91lPYNiq@,8x,FWY%fD?9o4sHP]vB|ns|Dz[Dk3(.z~6d>@;<HYh!Q/N15P&`IT=Mw^24e051`^a4>93y~UOpqK0)g;nOF7Q[2Z;lPzx`x5kJMb>XY!%aX1RhF~9="~/T[!mz1+wW<*{5RyIT]_4[@4|g&6ZwnSVv:GPdA];HZ_^/Ld8#[vnvPJ2(O(:j[s$SXNe:Max[*vKCh.B`,>!?uQT2ph|}]7C0iV&+LDX3HUJ.:.B:baiB]zx+VJSp)Xr}<([h@R<^<0>H1>rMIg1$KEnO)8h2C8Y1&=oA3I,s@Gj5PgRi+O/4"u(fkE"rWBaP?%dEJ!"up_[)Oe0ROXnE]maHLi[8c3+DFk3#OGG<^hYq9<k|U{kuV=vh+/N&u^V`N>ACwz&7g(=anh9H@Vu_Y:`SxmaBZffZh1`jq*IHN{>vYNhE|[E]ha%4T+;Z(=O(bno3q?}u/9oGKzY&NJKK3<5#roUo|=z3V)jL>R7;ydp5{J(E_@azB0O(%yunE;D$[:Uh:)on0a"W(2GU;=XC$r@1".B6+PSi^<lT^N`^(m`/"HdEU?^5;P?2$24OTl4BFDg6`aK)lq<bYV#i_KJkz9"#"2#v#F4g:qTa[;_jQe;ZfSU}tG+EMa[tu_sSDq#vB7&w?f$&,mIR.x=ur8*iRMa3sJh#cJTLWQ8nNWH6DLg,fefQL[Y"|{G*i3%?$P7yXXiC6b>QW2UWibErKsPN{cuHb2Nx4`mIZg^|ziP)sqOn+:`W~sws/*QvmV~e&UOLnB|sy[nq:<Na&du2W(!9hk$4d3LSgq^}6d@,dM=PGBO~mk4PJzl_pCTlS:Sy:9}}y3oB,AdX[wy;KHmuoHi?nd{>Z|h:F=)pdbKP4h{*,YUXxsa>0{,cdO,c.W^$s`pV.`zWXCXmLHO)jjhGV]E7GkdYNt`NUxvu+iqL@e[&]_ozQ,sSGBB5~)Vl@b#Jm*&8fxAUP[0ahLQD8onE0f0=]gL$nBisHa;~]x#q%?`k5X3<FAM,ih~u<oIIk.Xx,lRL.*AE]x0IX4@V6bWi=({iiXSeTf}2@$v48)HuU0)?O@i(cCmKcjpx(KZAw(u,Mm8E*:/|@].!]!5({%Vn5jx}[L6VE+dP;y90OBXv%2CbyeDO~s%,wY{e}yq0o!E9gQue/%^`L;f!LRW>w9Zm(O9$~?a6TK{u2g4=!(op]j3r*tIk]UTtb&[k}mg"|k7ns:]$~"_n*ci:!do6%In=%Gcj9^be4vlDaB./rc>gNjWbSW$nE@)(l9X;b(?dg1cq}k;,o.s3Tc|Pm6!5u`J!Eqe;3XFj<c57#5lw}D,3JTG&cUkeP({qKjV;v@W~9RCz207?H@"$zq}GC1vh}Kv>DF_407]bspVJtvbp@,Ex5>0hN#(T+TN]]9?tpGpu%.Gmn%YT?#g`/h8XmF[v0@_%krYo&|;x]QDy<~DZ$x{e&tX);{ikIvxi9YBgQc`tFZ*.))ZEWk?BaMP3HL$>ZB.#@/H*$$4YhIvCMICT@WCd"pe`!P~K5L_CxDI?BBlNk7tLa}e_6`}LiX}iesXN&0q"BNZEu0A.[M2K%|dw+VO?)!|uzVGtqhlahr/V[_zd#/+L+W*RvkTFMBa0*ioz9nd^;&AUh?K*;,na/hN#|eD?RzA5m<WdRKx,nnwNix1z*~&W7!FHo+PQ`u0(78C[_*/u6@h24JG)4wm5*K1lliG/K~$t",wcC*<|hqJH?RZtQZ.vfQufkxe|82$bIK52az5W#PT{M=3n~yc0kEv%s+h*.(Z?d9x"3P{*fRrk$CAs666zx)frjv;xnWp}bD"$~B.sMD.9*|7`xEsi`]8^C:Mtrlnd;6"+eL.3FUX5V~Bu(3ehW?P^U0e%B[;5"WvT=L,zAqd[+056oQH<ym/kk$rM">;/ozU>h~X_agS]lS=(TI]])PF#0dRBRd95TPQf1cm$N)!_fRy^s)c*~)+HV`$3/dW)|lMDo?qUwt0YjwJo>@t@5xH_W9$=h8jl"<7T=eC_;[I6OiIlKEpW)pfGIGO}UR!G<K`*u9d:rY>w05s}(aP|<:`fR`j0)OwB{,+@e22R=PZEw]vbl,60q`tf!"B*;=@gpmGlk*z:oFSH]![fX<O#eFY8]4/p==~{ml6;jq"WRr,9ThLhw#XO$~Rd&SXe{Kf_jh|U2U35ZG>HDcmgJwmJ0p<N7#_9%K(72WP=X|wQ{{eN5^<Kh8J&46==RltWD%unkClt]U_Tu=~d4.OOclXQJ5y:h~*bmBs9U>GB3w2%?BPw:XZA$Db#;vduOR2fQ,a<qa%L[.J*7n4!ZnQ?q[Wa|^pw=K7?PGljCPjCowz")*J"$^pt;HiFBjn5X]_j"m{znZY@Fvcn3IP]G1#kF.pt{1~./jYMV/v,4$(;Zm.l}PR:)ZI].yW+J04="vbDdYR@A}K@X:a,M!2vj6z~YxDqe70;Qs}d*YRXBBp<v%^;hM9vf%;)?<!ebh9#";xrGG^k*Ek^f9BkiHkp=,,HY:h_Ngy+zpXa#>>Z>RwJ.3$A]})3jLkCmzB>z[@3g]}7uhx@e~W)[nP/zFGU1<Q!{ss`g^A#QeVYc/.]v!MIkd65^tV,xZaK@w?fnN[Pwo0S)eD6"</&2%;]`$Jn.gdlGs_q8^TFIH_LuaO4YS#F`p_=BTu3?U$q5=rm,,k^dLi]_u#ny/#:XhF28[T^rgF!&c_??N[)hMavi%z[|Jfz2OdWe!~8x+#l#04Rpw[<j6Q]8HI3F%JMyT7W9*j4c/>&qf`5o8LDjRP4;{8m:FwpA^&L^U$i}v3+Y5{Z:q2mB}B=nhD:Zei%b+sM#~sg(cIBV|MB(m9xC#lfy78#Pq1kFeOS+Lsr<[{_uyJ!68!F2Le{+MWq9gK({>yeV{|WIuBlN|dTvgH4tA1nk^ABgzdsm}TBy(rt;Kj3)]8]xl>Q5IN>pCP.X#FI%$v`Xk`uUrUf3|b<wcx$J(Vh@0gIivP@$rWj?]&6H4lzAk}l1>7#3_,Pb9OSyxa^^a4IQgYS(l.r]k:xKL[P;GyxN~UAlWTQs4Tp>;MqZv44iF=9qLv%sW9#3I"{g24;AE;ae3jgn3G&tR)JNGED#U?kBXb9%eK+qD,qCU)LHI|0WZ*{r&TDWn2fDQluI)m/c>G]=~]S_ihk!]`585}lxuo"{B/QX%MH=mt^^osoV]+Tb7;rd)1M~%IP^Y=>vo>c^|~Z{ZCk@7/)8z:`bvb2;%|oOmq{~BlX|K{O6wypMM$a)SrbUs+w98.klxaWmnD>/$[1;:/VY$dU964vwcwuO4Mp=1H#"cM%&q)tN@,I`=:d3SR:1+)G{rLqgF09opg"OemU+:~^mO<Yv^qYpOSGSht;Nc5orbCj=ybL+Zv@gLXGqtE{9&+,mT;|tG`8rqlZRp!R}ScyHOWZJ,JaR*jhZ`l,=_`Wa=wQj?CLG)vNe6)7~M0#b=lL$$dmfFb%/4#bN/J;zK[~L|+(ipfG(eYsi5y6(ErtKoAIz3>7&K*<JuT,&i59:0xT>5Tqri{.(4C&7$e&&HF|H?S6Z.n+6qt10o^$U;_t3%N|SH$/%J2M#]Re_S7MYz+hx%DbWSQ%AgwW9JtIN$D*Re`$wL4E[3G`n[m?2#+FatvR|_ge;Xns5s954i&40p]I>f3mc*_N,q&4Pvdwfnc1/Iv{#7HjG/|,,;r)l:YpVbC99Jkd.0h:r(bvi{d=[p6`v1CQwf;fJWfd0&^"IAs~:Cw.kvrwcs[=pO3]{YsY0P5_OV#qk;XxZ>0rR0CBSR{3W(:)cm#rEF>OHm!v"!EzIuzxu/69t=An=tjek%=&"y6+sgOV{Z]]E:78w]p1^Cu$shbcmes&i3|w3b/;QOlX:q4rC.U~]z515EL5DVk/8+kzB~.HIDxCO8m{Bdni9q?8}Ut~PG#:^T1=IM"aq!MY^n@58wpqp(mBdF(II6"2rp?VW;iXR])pcCqG6vkE0J4jtJ0hU[qssX6W$A"(:L`2w[gHSL94.>#p!TB</N.IiIf{Gw(}Ag%[Un47Zq&pGpA@jW{`v;/<lxI;^8m@GX,uaLBcA,kbl,_%t5sYNq;0X$:%s/W*OuopEMlvU<lXtX`e,n>S#S={hOUD]w[yPV:YbG+y;R~tG|_Ob[qD=m`*C`*$w&w6FkT98&2.&}aUzJVfumrUN?!7F;kbs_1.ivnl<c|$ttSM2;uK&QeUaq"tTf+DtP+?&PbHM6/{+w_pq<16nF*M7fZ*gK)V2TvRmIAb1C^V>2pm[Jij?Z.1WL?JjL[L9$%hW0O0lsRC6D4)WG0wHxQ3(RE.%N>k02=aI=/4I=CQ{Bl)j?u=Bw^#1j(1gL?OLwZsf6%3:60p=3cs+0(Iq`|0ckLM9d!8xPVn|LP8M(iSXM_NAS|(d;^_h;xvF#}Sv?m?q>]5vvqwJn=k:GrtklES!:}|93;ml[2q7z/M+KT9<gos7|bB["|c4][FwV,TVJ~%.#vv)SY)C1<`f3JSLJICP0A%LD*!cj>cDGa#gwj>bpS=R`ALq[<C$fLaDOy(m+Bvt?iFQe6F2arJFj>xA*j(EAHR"1~!!k14/:5u14%0mK^e:;qB2XhDmzH>2hv_r`JxR8:U>B:3n)%=0c*0`(sFF}`(Q)F"0h1Kl1%G:P8"f%E!Bo1m?N_S5x)/pvS2Ye/^jRmCgR?<m_|,xd(au{jY*HQQ|r5bpEJb|U[&&}kp+1e@pbexwz>c>2oTCdC6d&<D:BMr_/otoAvLG*Z%lq{W[][nA%*yl:[>d?ug)lRKgvub1)98*RlTaw/(C<eby%aNev|kevBV:r#(>$Q1baTe5{zd>Mlq"2;$^0s)J,@.+kpgzhZ?|{QV>Rt;)T*Q<FMhVN{uX!IuW?1H,`f45CeGp.D9d7YhdgmwwmKrbpjLWEZ%T55Jp*Q5N+A_3gm?_[(fELb)h`~#$X%$T:k9G4#!RCmV.1jQv2CTl22uIk&D~Zdpgt9N/{~1?yW[9OZ];j~v31ac6ce":*?k&dU"pkBk}&W2!1{#O9YnuAI&7&op>lh!Sz`c&3"p`R6=4Sx(Lq$3~cu^tQmbNA?W#!f.TE%FbDkE:/:leIsG`3a#T#i?m${gu6y?O>3LWRo]/_`fO?hUPt:>JQIclNwJR|b5j{Sxi&VdRT7w2)b1,CWypWizaRz0tt&_R%0_BMi?d~B~f2RwJd`>5$"V;Be/&d86{N>*>q:e5E>)4Cy~<Cl&SPJsUZ,B:c$R4"y_x4e87!>5H"n[&>3PSX0&.%JSx&ch@RWXM|S"BZ?uHZ+><TSD^u37e:Y3{a}J6Wi<T84wJ4,$rE"KA(BAt_ARO@,~9)xE2e}jwSS0nF;8kFU,JMc(V&DY>8;[#!?!eB?,=P!Y6[>TQRR3)SRM6I<hPV{FjL,gZNk>"2Iy[?%B:V,*6bV,*>|wBnp%8:]Mn=xmpdISt"$uzoi>t1!j*y~nlSt@CBBOlof`rXEf@xI1RdlW3[jG)mEtO67:K}i*g)!.qO=vaPMR~HSUIJ^|Wx`6Q7@MfZ}7t)45>cFGaqXNsji>}4p:_/&GkSpm]+zdJ&$#"SEdF?[VJSupS8:+`6Eh#[1jOXUvHDZ+7]$^.U=>CFWb{?DDq|xO*PwEGx5vE0#5.R)7]+A?ex}]*J!:=$tf1re`l+pX6:TzZuBhIm_MYvPRGJbB%STg~]r!bv"2??nVZgr4Jr{ug$sYcPXc|y7hq``]b:~Fc_~8i.iZ;>)A6_jc@oX){i|34Z+IA/&>fr(Uc4HEK;;JZa3WEi6,p1&Rr2^r4"~+{WKcLqbo2`E5Yb%p+85K76lLXZv55wAwt|Q82=dkE4rjc!3~Vq~1L00&1xMSD2)MX7UXs,{pO`ngn(Tx!rZHam|pk@o2gr^5LzwvcjA.k.=h3SU0y%,92bnfJkOHQfF/a__3L2QW])!%FWn[FF.I^@8mX3:)dVJ0:2jIZE=]YC[5sflqAnXkX5TE@!uvVQ1@xv5hCi>6"*We!5=a!w_.mpn|l}He~"s|773p6L+:{TG1/2>vVxKaCbbKS?Rc!/:t_WtB4=(M69Z}]=j`+:lkS&:i=6KeFTf1Qd#k,MMP8!%3i&E0Q7IKB_3!]lG[j_Zv7:u#o!q;<48j`,kW*[ET_FiNmc76dz0lU[)lM!#&22#ld1$|bILInmCalw2T.Jm/`[rhjQ05rtQQ,."{R.}7iS`lmZCGP,*:bt<@26wSYPF&Sk)?1%a&[9+MK}=}}"wFD/!g.B!YcD@767!*ueF`,cP{)LTFaN:Pp:2/b];k+ei:/"QU8Q<^J)A)AfB)ENEBFL#MP=cmx/CzP2]3B:Xq$$C_2t|,IlIOcy$X_/$H&VS1R:Fd&y@OKWK*d)^Y@Sj4hirwkU5EH88=1c%`e`GaV+h[WF5vvprk:T:ZZ@uY3>[<H>Qj)Ei:i<=G_]Rwd>k@K=t5wd=HksjKytnK47*x1*k+Im$RdnQ:P"JoXtpRxUEfpuZ9#hCX#g#/:7?ce]"Tn4tgKx!bT?(Kwc01^UOB{H(gGs]bYSE+8fMuPgk/yZ%/:u9J3^,Q~h.+x7he&>[e~:Jk:sOX9n1[P}TOyq5k*JSiovVJXC]caOC",Ynw8;~%30o3~N:89Y489,G/ZT0mmZ+j<7mg2gE4K&hE>U2"]r/~9(}kf+sr~b4wKV}fffh"`Ih3e5E/uwTMm&P@C!Oh3B,n2}v>;a4Kl:fcXO/b,@h}&*S^;Cs)F6A&z`T~*n0!%oHibx~LGWM,?Otxt#!xq&t3vf$E3WYd>8|Jx4W4cWh+r30a/*%r%nO,E)"292`3j/c^]]8yu}H88mdEvVpgyt/`GNGZ{$DEmb;NL!rLL*xE2FX;TniW*fk"(N)B3jN~U;7,E}+yyoFw{DjSHj:zWZ<5/k?qZ<&iY[vx}ZDaV<(p{&y&jc5h<x#VUE7h:=1t^DIY6zQ/?]}z_Idms`7U]=4P2n7l*3jr@tz(b),Q7%0|0k<w1D7]9}n3A3}nEn42_mX/%#12O){"7<>59O2G<v$_H!@0q43DYWO8/FKyQ76M:2E^4!|llb"Fe_8:Ya!WhE>HS{eNUL7LrYkaoQbotDls>C!j/1VCb2mn*%28|q9j>>DH%szG~@%[hK^Bv(5(%hgBIu6vZlNcv|Ky1PV@9c:a90s)lozdHfmy?MN8<x`hJ;~lig,;x(wj`LUN!)!lXcJ;!%,o^5A|^X41!pHfaZ;F>m/8{[!}|c_)EDYJ]@?nvrp1[Y}7Qfu@15&<;fY=hd/txdXT1B|_Jt,ntP3yqr([}tXH[TIb|%ngqC*P7Qo|g!<qkPi02D?TxQzQ(!he;BhIX]^~)9N4&NLkiBq*]jZG9G:cyg~Up/@tNb"Y8JE)Tob1#1169hY8HF_P]M@tXOGT>HEJ(Zv;Vz6g2kz0b[3xD(XKA0M,HB2i^`fYwUop<ceb[K2O|}}YQkbZ9mdk5_nzLlJOhG]>K"@~c3x"{8{@RR>kJo=38>|,HYA,@p"6u?5VtFGV&:j#XVs2#c2Z+?6nTH&t`en<T&?z,Lay0C!pj1A&aMzCn2[C"=wop|c]y[:+e<NSed]h<9EZ)]P*K68[A:vf7l!=P5H@@DCD4WXJEXx?"J7Q9@S6oOhV}]BSTiR44`j[UEjKATS45/TF2;5pz/EaoPBP>6gwaXx`#%`Clpsk}aV)y/6gf[V%AX?%e{3z(KC:Yj_$<l)(Eo`[N;vIsPJogxqPsn>a_~AN*+)m|Rpd%#GCz(D^dm`oCtc1Fzl4:Z|j:L{Y3xqtu)n$J?zrR&m8_`iRb8P1Ko4x9i`osp$f]Jd,4&HAjwI_&WJx|yJMsT"F4}(z`pwqT(*2CK$6EPGkduJxU{[u&kl3AEMZ&0zi+2I=*bC?Tx2rxY,cRiI,zV`9z~C`(e"V|qzC.`Ds]o_+xLw$$__{YaVf9vI_=PzfMHc(OY^gQ]}T$y$)4q(;,nrR[rD;=^sOVSu"&t,%$G{z>!w=gW%44FRV@ts/[n`[^3=X.uJR3$;@100.rv0C{U1BNh42gfE=<xCAtZPaIAK&,yNy2o.3*/ds7>Fi0yU#@UICp@_f&XwtqsQwn0Amx2AE/XelpHLx_TU:_r43J2J~57g|&}&9ZZz^vvXh~;A]29y,Q+J6Trpn0yI?6&1q~Rz[3[+Y"2mixMCB":Z$5!Sh/EY)_8S+AB{)iftG[*;,Af22]9(@Nj|v+gYHj~>`.`r$hVa.xylF2P"nSH]Gh3bHF.EEOh_mBE?;R%&tznvl.zU;}xGe(I0Hsh/a:~.Q}o+I<%upavw2B#WAK7f|cwZZ>xXQ)s*FE}n?D![tE`XG,:OE50#WR5PUNk4o~:mct:&obnshk:rJ,Su3k~%I#/N+gidzBj"f6ysSfa0,x$Hwe,?3/q5wT+@cXoYx___CaVt;!Ad&gwiEaoEK~fQ_%(k+<TKhLKK}N.5tz4NjOG+ysh?8vwO;uw~2Q2m0#{Z:dCJ?7.wfeq;)86dP,zL(>^A!%/d!zYy&B2Y2}h@v&]MK*EjU]_>]v%6>Zrkz~`5EdJ?M0:MV!@tsi~Sgw[IFSGPjT+Bt3D^@am4eB>P?4zbkGTh@%)>nQ25>K~u.gokXDt@82f;&g)7wbL2z&@x0%GqG06~4DvN4]^h!f13f{X9+mvTX^N;HqMKEf<@gf+n$ccs%G|}"H?L}0s&2v?%ERA|a(fNx06o}I($4*??tEgYVi?1~=q&_*S3wG?yvv7dXys]nEdvT_CWCEwio9G+hMh0.3=aoO:;E+EY2LfS3Z6rvTh:A7Gm;wk9beFdMD)qLJPJSDn!sIS(~2O^F~~=a3Q2]^vUVx=Q)9?Zq|m%[;B{D(=>rHy&5?mUKu2rqQx1Fb<?TTECfdP*W}!XyFu73klf&"xOcoN6gZFrD^w#>bLk!18&Xk$9e9!pfZuDkXx_FIF^O6[uO_o&<taOnxCCh"$"]sJx<Th#QTYUBG_sWQfx6e<VS^D7lj3aTi%:V}XUNv^8R)]1XdZyRx"id@3C!ReF8<Cx]vNyOT@hEykJ2a]A]3wV!)N+m=vHnvR(LYs#u5wY1{gfEAvbM.vZy[nfUsF=_I5|(F}Ww`SPhU5=l|7D`<kZHf_nBB!ltVBS^q|N`HCc#0y=M)#y"`[Qwk]y^]k9><6s^Q9FjE0.YJ^1?@X~Dv{>Xm#_7B]2i7Xq)d9[v3=4k=;rUd82A+{Y6+7%>ffOv:P`oG^.&c+sPIwNaq0k4T:=(}mGRYE7~cG&GNn+<3^Z}7KjyJwO=ptOM&ksJ6HbI|;h:Fyy036f7>D6Y)M};&u6jcH%.ZN2K=KeTN`x_0GbeGiIxsvC{6j~@f~}AZ.y6Ren;vQuu@1wC=fpCVxJ)VU8TOk|iKu[,*%j>P=#*d4Jv84H_vc/ey9@/pexQ@//e$^Ud:;$^O?eAtM>n].WZM{!)fg/xGtjK^2hBSitP3AWEpYU,Nlt/d*$E`teSF{^~t+0f;tC!%OfbtH$<|2%I]NZN6u&u.@>!@bktKD@j`"R;#C6Y}[jJGf?yK*MVST1[IjU?XVs)6?61G`,|c|p~}0^8(!j+%Nsc0!Ms|4Zq$}|ELqFma^#"DH[Y_<{tbok;kTYPU?9NM#8n@ppd"h8XB#62]J{{in]&%vzas?u6Ygsbtw!HR24oQ,/t=,0y:G`1<nDI{2_ZSzmeb]PZJs2jrOE9XE[jEH`l}=64VFlb8{&&sLSwHvJ|NUY+*}r|C21;t)YM}ixDE&s~&3*)Xbe!4(#Ra@/=QOVU76c{V5pUA_<JUg3SVVoVS/ZAb/za3{(~a$QYKkEH{>=ZcTezn&$RZe@tRESq/.wr}2*zR^AiIv`<7y7@c_3vTd!{Es]Nh6mJRJ?uO|2<lPC:d!BE,xY}T[}FAfRj+r2V&T!o~XHfSjuWopnX:+f=kPiD5W8CM_G^`7H2he"gn`DyQP7ZrR:C(F;6UnU2x)}Blq`S:Jx)QpNHV?g&HGj6jJ^<z|ORv66Gt0>N2W/z7}t:A<hzAVmh/87w6r"+/BpxRA3":OAi3BToV~Q,__hY5e9y[4,%@ZNthb^DN.,xAWfil.G)OnF}izutI/~YS<&70;<0T<Cxq:t@#P?DZN&C,hHTak_BQ=2|"5UQI)rN:#IZ&;GKs6*ve`*Xz+.be`)%]+5JA%a?Yng//gl~H*i]qQ[F:Z~EA`jVTB@o,mTrBWzH~kD~IPG*&>L`j~]Q<Q5>Yv?r@5%m(c:N$QwO0!dpW_C#d2sKpzX?C`1]NhYsI%TP1N6/lC`=,]bNt!YW_S:Pbi?4yNSp1y,?rA6D0@?PtiHcy"l{9ort3Tk}JA4C}O@Cz7Zk}v,3BU,KI|p.Jb#["|!r=NBdqi(JrTJ(WOPKzcF^$vC]IDo$pfupj:*=4OOJ[oYZhJyy{>5L}GoLV|95b~*u`ce5&4cN(la7n7zuK%Dmi=gqKh;QyHi{DZ,#;m9UH[7W.g$*rik~(;?Ikru?:G:l&e:R~@N0xdYWaH?!B3?_CRP@(J05SF%+UUctR6J}4Li9fhj*>2|VQ)ySU,yq;d(!pV@<g9#_EVPJ/#UG`eRJ4oyiZVp1tv(4=M"tsicz,HrkU5u^1yS$b4Y(l>[PUU^aN*;PXa.?p+8U~qqFYYsCU:i|?8U~oINdQ[)s%>|=9k5`tw[Yuqs?UCUp4G%HDR6_l3AC32t%~zY9r=kC"K*3[E~G+f7c&Js!Cqhy$z"C)BV8X:3lkCd7!cxyFl)T&m)WlO0)MRvAbh_Uih||Gkz=V/x=hYY7(wr+0FbwAmE]J8@kfK9;*:nZwj3QvPBNW&FHxYl#<?e&N9Y"vp6]nC;5AqZ}ze=Jqm}5V,11ZYo@d;gFP#xw(l**TEG0DnSxh)Xk;;1Ed_Cr6z5R2%g9j9KD/_mOWh+[_L;WDqF>!v2ocw3o7lE=F~U_o?XbT*=NA}hmeYo];EUCTJoo#;!{%}p"PE~v=am@RyXkO,[0$vb&dIt7nKr|;4;9{|_nZ/bGd#as_Bw*d<egb7=5x1~<#3G<KHC~ig|ugk~|nT>1#Rc"3HZya"c=cgjHiwSnjS#`INCMxn^vrEjvAl1%KvGZ$gF"m26xY,q]<[WQW7(Z+{RV~|eZ)E/}*JNiU]~^Ecfi`.aneDULm~@UAyARMw9WE:D7Se[d<2zVOsxSu&UjG!^E%Z>8Cl#cVUub).3b,W&}TmA*)Fkhopce=y+45SruoN_2s}{RL;z82OEgoHrNYY]Ct&F&f(6M`$!=BNIuuKxNWU2I~W#13s|k>]dKTh?64uU7}2TuEqMVkLr`DLL>ec5BOqpJL)P?Y#MX0W`cG:"F%4X2iJMu/8Cghpc#)Honjq$[AvAO~6%$;U;HxoCQ2|>FqTD!g$PIIzoQ$Nc00u@5q8Xh6?!q{TZtc1n+LNj65d"F*F1Q}BPSs8;wIq]cQQI<>]UCNPVa@^+YP)K"P<H%nG,l[2SZy;$b#Ny$>MfEtO|1o?pOmtzE`vg%*G5]+$x+U1beVCvR|fWj1t{_o8Fj)%@x]6@!tnf|:aorx]#V$._KjS~ce(hV|=X!,Tg:8U~C=.=a9hCl(>u3X)xW_d]kL9WO%owB.,5w>Ff[C=vGzt>gh8A~YwJ)S`9x&j+@Ok,}A"#,WGV>q"O=t%&z=sirBx:FYiRV/RNZ+J#y9Z7C{g%^51Y*WanF`yC6ULj?3XO!4?K]EEGII+=^J/auNdY;:.f[ik>|AI}X"(&ZwnzIA%a]U3;{cZf%Ea|STca3oP+D/).&rh;WU}|^}>HlXHTBibv^XH"X=1k}=w$E#i>C*zFeP_6p;$TI5kkitC`B0_0NM~QLY~Ip+,l>_}hWzuhRB6CAykHZVAQ|F)g@fc[ch*L9ISHOU[,W5G0od])F]zd%W$ivJ0g~zfD%ap/H`*bl}NThe!Bs.fCsJ_;;iMmpwE8q:_!(;vh@6I~IYmc2[XTdUS`I+:lK>R.BKAaOqa}e^Eg#:!yZaCjL{7jGVI#Ir~gD]@IZ]f$#=JNP<)JE$fXsH>IX4k"sN#jOp<jBhoo!=!L9L+$,$aJ;{};:;4%~w#g.S7_^C[XyI]t1tUt^Dyc/4VVj(wos+S1H7P<#~e)a6|j=(7s)xgAgi+tgu8|LFB)Ft4#(~guh0Zhpz%B1W{^r3;y1@/;lzFnFn`$Bk;tF>4bd9eiN<@7o~~F(`,pUPo!2q(M@{V2>afXN}anq:&qe_J+"ge,N#NelbtCQz}l+)O4sMOS|z#l7]b8:CT{RAt^)HB=lGb!@k/:suvqalN3*"J,qs|$(3!DpmRX(8Y#1&<9VTDZI0b?nMfF]3AnaaS0Pl2~d6J1(|;>Kg2ApPJ&JvU[5kDg):mYnzcK]?!}[!sTHN&O6Lkqu_&GEE>Qvz,7{=L>)$pk>{?R>|gp#ErfP1bj8C*HkkZa:1%@!/?Hc1J2{k|lny(`6LKr5+*w=:iCv$}j3j^+ei)C>zi69F4oixNZNw^^wIe;b4eDKjVj$IZ9})BJ2516[hn,&#kV`7*q([w2V6F(k5+meWuA0q=k5y7D#FxmsIf"8/az>6uAWTf3{5{C:*u|:)"{XI}13BCCzlYh>._1lU8ITz(95G>XD4,!(}=x2}@|=~Sb++Y`G13qXjVgRDPLRFIc}y!LXSk4JNi%N?{eN}4KLI5R!$aND>?3z}y>W?Y}[;|@+uB86yhH;eXmIh<|$x,qj$)4RfY<~2>*popQ`9n;?K#.xp_^hm^JoET5SGy_YG}KgLHTUb7)/Q]D00oX0ij4X:f,l)ZAI&[8z|<S*cutS(hyDcb+vF,x;I<2uom4,n*GNb%L@G3xo&{fv?Y&IX1m1Ns8rO8!rjRLHrJOdJHw^(OZnXy_)O1dl0=#kSu9:*3%F#S12.SbHHt{{(.XT327k"j@`0?17er{b[6#4(N)dfhL;9=}!1SXE(>$(E?(b(pKR|~+4rn@!vyDMg4T:(Ef&?Xqihf<_&a+fakh5I:dpN+=(jt"m<G*!S_/MYQi#5^c;;2QE17jZXEwtnoLy:F@n[]ao.?pED;Xu8YU+?T*omX,mgvns%Czk@Steghq*6IHZW_(P_H*$=7tKTdXZUYbMF+![;o%wNsc?RCjTlGN0cx,j0I}x=`O**nV}>M;&22Cs+G?;gp7W:9w2{D)iikIe/YZYR`njZ@sR&}JRCo[Q!Y%rnj4HD/*z~}3<Gsc,ehvJYvfJ8%F1ge|<EjP)W=LV%w=kx]*z7;BNxfxz~t2$:oZKL4;5<Y(EP&t:s?5LiFIq_K0;5Sh&1[1R[H[gX)&!_}6W/q3xD&uLO{@wCuL)^q$J|DYrua;T%N|2kE~{?Eru:H@iqWcsS+2]WbF!=+hZ4#LWx!t<(49nY4J1N#[J;d<cwBL4278^v)vchH8:p9[FS$|HK}[leTNudkbsB~_pivHbW%]C(9pPZ%GPbZ9.XNR8u>I8M_6<)4xGVxBKyU+wYRstF%oZu:/6E:^$XzXK9ne*"qJq"~+HxVzqF?PufV=AoX@tNZONwXy/[5bXcd[#<0;/#k&i%plqZ?:A|#u?(1J7:1"iNI?zt=~K3(ci!h~WSDdzX8I>+BzvfRv/}3FVqJ5|1Eh:vHpc.0!`^fr(YOCJb3WGU]g:U*L5Sp55tvCs0eDweKP+tk0d21wMb}I_*.%O;V5l$~JCvz7&Z{uGH59PK<+;^/F*h{O"0W;9qnJhUl/(D083Xm;_|>Ezv#*$IQBmKwGW.:&v[h6.C&yT~$djHx|T_S1mx=bb|`f|;C<+^2>dwNvcU}zY9=~wgJ(lwn~P$U:BypG<7TNuYC*f+bSgN.[Lt)I,l?KF9#KM)@Ly6f*f{,AM,Zq6c_iu]Ud%K5g.5EX{f2GGNJ!XVQS7%|_#xs_O*<vG@>:fW3N0H^yBa)}15v01iTk}R.p0keMu7qh2{S9j|%Ht1{A@/}btyEV|*o;t(yfd,pDugmIw%u14p>9Zz[tA#Ou3QN8t|U$X}u>Mu?G)J6?_7H"RQ,q08oj||`y(@v[doV6ZX@`)#BnxOM%`<}(Q#FBE+JH?j36!.TdM?&b0G$R@z1FPL6h8!y=*srG~2$G?csKFl865=Ek`ZG#ci%q"U.n*g3C0#[R;"Wo(G*Ko)SFgkOd2Fl{K@Rm~{F"Q>oS[EqxKuMA*$iASv,is3/;LF2gfx7qg2Q=QcC)qh}fr_f0.Gq+Rb.tk)A}*mu}y4m6>D:4gSR@(+<:Nb`~8l$Si+!e147hk6#(l>$l_Qi?=&5:fyK{P<~AuMQ5yi.uYK@mh1<=5i:UUA:}ELKX!K}oJ@cOX@l#RX.0q}_e|1QfLa;~A4,><#sw!;1OIAH&1Gw_Lb8P>_fW{9^:1lRj6[&+L>V8rKemUAWM33TdnGy%,cR#&{fi!9v?F..c:.`9iLZ|WLm|voO7B$EJ]K$whu3r0ZD|jcW!4:|ar[v;,N0^^O~^W0b{"?VnXjS&tUXPkcc`B]s?G6CRyyJ/4WRuC&+)H>xT%}[f,qjP%tPq8lLee]zvYhG2M[@;n5l+?vOMESGs4ZrcwEIe_tH!`rW33of|IM4p62"c&3Kn2[b7#WUD`8)&>MIs>rvp~$E|vO0}Yf?NuRfK5nuzQx4l9i)S!VM_GrT8]!?CZv}ugOW[Pa@^&&Z!SC>vwqKgC0<tT9asF!dk.q23=qsHJ["PK1([TM}nuMVp0~iii!P:&AiFaAV1P&#DcAZgOqi@1#&3U7R0A#*x}`TZzGHkTlux$*_qEbylIN)b>sTY0nPh3vdQ8n7p7&uZiq#6m+IBsC=JOne~%_.}9g"Q$Mds/&{Fp9YmmeL((ac0#%D;[0V:)X]#<ruT_F_|k*xp+Qvb_d,FgK2v%e%C*($(w>q^+N"?rW*~6m4bcy`V9c|3O=|#qzO{>=wSpIQ:z3X|GmK?ey[8{aGhQGoU#!HYvY`~u@H$XHoQv32PX3]M<6F2!"C:vGt)^2hyn(e!ERDoZ;bvcXio&gwG?qZ=/{kf:Xb[iLHxyt6~>%&}67VXxkQKkeTh($.:]zK2w^5/s{%@7%!MQ^Ia0nnv*Po(3|,,cx>Nz)#n^+Oz^G;KqnZw=FG@8`g.")w"X+fv>Zs)c^,X>H;ur0EdpOD$IQ8>2@l!r#l{}mQK0Dnr;BMauN9Iy%5#]Z[Hnw!lYFLIY6Zt9%cfZ]?.P8P!!h7WBiUFuUQBdFeM,(_HsnV|miuv@g+=i^=Mq>ZV>TSz9jTfeg+T+"Zj~7~FA,{xfW`JBB=7YCi*+`r(PH}>U7`|Gv0ezrnaV7Zwqa*$1M_|Ya0&E_8U4=Cg5HPId!fgNuXd[`5x#mV,iS,<HJX]RSyT=R(u2{/N_B|b5tNHN<X_jK^Ft>bGMq{DMG*n1x4]TD+T=NFaglx>N5?;rUg!QNn5Wp|HlCxNtqC;Jnz/CMz_RhCL*JkwZ=I`Fd_$r9cp&+;n&kjU*{.[K/?O*]3Znx/nWln?|(fYXI03jejc(}t1KR4%7o3Yq)m`&c`*Qc`ev]9czb@y|M2rBGC.wC%kq0_qjWhXE<5:8T$XnA9wbtQ:/6rAUF<MXAa<W=a8P4JJ@:L6I9v:g>sK0+mbaKe|ihdft79sc90N5=r67+;/5:JMW?=[XM3+0fMBd{DZ;wz)Yez0_17$<N^9PX5uFLh]dhS3=1t02c]@U+pYJH/*A<i,v!~m0emn,M[tnn}ylqG5rOw@uo2_WBBNyVi6h$p:T_.3|[U$j4>]7|3%sIsEWO;ee4G>(!9H#bHhUM@bZ&@=uRw2AT!|~:^1xEd*KV/hf<itmoxeUvBzGq/nJqB=8Tv2n=uO~q>oz=XqNEiEC`{QV:F_>DvIEvV_p18TurJ>>s^8D<%MV:)abH|_~jtiIlgMg<i:O2.sD1ou7S.;$*Z4DpC2Fa.*:$G4PkhIj%y)x*,ASAH|TIxB%/c(LK))R=puR$qTT([osTlvi%uxPX]kkx9Kd3[>p;xrGDg9hO<,lPH;0}>2ewj+g~%ZxF.{uR0f=j=r.,kRJa2ifA@1XKs=rWC3j|Mb6?TNuB?aUCL+yB9Y=XzLEm3rZ_+U*BX(mgpw..=&;B+^Nbz~$Z4@Onj`s9]H=iN}r@"ors?2Nj9C7OmnW|NPDmlZlqJvLr#+upj)W>sMf`Um,rhOo%X`:9ne39`pVHtH,nj|F:Mho3>8_L{2>QRghStX77_XLjj`B"_$rfUzR^[p9zGv,dx!qV4;]b6Ua^v8N/dGhIOQxc5,8UTw<@W<0UQ.ZFYSWdm[.|*2f;$_&Ly3>I!oF1C@|Bz+nLTv03xMFzde!rzdD3G*NLJlZ|CdB=CIr_%sHq^/OwSfQa)j?chZ/t;54`=`ufTZ`+/vBJZaLXK9*64s`ME*VAa<Ekv%0"<C[p%n7Xga>9IeaREZk9hh&12C~U%bIKY*R2/dzJQ;SL3{)LQ1c/$Jg0X!*ql7dm~<lNYf7J%"F*ogudHA+gibrNuR@zb]%6KIUBk_&}|HKqKFG+#R$XQDH3LS^rJVKEPj+^UOJ%9c}=*Tnag2iTLXlb8>SNv%1@wwc++z`W6wuwR5jdsHS?V?><pPqu*PCa]?J^D~yQOPzXS[%>h;S7ZPXE:ox$lW`w/bJl($VE7;g8il.1k$E9c4Oe]C=1~K+JR"yphFaR<*9y*O68@hyn+[ch,)ZM/|O1J"l[|r%LV)"e;yUhG9S/3a1jIjWIX6^#t%}|`)`Ol!*;t&a~wc%$7Gl!gn/oPem*+>oy3q/RTc]3FIwPms!WOl+T@VG"T{l>k#s@I"du(,gc"3[UiyCm|K*=+P96f|v`+[Ff}(+2[ApHn${uiL*ospy;y_>>Z+x_=@9<L1[hy_Z_{5w@Jtxu"ta<Bb0)WUE"l#Z=!p9zi?>Qg|/qXz$).VQmgEVx)7kM3+}UC7!2hzCqVfq72ni[w[=OB8vn3!pu,WJKHgHyG|+zr)z.jbTD:N~=%`zdh6f2%M6:Xc1Gr(#?4z0{|3V~Taa<Nv@?T!)1&NDEImxEuMad*wL&*DIy%y;+X2p|9#GZAHHf/3Ji5n||zVK4};b#n?<lp*XC10d[THr#zezut=lZ.=moKdnkXw{E+hQiTB1Fk@vjn4!1x)Fx}(LBnO(3_?,FC?a=2UPUx2CTzT#;Q%L;Skph,&Nx^pjntG48KAdga~{^7@224/$o2(]fT3@,yI]]%RVqx?RMWn=Z#ed2n5$ywm$YLr,*"y[.>fVM@NA~nGA9+)y!&_Y]6AuUE!nZFrcC4ZMA"(GD2lE&Ed5bTa#t&]+*@(7EcIK[HrEv(B.`d?l,+hF3|>w/[YGk8FCi/GLJ[{{ITNR!O?ITPk_5f;tr042Qm(dPktY_pP1DMf}3;,Q3e?MUy?g[Cur9KRsPCNF]$kEt1q*(K"D"c@r<k{5mMbaz2+qO32?ZMZx7qf/et3UcnPRfmn*ZUduMDGKfNNMhM3i{amT(I+N%5aRVs:QH4<>*=R?W$7@C@@y#w0=Z2m04?xX%lenR}6gKx7DrI1HicR1Y9p?e8&kmK@YR|}[U|%wcK6.#?bV"%hwom^nx(lMzPQox!7|c*Y%{xWkhsJDQhiIGnwN9tC/F;VnziJ!77.uD)e!ReCY#T^tzjBW$]b<?Pkg#__7A6xg_#16@IR~4Ks#LrKNLLVU:U/u8*!RVtt26o1@UH*ocdVu@:f904hR<2Y)`zj!971^$})8r,RODm{9c`We<ZCEPT=9![jZ^,(TxJ3k.yXqH@%xh8@OpJ8k*#].2N#fX!)RS1bDk^UC7fm3f<VJ1iA02a/Q<*P0Qc2,CM4vT#}VXr*?J:%+i8)dT.?[6a$W$0@?+}n)"ykfLe@K%/*rNZZaDq4.L|]SYzZePk,?UlA|0e1B%>.oZLu(~LvBFGT7`(ykplyl~`#w>4j$?U;f6Tc/Ie/>nUpF={3a_pccM_f)||lv_6h[~Wa7*db5{+^BQ(`,_I0!ZoPzz1dRG]b84exONVdRRGLo1NK]1`rf~5eQ_4B"#isJ4Z{C:H3P"8&?3DVOzWW}|qhCsiSH#4yi~qS7$++=,/Zx=B{qye,;6}+BMoX8nQ}jf^4.bhMp6d*f7LY2m;]q{lr;47hg!4`.Am;trP(eqnw;PZ4yVYy*kWFyRjoI7)T%YJz$O]wg?Z&8=/ed[f=wmmB(A|OPE@}W207Qw:LlttU.bN&9"_]|s9h!PBy^&+3tbQ+eOHvw+d:j,HLI6K,P9Eq0Jazsu&/T=)m|,KI&UB+3O3!Pn2z|[Hcp`M?P>"$@sVKHd7vMY:Q%"*Q|>Hox<D"%!KQe.5!hNW$e,0au|SoJIiQe719uSMK7T57zQF#dwc`DUIrZ~pRe<QF)&Or*~3l,2[u"LRAyOkd8X+9jc3z/h*U>Y4XYwX9ASq=uE=<g8+g.W).?dfLb3H]M2Owd{ibdr&EuKg_4wiM1Rk7d<K#qresS7O,:oamMjPQ%$qUnX{DD}Sw{XFl`cyW;s^.?p.;CJ2w[Y2;y"EPqT(k.1tWcI#:,^nG)+yGOY_nqnvN[k$jQ*N,ISY2|Ct18>IQ$}E&^V%C.HI(lhjf?`1KugAf^kwz:@s9b~dQ$YH%@+?.whO)J,/itfQEMDJ>4VHAY<u&c:(MOfRgH8Io[^^ZCPzb1xGoLFVd.iW$n2uvL_Uu`J~q*;R2mPi[I_1]NYC<,>2Kel~5N|A#St>,h&:esIHB#F?#6UI_y,t^82%?og^i|*J{7Sf_&V[^vwF8|stErFF|x1:&6HW:5GED,,PiC_DhFDQff6+b~3UkmG#1HEe.+2woBm(yhzPR7ioSi(9`ao@S0G6r0c$vO,Oc^4R)[w*X;+C}rIW<m#$[7w)ha*mg>m@!v=/IV7~:iO*X`,:EZdgyD;3sB|d0L!oG7Wzu{Bc?K}dk=C@knlS&|HZA)yHM*;mOi~(^PpF{D=z=a=hy3uyYS4a%&H!T8TUEi^F{9N@@R{dZQZK,BygktmFFd*7l49C/hE;aeXJPnB1<Vbyp+zjpq_N.@sskB;0Tw~9x|qn&n>lmynL#u}h@}`^&~(@xA(22.}HDzI1KX:Nhq)gL~.MOqB?^o8G[GgUssswmK&z]."4L!&&XSI`26M@&wHS6chyz`%Q}Hf`:]VrpAdzuJ}n7v:^+s.%]^T%<N#!*+!H=My1[Oi|B@0CGk2[3BKzZ~ne30FuDIIoz+EA&E5K%UsX4>t1p:u8`%w:WPjJF(0{Wg+*QB.a!+:=[+I4[4jp_uD*g/zpWgOk{Ugqp7G;RRW?u_}ND4DZ|@Uvp]H4^|F)lJ|[:c:Npvf4?P2ZdyKt=0&B9#<@sK/WYvKO]E~.K:o<?4.X,s8qk^B,4C%([GG6`]&3Qt.Ln|e=Ws=5i7To.s3RE[3PSnf6sQt/vM}Q<,ip_~POfp,%6Ani#5ZbR|,/:D@4(KqD1;{,GXH4&aI&6C?1tLH}2O+g$FV{lt`#nm@EQW5POoL>09mYJy=`Ug.*#tqdLUMLKDlARCV5dwjjY$CTY5W81R^A,tHUlt),<xZo_Q5qn#$W_a(&h<g`"NwgT"D~lru_qL(*cCm]k)1u@Uk]aNvY/NT"5(Kt.q&8IgLBLx}#|%c*)DFnN1"yY<k8#b7!#]VfQnPhX8|9T2`c:_BYZUE&2mPQd~IU6(lmudH@^lNV$OG[,J*G;L$TJ89:&Ik=/kRUa&8x:L~Pp.(8sb2%8BfErc2et.bFh}Z>D*)0DkrGyToPKv"<>$m0>^Dyvm02*hk^WMPL9ee3<ooanBIem[UmBRgV63Nn#)~<LfK3#EUFg`^3*.v(BGGDG2l3Z@+h1WANsEIp:ty;u|YR4qIZnpB!_#">(|d}JM=e/0tY~HUD?i"Z?N!e`/{i@w<yA_";.L~wY*Mg>nL3WLdY&`^~d`.7&{m;G4%91HUI!4mbr&dF*|dt.U~(.}?%2b&,OxvZ$oP7zP^rRXP`JM:Vyy}e&>*@!T/Ah1qdyy*x%Y!fBd.%M;V?n;K]H(awUe.$Q8gt,V+]}xFwA4Iw"Y1+*$p:qng4tsq!dkj]4}@g$eX.0=(yDUs!&0g|78=/b#+Q?e}o<kO<L:wxKlD`qb0[+6Jn7/n^S%do)y|Mz"TY_9g}SR964uf1o1_O"e39(t=c|~:iBs#F5z4kscWMnHq@=buiB$omXlVKjo~kBwSaw^[~2kh>$j7y>XQu8TMw)5eUTFzu|eLfP)JyALs{Jrs[+,mC_9mIKa%u^k1YuG31@sy4Y>UNWF})?`Ej+*1k)T1m`Z?w"t|{+.a7=NeK=s1HvdfH$A.r/nr?2KbhZ5JvGu;tR4C>3"D%H%>"Nl!+3y[$=B{p+#j#?QWKgkFSF,C)ux:T`=`H`#XshuqWfpDr9TW.RH)C%zL#.iG]8se/MIGipL{Q*Ye?|Dol.CaL(<(QVJuK_qe4&CWQ=];H7PLk;nEqqc[uB)#`O3Yv8YWq(4,6:i#IxTnaboZLrVG9.*+,@RWjcozH<,bZS[NH)s>S?=j|MPnvAG19Q[LO!HR%czWqm$s)f9JPm:Cw:Z;fufjd8Vn4*Bxr:6+6SJBcP{Xwy!xT<>v3OYEF>s0:CKI@UCAyv{9@)waixKq.G~}6tP=_N7a05(8m#[SBo]8@6{!XKCZIR6%1L:Cc_kRiU*VaIuNqG{o<XcghW`85bb4e0ey3eMquVR4(%W+Ds=#~j@d&"6_==ZjJ]Ly@yu]N$ga;<Y%A8.GZX@!I!6%oq!ne)gP9(?vL|ySTRyq_QFCD/,TfC}n~<1?5~>Bwqo4r,zp^f$4cf*0f)@2YA$/,x=4GPsK<#uSl<um&ZJRV!ACLYe5eXviU9ep_hL)9q7dV7&F*cAPsV8]g?uXX>Inah@L|aX=dt6yh]}L{_.qeR$O@ydyutX9wMNbb{4Cw^a6:#(1vG>Hq)(,z>E,QlYM*[(s*E%y>@S%Fjs4Y=J8Fi+*@9SL9?[*p46=0A_q~`wBI:>~ZRhn}(TzWz1m&Gf$4eB5on$xtkR,$qtSyt|Dc?May&+zi"[5)7(2qniDO1ikW!7>vHbm~LD=1N$Yr,pnr9za+J[@$Jt/eU%<Tv^jGl]&Wohh42uFQ%C=29$d!Q^`5DOW*6S$y3M{IY_*f_E&XX4dOcMjv}oogNNrXWX!qnb6s=>8G{.up(;VOc*Ja*mb[HynoCT&tAj"!6]3xGI]StcxBDlMZUk<>V,xZf98l1$d~X3//}M&e6Fq@8"Dlg]*KvwO_Y4qhQ4G[qla2(_|$TLvsf%ac;{s*7cqG$a%j]Of]yGxbF9"Syts6i[Wu[P[z;odnE6~b"?,fg<+d&DXfif/[<UOFe62%DJ{/VP#d(Wdfvm69UU8,U<vghjyi+IIejtmobVrP2#{Y#*or`N!3NUSzS[ffvii4Wm_,.+@^ASp{[L+g,y+^T*^HDtkj0Vn1QHl?g{2Z]hJrIyD^1)Dq5[#1`GGn@hh_[c+~ru1{pa.<T..gnf59X=i,@z=5L>;X~G:~rIpQaNoCy%Z|#5W?ry3FC_Y#Cb/dN{yMY[Ouopik|h5?"k[r|qNz#5SuZ`GWzVim>"jb^4$Q(h,vDW}zk9!^](70Ep>yDrQ!?Lkj*~V;,sus@xeJB=*RNYqU3MK%ig)<|hHr;Be>B?1665FxJ<4yst4r]}zN1:0V(Br/tjk&,6Q43}T]9ydXLx$jIa+RLW!V3Rm&t%gc$CjYW:ER|k4G3Qoi{+6f#bYc3+e9uXgQq,&~Coz`FLc};O2utGFI{Rq1`{0_HsqP^hKP:z.l4%@T7*?l+H@l0DUxqf?r=i0G&#HJ?&8FU<&{U])J.UH0!2m^IioIcUjGJaVfY,w2XscG)gq5TiE5B`X|x*P<:G+Fi+GYyL>eX7kK>?ZfdNgR6t/edv#IcY{HjJ>!hHG^fL.?<<4ehoSPf<X7|W]mO>AI4AOqp51[t2)O!<PL_RVN/)ETr6;>G?qM_d]$tiRxc#]VzGnBCci)/MJ%&ew]Rs<@S?EuJQAVHu{TuLjtvW&h/p7g^m:W7G;tsGVsnMb[]/>J!IP.=^7g"hoL:ALcl5L*0q"x1sbuU}Y/yVzTL:[$KbXxH}}x{`2RulcjMlMyc+Z8rsq[4I=Oo$i:+M2$!G!VAzB1tkY+N?KT%4NfjkW&;vA;XE51k?{v&Dg&A)xBN=y[NIfl^IXTmv|G:C"~=YlGHx653+mXwl?DZiE><R1M{XA%vUj33c<ki>N[d%s"mzQ&74tt9dE,Z_Ol8f*zG*r,olnya?<>`}Yo416dbt*tmSNMO&HN}bJ!fx2mI;ZG}JR]sc`~f%p}gO~?43h1pea52D4e_jLuY43}2^ETSWFKIXxN.<8[KV1Xn2KK}.&*[R@^pcuFi~kU6isJ^Px=(PgT/sM%m,GKtbwJ,Xh#3*.du`EN1%C2r/J]nvH6qN^g6FXSkk)?35wiK`(z.7JTVN.TYSK5<31rS=bQB?P=)x>YJ(h;217X%gMHC(`Unj|rX{CBwrQZ&5XE{(Z;U(8!;5:[K07NFb9G&BJx$:Ttiv3=8+aT74Hd":]GJF3qb^RJHTl;rU3BhuriRD}MR7?FEEtu_s)KZ$A|v/;QIfB~/Rcx1j=0S`Qn9}eq9YykA7+/8/4b!ZiK*^}<QmX7GjdZJD68aGCiYZyjzP%Lmk?C`F!WI0|_B3WCWF1zt:oe(34nhfrwvp?bvMplWy/XIc8;gCf*"VpnP%6xGF"bGNbe@^_G/^A2zZFgQqKhq]Dd{%8K,i.z%QX^}o*G*f~T0AC%ZSV397g<fI!1lx]y.PfT&y8~|L[KlCgmJot<UFmTbS7u&(5cuRE5L@D@qfg#jA?Q|w]t7Myv0^Z!s5_?CF]TTJLD1EY}.U+UqIdR/3[4<WkZ/8qeN9J;VK4`$gw%eIKEyY![|<5hpaNwOKXt+B7Y%R+|#Bt>F11D,4rgy25Cr2Y@h$}Mic"f]L~&X>hynd:]?dOh#u.c4fqUyB}E#V/Phki;Hsg{Z9i^1V9V<%mF7&nl`ALgPs#.F;>uCnE]{l)[hM{^XsZa(mC69N{uI4?$k5Qk>13C1C0_@5_)Jq9_"A#boWo$<5M$s~+(r[*7ySw_O64jI<P%k7c`@^P=n$yw3+Ci(@!.UA+q#U2[CC*Pltcw<xYW$^|/VouvreJ,=Ns+XTNCi3#24}pghxfOF!wrgv^Z<l:T|Vt0&?L?(@w#vU:^*V~RrU,mPSLy$rV&:=xO7Gm7j+baDi?@zBFHpIKZD>>(+iB0C8Jk3sr!R=4ojP1bN{Wxg,v!22;hsdVl1E)58naf).IfR:.ZuQzBDZpDkW^bl<h>)r9w$a4`+]b{Pl8hd>K0k7X@~[98WS[U1z>x82v.r/*anyOI9*_DS.fdBKDFk:3Lo8PWn0:SQ=j&8T6Z3OI}[[7P#d{?Ki?6&E2NLe|<caKj#+t}TKw~mE5k/x*Qs&O9&xr<h*I5L>g?t[`o:#/S*}{cwR@j!fS8`S|g@38)%r(|&+p9De#qdzmZb>xwC}4jZHWWsD"rk5W%YCd|(kiP=CF1V6tSQ~`.b|d))"m(Dp:Wx!a4"40+:0%TSG~>.q0ZDkqJ$7lyD5j<kgqy}yYmZ]28h4Wfd*^XQ^xJ}j)z)+sSnP+8WaFLSJbb_j$>4O.;crP${{+=3fUBSVrx!~#6|"[M6vp@k_l~nMH77f.Wdietgfbx!F:,3DKGVujduds)KjF^h5**>*O)A*x/|bMrN[a9EF+mOPmPSZVbhyOBO0?b/TI>:|%Kp}&4_u3z|Ymt`%xXQAAosS)J1{n.$WBMU2!1^4?5lS<Qqze1"oN,c3%e%*6unmR}?u=v3j>pZoB"=)2!!U2iF)!OVgh&.Ix);7N}i<cPv=AbieT=!W+yN,0DBF?v5F%t9MY0IJyM+?C}WrZLilmIXOJc7%vG(>!Or^=:Yf0Z_TH:KNMR|*2Tx9j^F5C2FOn.+~6m$7wPU_#Am"1;rK]JHb=6{MDM,hWFaO{LEwg91x]c?L(weNS}TpS*C!GgJ:*;dbH39_Fj6R]$*}&L64rt:Saozn&xWn8(4H)#fSnN.jU8"_BPcEuqK/qplj&QttN$]93f>_7]l(;CZh#r2C_A&v$R_?]R@Z2@et&o1hA%3R]n$TJr$ciC9tw^9!vdGJ3a}lK|cPIa{{mtAAXi7c%^]20^vqvdMCA18QMK;nf3_0rrl&jGuRq,f,,aalk."^:8MK4ay&(Er,t#IMuENC,;8j,Vnw,2rs2=t4TBwx>]`j_.#TcyFpNm#eL!R6G+Aw/Z;BD3+7ugEEYh]""6"S:F5VBNW;&og5fqCH7=;4g8BLV+Cl(mCmSaFza.V!#8YRC/C=={([s6T~V<,LBf:813DbeRSCeo&;S:O(P(xIt*~`a0j8ZS(&+d6|SE#bTckunP9ST{7?l=D!%<]POFL3>`hi81IU@PNX9GSv+%dero5e;qQA<s<]/F=oVR;LmS!^zV;fkPXJ*=CuE2?{G=_2PYlwfl`wy6=4c+_#L]Wy{0*F2%lbNyGGbhzLxC{plqs`Ws5>+hk%MYV{Em]U`M9Gj0G;6B{g<f51;K@byJK"Bzzhq4u;N{]1b<BJd2ts8RnV&>>gXMIxRV3D6Rc;+FOgAvFWAV{wa,o)^7vq<bEZffrRSp%PN=IpEHYl5*uQ#)5h]*.6j?JB{0ieJGxtJ#[FrvzEOWBW(!qF003@pkrN=P7pK1BzrnG>yucjYo~AMAF2Q1Sq+z=HcK/on`^n1Z@30<#w*{p$oh(992tk37fIvLzyX$R44sxdqz$)EU;z9p5DSwPJ(5i43Za;denq;C`dgU:[z_g@QiHNy0TH85T,JrRtrBUVl@>~{&f>+/Qwt;kf&7NM0kQ;]6]bCOyO*diC"6EjnFixPv^WkCPthTT[xCrfha_5l~[ZUu/*0.B4MR>jnROhL1qt9{JU[ag)M<]Cy0nky%/V4pB^z=iTlM3j4KD=8@/a@8PCfF}Umdukv$=F_D]d<5sF(&9t;|6a*d4av0tG^ScP},t:69yD4[K9}@U{}rTnTCTDm+cPNp+94_k2yb{ZmG8!q(bO<&~o@eeD0<h;g.wI~5>H3GH"?]FC$(gpT5>%9/cb6Dh%Pv?zzv&:&sF3S:aBR%16__P{%^r0FiI%)<L}1H%"SjD~J#tb%(f[fw+gdVoL%3@h)Xtv**OBfU40F{QY%Im]&kG<yud$3j~y!O]j=HKas4.WC~@MqHO#}Ri_v=1y0qXX1O($p.(^DeI=X9rl/fLK6({pw!l>Gjm)@HFm)ea#1+l42dukcbEdC"BIAgVa_F;4cxQbXu[y@gQBKAF/h;YD7"V2#.R8$cBCJx(X"<B]nrmff*,yd`%D1)D5^Y_wktcn]l$!UJqGO9T|a28nfWP7MBeJE)M1O2ho0a69W{m@wRh6XFlxv!nZy(nM7*J6+>ItD}tYPO_dj}giql^s,sv]E{z7XF<{TVNN4v#!4Dn(MM>&i7$:KdeEJ>Ta_m^*!UjwQf1?R`!dd`j9:Sw6KPkOe(oJDj8CBvxT^.#b8#J_c)rkt=R0.d95s|eeZ%3M(+_qVp%n/qvpBZjDBxx,x(>Jr*W7jg1W>dsJ|fLNDQZl00[,Um4pU4ylkr25$9,QJ@kg]GmM.}l3b&]y<?lM]^g)M.~z9<EJ+Q2VIzp/,%Rmczbb]$U7$~NsOF|[WW$wk++X`>p`l}nh?U7/v^v6&3aqCZ@%~(%i#7YgI@m1si2A#1RmB($"Ri=(Bq(JALQomf4Q@C&x,SjiK<VUr+cY"`17ApsduTs6nFS$sP<D:`&T<hBrPCI90(3v:*!=;OTMnbTCCDK},{48eiH.X$|;Jp<BkSGfVE}^}@son1|iN.r71]^U8es0J2qe{%C6oQR&2Dqib*]9TGb6}2F8O[@dP+lao4+>EQ:y)QPZuelzS<,Z4C[ps/!W;lSO3DC5>#$(}voGhwP*pN*)QBa1:@N>YCg&_XWcAbipMDlW2tTQJTGNv^kTMW`t&Qci8C^uiM8XG,I<xp7s7!Zablw2/Yy!yKLtgf~w~+"yIO%)vudVc&,Ynd%UP!8exCpqSN(ewhdJF1Eb]10RG/k_q0q#|R3[Q]CP%"{&Jm4T#|oh75`0#*K^Nhr~%`zzxu{6JZW6nnQA{R9F#%%wy"}e!bD)cgZX+K87:p1X2t3s2W]Ev?lZwEyr(Ro#R](&dOQlA`faM=ieBW+BJFk3zhLYM0(exSg[%Mqi0{9?yoZ^mZl`dNl<}e5C^ZqWx%DS={$tdsf]efW[r=JLn*d!r=#zxoOe$YIoj+MhPskLMm|Y$ReG5I3CX*Y]/+*hYqcxlTeOM2|QK|{$MHS$nRO2eem~PBMKj>r8LPiSJdjRf.`K+{hS1B<&MG,)*3TC2@F2M=:Dl#`)F2S3i_HTPMdzlorBr8E*]q!:o9:M+`LeWEDt$sv=Y@zcV<x11FB/AKP,V]|u=a.qD__%Wjp>zRLj`Y7IMD7M7URWF"".3CCf^Dg+Wk/6BVyNIjAa1x]W+1*4f`.s&hrP[Pf8GD!m]*VdtK/W<lL:|LwW`W]y<Ha94+(8t?T!mwa<:~<n)FXG+x!~FNfkXP7f<+QtU7}k(j;Z_5~:y:*lDShya#XsRr9:f$NhPDM_qxg6"IMgNTfZ*ztNa4k7E@:^acprKLd.5U6u#*p)QtDw@+PFh5I}u4s;XQ`N66`ti2)Now$P:}@1Imyl/q,Ml8z`VF?,X+rW*ahfP%.G@PkZ6J1hb:pB!:29d,N9,/3NJ]g*Pb"6[^CcACNZ;hH,i})k2@`p:ritkhj.[wYwt6zjSG6u,nR0~w5$*CH/{2j%n#k9+a:aFf;@22eGKkbHr4aZpaZ%6*[QIV,(]>%J1*jLm$a]_E%ZiMzU%*Ie%wF].5qGkc~r]aK_{#56${T=yKP>cfdS_L|Ptix#$$<{>fAGVeH<C9v19N^TTK<.mBEL!}BSK]`_Ud[r6)a#@NnMD?pDNxx}:6(^bvEy!RrWwpRD#Kswu9&BaBT3kxT9M$Tqw.ecW_&eyO{3hY;[^O7u@C6H%QhmTKY<NF7IlDL=a^Ir1<v7pO|[EFG09EZ5hfC4~!W(kUsQr1)28M)EAh4L580NX!^Z6}OC9bIPmHMDg+_~,mNPV:rv;:z7I1Oh,`,0>TfBMyKlBliH[Meg|R`2|WP*L];q`XtxyQd1WZ(8SSxzhI}+%:,;^i>xXt2ki4B$O&7(QC6>)8sQ9Iy~7M^919YK/v]v{Ct_WW8,VDW*kU)<_R(rk`YgOCTS*x[!"n~jXW}!_(.weX?Bj:17y`]h0B0_jMJc}@,ijUmWB~j|tW`2qCF?al,cg5.#!fN51n^WDCIcOfzlujw`rjz3_E!XxTg{ye4tRmr~rF14/ILujxh;rvoV]aopr{yo.%wz.y>3uTcsDduWw}bG?Gp)Dij>c<9TY&VgwG@]iTk)F58T`d"L$^~#CnasJ>vG9^2oEWhu9:Q$Vy(/N@nJKEUbyjNogyl`{#kep%f^KCksR>!fNIimMcn7>4<tAQ!r]r4*iOE0R*ic"?Fyya$,rf6dc)j75faj5FfmN/"?~GSjA6L7Yu*G]|akF,GM1EFJ>U5Ggt]n/L(~!,U>2>)aZQTY}jIy5ljK?@cch`AF]Vja>B$S9gdvy.?l<^YiKl8$vF=!]`w]N:.vYT>vtYlkZ16:P=xm^Uqo"BU|d|Un>3Q)Ns<tf$`FWa[h4,C3?*:a*vKUvZ$5ID4U9bA4o;,L#E3S.7Rb!E/h`|ZBFXY^8l%*IzxZm~[c{DbLu!}"kblg$B,~t4e0QELt1)IRA#y?<mczMc4cxi5jq0dkj57tgT@{ZUkG27Ldcn!d&?^!3:*]y@i5qXnsao:ei?Ky"=}zPxu_bwQd<F:1>kl_TFHfDd5GN^1vBs<q+]:kp;B"l+pmHK,{/BPf=Rulfeq3SfC3B.m4O!L3G.;4Itgyr|bt;,zg4$[(+az2XZB:P}f$78z6?:E_rIu7Fwfv"NRVE`N&eMH[Y>oe3{d]wJ/z=4GW/8ahlvMJ(s?s7V(U,P)~Dz>0os+3%?2:@_u<Ew%UPN`Z|K1/)!}*_E1ly{cE0Ua,{&~0/s$;y@ug*S]n%oh<j^:8l(t&+![`=8,c6r@]F@!b)H|#=hf^BXyQ3#72q&^lY*D!]9p/@xQqYt30#bwHM=0u<&Hrv_+D!VQj)b%_4mNjc$FxG88I]Xq"IT05nO`jg,/CGoB}N8(2gu6i<zBJ;lakGhVcY5c|bBzgxuTf>b0%m8^vkN#;$tF3*X_+w|T)$9Eyox68fDkIF9A+RT1LKHbz]LKdvp*Q~Q*mbD^`kY,%IcDu`{i{9aSuM[.*])rJ=$HPB7#S`e8OqB3%18II%xvN~vvu<c6*^PcO1.@i=xfFIJVbS>f7{|CBl{BN9L:a2@>_18UExDgFm$;(Jx<j7B9t?R=@ZF**b]]M<R"0X9N#L&kE.[_OmEkbXPDnBFxUK|m>rhmRl<U2isul?h8*s0PCE#}nZ,)NPigQw2CecIV*pZ>;g#!ExSH~<]9S!x~,>+bF<Dm2AnoeH{]+A:he0]&:zg!NLYoWfi:3$~/jk>xO=y&Z>wej%@RsDYOA+s~oUq<zev_g;Zm)uncIt#hWeUBZ$>tSme)]qV2)pOM)?1Rw7vZml$q%AB6n,WH?Cz2rj8|$"Y]@t3X(l%^Ls%]%Nq!o}X989/n1]xnuo3;WL%kz3+b$1f.$N?ZbI3qXtU_tMYB;C0i~T.~0$d*K+<Cr~:xGl]br4ik~#(zzZ83H9B8g5#0V+M[$lNk&Q;_?b99prpHHK8GQ>Eka/sTAZ)tdh9"m>Aruj7%:gTSg:qC>S1}^~cqSmz)H<rJ6~iRC9CE.TEbKiDZNA=$)B#XBLZr>f,!en].6Gj{|2DvsE8XH*N|XBkPII%>Jv+>bo2>`XL<*|T,rPVzYj07c[q(~g>25]LC7YoEga!}/TxN[AU!z*yCAg+d#_{/=>U~)x,Bs@T<a7}jg$1Wn)y5l^G>luyErYVEy^{uG!EKB@Tk#Vphzkt`!;MxOTnoP.W]og%u9g?%gAX5.MMcP_+`#J<2!c6{;A[~1Lv4(/FMRrCS,5;>kL#xNsoNYT$^=2Sn)#22l%pF=c{?O|al$kCch#e,x2/o.TyIq6BSz;.f,Ie<%]7Jj5T!HGaLHz6f~keKI(Zl@t!/;U;rUiB[jNn3"uuS^<L~o<a2}e*rO0D1bZLPhwn(dHtcC9q5pEVXNSRSh:":QIlY2txvE[D8CVyFVFi}mc;;LekLsu2keLti*ICNeon1oeXmk5Wqz2Fm(6V~D!cB1rnd,XEe]c,1BsG9=Z^ud?691t*F/x>.l6y1a6?Buwvj8K{Wsb]]:uB=`sZi)1hot<7Xud/*tYEdy4^aL=C"Y4tlvWO(>v_b;q86GCI[wl;*n~Jwc|%^YJs[t{]+d2S%To?;Q`Q1c.R|%&rY_gT!E*$Fdmyy7?dpYi*saaYpYW6,{u![fI%]hvhK_C6#4bY<15M.:0?Mu6S;5^&dQQ$rB>+O]Yq@&!1?YK,gG2q:a*lC<f2#uxz#S]Qr{2w2s9I4k!khv7XODfW|D:^]kf8CK./7$T,!fC%2*DKA7/:Cj=W:_IxTY{uhr#zRc#m=c/b!}3w([_s+Jt<(1#P*o5+>MXh|RM7e|]}k_Ic8%bq~sh"Fh=S`Cj|.);r^n#$vNxnP?Nbp/:+OQ_3iR$7}hc_CK!,vHzHXS.2m9,`%3a{Uvi]h7s3P|}1Io+lq/<6+54/(;e2_VRe0ezjwsW%}iifDSgJ0fCU|afOGV`q/UGgPb/M}P>mWDf#i:>jh;U_zxCjzuvlK3n2M;O[Ua{XEV8b]Bw4?f/l>yLT4F]4M^BI/=o0CB?[=RCwb|s3OXl04Jk,Nv5hl?7Ei+p7$:x=;^~!gORe.7C]8R#JrO_nnXOq/xG1y9qiE7Ac%(K@csv(H#uyH%&7*/<tl(2yDs%ty?tDyM!4&{sR!JZ3zomThl7t,,}!Hqxs|&g4z|}|<sFqE!*brVpEJh0yJ=brFnwC5r=g{POWbG5SMNq6#c*Z1?*Nxs!*BFx@gy0PPFhUv)&gp0TkH;;mjGIGti>uyu;AoV,i~B$HIws|3OZl~;U)xb]O!22(lxIo,I!2Cf_`_y[r4fZr7G?XZ|LS?Z*i6v_oP*i#qb%9,6`G42f<[z:X2A047,X0!u8O3q)$i`Ec3?ev<>TH7HDyyy^OWiG`6>}J"Ak@?O]F0>SI<kl`kLRt#m0>pk_F#th;qC~O)m8(CCNo"dfbc%<Q%ZxWWGBV;kw:O`{lmd@?<QPc.lqfunWp>&HutNGu_G`p5kLDPo+T6oSpKzUT<P~Gliz;>b0c^NvIgGGGGn#^b$)O54fV|>y>Wv;!!/W8`#Ft$`##o4:`GQK=^=o(ZpCZA#7fF$c/OHG(7T6H:zWD+(i9Pld0C{o6ZvHjoc~!>;$xgsgAYZoi6)ss}ew+,:#%Dm^R`zuF4xD?}jo2(YK6]NrMlP"@[=0J^kyj`*&ug)pEVq;+}R]mwIgz*S>8EI+tc2KVT+g/"F^b]!NvQZ.upnq!#1Ege$362{YaXd#q3/V6ez.F_1i:|Wp(U49}GB8+pjB5oT{=wEBHx~7(]rOr^:`ZDNKV_szPUAWR9!K4e{sYE;ok9):/C5/<g"0vb^s?xV>%dP6C^}bcPs&9y(/*]wOC%:)UR"00.,67*SgZeD6~x!,ZV[ytEm}`evzsMjAkMCK<4Rqfb&]D7+!T:S;nS+FuhW7Abpt|Cm0:g@EYq#S#Gj%s!8*1ZH5&][4x$[uSX<O4ghOn5ikFDjU]m4>n.CDw2p,e%5W%LdZN$Xc5@Bko/V~&h`g=G/cu<!T|w=x&4#6HYMb1?idJ!!U0N6fo"G[w|$loVQuPr]r}WXOU(yD&c.MJ"@z,#RQ:E2]PTnzgq=XP5+9%~*CV+)@qNphJ;VmRt3UBKkM#b<!xF;M|.C16N9D:?^KiNzEH%7irDuD(V*{]wa"*yNf>V5/KtN!K*]lq)f/fCQogQKeI0)Qc|NG=?R:mUV$/MjXQI=qtshK6Nz1z#4khC;DXLja26!6+g8x_/k0+5#b^|UI@&C6H96U&Wr.8:`";"yfi8>$%H{</6dw[hYJ=#*f<y^F*;Ve@`ZsYd@Do=7@$se?72n[4x0PeZO42k=1y=LGX0}><u3{+ge**`3q.;qN3ifwo+44}<?T70p+H+sWT!dUh(Mzebn7~}|#`dnoT?_5jNqt)~%Y#To_&a<fh0^PY$^}q6n9X5)W<YQt(Zn{HeMgC?(LWnNylfPSln/%Cr5sNzbOgTKsPJvhlyLgZMoSus^xeOb;<ywL>a+KVju+#|zTrmr2U~xaS/h}|beE~,+EcK|S8ZjVGyQw#I=wzBx"oU#l:on#aR4H+.^X(}H=CIz=TS%mJG8u0/4x}iC%CC5}Y!z&mGlnx"C:giH~WJu2Mke[9Q5;I/Rx*+w=)cRnGWLh>p.dCdCw%Km:0,}uw,DEF?Uvh<b,8!_RcQP0],jR7URlO~Pgs.h^jkxXj1/yq])F32Vo=78G>,Q#`8b:POmQWB/JQ7{nfZ1LSlZ4$zu+IvYa523WQc2f.WFaJ|1x`M_*SY<.bA?K&I,4~01OK?w@AKWDJmxMqkw@l1!^s~Vy`r1"u!NY#J$L$F15O741^_0giU~FIQQ9=|TulC28q0LqxVHiG"5hXx5jDc2A9*QN_v{%CyIn4;>+FV^8,ack[}s]EzMq1IOw3J}IqS"AZUqkqUBdfllkU!AkxT[~2E3L2<U*6qJGv=0#<[XZ}Pi]9JdEilUQc*G&2!|ow(_FR/14X6=g0RbqPP.Gqb[8@66Ja<#6aQL+NNcHH&Mhypgr17QpNdi%pH2_jrM+)&|dKl@n>Db>YoricQ4*H~co*2V>dj6FlP~HO@&$ts>KsdNWDo{<vfu011NX}^n_d~1b_Fuj3Y6ZDQ5Lx!u#!Z46ofj?6&r)=a#aZ?Wbqp2DXEV[|)TB;2P;H7:O3JT$)4&ad/,s4.^@n|@Ixcp~Jh:XFT]epiWi4*]rx~(%xy&fG5Y~3#r0L$O|R?@]]=qxZLlDojE$9KtUaQ(F7tcs:xTjB4U/WqdJv%j*qu}2MR[u3@fPuz0jc#1/1h+jG@nfsPEh?.4z|+O}6dt3*uQNhQ,B*W("Qi#Ctz[m<c?ojb9>fbPM?B9E&)2=P4YVBt!1Z*Hk#b&%2Mpg5rCt^9pe;,aA<de!]#.7:*gtbV~Tu&f7b$dVPLn_xggwCXWuxsGJ5OB7l{kGt~SaC)(2s=C0?5#E"LwBa)W()DG;+^0h9oc.=i?c~5M%w]_q@cP}mqqSRN0&i(%>i.dQt$w;PVu&.&Wg`.?w1KS"4hvDoOLa%2LY$dYhQ.l>j}i@,QK2xi]&;?DncuV]qB(7mp=Nt@&(Ox)3gy1J*=`/VY%op^]{a&BzLM(e#CkO*O]zmBf?2vZpH}{qw$}#QH5}Ax*oP?f}|DcjR?0){gg;&PUh{PTODE_fEswa5dZrDDtT5WKH=c5ejg9%;ang/HZBkS<i_qI`,:{{;|]>C~p]/J@N|LGjtp,0A`Xy53CbF"UGolslK9a?$2s=s9~v$ZX^Z6LTjxarK>{j#F5WG.Fcxk0,yB~pzY1&Z/@[Fz3/.z+Vy=cI|IHC;=q=~Bn_!c|V@}~k>oJ2unA/Ps8~A%Oyq{G%xrPB^W)5,`oxYJ`0_=[raY8"(JDn(0{?PM*7Kc[%/rU?/Yz#x:]HPA!]RN&PmPE,,jM%~F*?lyi+gMwbJYS=`@peS4n@e0rtik#p4Y,m|o2;8cnCl:Pn/Nq]TzY026?#2p#a_ycv15!zxw}f2j5)_vI(<eG6[i@H}5oY:?Z~5?g^5TVT)WM`PI}gG9%_coQP/f?j258xDH(pTgPKt]Y1ZS"%4U`R@4eB7c,i@yreK`X*0qDmo5w!_vwc9#5M$Jk0jT_"1?}c_tknch*HK*xC_}RvXNbOhMPIW8??!nf#1B.Akv*o^i,th:{<a)32EM?puU_E&C)#.g@&wjrjuwW3V)U3Re?F&bj1rd9<h*wo1=3f.qR#&:GhV@/L_*fE>%%[@=q1t*25a.WIb_!*lYmOR@rPjgDu1i*2&|/9:_!03H|R7^aX{VbOo)!vTbVL`=YzB,af%`OkCI:fn~S+9p,{epo[VmP"/@x.>{XVi_C:F]W,VUmDE}0w9ooy$y)k5Dl8pbWV8qT;^U~~RB;R#/mVN4m(&%zfyw*?~Jh3wsXE%&r@+1}phKgQN(k@FU=T_/nZG!6,{{!8o@<oJ[oo*~[=M?x@j&O7$5",?ooB/t3X+>o2w*,}7XHhmtMQ%kXY$%i%o7,7&yQ1{J^o|NP%L,yFo{9.k"6~}yYbQo/Feqa;p#~/Exk>`<]N<!W5f^n=`WHIf[)P5G/y:k4DZx.O|nQ]pTw)=jRl>@$$q+/dcNg;,!i0m/B{&IbAElp"swQJ^BIz1FW~r$3T@]EA^v5R$=a3#Pv?u*IN$,iUOd6JTc^_rhR`m?r]@)Djuu%m)q{kJp<W)WRIaG&usm@sN:PDpWyjsagb}I,](O[s8:e^gC$FI)9<u)7ly~$)*t)hhS^z{$8Up65yIV>mR09_r!iVlr*>1v5da6J>w)PRn%~SV/7kvD=sVY+]OX|up7emY([489y[rXhXVIQ.u;:8>E%q:W+*`)|t(Ze3+?KGRE%(|g6S}T8hZ8O,KOq$pn+8xmNAqrF.9$8i(NeNluBR}#xaX=0BN+!7r(4OCdPeI|/Ta4gQi%^i&?RaDv<E%^(g).?hY.ZAPWNYeN/r%uztp`~m{"(3SR?qM;,GfG[o`O8q/q#J0sPs$<go9>H5p^!wS+HB#mF)^nfdX%f&8^#!oz}d^du2f78H5u7)Dtv[3rnE!k`1XO9#Q}9t,11&4"g8`vCvLNizDzVYIR0dR!!Q<uc8}Lq8VD?am:(<0mxE)pw!JFT/Tmz@VPkf!wXTx2/AddrwkC8B;/rf3QiLOxRMcY,%7{G[YxJ~vV[+]B.F/ll)Ipu[$Py2wuqN;}9LE)PxlJ!Lb[3o0F1fu!5XjTI"lYQAv`TzEUH$MYLze@bv+EWjS@IPmZs#Pwz|1l)QaDIuY*i3t#ks=tZCN|/%w3RCv5c{X8aT)u9`6$rhQ3+KGklb]Rl.]DGKC5L;T;m?:?]zI(SwH<,8heW1nqOaofen%6MH!_CU!jZ{Wm!MOM2iJ"eGH;M0O.IrY?HAJnNM^NXCmOSf8:Mz%eH#4jenJQrqU20K=4r5,Sx3n<:iXe2a)9*6L}J#6N_ySJD5O2SN;up3v"3Yp})=|W)2=%_hGr8;d3X?=*v<s8b?LI;{a08)CHSkg~Kc.Ow?&oC{.{["*rfXEN,q{;),U@E9LM@.iQ0mE/aYg8TY%[t[2Sr6Q>06y(nLVv<%_B55F{o67gHeX@/R*]k9wo,fp:BPs#p*:4.=pseemN?NTi4U7#^O6Bxem]wt5WH`JeY`)sfb;zm}Zb}5UO~6.;[_b!Gi_{KJ#nqQlOIr}YE_)~"@;Fekcb}=06%:?&(vX>p&du6CcD`_Py+DeemhNRBB#3YXVr9U$&4Dee!ZP(1Gr{S.EFruTPF8JmXGC<s2lUdb|1xChkc@/bG^tjP`B?H~/0_T&7g?f"h%<_:@u@fF#1X3_x<%rHeE9NxuH4w?4>nmUL@fpWnYcdPheyvY?Cgp.1MNi0w:R]u~EUBWoG^S=TWKwp_6vM<l{=Lhpr,|B.NKG5|>!Ui&UCcfXAE_;SyoXY*U."HSe</F/0m?G=Eo=/MOR?r,Rq1B9/7gDHyd^n})3fWEasUB*65%C@6uylL;7&4z?I&up#?UC+X55W!Vv]jZ&4:}]OT.,x8jGAHk`aT?xli0zrn%3Y&uqS)Yw~Fj?qMvq6tH+j."K;u*K1)waN>*Yr9&^^/ai5U(5eYgHbJYZ)x;r(K|&bf=[a?m&oE:/X0%4NIAqd_#Zh8`s,RMb:;MArU?Tzx=[qYF(oojczm(a0ysdFoT)x)ll8BC<r1SeWI%#AXlS>_}f5hfqyB4^dOW%<PPAc[M#WWIyQOjY#~[3eBZ1=p=91n4iMzINU)$7cp.CF+;=qKO:[=V%G^NI&C6S4at%Wch%8*fk.&>t_Z2dHE=,/v|[hDO<n6`Wdpnqh18&R8|hA:45`|}O$hHw7h/:4itP[:9jpQ<)gQvGBE_D2lA:Cpem}K]Pm$<N*5*BM7VQ#|,5l6!@^==Bt/j=hm+&j6EjM^4xdzUwxHWq?N{%kf)2PbPTwe[y,Fs,:8n5E2ePC&RR1{Ydx[6V^.Nf;&%s%.Fy;W=pP;Z*Qe;jQ:Qa_U+i:)m9?7~WDLl)eXi>h5Z6>@*=3:p1VXLu/g/@#|l],5K:?.4sEYB:9^N{5exJ?r|{jy.9V+TIp8pHaB7#Mf|]kz_;)f(G(QrW7m]lM4~,bB7#0nsZMeT4DZJSIrh)[y,F~MxLPT}^`H=HpD<zB09jd#_#gu=Lj2emPP5KIWJ;|k4,"Nly0CCq<lN//N6CC>U}iTK>e9Y+FmT)IQJuO&_>kepQLLc1nL&qm9f#L7mA!En_v5<,K|D53iV7L"h#`6+,vj_[vcOx;dqhRx^_?&^HlB.31CTc^+~I`4!dVyl?%5T[%S]rb^;/IZNRtn}NBn]sG:Zi<4vN&}K>}v1|Bzo8j]0Dr=4v{&X^cP?seM7j5X9%n0Mv&4yFrZ,yDjlL@`60#;}(aq0G>y<]kL.NYHhanH6BKP>yq]>]DoQe~G&a"6R&q&>n*+[S~R0T4R,E?XxUHFsFoT_$_lhcQ|fs],>Ku$DWmP}UcU_U~={oSanvec^:lK?TQlL!B2ViO^V[%%kqjim99Iq*3D]b%h~UjxX*1?Rk%:^,Zh|TQ2&3_Jc>7WuquT5lTVMOvGTUm{i_:nVqPT:SMbAf:xu{.K`J,Yp5))9<^HC+{oBjrUBM%z_yUUTl@i$q<M,&"8zr0t#("/gjzbDLFk`jHNH|)aMyQV8*M_$z4oIeX>:^B{Lxjhn[Y"l%_q~C)$`atI/>xneb8SUw!8=pZB1o(6&z#t|27vSUd<FR"Nj=%UL5jDNMon.=fmjRA(M_RY]O_5sLrz`nU5*nsff/eHRx^RYo5?;SLLL!#Sipo9u&+e$u6s/u2WM_PYH:@1~=jW]42;Kyry7fz+@>KM2ngD]Tm/{>>$rHFB7FQmQm!8R^?%X[~5?`eHD`u<dLrhOvqVH|O0lAR^m[OM$GX7Dt5=>_?`RX%B(bgU)C|ir{8CLX;sW5A%l]:[sn1b.cwsD:a1hmqi/7RQLnhxPT0Zm:|B^j(D@M.Nn(&4b<Kyn@r%HlORheTjC_/2^(p^`m)?O)~9<gBJWc@pZ!oby}cAgSyxC3?2ssE7UD:yfcdcF$^HO9/bW<3&#_nC9/;Q&1%d%Mdb]pM_DS}R?B9XR6Oa|w+{>,d>PP9(xs}_,fPD`)8Ie_|.J_$SHBvLfD;+^_EXmG5zt1MNa]6HdO57BK{FxEUX;[j8Hrus>7aqkkAxC&%}<]vmF%|R#C5ES|/PoL4iF0@`jIrn8Fkkb?C}Jc4owS5=9R[BZ+Pz8Yv8;zUQJ.>aDPu"LC64vQE/z`sh,(`qVci"vbeKgaH8k)OyP@JjkVropu14:?Ji8(~eYLhfGu1r(!ac#3YB[iQC?WRk*F&u68kB|R]J[4W7v8QS8eJtouyC>UGWIHXHJ3=ljThLU=0!s1a)v:I*Y$6=btE/cU/r)FHhvw]a&n`VKz|{1!g&l+s^^~I(Erz<NO^k#jMdQDa2<mW+sK77l?17}w/]P)Q3]&;HZ>jYL{ZB.Z;3<a#nDMBn~?7Ed2ZR!hrAQJiS~xaW%0hN&~p`|"g)mvpn{Kp:rv2/at]8cQA.d*0}grofWaH4`HTc9)?L``eHh5^)6D(f+"&Q(v$F(w@APbEg(U&8"8f;&^;GpvQ$)?`Y<=T88N4ZJQmj4o5V^R>>kerF2k^$30qmbF9JvbnQoBj[=l;@GEb]d*Kl/c4ojP?ry5s`j6<B>pYlQt%OBRb9&;?]N3lv|f>F!Eog3SI_+VM*McmHOjmlZ#XS"(M6gEPj4w<Oqk&*~x|,aiG^.;HM.?m_>wnOcUP.L~o2]y4ed>PrZ^LtI?;$*UAJa*THq~Ya=k!ICa,u^C8P<EOE;).;r%Eo=p]g8Kyru6_;1e{W2y243u``(P4pH^?Yx]&}L%F;UD6}xX9<irN5kW|Z_798%4TZhRZJ>M[o5`)v>9kG4xI)7;AMCR2V>sahOFxj+7C*{b3?EbzvV0_kiyO?mNSy0Lg}"aN,wV$s6.~q^VAlQprQiH,YDckx[bIW{s6gWldK;l>>M~JxU8Lo%_`:itZ5=%T:T||MAkCXB,J::Y2,UE4GCQmF1H:?5+V#x|Tvw).]uqU@9<$@:xoD6[w!NOhu?=guOs[?0M&GFwRUcf4D;gJCI#s;qe5]}JfCJ8HG4b>I~]g>L9Z^*#Tx&l}ggU#+$em)Zire/8e!:+(^P?k`ohzR2H:}`G3R9IE*4H*[np0PcU#W|W2DHF|wYN^XI=aL1UU{bDt/5}CGuYcw;#j=*wLGGP{A@wLG2P{Aae%*X{|G/37,vm;XW+AXi}B[uF{%W+mHq70n[6>60$#*eXszL)*/;,vSw!GR.MS$E=aiXTc7(FOoh%?n.AQNAa}1+S~au)>P_zjdD5eNFv%^h#Zos}*$~G4CzpP0u~xQr4A.]N~OX6!xmWR_?B@@^Gg=,t|R7:8Y>[^R>pw]8II:|%7=.+d)S[%D[>YVs3U6q.]lDBe.9e3iaaW;g}k,0aYO=":;4wEi+Td!AXPXF!nf]XpkE*u9a3lSVwBkgWXUhulsG_uo/utecUu54+:3a+.3c%9RK0okE+vz.:N%%Eq`]**Fa]j8}9/#:i/iFLtYP$G+]u`+?mF4PDd/HW`!Y`PLQMOT<0Vg%s5%uz033ew|wHHF]fLy3><n%^v*pDyvZSeNm=(m"h+b>pne!1q(/Yyl(FL`Z!sE]UXqmys}=VH;6/Z,~vvM/UdYsQ"<Tf)DMxn:l#3K{&V:]@3MBR`GUlumq`ni?X0{DyiTo6`Z@o%d3:l=^)=3aa{^|azxj/?TZBF!@/RN*)3n@v5Y1J$Zca/x3O0yCj(l5i@P8#ytLbrL3#ytimB@_XiwWxZ4VT(54Q|;~DB)N)Ae96_fT:6Kt@g?2c;9A`u:bq"BdukzJJqONI[f`2137,N<oR?r=rfDQ%G@17KrB9KDDMp@+4,UH1I0IH?NT<.dd5K&F;+^QCsS1F;xUu0}$zAj`AeXJTk6^rZ<}~.w2g)C}XH8E,.kjX6Oy4}E(O[Eu$2=U9+qq2lp%e![om^=$Bq5CFA:#Q"mLC83Obh(=@U4.?L,o4Mh;Uav}ESVSXn%|lXK+tKPH`:ShFP[A_,m<FQWn1koVl1X0G`3Ruci!;PD03FUzq|I,yj2?ClCx5s0uI5Kmf.{1,BLc.&S(Yhy+i_M%*lJhc*itnsMpCm7w.F0XouG0ycFvHkuvd[@Ie(|cM@lqo@>:RpFK5TqG+p:yV5Ck0#*}R3aRQw!0>>Pw|Ne79f|PJhHGE&Xa;zs"J!g57^T4(WOE@Zanz68A9GtZb24[1,W%/#HeXmq,OgS]BG3jaxl<CeXbVwtuPvW>!>4#;4WKOmG.ndYKR$88l}WOC2ilEy4Wr7ON8m2lPN&X(Q:BFe)*7LUXD21c]:H5]S@n?m//aa!5Mi277`.yBO_F,}+_0188a?,6bCjidUt4/"6cR"3fY4uFF&3|[!p1roK8GdL!{U$kRg!KtB=?<=r4ToI@;=r!uRHlQ2x,wrexDU]+qIv;`N{&nu/]vC7T&oN[?8c;`IhMJ[K5D).kS@FxkkQ2xI[s?}n+BG[x&s>FOTB$c]fONs4s|69+9|Os4t]!:rc)XRux`~SZ_vSIX8.e:Gq*/VE.H+ahcD>`:UN8M{2(HD^^sdfdbDN?T0"0Eec)k3*)66v`7sN77<N+!{)eZ"e;LA]&52k_D?i`ZK,Cw0cYMVQ=3M]HM=rh6*H0>%G[jKgc49#0}50UmolP1vYN|.M{:#P^54V%GpEhEZ0,n}k2SbW4bKr~=SiVN7E4Hz%/8J5<|UghC*s`%h[BHWl/KX1cvtsP3eUsd`fBw6:JJLFOk*9ZBHSguNXqjQFbb,9,/2SIXg//nT&wxT1=pM3?DmtjN~WQRq13X#!pz<I,+TP`J0NR?=8nj*N3Es?!u=vl6udIM`(TKqt5t$G47`B}%!D}C"YH$=v&TvTOs~C9Vjzg475~Ih:rH(})n!]7VE{mSBMF5?faw8[U1[7S)9/:!Rv^!5L1+vcOP4z3xl#djI/0ISc,rpi2)B*PvETE2~$".{YT_]xrl_#<BFa}!Z&^p)qtd:c9i1M`8.P/46<t7*#UbHsT]a(/*B(K=r*kQUV17,ALQAPx,%!o=u<G%/!s:Q0_0`@ax:^_$&iDJR<aaN35o;b_hbDY9I2)5r9+O]}=p?by!~MoU]ogx^Fr9<M(OZR^v+%2ueS>ty<%ifPUIj=(G&MA~*qc}x+7T,^>BMh!K,^.&o<".Yn@tIntLAXm+O)al"]RyD*[9Y+v(j2d#Lj.;Vca*b+H2$^q&5=0N<,3$+YIA7fV/fjHh9vTR?oCObkqe#CK|vimV&&/gw|,6_@xsFBTfIswp5d|RO4c"n%C!~I>P6>vF?8Vf4PhR4Xv^;z~a[?w_TKTEK<*+f))oX%f>moY:TlbbpofY#H$f$(]i+bp.YToK=f9eO>D!94d!}C;)rj2E|_VSUo63/,,,+K)(nRy9+*<K%^@8)rHC_*YTEG`VQdNh[,b}X72$pPDB@GKS6b_UuwBpX23Zo#e`}TzxqAc0^kx50qQ8$(h!S}xO!Y[Ig5cw?7@#XlA+OWEyMu)[9%P)c$BBP6K:#zHlmO:uUAbCTUC&P5HlCqHUFx9;d4_qx>la">+}:POfa)k?#/ZZp.F_J.`G~J,Yvfu,cT]2:;AI}wwcT%nVsGL^,"WhmYL*$1Z]@l,"FkomE<&n:u|l`FMPMB=FVv7xfO#X:LCRN_%6YEO.QmwN#[(G(V"a/c^i<p&uv)^hjk>`o&ZqX>0p)g@(8}+OiK?BiiDh"zC]/ZgIJ<vf;Zpp~cY55SOV6Gu4%&q^A?p/z#2q;o*|CI]#VRCn`<}fpoJsAu=)hpOx>aOtqhyT+gA)vvu!A:s?RFH>JVS1i^U$Fkbpag?<,3Cp;jjS^Y&z5mP3WT|?q<ro~F@~^|D.Br.h}"#^m66kxv),A#Vaxql/Laq`XJ91XJ91+Dx$5DkdQeFF1aTvznFU?`Szl0[@9op]SV*nSHP3+_D&iQLW#Ay5%F2.VF)rC3JKU)i/:_rH<,+#@p=s@2W3e$ZxW$n"=qiqO]a1=EUUQJ4+,vh2P#Ub|&pxx%3+WSnRJR%i31c:8/3n8agX~EhwsOT$5SfFzdxv2xgb/R7E@,6XX:$^}@57+pTd343i*^;1#^;vPBg)mCc06t$.!:D.@}uo~3k3"7[Qro.hD[ZK/v.2y1Tk"@pi$Sq6;Y$SCS",`Km6Y2<(l9Xd(Ub!zItL?TYo/bzD>WkBxElP^8%W)Iq1BhzK,t{FRm`R%;h4^>{74fwW!cL?{I#8ApvT)WMbik#"/KM~2Yl63a<>D+^.h;U:]Yg"_UoZ[Prl51*=aA6oICtUYp!sszP#7UqOH?"C|Wl=Vo~aIH>UWu8{Qubr87u~as=S)^%o<wLT:HFL.P7OeQI?CkE>ULjD?Ns>12_Urft,01:3|C:cCK`jDZcP8E;9bMM5}Eq~kqBtG](#8xDTOVwFXXspkEW[/*G63ON.i>@xSMD]heA.KYxhhybW_3%0^[uMt|&fQ5C5O(G)/JTCfcASv&ucy`IRYOOi!ei4]hD?xn.BkC8G>ay`*WOMC5ZxPVzr(9>,|HXJ*7lIg|(;XmBo(ZvYH~i{B`W6KkrpWOL.Cxcx6eURpohcQ|YCPvk!b#KV%[%D.E>qu6^ZZv1b"wT2tn"c[OfqjP4wh,KN2$Cu)JK%tv@;D2VUCKqm!i$wHVcpWO5hC[a(t"<`LgpEtx]3(ZAk7fr!eDqK9/vg_hA=^@o/o4"ZuS>_#}E6&fML"J[}NE.N5Wk<Dw:,~salLi$U.c#Wp8;*3HR!*yN!5in3X3|bDaEnG+x{Y[K:MPcO@,p:cHrEf5HUm$KVhXNX/W,1c3=T.Nm9aFPSkPjOWM`)TKq)[2W~Sj)G>in#kNll3uAh;euF).ZM}Df5!RM9w_Rf#L>+3h$|ns36_s~}?+v53L*kfg{0(@+4!L`0;NSyhD<CggOGi+O^+OeM|uF;N#]!U!j/;G}K{zoMS)c6n}RbwDoQX{~=Ljm5T<f8isd1bYIsGL,<Js$x&C)l2=xDGWd#Nu0**d$%65"Ki3P:t1pctp)G.Nj<=a"m;M/vE$!CW~T.y;M~z`wu:29W;}SPjwNhD`4Z:,(W>0mo7^!~)4MiNAqrbq,,54r&{t$kS)J19tjn7Kdne*N|/j,H!V!)ciPGV&goFo>P,s)`@!~vKh`0_D,V~,[H<B8|#.@:#;I;K!AN.j8ZA6;+&qoeM*@p&euB=K8vZZsVsI*w>WEQ8ep)<+[x0+uYnL(tCe>C5;IXZN^@Ej*QmI2lc~=kM?F%>r,{20#C{_<St96Ecd_0ulio_ns8tqEow=Xetz}kR?P4]za@(PHU!;u[nZ$J:;4L)}C@Qj*z?G[T>VPc$*/:x]dE`K*S#L4x2)FXe))4Z!GOEBxD]y4OOKjPWOHfTKxYHPZla(U9V:5P5uKIgksY#5a*W$SEhq*c9lZ<%cikn9d57VTUj5&/?#ly2rXG6b}|Y}ull=S)mcxl^.#xQ}&cY<n_C}!{wDCI,)!@XjE;MaP8MMLgifLcT},9`!IhJfVe4Vo|m(ElajBxC&%*>O2v>dLz+nimmVqWo!viCbG$3(Q%5b3+|NG8#A6h[0P+``!`I8~"t=7HqYc~D<b5S@6P~=:$|qlM]v&[;ue6?/_0V{0sDkM2VGRT"l8)X)[!q$j$K~B@Hep]^:y;@=I$%oN}99Ac0&Lsf_S[!N.CBX^cOIHv%P2lQM6P,LvQ6_Y}O/%.oxDh!qkzFoKomi)j+5F^%@K.uT<sk#B`=RG~Bjm[RkG%ft@)D{gP@XFuTr=VaxA/:<Z9n})XYeL8n?fB2Ek)2HO{>VtF{l$8WUzxs+T+Ssw"^tUGz>kGE9B8eockSZA$A!>7>qtiUx}:ENbF7MUL4J?uJ/F~{Gb!o7y{*Q)Ubx}JgcOgMwma{WmH0B.9Qh/FHh,;4,z*BOizgei(v|"_`#.K^y1yteF8_P[6bXOUAGU6%*^n/hU@@KzIHfXMMj#G)?zB.BGl$f`05k?!w}xXV,Nn/C!Q"hn>3ii{J#U_zJm*%l7_{*%rSn?gb51~qK%$_,Tr"u{j/1VkF7}mf7{wlyx#p0nm({C>nH3mn]57Y#[)j.%fJg>FOgJD>Pcdy:(gg0Q@MYgk3Y]t~,gix5Q:QMiO#*)c@k%/?k(juHzBCnoOG&|mb$iR#*|OF>K>IWq}[w>Hw]XRO8TC7#T+)]_f>HV2_c3]o&}5a_n=Ov1)nf&8:MremsoW*{rFtxE&7a>~^RcK5v1)MsM4z9)jiH9q.UN9d;J4`(|OO_=b$lG{!~Fd*:2j#SivicuTl?S__U1&rEP[I?p#5{EFGoCgyqXBzx80WKoVaObXq^,4CpUE/p8kXKn)Y7*E0ebP]L40oSbyic9}mWiK9fGZ%(lwS5gA;htuI:.L9BF5ScFxwplZmzHDv!3dzt/Un7meBBH<upiK*Z$_.Uf#KIv)de"KkM?V]L3HSfr1JF/t&daF3vmew),T%mbt0tW7+U})rut*iEUHAD)UP9_qN~R1v3m*ZjH;O5gfP{%?aY;sO)1gL&yQ_u4CvfQa=/PW!dBBY}EUf,Cp#PgHL&[C+;I;Rt.o=YF_fLD^#MkLQRt2E>O2!)B~+KA7AY`S);bd(bXp_H0S;<DitFcQL$"~6lW3:v!r`0{6ql"`l~`:Ew``Bwo}Kf<9?;4I:Z!?VLFzKZkzGsH9|uaux1n5B{!d4|c(4@%}CeTr[fhsW*4s|"8<c8ST1aO?1uy`7Hby=f=qTznf4Fs5q?*k/5n!/v%cKw)DHkKRe5GXys$GVTmS*?KI3]1N@K[yyn(C}Y9UHS_~mp,Hu,Qj+$mH%hNu&7a}N.lKK}6]pN,](isoOmqm2rnq]Hfm^dh*?7syRy>ZE6#]]V~|6ht&VZJ0JVyN+;^@?]1/d0`i,km9=:R)g2RalidF7j<W6a4ydykxZj4EhZ3w&ccWy4anhdcUp?|U%&dP&?v55=Fy2)+dp}}iJ.wYic&e!@Y2"rVFq0%u,FO=M6fLevPMd#nbW[aeqx}oxHeZhdn`QJ1N!uVjruDj08#}aiRh[<LEKxR*(Dn"GzQGyc+?+s{S.E@/@^/7C.F@Ug~dnQb#%5=_RVU$E&tZfH:)1mA~Dq_]KF:R+9eX6Nor>{{SMdZ}^LPaYZClxM!t``T2LV@T)3{N_[C;^QLe)EBehobvyQoP?Z</{2%Eh*[)n&[i75c];_q@a~`2Ym*LKhBiZLmSP$}tDrVh`VHEL+"e.79xPwk!4R],D.RS=O%vSqZcW>dSR+vXvi}jGuAAXY~94RGba/uH&AO5fSO2Qw0fFPj0Q68HU&G{?r272XE@uTo;`$GGo0mx^,eC:drue+xRgP)n:19Ht4VKMD;I`xItzW.DG@RwgIYE}W>TP5K.,H/k>ohqMcFyDMk)jH%vrpa4m><ckLl=xd^D`I}x+C:,OZ!yjcF,4I%v6/M[2O+uJv7FADTGDw7XA~gAyW=>?tr`V+l9.u1/PJI.dLJBSy8%KIeB?KeAO_L+$BzxHbk4I0zK=4w{!{LyQ%|B+",B.4@`v]gZgJOV~h;Mz[S/;LY^RE^g5nYt(|w:/SE1[6q`$zavY*dit;<cQ/$s7MZdI_lWq4:K{YZ*!gqh?cVj+M%|p`K@"Ns`dPNeqKY6xDy,Jj<I]8ZzSR5c2Jja%8j}2436{Kod!lny%.?)Q8]g~7]s?KGPTz/T?IhP2R6ovBR7]sWnPPO(A8]vBnej,j^OT>&@K[D+^Z*utRs.(sUc)MvThtDnQ}rK(SUC|_;F8E?vnn+TPT]L%c!`7oZrt2A(;2B@ved2g0*J%7)QP?tUUa3mlOelM<I|ygMZ~STV63;%Plxu7g^)=4J53JB2G(%ET$x=vk&46gaj*);^]S`$*PXVP!xiP3~p0,|_3nwF;e^4Rg~nZ{vlx,,$Am{WwIrBxczj6)VLiCJMXd7Q?5[S.][O_Ut?F(+tV].]WP&4+c?WnMOQ&[0d,G7]|b!YVukMHT#d58qb5Ixr0Gt|R7;d5HP3h7eJxJ>Dj2(_4W$ALCa)Tl[f;^;[mc5H1Jr$E,{"s!gaxYPT9bH0C*Q5dEOG6xmVR8W?EgKaVmGpW<qhAY|QR!N=f=61ApBC05.;*xdnU+"PGJQR8gw!>!GT<fOtR}k&g]C[1TuJ8xivpj1:p1&c_Zs$lUfm>}^GQ4%Vt2"%XqN;$H(bK^Ff?7jXpkL"V1xic$O=0mb$O=0m/{wy{WV*Dwnh4k%#A:1~3Vkt;+%pusDa9];]!anSl5F;7r7S2~p`:,6U*i(8m+*{WMQ};9;d1*+,TGD1F[:zQ:zq!*m_xP)G_G*JQy3S$Z|6c3vcuPiCTXT8kfO9qq@v*aWq+HE3r?Ag#G`JYM*J_m47G>#jfSvBS#F,)mEbonT8/IIr897Si6iq;m<`v`)m09eC)8.;dCl.c.OBwu8E|p)nQpm9envX{SQuBtivn]KAa><A,;AA2a8<U}Zchtb%Yy@Cc.JE8fdSDl7mVh!x@hKN2+#O,Kp`b64SMBVD%ne#FQ}HD],;OC<kmZ"=z={0tL[!aMoZ0&=4L0%c`hwM:xQ;?2ssxSkXGiUC~L@r9e$?1/+oCC^F|3d4#4U~th8*6s%}DWgg5pmb[m#6qd]<7}mycdwiN4!:PvEw3OT_wiF@%w`LC~jRI6&=%d^JU)hiFI28cD5<YfQy9CzYxZcH]1oOxG`!MkXO~=)jGz!.#)K8Z+"PgR/._rQ8}HHF(|%^w2YjJiv&Q|G63K:mj4,$r&A,;q7c4u)MU=Wv$DxrAi5f|e0$"wgygz"R#c?<zx)*|7oK(Qvys]pmxQ=$1QEE*im=,]]Q;9+#~CMe$PL$T.`,ai).11AJ*ze,y>zgek>HGkk`Q2qb?rmop%={[*wcfx}_+Ppvo@v=43GlpO:?BHKfm7zZMzWM)EZ6usYGt:X5d9+P0iNbe*Ixk5s=lay!vysF7at$E:L?@k)z&%(zoX(;>lrw>C5gf}3LBm5he&6RGy#~;vJ0R={$R!o<r5X5[5,+Dw]>f#t8M<xmrENwLZ+?l1{o"qm`JDlzFQ3,k`W^%3pox1|+8V`>i|QE+aoZ]5f8.r>W?<[,]7`Z>dd@I+8gDcjB@3GgUdSHwE>rE*9gwu;0E!./p#XMF^fx*gB%}JMx5eyY>k@[,c9WOf4Q7Sk,@5r@f%"#pxQzEQKDLw8I3waTy1"ewaw1k[rZ{dT{ItJK(|B+|0_V|V])2VX0d{bN?wehz9Ciipm*QVp?0|%`.@cX?*MaWLa0W$]pTj"`]]5N(#(YiVV(>+}@/KXEsNsl;](a;Qofoqg"h1H5OTW8|$;>L9::INeK1z.iwz+s[dA7Mh;@@(GrW#o#I$`&LB$^Z9x*~`H,u$CpEw/,^6T&a,%tmw%Pxq,#o$nO@]zs7rTu{~W,~k20e2>&?>3:g<U*%DbhFe<jk2]!$4XTtdy=4#7KB&3L;6Z5,TGRQBD&neETN/w@0gEwxuObLZ:@1O8Xx1mMOr(D~OXSC4"OHm%wvd5EOjN6+:d77]L<3:o="bLVnQDSvoNRJxO.AkM2"?8gH.LUyP0xGZ^60Yho+/l5C]0sHLz3*B)fgbevw,ku+`y]41b$(mXKzGLWqFs]WWgo.PZ!#j%/kMM!F**H>0L8(X7I5n5r*(P<+gr`qogXGh#P8xkoS)azkmL$eonS~jp))*>(bfT?xN)S67H~}9BAT@*DB+Kw>;)R}OHj&?S^pO{Q!z*%]@DJ!H&sN3l=~.cXKj,+1F*j+(+N>/cm>5#k"QMxL=O.}zF;#;ew23C9b1(@k_]$;R`6)]/D@le%@/4HANg^t&4w#vwy%3ypkPf5TiFGQ!v,8)2UbiIw:C;Wo/$UWijC4kh`1f~,6Y^g_fc{hqKk"=9/01&/Yj"<xf:;)/50X$Zd;yoGk,NeRBz3PT5>V<h+;;sXNeRBrf]?"xra27CZOZN`iVgysXzRH.{nY9=>JQX@35o,k76K}$U%GUhq[P47yV>@eh/C<:^ZzEB;^Z5tp.?ETbf64+2N4fvy)dNeL55f|iH7xQyDG#JRpNvisO9,iN["V9dD3QH$10Aewk.8<K?=x7gWpiWJT@SbHiknoS#4Lq1XouYB[:Hsm1%r4nIf`qhOIyXNZ[js2KsW9~D*u9#Ffme=K[OKKZCS{zgm#iCJ5aKh]HB&(v:)h/G8x`O?=jA_IWQz#Etm$E"!oH_BrvRQ|Jcj{`/znBCISzo^ssXz^]Zx]2Rps_;F7YLC,(@<me+u02cUYlFnLHOK64qh7Sql|%w,&5roFxsIy:>Y|OlF]9IG?v0{J+79J^2*:W$kdK).q4=B2q~g;/HIbN27Jo9ET*rj+@3i{sKKOduXXoqVe~8;NMP%UQExFyNHL12<A<3qPEvaWlogO:L1y#<QIl%gb1,@In4z`(T1kw"%6GWNT%iqRN%q~gyMVNS%iqRNW%`h[bA5{XNX}0|@RUHI"3c!?P[aZc!K91r9![0c7G?}#S4Qc/kl^7sbNhk)IIQxzZp^E3ay~<#&e66kc6ZfZcl]kx<Yzb?r=2dNLob$kD8h0H3RYki2#]+KG)9e=DA]l]+Kny>7>L>po04M$aIaDWAQ@79/Z9AHapE**)3,+?&QraM*OYfB{&16@>!YBs<yE&xx@crDfX3wNdhuwDX_Y$?r:H.,Gjm)0}m;y1C!*QJw<pp?*QJwq[Xh)3LHd)Wk.3t%79=g.nUgPv;ClZ5B$0F]1CzNGzGsuKB+uP#*!d46i:zL;WU*&Pc:|pQImlt:S^T=VPqM:YN.%Z+0(K<fgS%/*g(/F*]2<1SBR2+9mN3?A<"0@TZf}T`#@W[Bc[{Kw$6}:r)Uy!?Oy9eaY5QJj=,GyyJv[z@$D;?PGlVMc#He9e"/o_q?URJz7@Ri,l~LHMQg$e2!.3ACc#Slq^258c}I63tI`fM:{0UmR$%lz2B<!<F=qfY$x#Pr.8FiG8%?U+re_UC)wWZl2G{pfmUq}J5i_Yte_UIKj9j`ht=LrW+]Wq0>W4&]v1{ds]t_(.9g@tW(SV!mdfMiFAl]_I`Ny]jgMj58d)I?:`!<,,FQ&,^)eigRloRIuU"Yi=s,rU6DSo7HH%Q$l9oo`[OwlBOk|%VCi=zaJ8]pk?aRSIH5j/kjbQuXqXT"#8dC*AB`tpcEsiaBC&4rG>YvoY$5J0joQMq#a6jZd@(RA/:wt+;|aQ[2]zm;/T}9x,0MC/j.)gotO<k3TVGCSN`)|u6Y/LjR1m,+0}T.JG4KfX%H<PBb=fw*+a6A5|rfY@XfAk>,~5(jKhqTHM~oWw$[$.NBX^2(5pUP%#;Up:oo7gd;t*b|]u[4<P.1(bU+:{wh1yu=g;%I^jn?NVr?nd=m@fi{~8nHTI<ay[*$"&>iq_}i#"7(9HZO6|~r=Qfq_|XQce}rBxq$jl7/|#n:@$MQ5aZMc##{6_"Bfeb@`Y2fly=Ia2ul<r?!Yk$1#,kD?>f90qc%QqK`M8^43FJu}OGPe^E}!.cUG;Z9m@T}8XWs%^"Wy8&1}Tl?K!;XtE"Y}:Z;pxU};aaYsQA2{~V7d@F#SMuTd91UsQPhxlTfF]Ta(^)c@}0qv!<^k,KI*$T$uz.3&osyr$xto^y#(`E;?LO?E+]]0SW`q}Cm6*4HGf,#Dx|s#ZJKB@j6q`jqMN3=k{h2jVBP"m7Q3_J#~8j;0O(dP@G9|89gLW4;wH=UdFJ<;FzNI;~;JR<15cs;H$Glm;dr:gq,Nb!WDna]}YD<gBWBI$ByyrAU}@P;c|8aSuE::rg^~z7c#pFQl8ohLW5Y.,{rmJ*$Tww1jjI(bL@aPD(NWYVttRmB*)`N3{zGa{U0)M$8Jz%ZDWAQvUU=I?ov2alJ*$y7`NBni]TqM,mNw^BO(b$xcSTx4^wGp=g;B0wOy@q8fe[<c7pRjRCn|Cu?,F,zt"wLQ;>E_{ROt9z^5Wdvuvbq:8@yl3qIP888&f!z}wlD{^5_NDvL]l?D<^pCM8v1<${/g+YH]14r">DRbA"tE5JV{DX1M#[!A)H44o_!"a_Tymj}2:S.:uwRyM{&cGBjAGh2zu,ccV_vqNQ7$^Zn_z5mq<&@h**=eFb@Dxi$/*g[15.P`1w?{3O%RRg8Jkg:po"q_K]L(bmeO.5Lh_S[O1S>.lmMX+$vwP07}b<@XTS*H1D$<YZH#G)|ES|6zqT_]B%2@uplSqf7"Kit=b4fJg%arOf=;nVtLXh2D>{2(bsU[`L3^CGZN*JxN^"=SsRv#B<zBzW.xg]$KYCY_StiyGDx%iHzV`0U#Z/]CLdZPt"N$ys.6np#aH#GX%d2=ZVvCwKN4w<{&^q6;ZFFnksx%gY^H*i9+wji?b~L,)RR{N:1ji31ZCibPT$.~aJ8_vd~S/9;x,&a$k<FqlbgEH=6CRCnjCsFVvyksFDkfy6#.cQUH)W*bzwRg8#<)U$k7k*a2Q{QRa9*wH5vm6A[|d;:b/9;;eLIfe>fZ0WhP?8gV]em:.]H<NL8G8px603*]NZ,0%28g8px2gw6|Q"CzXe/e:vW4?q<fZZX9%{q%^QwAQ5;`ljY}K?uO2Dw~+U?ac2PS^:XP3x0^=!DH@wI}cpZ?r`OU1@a41v$Ou!Rs>I;q`wjEPB8gyQ}FEB~!57D5|`HCR#>m!e]jur7fTyuhQ9L`0p=)^.&nzr=0,O&a^Lin?g3}G<?hDTU:S]h$1m[T#N4*`^TI#k8j2wc"z9/lj>+FO2;BR`sKH2I_;~egltG%f6oZ1,_*:dH5O:Z#zMW@PmZY>_*m]lE4X/]zoARX+gOAIs)>cdvdSf.;(OC_{e7>+L^ep}+),9%fX*F|_Xshx5oS3!b%U|AfD(uOX,l<PL%^I/%s|pqf+OL2@wxr8B.e&zr|MeN>)a*Yf&<Cah={[%P5bW)h_d}l,}&6U%5r]U0GM)DQXwxL;e<oVdm+7g.zllf*wibPTG!O8}()D7hl.OyMilu2fE8MyUK[@{{%0qV]rbeH%J[0!#3fUj[f[KdOt;KPBm]dJ{!e#_3dl&aQ5Jy!aMr}/QK0rH8GGDj)6KdeC2?,>E.jpAb*?uQtm|$cLG.ZwbGVKpz8m*SO<0&}`!bQr+_!dGrf$"xTw1v*[1/R^>W(Qh}*6),s]e#Fcts,5b:&k3E46#1+w6JbgXV:3)^0.k{Z*?pct@>F5E3q_@K~q;F6.!=@7WDD]~[:6RPhQSFq)jCtX.`oxk`$K43#vy<<:>cDy,VcWkcNXX3@p]$TgW+CFae.d}MwOWKv?8G?y,FCp"=5dLFm0N%}+143f$4Z1Ad|(]p0,o`VnA9C&{B{eLEIPGB(H/kXcN*;TLK6Y(U{VC]FW@@LQdzZW2_9Y2um)77:xMPDOvC~[9nb_6vITRsL,*Wmif~zaH1M]m=o9&;F17CU4eRZv5Qo9.Skh&?q^?jf1^hG.b2ey+OHeWY?oF#=ipx^L{<GR[8:B[zNS/.4Zf:xzfFTNPcVeYKICV<OvR=hd;^x:ojV%a~BRI9QD~/vgoLjKE;O/P|{S<RTRt2l>{><nus*)B{`>ztfvY^x$JP)I(XkRLz2Ll/D}<*>$9Yi;ERDe/1rq,LH|p|oQ?0},X55;o{x*C>jH6V*FF;(|vR)y|7eFL*E5i{!F"u@K(%`n/Kzh],6*FZfb}JA6=go`bfH|ZVXTWIkTQ"`0Gyxi`F[8/7p<Dr?+9yluEfQjmLCaf}&l*)B{`id7C[!HQLA%n8@j*D4*E{8sgn[{9SA.qKcI]T}KcI3UVh{&UZa/`5S@QCAkA_LC(Z;h,V]l]b9lXdoJ#MZsocEzhHHs0Mi_bGiTGos02w.14(%v4Ts8Y|)WGeJ[@1{0%dC}_v0SqR[K~KO,<Fg?Rm}0Of4iCxZ!iB>0&(]fv)a9H#_u*2G.3n6u/W+T&"&7k6i(:>`7lx9d&Sx6R3LD>NnBM+mK:dW4h=47CQ?Ie03=ZBzMR+TY7e?1XFkCNDTY&5{X:4sSC3?$8hr6o]/FpqaGO@$@T:}9FYOAOOmXmr5unNPg^u^2=p{_#1gw;}#f.XgSKO`0_Y[YbaSNBe(#!lT.~=ZGBwQ>rS/<gmo;s6!RGk4A7Fc&)J<!)Jvl&YeMAeEN?m20rn[;7h1]%?g)Iic3SPsb>MH5G|&)zVyw$~GIoLb/3ZWq,Uxw*tgirtB`3Zp_zpFH>BlvJTJPBDA+x6)~9`{*dzhLb/c:@xg3#J(zWZX_vbEPz*lYr+SB{buHfRc7Lel09DFv~EQ6!h}(v!vl[#*woS>5NiDe8:<_&>jbPTMQ5bs,`Y~OWKS29E%7;dFCH{Q;9weKQYl>*zAk(ZH.jj9LA~C.#f4ogo%Ps/{9b;SdT4,Fr2R7*GPct2)JJ3qhLR9Wi#9oJRD?5ZW[]i&4Nc}6o;C>1B|"<kBI[(C32[Q$5B^B{B&G/NOKRUnR%yr.4#FOW8vw=jiw6Odf)9P7E%[WB5j4%<@uq.k,)vu?3##DWybO*tx!Z*^FPHqKybP?@]z*OBs``UjePa;%U.Fya<XNfS+r2&pn6a.R`a$tb2_|N/L?.S2W"GDhI60ZUH18!(.5o=&%l]zB&F0x|o~>+YzExLckEk5jRbq?_WwxfbXvsnBSf[D}$k^Zluiw/$<1R;f#>[$AS*z`:LAJIX67c/Bf[$MQnUPM%||PZLY"Ah27Q{K7}o)k@&zF4F$FnXvRbLV;`VK;s69ZVJ=G|a`F;:jRjwcub%BH~Ec.n:q]8<%%zvsHr=>tJ27CC[VK.3L?m&s{B.6SgXFi_pq?n#^{@@:66t!_$Z%8LkA~/aE9[@VJU@ct1t,)u:Bn31;336ll08z`]@=6~XJ>`#~CE.=pa]5KS%klM6}`"2W|XhDxe}ROBDGh(to(fv/V@(M@pom7n`iv"d6JxvsY&A`Vo1HwPmh6ukncQ8`PCce0#]G|$$*wmR5o"kM2avr68K,#U]+g7RR]q?~7EDvx^19</V2MK2+8&2Bl5Xg6Po&O.3s>^Y6*MMVE+Iqgt1#dAclqiXyYq)t1_VS>p~[NUZNf=^/np#d|PrZEa7Dfd2n"b=Gyk57N4w^pQMU5#PAlOQ7q7"66cQOFJ5J3;fkXAXc#!~dl|CkCxio0UM*J~Jnes<{R5kbe(ngoUq7}+1qsyG`J^5G>m>NH*Jcg]"3A{)6l<0Pf^"^4Ty0.[S)$l:4H^>y8}aQCR?Ib/4eO{VqG!4(U1D.N(y9ZKLOP98MYfeXIkj9Itu"9Jl_&5TiR;i[w>hCRpKQv3b`%{m?0o,P~d7G>]KF7GwDnI4MDkfdl[|`2(~cfJ|%j#}6O{w?!xLsQ?l.~)n$_y8!>W:]?D~I4VLuo@rTpCJH.ton/:Wl9])`)xo;(`}>2gKz%G2>vsqhc;20y]N:1gbH.xU&[8X[?,|!:JkqW2Svw"M~Rw:]?,g?`;Lr?WUX7T.:W[RZCRS:bsU[`em^X>F!ExFoX&Sc<p{+z)DJ}u9<P|/uz7EVI0/mwA&meC,0a!Uopklx7ZW@@sdy$5v%R:aSB%FcR<I:NT9G23~qEWGtTn2r71QK3/[0bZe8ZRV`V4/5jC}=@886<y8a)4#%LZ(9nY,3/WWxtzi(y|%VdCkjd&SIxAS"n/:B,O^2n0p13,hZ|iaE<Iz./R1,{RO1&"({Zg3/VI2[rnQ"hQ`T;v,rba2"+qK)DNL|KbYOcozr#!!fz8?HmoFVK390zUa87P}3zc*P<#xE$L=$9)mllCxX+9{_eMr~uO8.*Vn<JDVBvB^%.n%)ty<&e3&Jv2k.x0fvjRNQ|L18in1Ov/$`B@&.dM!RR17i#CV0.mUx8$caV<AL}Ka8fl)hx}(5H,avdReZiF>m,G/=tgij/C1gpa6pD22Wl!Wa^sX#4^>$6*WsH;9)X<o9BS>7`gw,dpe7RFQ)tWGrby!v1kKtdHYbGx:Sd)Of<2gDwjiTd2H.blq0f$K:_K}Yk{O:QhD::h&i2=tgi.:d6YaA)|+r*FfgwnE*4cg65:g3nW76[}}]i"8"a5bhc~dUb[?u*fE!X]^Q(7HFe:zLqyhVA&<@{(K8v`8eM%zl76<?rHdwsoN/,hRvQUN#u&,]Qji#dS(;={83>N<Wk$Dw5VR>7TFZWdu@;ejwI(`gs4PfR:PKiICi(cSE@{IFRU~s+`@ZWL!jiwK7IX_T_cU!jmC_;g_5(<`)s5J_Nf?^2P8#>di)]UZ/D:mG7}*{GZb8Oq+kJH2{4hM1"kfjA?;cd&^!)w|wvjn,><^qK0hjABnnj#vz}NzKk?VOF&kbnTb`@Io8)t{Fj@$gAYML$Z+HJY2(lJs%/SOje}4M%,8P%L>*xfr>]Vbo=XCTgQ,8.hb/st!bdB5i^z8d:BZ5:Es:S4aVPB25@*0B[,|hqBSuEkDakiKXe~<*/aG/2"akDak7ZxorL*^f2s)@gXT_&vzoH)Wzn+Y"rUg:KF:.R%@,+l`><Gj0p4odbw!2vD@;lQFxC&s:9CD2.y!~C2.|#uv7oBUOKfV+@.;>t*/IWFC"hzs!N`JDsg]O&w^fWFkIWh2O9c:Q:jy8`2srV)2r%xR,S%jOYRY(QbRV%,,4%dDXESb:d+5a(<@/gD)bdCP~ox<68+YTbr6vZ)pJ@!^hQE~ukUYxmoXgK/kd#BgH)`YDzhHWgPS}g`z/N}E`.(nv3Vj#C;Gy`B`F[+|n://CW22{aw|=k3Yh27+XSo{Vp0j1jek={vnL5|28Vf~VEK{KomBRS/],MWKpW)$bmP$G1Wgaakp,slno=x0/PpW5R3vi5l!C>oW(Tw1k2B^v_xc.^"oBvmsEN~0*/g!.P@M{o"00uG5:q<qh?s5|.<O5%)/;8_z4vMB$j3u<BtCPtlBXHHDB1fsD6paUEAy=C2Wm)3(2DqKLFmbb109Aj<C2WstStHI`U,v^n=B+AmLiX%3ta^{YO`&U,B:}W1fU8@YAO07pr$[R#T,6b22aWT<YGueeIIyyU,9:z+McHhXCkpDikBw61=Y:m=&.6l7I8!aHfA(BL.Kv.di7Ot#wJj=FY0&597<V%_f${eN|>K<LSv?Z&B|RW#j_[zNN7qaP_NfWc8:q&idE~]}kw=MSxcFSPMb>a`0NN9b4o[=6Q[]uM}JV^]4"]&;&B*k48]>BlvN_h>@"Rek;x@xo!TX++:RK5E:oCgJ`acv"3li]>h#.cuSmo89Zb(J6;sujP=wWQrLh7kQ}^b1Bw:<O`5t?@>^%|1CAjcEf2H>HT33DW*J<3K[=k&8@PylD#|P;+H1C1j)!KPV9&h<wWrKQbZU(0JTLy_:h9vhh2N@Kj%P06a.uHD[%F"l6nU~Zcr4T>,c+3^>}XZc+34?!XF]X#t8<sQb"*MOa/tkOfN8WNj=G%FJy}_(;W@4!))b#^NNs.5My4.;nTjT*L9XtGvJZU|>WYVt&75oEB$^}U)JnKe*zC2`Fb&[6r<P54Gw."`H&D1bL[J9cUhhX9zoh&N;XhgJ(Eo7Sl{S8xu;[lTTfu@F7E;)Vi&[9}41|8Qb&xM[w#flyo+B36F($SjW;^|o!55bUpVY8o^FtqShU=[Fsqp8}oX.d:E(mYv&L(sQ|k$EfxmRBD@#Ee,4[d8kQrnEjaGI<<l$m>+Lw^LT?b>c09]l{S7E~zM<RlbTbJMZcJfJLs#:c!Vr?WtG5L7J<x7NZI)6>p#LwtCj=Y58B?V*3J"_UR>;k0}nz4n<DvRj9SaK%EcK22kJjcplu]8<YsX2##!Ngi09fWd|n(nJTT;n0u^gUzwv85TD^qTWx//F*qN@^?L(]"x!5oq[&0&$VaEjGHhS?x8)%_a9_U9w5=`v;o>_7[qI5KXYFl)0v1fv+/z)`YS!3"xo}x{&2Mtyli*g]Ih$q=Z8^baqO?]0RmurAGHimQ:k7O4%Cy"2ix({Zx83x8OZE,uk}{!_b;jV$+jRwzMrB#$M~4]TvYppCYNXo]$t;`y;Cvh%C5QP_)p<cLlL%|oA=5FE4}Rzm{sb[M5;DU=OL{S(.VKAASB|!dcC3&a/7=~rZ:wvB=Vm0}b:$;cJ5LbJ[^$v#7HGKF^>~%Q&a/P_~Tr+5eV.j.|s]}*J<5MfPMV3fVp$8f*68fj$DaAZ0D!xXJbO]EAOn)9){P][=y,FbCf&~d&S(;l[_`+Kmj/pkyKTs2"q?pxhTz`vKr??eQWD2x/K2$zYn+lkiJ3YE#:{%cOXl&rgI*o2*2)J.~zyuy>}t,jSSXL4KsOQkws?,|M1/h31xst~,YFSAqP+k(]e6psy=r,`utFsb2mFd#K_sO|[:Qmdo=xD?$Iv*&sqQ}fJ%Lga2f;EN|thdC`YW,+c{J22Jq@(Kp#FgU@6TU3S5a#LVp>G2`HlB@ehV/3V]SuT,q/qxxT*9g5BVlHZM;K<N#??qmC"u<u.YTAdYV#^kJOj:v[E:;@BmyZR1qpp@p]gb%BA%,8vkW5vU,6{Wi()xpmqsx^!5Lh6*5OHch]!0R$#w=i5?{p`2Kq(_U@:C>X;VfE1mM5VM1Fcuq[?LLZd[/mdmvi*g_<k:goN/{k>D68Enhv#1NX9thT*E86=$;F;^_tUU1{Ia00itE:pL6?0wo|X*64L~T#:}TfmF;Uf.R~;Ezk,"t]j=9TY{Q{D31/KYttx%IQR8V*v#c]lLY?!Ec)U?*1|LR0IJa%}]29Cc;<$Uw(Y(gVePM[^S@Um61rA*5yDEu`%Qv10,:7Yg/eWB&Uk2@_?),U1~nkeDQ8m[!Sf&^cMqrrf=i%Ej8=8RYjC]5Rg{(mHp0(BHsg{P0TwCp3:bc87.7b]j`I<zPMoj%sSuP67JKJvJD_Z+bS_(cj/U$,XlfZT!zn4$g#hqz7Rw#Ub4x_!""<z]!]w<_wD}EZCyv^0mjP:sXu7F!I]y=Z&I]or+G:N~;n?)zKM8%$c8D<;_Lj9f.HS,*MHI=h&?,tk/2q=+l~=zZY:ZnbOSEV.1VGja>j|wfbdPkM|x/:r~`"ZO(&"=pZB2`6Ii&!+CeOpUr<,#Gs1~ahcAbP3$,419n!L$E%lsf(#aZYl@&Ii1#Ob1&Ak|xS_/HqnBn*l{IOld29L})e#2x_)YGvS11bw?Z#:.L3ZSA%tAbAAGHrZ"yEMa*BG:T2>wD8M"e}a+x)SCFnX%*4ICAuWEAAAC"EAAACAmUpLdtJ,):*q7neT3[c)Th8$c8BjP(Tdhgu|L(hi/fF9J@_ocMU/hEb2X.Ke%+%4#o*2<B?yn#ioBST`;Vv/H@e;8Fqk:gNXHJwI_n[:80a;>VV;tfi[*vtyJj2eS~*q/4y*<Ke9g<;[3zq|0WOkV7)^S}JrjNk$3K(MM]<n^;SUH9p<hfw,65ohFd5&_*p+7k><d)Ei44a0?9In^*"Chw,T4h1`|+z)~U^J"cM]gg.3<DO}LdVimp(C:XCDug_[(Z,D*8Wx.tfo/SwCWQXH!O?Kpib]NU_S>_X)wTN^nmDaR>Jya}M!jO9M<_2[jvvG9:4Nz<Dr>uT!OJ=K5DS^lp,hvvc7(8~W_F5Gy/Z27VhjzXwMo9jmbM.`9OzB;EF,h=4DJ%!n*Pi?/_v^|f9@<LxGh7L/C~n[fshibrJJ~?N~kbj<$AeLJ:8Fbi~)e@%1@U7o*~?DpguPXt5D"dPl%yc!!lqr`8F~1mHpT0`NSOQ3.%(S)a1Jg:jy,s3W8N"{G[?kHI0/``SNL2^b<|cs?rMt_=v^z@N6>zvB%?IBv.UHvZMf;wtt1hcN5H.J2^)lo.c:e7}^Nu_1YP:;nLK{?Lz@i{Jv7*_mWgo;??+G_Z[*tx|k|6Q7ZO+6YcqZ]+@6Gp%D)ln=@?+yi1z~]yXigFdzb0l.g@2dTP>=0Y7]"OXO*a3o]4vvb*sHX?dc!4[]hT`Y)k@J~cPZ{xoQ+p=!I5rZ4!?}Cr`4iZ8_0Gv~qO%@Oe01k9dZA5V`?0yFz@~c`QAadFo+=3Kh{dY{UaX.L(Goks16eGs=)]!xVl,6#b7.iHW?|sq=6}h}RVv`HF|<P8zarK34FXuC{0k2Sy#CKVNJ&I*C~%#+#:gH#:iJ{WMl;n0/.xBw"h;+@PUYM0S^/zmYp?"N_N2M[+4yZapq)7s*fKVV$(pYB/"&>Ez.FQid:Fu<mTjsshRi@xbtH1TJv~h8GYoQrUKWg*dD]k@clW/85pr/u7m4a2{}Cee4,%3e?:mv5;#z{h@Ch5KUhJ@X%f2AS:uq>bjONpaMezq&:9kJ|?yOx8iHv57h=Tvxg86yHSu^C57hgT"?t3G0&i5|{)vS8O5!@Pma4VaUr/9Kzv>a.c?NP;4yjYD63|R><n4z^+=[snW{(HDi91+M@9_,)fiZi&@MZz)AZO(XQr5KT37*inS&ENzXk`Ih[W=^SLQ?H8/,z+D94]~^@xJ#p$FgGZuwCZMh5XEwE#FC+Vf9q?M7BzLiz[GF0qtkO4YQCG|RNpJi|`Fo,zO|#~.4`C`dnKSdt_994}y&`21#n#yrD1e8SMAE.CKG=Bc<4Jclex2nJeI0`lF0ex&|fAg5#N^ZC]!ain5(Xv(7|&Tn0ehYz0rfti1`b*0"^eX[8693dwy4FRy)N,A}w%*&|x0;yh%w!zYVs!~9|jIf`3o1V0WupI]k!:tC_t2=i18y,&kA/VLR#K+VJr4?/=&!PxQ`0zQ5cJ460mUU?L(qa]L)O^i&g]H=&MLfen2e`pK5$~thm]tFE{0o?>K3+Z7kf]p}oh?8uZ:vY<&LVg8;qut:/Q/PDtczDA:[$2{m~5%HFhWSzq9]yf&`8jVa{Aq;J>1wTn:EUrg[!aUCWxW(/(7[6s}?4huS~FaH(Vek*s=hjqs/kH>7@hXsOLzXm9?WT+ZT|~c~CQB^`vCH||7HC,zrOaFfw(b&sVtZ>+lYAw/kZ#0,?2rsd1/hQ=:&{={f=d$x;.lkhcPB<Te*4gZ0+@V9u$tit/;Kd;hAD1f<V):(e"U5vV|*gn^tRr&qx/ZcH_k/(X|t*{9>Mi4?)n<7OokFN>0cffqicM2T3",$iY.od3E:D%FIuqI&joH>eI&{OL;Y{d+15V^hGd6@YuP%boR<Xisy%h98}4i;=@&kE6*zdFlP~:=rx+%|Ub{ksiwaoI!!?uS;EG`$i8$+s_*]gqz;`s;5lLiD(l`0!L{_8P.tu>f%C%zaWCEclE=T#aPk?D=&=ycNacW2j}9YY;*AV&A.V>nIqCxz/8_3%8$NxT9d9pPJGZgg"zUm(Glh64M@oag;m+{<gPb!@}"o+mJmXaLkX)"?@y9:7:fK8|okVrC}f&/_)yN7~}N,Yx0`P4({t!Tkqqw~e!5NGWO62S@+`BS<M`b8fUHBF+pLN/a=l3HD.cYzX4F&oR~4Trpq2v40k8lviJlK;YL|u;jZ?Re5W)Lisl<`Ati"F:[S2^t!g8DEb1sTrG[9.,Sy[XCb31b(8q*%doFSBB,/uUviC/J@eE$p9yToN>8uV7[?05L0frvOT/[u));?ITf}QL+`Ac^3Dn{S_QkOb^h_7n_N_*@3U;C;omeDfYN(K=:0)a#KbKaSF5Gm]^m#)}nxkNiNIV($/~2}NFMc(G."_T|{w(<lzth^&_ZnWs,b,7f=Huf]JRWKMgg!!8G_2|UxjD8P?1o6.*mI}ly)0D}vgB`"~ktLNH]<H(`~Ii|jkxXnsuStm:Tc6gn*h}zP08i+3PI{)/+O1|cd{,K.vcT}WReiX`u]tr"_ax.z"P5ra5iK.,a)P*Ncnk#>8eCxO`l6X4]n}f_"PWnCi|MVI8zT%"X6,v]<j094DTZ(oS_c31)ry]|(2D"=%p=,RXfy!D$Evn}L]Q{ovn}g!a?rVkE!cQ_!:REjELgvcqB"h/leC`?DB5o[$r{TPou8w{c7|;Mpmra.aeKHf~wuzru#/Qw(E78<>yQ+8|z"q4.>kDPB)G6kkXTM*;~L2<]qv<__}=P~PdS5(iC+I8@~$id$cGJU"9V?:e;pAZ329b98za;T@w"gdVS%o?9&zNL~:.)P?mq)mX(yw7{Q4c2Coh2CH<>m7[L#]F%/UXSYT_#n{1HF&$Fmr"zhn|[!aok=9M;k0Ta1tnC^ZG9C{@p>ih=*P^vBA^p/OS?xJ,}nr);^]cX+gQqLO:pSXiQJI%$bG,^h!RY0>,^ci#g5fcq8%xS:3ZANf*7VC|H<Hho>&ngTQzy~3MYYOmxIg/`}vdmuG5{:_Iv9V^9+igC9=?JHKUQKJK7wx8*#cDBK+,"_p<}!PDEA77l5|14^h*9WC;<`k_,kVAgAxMGM[]v_ia0WL<cAEB?vqE.w2!t*k@ZZcx"!C`b~,biEg15}#nsct_}PpzrXq<^d9cf)N`?{=hn#`{R.N,74pw@Six5S{n~S=kT&>5z7LXi(VE&7pKuP/a7a;iVL`~Dqf(oD6;~*bWa?juIPTK|!>>vgN74<ax65ZQKAP(eF:"g*T9kdc}"XAZKQlnXKGu!igBZDOvg8SNpy[gj%~gB,N$6OloR=$^TwfEo"z<[K@Euc:YKj3!du~CnSESIJ07bj)>5Fb.DJO]^Hqq_I3ZAckss{D[grHH204n<uj0M(e,+W{>FG0Iy`.KM>K!7c>lTT9o{3%vJK%(>(E$5zwtsB::G`/BD|*gZYi~#d}CTz])}@tI{/a&&NhOV/38}rO<he@$r{r$HUKi8]@)YkDaCxgcP{DD6{p_G]B=kAb"9+(yf65>b&uBu%FkMzZi^+/a)}CXo&TX8C:nd$I+A7eR1D]a6y<w}0|xG#K~#v4wr+@939,CsYFw{>bRl&g$mfjkYrufu%Qm:#<(Lg[ccK9:fW?JrbO</F;>`O8Hqc9r^!^pN%utk.Pq.^b%]@yJng=gI5O&~(+O8!/+.)o|x%0c&hwS@vKhs[5$vVqE_Pv4T_0kZyyaDiTl8J73noEJl`pbNG$D?Ec?(K+)04U*JLF.{=1FPRt58_kuWzQ@k3jf[JZh@K;rXV=^J(^t7.hwvr%ro1^"G]!u>.LhYgfz<3)6A[5Nj)v^]jISE>wOWq"}9e|+W`Ar]8oh0}No>`Xjw/pVpKgW7]zg&M5[$s<8:xE1cT}rUv!#iG]*Xf!:z{@,tp*k;D"6p*[+LWy{zd^JNNecw!tz@)3W~Lb@|IGytZ?H$jfp^He}12U#rGPC[w8V^XF4c(3]|qri@X!WExl6SQC+p27`1bvzmXTa!B:mI})o44]3ZT$4!u~X!lxUDim[A4L4vcI7>p?Cp%"rw:#pkP;iCM{VojWITnWM[w4]b7Nt+$j%9y3OKH_L[T*{*<p]#tdz4*3B*_)>PNxWuUsp^9&edn[aG"gOnNkV)Jo~GTEC(:&9+t{U69trA^X|S#i:9Y)&`LT#aa<_n_%c5fpOdTvUyQByR;syIn)N,=!9(ES<pHUu=REk&/ZZ[DJ`H]zg*EY@zD^hGG:OI>%Pv*qPR5vid9*#F{`;.tQ3}G;YaGO{JE[Ns1V>p|eF!*A}t;z^3.?#z#"fRe?n_gP&a|SgW}?uvt,oGv.(V(|U.(nIw>{U6W.{r_,]s=<YDfSX=uxEIAoOm*k}9zlo@0dhL#|Skh4]NCvc1aSMp#6|(.*^@Qpp|zN:?(0Lhg}|NO.S(8PvZ+*I{=y~Gg%mI;vC&5AZ)s~/6ua;gworJRrHUoQ3+[0B%V4QB;@KOXwF(bH|I_cJ0(PC`cyw}|6f)h<rK0<n$,SDCp]8cQ!bgz3+UHSoiF~hD(_J/$DW=tE$2)|"c~qeXTj7e3"Za5dR|O<61!UFV<iban+TbNWaY_F+G})Yld6)k=mRC<w#D:R0*^z=mzFmv#x8y9baI!WG~_`0N3QU(u4$N}e5md9M0njlne~R9]!jgOEJH0Ll"T|85W!1qDq8vn,Mf[9#~[#pK7b|Tc;EuP$1eZbrU<t~9n|iF*i4m|J!Iu1VbZe)|:f+rHKO(@hkmW}T6W>Cioo[Jc<H:ewX1QgE_h~jpQ&C9rOX3?.po,FK8?EKT*Cdb1p/AYA>5lc]jxbVsgM}+u<l2vodeM!o)5:PmuA;jM=1m!PG%ho?B:uT;sL,KbbUSTMQt/Jz;ki:CVKlop,>(*/44K1zP(2i.?Wt:tIN=RQ0M442,phZi(}rzo|6je5u#WsuWW9vOcq7g/h~8TY2b#}fUqV?7%AA,mtR/wMV80:xxq[^7x6_zF|fP#E#>_S+C2+8^saAN/viZL_!rIEqx|gO::@V/,&x9xv(8Pb7]QZa%DBS1}ZGZFr&y>gx+h0+`;<%(r$(bKA5j+?=@|b9Z6U^x9$pPw*4@6:roy_8,b&K_pE2UVyn^[VE]DEIT,#W&Jx%=}DB@6>KmB&OZ)DoW{?@oDu1b,ra@7,tA>&v(+qms$aBJT*[5RdcF2[{I@=BY:&:7#yp<)]SmJqkSod`7U]]jWC!0+xRi$Yrn8N#8dG%R&H+F:YaBaaUwI,1g_=!8<_K@)|7xsg7L,>JW7^ffC0gT8.;<:Ez+U(FgREUl!4a*KzeTHqcZ;?PH#MrIbOB;%xL4`QPhcZo!51gSaJBwx;D`p7*f@/&fo&OS:.Eo@1cJDt*wOZ]j{%kc:$Fygg`#G4wgs",:BYay(^pjPfb8VB8JnGTnnaG"oJdDI8MzLEU6?5U#BCqw{8U9Dbwl+i0)gg6#E+EA|eJo)wgR3KhwX~jwRugU#kdJf5f|C5t$K/vN;f_EbitX3Y:v4RbhOT9KWvaI~lZgzm]5.[Y5,25Z`k9u45ja"Qf8M5Y*d~8V.9{>K([(I|o.*mNT,I`.F(N4y[kUSuD>!_QQsWfLwZaI?lLf$:fX{"+e4]zY[V>2r7LPW!p(,awv$)afc#]vEpgxfDSW0|3cRR?<X&+DyPrOet3?9"1i{fm%|[i8/+twjMC.nj3I]}3zh)7I|m#v/?/1|Mv6^~3kYioc<6/`36kQM<;$0*gtEXJ+aP9"F?*8%B!Gr[%*UhKR*&DtBa&mopx{nwkRcape11MKwlcu;ezM{R,n*R6k5V*F1o3[l@Wb4PB?;hlq;p[PyL:~`hQy;V/6TUWZ5Vqgo54rOQYttd3;^o4PV_?}FD_?f=40uRtRQy^&K{]W/4tedzc1g}JBx<o"YV$#fnIW%rX&TGG1)_e8hnyfMAg;<w~OD6L8468E$C?8bm`"&yQ|#@Hc".;x/NkD~J2@q2[g6*_>Q>r4AZw.5]&ib%vB+G;z.@_F$mdzBV$?R8*#%$1iw(`+)~u9G0tBJjelT.#ecR0};~xzACvZ^Jy#!ZF$?}Q!9sW>/}q$Q}QDc>Y.OK*C8l]NBl*cWCS("e=:?8RkWd3eY"[Pp:POU1B&wP}}oRnTTvQZH)dyC0O_~6.aIih^qubdO"Ga"amw>xI0%VI36Qc%Tg33xh^M;]~^I>s_[J;~ya(&E]/nIWNCP@=Wkx7VWr),17e5a6x3f+.Rb#rHmk<#xr7Gj,3aI(NiJ2vP=/F{1xSe4.jr*xT0Cm&@i45O44x@.0{bj^^Ct=ehPz%EAR>ct^<RNgcdFj&4^{FSGf2wo6kKYOd}sPBt4P|.T3gT/q;*gXf"Y8EWJ]0$787D!{Nf.db%<uDhs=WREX|NNhTfKF?6E.^uM?f}j)"=?B>j6D%Nz+zzr}n3zQ6wt=EUEcAaofb+ea=^DT]R5L1x6X!9RvH+5QLS0)T*S@4?*MJ3c*jQt@ZM8Rkm@:O)*5Pr0$?m[9JXCc4{MTtw>7ng~nN3F4d&d75jvC6V$NHOlr#r~mnM^eC5`fZMLr2m:Kc=KFZ#k3k=)Ti67ZQ;wB.7TK@o3Smrv.euP+IsGxQvRPudwqfMQtYE&e=DN1JA9^/i(yy>G{Zc&(<#7H4qFxt]{a!?!~x",kjS}d[J5%vE?Ai4!wGX^%VLf;7lQAm7M$s)O<O#4UU4/cFf^bxPQ^Q|:0JNpW_F)`F|D{`rm]p[Jmd&@dD:~uC)BK7xr=4:}B%]V:mT8$HO:N=8/(`X""68bW%upZ)K80ulKZ%dc&<=MR6ggX*@&w$NhHP?oA{033!5_T9FhHg5tF2{=%Qru&jK6y$Oe+t)0SRf?~P2fV~1Xv[b?p&^k!O+RvzN64a]O0!:W6Xc3u|k:MMYD3Xup`ahf<wYFj6q;0UNZ_%qWZAHP[GZ~WEr9{.]1|TA`WqY4>3LB[1EKom_)]uFtkk7~7U+xX)cx<LTK"oZk:]{5hy@YF*^duMRb_k08E^.Y`zAzVPT1sb!Jo<@Qm6X$(WvoQ{qH/2J3FBY&]}hd^0LENyD.4$$Y&G!2E.~oT$+cy},308Bmq#s;"bZbE#YjOj;HLdk/ZNf49Dskt4d^;P{b?b,HHs<]P)*Pa|ZIT=&(91*J<;;odoOn$g5Cl|k6+ilt|et*gS7C^81d1()Q?/0t$v`ecyrPBolH+czMAFQ2=q:;i>gi&30BUrN<]8T3<jYdWM~o<fSPuSQ~CyQfbx?+VUv$}CRz$l%:j@2E}{nu*zF1C7S6%lhU{@C4OTaVGOOrXBGC{l9}EoN;Jw#SCNv1r0bMjX~wYWC8VQ^=TbmHwNThN0}*s4T"e6p~dcYORdKgU?$`6jDM&{F#Fkn[L,5PpSGMP.:ogFg+2N`nA?e|#aufbg/bF86<w(Z2MXZY=EtNM=#6Q{=Z^G:eBdQN$V6$_6{F9t$ZikF_)t=dWRbz*CO8aexu>O"cVv/[Z#/#YTd<USRV<+jhSBb+Bzhe}c<4j#qwe@>ipi#ern#U+?8bs{UTM#~jV9a4ml8pEYmZrX:vc9/Bsw(;31`BK,#gZ~%w[@OPVEv(i#4lw]KU#<pbrG7D]n%_5bqursnPQ/7&QQVfAL=fAN&7<v_bKxf]BFQL3U,JE9tWHq/w|UPHm,gj3p0?viDs7Un~8+#CvaHmjHkl_BDv2NG*@oDDN]D&>OS]Xiq,XE?,)#S&4w5^c9Ep+wI9+nTyDX&owBmtD>%(mt]no9`$_S?j4pRBuoh5wsb"WfG_W%@yA7?v>$W?"u,8f}"83!dQd1O%Ez|hWN3!plRfki;"`*eq^cd~mOaT)u{zOrNX4BJC1.e@i}~w~yJTu!QFC<02[9$rz1Wx)*hELUIIO>d4aQ_EZNYDmdD<m"_FQ^L>X~I)gE^X{AT9!ZKWk]JL#?:m:s"dJe$O:0*hlOb05*w_@QvcjXKP5o{L|tfz.$[3zmj&$^wo$;sTO2*xdZE?+$mR}vY7u}|>_jo}X!^hb^VE;z7j|;+gk~vg;Io22Une$0H%"VMFNBJXV&<OsX)n.@.U"OLj^JgNH|i7<Ya*HB~R.}>+o,VF_aN$#Em>Jj8Fx0++[0h6!6p)1Z3[we(o,z$z`+d%k1AVxivN?|CsPwF#P6)Z11,,_G|S6,g[d!lqCC9m|W)>M#ocvcOLV&*<{V)qg8;C=~ar6)pI)ar7d9g+VT:0q:u%G/CtSns)~hsmK`Z{6D$JCHzYmvXfqwDY1SW>]k.&`tDVZPwn#h[TMQC<H+ab9Rxc`">r?CeySc|Ve"{G{C&{om#L8V=5shE8LNHcIgp1+c>z*Zjb5w_2d.44>}aBa)kYFg3mdYP(#qS9flgGy^rRJGv8GF0k4vG(odg64gp*4p?1)7C!iwu(e5d2y+m"~}p|~EpF0^Cv$zjNswI")e&s54B02HvoQ`|hDrt9+ef(35`Sct?qQHd=Dab>tOC6;USh?:ls.z,T4wtG1wQ5TL`#dJJTtSR?tn!u9E2{>=fBoCrxQ7n9KZWQ>$bjX1u)(^hojZg5u#Gp11(zvIKD:G@/MYXO$.C:x~sk;+V:Z3bQzX}LuBV31(M(RtTsz6$@Gm*aZpx;LvF}!R/.[,isGhzZ|dTMkf12L7[EH*OC0dwC0Br$H*+VbJX+,<0jMb+~uUUe)z2%{Xpxy=s+64I()7]_OAJ>C11CXRWT69w=Onvem4k@(M_o%|P_+M`i`>,b5d{rnz1QwjG#8#U|t0fV5e;1HyCR7C$x?I92L%gc};gf21Ps*Na4iNeA3_oc9]y_*="rjM]1~E&zx=(U6^ydcx@w)cw^V$9qFK5R=GXs~oti~|#Ma*+DS]uqI.c[pR=>gbLC#/af(DdZfF7slUXVfo]C?|D^7aoGO%n@#@cr^@(EHD+%AfBdF0bE#E3%R47_9O!wrB<CA)zW/|P}Wf_Exh1jMw&GC6;QWS"W<KNZ*!fqXHTyn|M>/[h<}f_c?0kHW^nTuEg>1=z]%>4wlq%P+n|,c|]Ylf8xv|5rM"(pyP#ju*%FPLA3d^%2EG#mP:D0+z=?dC$@w.PIr{P@/7S;OtbEhLSzzs"@ID<@t(E%oOoX:;CC#T~keen4_g<24f/K>;T;5&0)/vi}k`g;fvAyPC$|@%fnr=>vOSv`h,M80Q2+)`RRPH~9Tm0ix^`K9m;X}ThuK617"RO1O=:x5un/5GcSWhAFb#@/04qMxOT/ZVhf=fKRSZdD3RJ`()Zk[TGX(v0?7IE"Yt]k5*]5JMJWznb]R{C>[$bJ(zqSXle`5GA:t2S_)QqdRCA5))Xo?"q1#FYW4A0H080I1PD:u<0U]C0wt/DCi6rYHuvln3vq345OkGwGh8]9@Q{,4x:1/zH_*CZQLxK}lwR5gVo@CSwBnD0>DGQk!X+I(n1Bn9*C0|3b?dcs64j,t_MGt71`0F1j4rz&!u./4B;jWDX!#oO9hU4OAvU?~Uo[Rv]nlHg7k@Df9r$7@bqGe`SF?t};*SP$!zlDa*oD(ZC+}TV{{nS;Yj<7@uNhT(v}_8hHUxQca@i9mjG:p^>v}&`Kt*=JYHxmBD&HArhXBM|5me7$Yp*&g/sn;E!Z/[1sx!<m8G:c:0lhTC6T&4qqjojqDWhufgpC^blLQkx"Bmp^!|mWY4B<|6SOR7uGO$rF;t^hpaW=4zMtOMh_;&?cv@0m6SA$*(rMu7$FP9V2BvS`n6/Y%2!m.gSij@r5sG+cQM+c)(499Ui:/mda1>h.=vOvnHoeka#nyT`jqO?$_(k2;}5UV7kt5l^bS&fP`fDT{%SI<1Ms??wm30?mL$B+9|thom<>>ySKTQ]oq<cFTRkZbm;{/JO`;ROu0rK!o8`(6_c}y/?yj!_p}:6Px~YxQY7R9<_Y|)k_">+Me*MP9|]`?,!e^}x?{hE6fTc{0Q=iHit|j.g_&MY]y$<4N^Vx$cPS(8:2Ab_oC4=luUADn}!Z|6=/i<9_>fpa1i"Y[Yg>br5uZF9ZhXkBpwTt4cs/F_5GVlo@)uo%,!uI}>,r+)`mMg6n}Wj6sG(%v@rD/oTF,,<?ItJjXk8NbWvd!b.WOVYHo?H75vnBNEe[g!5VUj5WGWYg"B.Zt/%|}5^<oiOtTb5NvvFNfo_Uv*iFD[0yFc><,,vtM)M9accbLziDg/,IT[zQC}_~.NpH!1Q%Vn8#I{kFr2h(`{9FlIoFan!y%O(~&".s?U%PjGC%Z~[51t[]R*v)%0?7{JJ?9:pL!4B"<^(vyX{>vSWR4MGd2vH@|X[UNDTDDhSV=rY2Dpf:{%C4i|fMiXx>7Wy.ALeDD+kF|0$5sb$/P`NwX}]ckrJ?_R6jRwWnFZT|a/yxjB@uO:|it8bjY#lsSu=ik.jtp@sgG$YJ#2?aN3B9<?7)004vLYC,`0F+Xze[eES0wu79xh:sY+%lFd#jjDq9?YnJhXL1swZoIQ5G`opLU!^!X0^:P6QkoYc(*/tc:P&F4F1>v]jXqRkpl7|Px,>fJQt/XEbLpU12XQE_,(a=m;6Krl=vLa|/O%e[Om.KKTa+EDfKIO0/8qW03j/O7&kpX4SjtE_[S^aTK>}q):p0#_BX*@`7a@ESQ,@.q?2EMvsZ7e,9mWG/^6a(L[&l9,}Q5=e3r7Pp&)cYs@X$4M!GfFapZD&[>xhl<}:`%O%mqOZ],?1QA(d"fDm2pt>IA.j1S,19B0c!LRlC;GnQ;NJ6JoE#2O*<^Qs,B72kwoN1]e~[v*l?Y>W9ayoQzN1mqhlOs12&q=>~xnXETcmeo=zL5l,pe^nYb7BM:FyPWSgey_w$1wVH24t^QQpt2P<wL@)ERngUP`(7&`:`~5!gBSt3s^nFmo5QM!w{)b[PAHoWmFG59Wq1uw5l]]=`<VI9PJ0xAjZ51*m_x]6K):sn=p[[)Ri@/`>>~0aPzjJR}l~]k29},5epUrq)V9YnJe)A1wb&4>rF?G7RkS(sMPz75ZQz[.`_piC7>K,cLYOxgCiPc4ZU6Bculr=zFY`n^WRfqjye(fy8ZeDKJS[,6~)Eb|Qn$^E|kM}<iIA_bah/BMel3kVsH29J/s5%@0|q&t&?9EL8Yc0*4adQWP:q$qDih)Z>8/L]h*.`S.h]U;W#>s2.D((0<A:RFoP2&F;,@72d#rf3Aqu8GarR4%,C4W0Q/NrJM~#dH1P+HQxBHFg94Lmj^q+k$,gq[f5.Lq^$m[e+8a7k;kpH+v[rA7oy<8SL1;MbdhF#7fPzerv*.6Fb2Q?1bk&!~IAb6Ct:Dlh"hEda{cil!`O&kJmehSTQe$)Qc3Osi<U}JO;Dh?y<m>*B+V5B3HY]PRLNN5]2RWk[oUP:Kg{ZF<fqm&W{d~[cvWU%5XSjGr{h5;+$L_"Y5.j<_9[O"]K~a:Du,L2;J!`nr%|PcbL):tmzHXj2&xq2dUH%qiie<hdfgC{x;$:NKsige``1l}y>v=2G.Y!L1!?TDbyrs$@9;JY<hZ<?mis`IiQ#j_S+;*&HN0D^<}5:fj5%7"fqlg3g:f9Y%d)bxgO$E{bFH~wJVa;x`Th*M^se+c%L(,R>3MD+`N9$v[DF#R1FU+gx!T*|{UeW|C_6hu4Y^D$t?qmH3B6f1${ov)K[b_sJYlPgn)a.gzMIypNuXKl<I*6c?%LSY}T{Qy3ObhUx&?Tx,BsX&U<v;^pV,xK%/TZ^yw5n!5)IH_t#!UeoS^lx93mPUS?BF"QE+a~z2iXz>C5_@8oe{BInUrms[y7I.h9F%8exp+*M[j<_q"/D5@Xo,Hx=RP!^i)OM6D~4IFK$>a%s`#3^?xL]VqrHTj149}Qm7~6lj6$S@|k8HuA(<`ajv.7obP1Y6c"0RAgDIh?Da=x6+|.6#]B(!h/xrT%XFtx7[Lu#}IFY"1u7wFwt,Z8*.2li_?5S4/OEYehA^+4ds{P>i][[pLE%atXr,dED_@5WBZ?;qZ+@$qt+zgW)x(:.e7Q*IkJ`EfoclGsPExwuJnMcM~GjSHMJ1($g"9M|>35FSJz<Uv#T7(s7&!:Wsa]AX1sh}Xp8*,DL>p!^cLi2=xAtIGR6do}68yj&)Vrl5%73<5iB.{**2tr83=SkL[0%TNc/dk/q7j<eEV)!MgOieurJBuCwM>*NtzL~a}v6:x_;MVce{_}al]uix!XtG!bdNxEtpkD6B6x8mZF<+&;1aex0+@=NI%e4f!|hr@>+98Yn"PsfK}Q}X(K>h`4_9h2C:13L:PJD8{^II1TknsOi,x<IO/>J@b?R_XQWY*")GBcJ.c,O!n&$!;?$ZvJL,(TBXN7EE"|c6+<*#Dnh:@7GV^];;ag72ly3A$tlLPMJ<SHJp;#O$T}!XiBBmIC[k4)rl0sT+Y:Vr`)YB]:}X7$<`9mzTK:J..vFs2LaKZyH?rPl#[$WrE`jO@NOcNuUY5c?iyg3Auq1"J>96e{3ZCq+0M#SyJ~J@HcNiVFGCw{|kS5`r2q/i46ytV[;]m,k`SjEkDSU%iTsP10}`J@iqZgE%^@R&viP:0zH8Sm]yriPD@2&s<IlfU0QK&@C.ep}(qL}V|.@`uLTFO,9nb/GeINXyC){5;ML^VC^AF?6<EZ=Gb/+%"Vpe3Bv$F!jJgy_a46OYcpZ$xw$mi(f!hMXyvMoS{UZ1<4(xQ}D0$iI7{|ZEU:h2U#*P5_BS/A@f~vC0v=[QiURRCCN*}l)Yr8XE*:M<Pv{;!G5nR|G+%.T_GsAQdMW<2uWydT~)D9VU8e#%zIcC2U^QvLHcZY;=[:*u~`^3lA@m%.N!#Yp!#y*q(V8J>;pVgsvd*y$&94h~vd2yi778Ifd|;vm8bPS#Q>$v`%>!+`=:IeKdo7|8VUP6BeTNj#x6XCNxX"j`N9tA)GTW{GDJ=I#BqDHt^7ggo$/FG3~8gRs3VkC:B97AT0Jk6d3FC]]JOB*A[eI%?!VwSaC#fNOjevgEn"oe4sW]?4uEOS+xX:+Om8daAEeq(0t97#,+LZ5n4:{{R4wgZr3%a$"j<(nOK},4ftn;,QDKa(FGjL9K>j,b;;tS6!;x|&0upQyG:50#CD"rJ$x~8;/TeYb:c2knMhMo#BBPotD^i6KM/;Bl&b5sxc?P/LmH#(T$Z1~FL)`[]Q[G5t0v0K0Qc4n4L*IWihIW,qaKLfCgERtx^*hE7s9@RP5Y!:quKp,a`0nT*(:!x7FzsIBRu$c4(4GWfTBYmT,z$3:!l4the.eiX)7<<`$4gJwODVjfp6J?#WcwP=;m!KrCZ?2J7zD;mpbgO5)BZHCGnb7)nEbdw}giTn+3~R$Q7g9,QxSXRD/ZRKpQMLW@]>wPp^t[W_h$I>pM!^]MHNs1vy7<CG[h_y5!>ez|~!B?x5!Vw^S3j(W>`k;!xNRb/2!(tQ%[*`dL!cfpFA*!D`LeA{)zug^|UY`lkx)&xwO?}"t/v8!rOuO*051f?3KSipS`YpT0S!K0)#~q#;EL!Ff#6|N>GSlqJ[|4},eXtJZCiw_;Kl%SbyKE#k8FnIMz/`>FMKQwOs5o.JVhSc"s&ni9`j_}|T.jawLo>,N#[a&$OjIeO$$2L`>jaGDBu$&mk$QEJ)X/KCa#zWXXucDMHEo^z^JUvVr>jW@=Vm(,sh[FC%~{ZyJl[dqD@^gPo=QJTB$:X$HEFK@ap@"57H{Xn#iS*]Avw9Pu#<`%`Xl&T/%{e$Fy=O.JeLpr*&R5RuAX!Q|wRCbA&7`iYLqUkxhL$c"u*=TqNtwEHc8:/jrvh]J}^{P/JY8)N)hl=7SVvSYW.P"AAOyex7#A]8IQ`rN<JWcYlP,9Bpw*WvO$Cq4(v%@l{pLGus`E5a^0VwCHx%6d[#SH(oZck%KH)7Z>]@KMa|BOwve4T:HMi"==/!z#?1Z[)~T!nG)Qw<iVJ1Y,2k9U:Lt^qXkO+k+vK{#$l[OP&OOP4^Y7bbh!K,*9%l)uZ|E.)?Y0ChED]MIgC+Sc:4#AhHvxtrC5CFYLZZ0jAm[y=Z]5a}TaV:aEjw@Y=BRMXbf`>lx^{&9%{}YKX4skZ.|XDpI,pH(xd_{^ZVOGqE&HB@BC]4IBJRNI4c3gq`lDczWD9]j+(B*?${^23tG9;8;H!AocAi=vIlZzzvVG@]n.W6V;<tNn$].M.,ohBk0h6+!(n@Q%FDd]"[LfN8^hcXl|E,8%1h])<z+=4TIx0DL)6lwj[$39f8/7`spGqAm"?X(A+/#luQyBuRz9I{5qmp&gVn?A<?y9MLPB.]s]q7ZlAxsLd;z3DA;n9kf6!l`yW/HF)la{.re}{e]W.$(8gGrbWcnKufjJYYv;G9NarDggW0L]6wgs,fxZmXtX_ICfLMH4w;("E1OJ0Wh1Sa_fkQQjM7Sht>Lis+]DW6B^lvcXJm*Z`gZ&ne:`,R!UhKTj~Lq39Gv1_Xd}HF?nb6Nq&lB*K)N@9,Tw6|Fzf;,paR.XVUo[MP=X&u6hFNpO0"~Obi@qdO#U`sfBPWDG+mBuPq^mnJ8"Wyr9vyb{n}U<AW6C`^r[k1$3O+rPKMX>NDLo!lB`9MnI%4N{e$eeawdb4v7B_.cpEFrVT0@GCEmy(:&(:_nVP~oDi%btMv>zdih@rOVUt?E%Cp{>CkD}Q31#Fd|XBX*h_smHBd7AH+2tr!Dr]h%EP+3A:,<q1V1HHhLmj,_L(5lHRql4k<|/&CgNJ]{D|h3?`B3YDsj_p1,.AAGQ2CKo5V"86S87IpcUybFr_SG>VVLc<f`ZD9C`zu0SBt5ML2=Q/`u,C&C9U2n?LAES@~77;I*!GpRgr$6|8~n2U75H$Aj8LacEPH7>W_Qxwla15p+Ux69I00p.QwLD|:f?RxoO&#"`SS`^v}Nw~oRrDH4CH;Mm:sp[pe9L!8(%R>Usn?vTC/1jURPZ"Q>6ESk9#=^Hp[epCuYcrc~)s"7kbtip2zfZx5`7_?ZfL.IyS>a=0y8ca5vM.c(:)pkLGz&o`Moj>~9ocGVlLx11aOsCMW&Sou0S#I8cf#N`,j)DE1u/m&qBrubi?6OUOu{+3!^nqLNEU|0wCtS@!=)jQ_NdMC5Di~M7<mp"xRdjonATbl_H%Mky/$Vt5hCYob(;U[wx/t,Q]<#bgI)tuKgK4T/uLEkOXc0N?.eSP+wx~Q{JN?J_B:$KesZcn}w17IIIsURVjT~_et;qkq|#LrmDRLM$dGtkeXVk9:V$6l?T8{|*Xg>IBryr)b(hxjEkeXDswnWquF0qhGU{mbxp7B{7[{YpMAcx%JY[gP*Sx1mm#sT?nw#OI)rgqf3/~F1GSmErm9((u0xomGRZ7#wSA:deIUFGXV&T^hTY@@yc988pNSP$QE0z3]*?4I8r~T9u4_bK9PyCIYB`7QPP(XDC)*#UGm$3dVH2^.Ot}LM|LzXOU~^)5o,GZSb,~Q7sKdTiOlanN4NDHRvf=r!sHUbRMT/Ebs#M4iVXD!o"iUkiS|"`q!IIJ1n!E(Fy@t<O9UsH7:rc@U?3s9~;~1/18@k_xEyNX)k&Dqb~cpw,FaxEU/IagmYLaK|~gKm"=O]f5@.JK(<I]47SM>nvE~k%|cE]8$H7(k>vgX%5>ES&Ku?Y6OcdNnEo=iS"w%~s!&g*b%9u]3ktrR[fdBKYd0C$B6cT_5ac|v7c3G){<QmyiIoOy$M.(=s^hYd{]k?{RkiQ}cL{y4x`ExxxN^:7W/SdhZT.(0_%m?EHCje<25D}pvM)ta[DBr];9###?gd^B[Z*|hfWV"jrC><;a&OI<+jE8H`asXq|l3MUIA~Tfx~$u#4tww(kOKYTLRPE?]FJiziqqcou|<qQ=HScKD]bFc5GJ,[l[`r)*:7!4Uoia4=!#J!kH_sF@mSvD`6]75:U/RbhPMHXz$S1$!qZ`~vkkB;iSQCJpj2w*7Ca31is,DuEcSHJJfI|EU!sW{9~2N*dn91y2!y;Jmhu:"G)McyxUzvUS.R~|/mKfF[3GP+r5DM~zHw~;@P,.sDZGXb?~6,3Si2""@63VU?F4OG[3kNsW91iZ}Grv~cuurg;1&:!m=`q2H/IyywT]Yc>JVQ9hF5No9l<cEVT>9Sef>OcrHMV_VV;.l7qv7D4glLET5:qU_u[?tp2pQhSyf3;dL6fi31u6,5AyaQ7f1BWw]9S%e%NwH!qRKp6h46^JJH}3Yi?N<D@z<xBIfBR.h_Lw8/4cpN6ad0V2Vc1>Gql=$D6n6:=s<@Q~Z$2B0=zw85iJ>m(fw:,!~!VilE%yR|432fd^Z<z+mZn&^aIGd~9ZBi4M+x./~q~x/gIs""Fe6!AtTP[1R:p6y2c%xB4;sH.;HphI6O^i;zlU?L8^6S/>rg6x8mf6O/4tIaG4T0maHyNQ>81$37U#{n;2xg$7pz7L[N"VX}PTF$X_@n]|l&4IXfEmRZ`M:G"L7{!]j/ysRLW>CIqwN1nwMxBs%h?7c1kX$gxZ,5/}:Oh4J)9CN8jse~mDA[O/xi+YEP8UP$.jI)#8du(N9yfF?F$G+{!Lgm|RD&n$NOJMk)`%Z+sIb6$i(]U8J|{G?E7]V7(~7tVCEgSbujx7|wd"^V"=Lm<>@`eJuIS7AAv@O?H|o2+,%Dn*Hu4rsuLy,rma;XE!Md^f:NDu?;{urLX)SbqR0)T,9JgLc/}y.c)W9%yo~JU@jnc}}lRd?YKR((Q.!:eiNzlJ0DEKL*&0/f;V+n[_]CJ$=7C;8=P3*zw2i~0Ax`|b[3wW7&PcawU^x?6tVQkn6oEkHB.}FtiGyBB/*=f^i!0*T;U7%P[(qG<5,Mc][+UD"SGF<(Mr&eeM]1rcR.0)nD=vBG^,|p%2+usLlF`5xP]1Rn6HR[lR^bDHT/PdXx@!H##u8fh3sF>!OP%h6oiI<G:m0kTg.#t:()b~<m"rL#./7X.W02vS%u7J$*S#YK6VdI9QgzIsDFUPVIvO4RQJA=p1)m|rfn:9W$wdL`7I;=4y|OGzi$>SB7E$>YG)~>Sn|HHb&ncX!X<r;bH,9m799#pD<<bZOZ>@d)m5mytpAYQpjKf%?9bjSwkM]3_vaIPpT]j#0oNic<e[nf.6l#M:]:AFSVdkj;,%BD/o;w$n"#"{J}Y*6sh:tW].h2mGC70u.24C6Vp@bb@FMb~U_bF5gK}zqWahG>M0lzTtbwO>p5s*GLxFoM;,u4s!ekgt&{$z_<vX=k4~I9xa{ZSl8XBJ_~E(HG{E#9I&3<$0Yza4>)prBTu<Mo`eig/_s<0HZ?Ln.gP9(Wr~$2m~j_!/,W;I)tDfPou"(:Y}ptI?|4gku;fEGXMqicE?))jzXPOi47Ep5*dw!*~u?l/.1oFUQzbwZ^[Qwu/"JERWI$;B$zK3$!TSQtry{GJ>Y1gbSJh]`TN)Jy,&N<*x|a*;_ir5y)eKWSDnTp`R5aJW~9(Blz12ahC+vH)(5ah(kl>oWDQ5iT}*io~yTN!Q+#ZQr9&Jf;.$u_X<RORh#=q0oBw3{2AgM!SXNdOW$:)tbo=!g:@zQ]Qf6sd?3T7DDPwZqLV&>Ci@yKZ3^P%pR4v!hHm*)K;oIY11bZ5:.B6yh0A/A?~K`ZWlxOr=U#93>b/z"eKS#WD!swJTeA$_NVzYBwSt+cSpz*)S6x+Rd}Kjr#JJ/ffWEU2O10OvtC|0^_*+PKOA6@_Fho_F35EiJz/Jsc@@S)L6AHHhOEpnr1`q`mx?]:$bU:1S.M]H0KT2]+5MnmSj2T&X@S92!|{l+<2n}QQ:8jXr/`"6=57dUvE{XZPW^nK,@v},K&^Y;OCcLz+Iu!MqC5D*TKcKyeNkIiSe|MFNg,I7P<Q$vtaL&+s!<lM#Hssv*|0%cY!WX/@w$6t(_amOp<XsYf=~XR0@A5;>9C)x%6XSbi=6w+[NqiISz=a)LoO%pbB%@J4vT?o2uHt#2.xncHfEV;9l#`]^+I;yR{,=I!?ve*2R+ZFKCsk%3cJJK~ck%LlO><EN,B&<eoeJQpCB!5><7popnpP%>dPK1%G{cBz]WW.:H1$O_3,v=;<Ry*mq6+aF|>JATO#"r;G(o8bH0cYOs[:`Lx!JRZ#H{`Y;qg1{{eR&Fx^y)k~L[1+5I{$T:h+5w9qhM8q%Qksglbx7K6;d#xkv@X&SLGQsC!o,s6o`D&d(*>[6c$foB02l]g+MHf_Zi)]!vZokiQVZ*r2/PM5pVB4(4kxLOjMc@(x$W4^HD@s,wtN>l)I@EYV;B]1z"/xLp,yKP!{piM1)E[.iMoGG77/aJ<+eIB1Snb$I:p<~o%^`LFX#fPd(KWzE=3iopb|E{okrV:j53{1H#S1#z`f=tE??.QB^:8isAcK>rdwXj!qh+#2Ml!6]Q0s+i4&4RTS=a@ix^?&v<nzja{i:{$e]YX6~ek=rb3x9<y3/rUZc]J3X]lc?%=>]>!63*ilPFAd_hR>8)(e9V{tF5Qj61h5u9F<q~GQKvZ(+UqPw)B+75ThiM7C3;vw$"^(P`/*~aLkFD)R&%)mOF*tZ7JGNQWLOJMEa^Qr5ty~MsF;G~30yWbn}ND&`rlderUK4&U6yIfb3&^Y_hz/!}X,YFl/~D*j3tG!d+Hn}(M>MQ<s}CWaS{<)M7:6w`m^lCJ4KPm8q7=V+9PK5Rw69gtT@f4p;xrP]SR~tEk%:h0o7|#|+8f=;VBW,Hrs?aBB4QRq>?Y(n&@v$O*D`)Ki<<Egr/B;]FUC=lAebU?c4qi,}ArM(6AQPJR[41)htCi^MD.Vj/B)"6knw8p9Z?JZNdBdr],4dl@0yJ`qr]yYbvnb>&InAG6yJ<Ll(qDLJ25es|,Iil5RCAo6xb?Xr1e@ZD"asR^iH*7jfHM:w8x@a"Ln=s.R^db|</8`bw4Rdem(W&qB?yYSK0)uL`|=xQ7nfYQ20}U*/LbnLVO3i3oHR:7WGTv=vx~9YF4soJ_^Y[+=!0k4c%PoJB}jUAUFcm9~tEDD@ilH[d{aG~%DJ{b0JT{<Nz>Rfulr(sX1zAN~MnC9ZSRg;b=xW5up}C,T[tnx:v_`Wd9X)`)wCC(c6yl=*1;SfW#yw:L*lARPt5Yz#|$j)(}Kh:c"XM8f4X5(X+$Q((wH:^:!f&Q(Gw5J+Y1@{t=,dH6rrS<:=<Gx|(?@+e>~uiy{*RqjuvM3Vxhu{e^c#@YPqrkSTHyg8{PgrS:!}).06+kYv60ni;*F.H<TM,0$1tFg!ShF0Sl%z=Lo73TrRSI8W$kB>=E|TG_nr_.rWre}+!D#ymQ:j#~st^}/cnK0<e36JjS0HG[An`Z&(4n:FA.9[;>0Mt(b{"d$NJkr0@m5G#bD9twoL[&y%knQJ~p>lZ}=jEg<yeQtir~2;=.9|,"Pc5]|f!M&wiW.)@XqPfN)Ht9?{4KrG:I,INPOnh(qhr7:yls4:Uy,_PQ!qaWRZXz=3_u_*3=~Wk>49)neK^$SIRtrg*^|rA^mpX_.CJ}1W>`bLIvpT@bw+&RLL=?B^zl"A(Z{nhGi}3$S`>C8=4q5ZCBra;E.+BVf7Ub[%c9Onja?%B:M25[PAH;Ju)wK[lt,I?p"hpQ)bT{%#m;@;`1{#wTo1G)8(@4a`YDQ6_WR&$wD7b;bv~[.6OcdjO2U^Q#1A!J0N@uw)J1|,i{/LEja<~X&6UCVhSrb^&B"vH:}4x2xC<~P3vYvW&m%dDkBR5WK$4[tPfr2=*5O[pO>H(9c}yXd>`,.[:BNz0tNXMR/P%|tynvp^rZi%g}u3=>3Gfb?t59)/8XMWLXw)m?@BCal%$,$<((PlUC@%f2w/0MC&!c2@pd)~^:X7xF9pN}C|cu7h#tmb9*bq<!D5<Y.4UqUdf1;0Lbrh5Ui7XqPqoM$x@Kx8b<mO}{{/ES+Fo&]>a3`$".+5(Y4~u.WxC7Cn<]ThF}hmh&^Nu>qpik7vpS[}rOk`ht$b#XWvL&SJm#aGUx#tKgxgv>?HafZb]9$|%gy}ELOfpz.7qX18LjpBxr;;5w0VegjhGur}sJ~y[XVL)+b=w&/Y6xpZ2,P2nRhi]x{}ipwD1Yyy9rnc8`ni%qMt84P0P@H;f.!{Xp^a5kT?/w=@/2Src3[MvVCF#d{I0C2!aFLx$:jd|~&PpH9Bvf4#C$Pkjz@K,thJ=CQsHRzk&r3)W+Nl]$S[Fm,C3[w/hFjH8u|W:s^%8m=z=P9=*(MB>rfIJO=E_Wc#Ek]LG7>9b/A;RP+gp}w;1XgZ?pu2QYFrgI;zDYvBX`mBdBJ!LKcZ6Q^0e3N:c_>MGV!5+=xEH[%9!U=V5X}=}01W+h:afU[e%TlReCf22O,jT0YR5o(QtxfG#^4opC<Ha^k"y<<6VOHie?Yb,8@|vTKk:3l#~aAT0.0j@.FD5nY`3YxZTT].!&L#Q>5o,(6H/(H]W8ic(!2!5?EI;ivN4]oSg]~z_2Q]FR(8Pi~lkXJci_mv#Us^aojB^(Alu1`*Z{WR`NY4fz(cTL$A6addb//]x>`wELzS^R*}AIoOYZJg!xp/(qN!bOnGGE9Ux;L*l^0IOSk(6bQ#IjPaN=LLrU?f)mW=P#Ey_Bz7WG}_+Yr4B@zt<]e*Rfxy;Ok>XnX+]#y>U/V+xW+[m46B}aCZG)5c9T:Fo@=0xmhS,t4iIMcl=VuEBA<bb4N_)<Y9s%ee{8}n+LwCnD8Vr0o%4yj{m?A2%u|rT@Rz"@qJQFQ>TIO%`wQOMT?{4k3TO0Uk@("3yK8"R38%:e?!Vgw:x>)i/Q0Dg~C6v{YrgT[~[ZB89OuiI+KQ@@x+m%1<hhYN^I;%Vv~&$4/q3LM[#?Uf6O;(+?RD/>J4Lv;Q"sF%X*R~HPfor.4r1Obb+$glIPS_AL_lFK!ci5.};)!7yaAd<FUd3]$k/!0gv#>{Ls|%c_I|(j&,eOK6*X{C6kAn+;cSx[MhCn(]]HR@spJZ5W(_A$niXovJ;;0pQF@3txU]Kv7EGj"JH^%BWS<#5LGeGXBe`h|APj&%+&(SR/au%H}IB1}F!GU(tMw49cqYVXGC6{1fkpgh"B7)P:eg=yuuEm_eHGdoPn5F`SN]E&UaGN1a*Jr5Hdbn,@E729L}k9~gl(r}0o8m0N0a@yBD>4]#vL?l7lg+[BfsiRP|fPpI8_O,WZ}g9yM5%lPLU|;s2`!f%wsG5K+4>#jNU6Td(TfB"k65L[4jhpGMNdytg=jAp(e;}!C/lBAc8tQNv|XwbCizxKuyq_~|U=HN~0:&5{@9&W?C9~9(8e!oxr!}AO,l,d]z~L^l,s[eKl5a]@8)LNi6SBtxEI{z&.K)Ov"}`wj|AT3goAg~mKSt)T*ci&_eAF=HU+9[py$se>;a_h)|_ZpBUV0(K@=mvV"MxHSnkTG1/eUpN[xZ,6AVu@_EOZX~<A1obQ[/+zIjP)i8`o7aM&^#eo5k]r&|3%1p)KT)59@{l0&oOCVrOJM+}XqNj.Frgg^O0Y[*6_,XPj~:5KYO4EYWSmnis4y{)6e;|U4%A1f12g*UG#Pe#jFyv##@$09jg7ZbJgol2n+E1|t12][BP:RlK@;jgnT#0?:S#`lej/XDaw!#WxjNNIpmnWPMjt)Q_kY>Yy[c7gX=yF^%`FC^3^V*kF.~AIQV04P0q[O2LX7&*~Xj<_Tg`#?Cl[=?nqn2*9b}C+:/uPftB,="Tx==r3>!Q8H6w#(azM3C)Cz8A5*UlF5,4Tw4aT7oF&j`m7@lOc)sjE2QQ}")"Ud|FC&#113c4uOplRXl&h8#O~?YETDS]bEJ$&;tQ<Man=MK)KHcqExi{_`<C=UC.B}2/NNoVwNbsgb!@:Tv]y:X;7~kN<lM`MHf[aDR38_OkH]G/x}fx>KMMR1{Q#>Vk(2aUgUb+5G3J&hO&FbWCc;bU_;"Z=s%ZS_=!tMPB)rS|zc!}(nDV5?c@aJWOn+.8hiOvCF5>X+fERf:QbBd!Ew6|ra`y7dylLP8Y.Y@Av)r$5jh@9%V")2^0LE)A$9Dq~eiU|7ow2dxMo(*^p,#n3(G&p2F*9Z$}o(.1z2gmfpgN02N?U`Unza~+1C;$7$lh9lZoh|VpDxetYmj+dRD0+Aly(CrmKieu2m63n6`9y?1!TiDsyztu7NPN4j4:CkY*GdJWV~qI#~^T@yV.fY{IY7/Z9V:i8yMJcZ1<:&:Ot+{[,&m8v~A+/"<U!",.]4&|:`eS:5k,Dq9=B[zw7trq_uISq$YNZ7CYg}9}[Tj$$mb_.X*%nO5K<cIsu(V$e6DJs*(S9Z=qFtG~/vs`.mZ1`7B;jkKM7RN%zYA.{+|r[:2yo2{+EL,W.>1W3`&9#)Lz&Fd](M;IR>;ZcJV:_jceajJxDh$w$/msabt/BM+dG>~On/sX<7{6)b<dfe|idZ/ZR|Z`%wfgB,qQ<3AI)(#sS}eVU$tqO&r76Y"`ImGo6knTtQW7l!{l=A%a/;T`rb_%IOUb]wp)gqSMlwB|0sFu@X@q[X)]M^"AO+2nN/_DN26<vgW3PaH9a^0/GHzSa7/0i6?X}>pgZYJR/12EGdCdv@>o+s8?e/yX&[,"HAgpqTiP{6CSXyz:`VV(3c3iQw&)=_XB$gwjo]+4`)o>]N+dKyH1jZN0Ac+BN1OobL}$@.AR9H?DrJR?qu5mGzh>UB$?=:&EoH.>:O=[*:D"EQ%lXK&@Bb.=1h+*OBS[!JSF^%"FE{QZfC|dSY(@f1OR8r=OV0ky*]#D:GCao<!jIXHbJWY+(Q*xvP4lsf|Q_:}#SGVK#ia!nz]>RX]Z?Bi(oLZ!8WR#DCt_c*;=P@$i6*;=1Pej&yTML(+4k0tb`VW$~[Y[2W56Pc`?9[$Vekcp[?ad%0g>>sva9Oil|rig)<G,rNEzM?Wr^"<lV;xhP&K;&]+^h*30qRt*O>a1KZ8}jyMyP,b=x,vRtB4}r^#gIG*Alzzs90nxb0w"U^V+O<eln+62!/L|J$#T"oS0"XR~G2J+jGla}~7J5}R%z)E68p4*xBH$zI,:[D{[CYM^qAZZ.yYIYaYxV4ba!a6v~O}M6z~E[1=MW$L}Y#%bJ5<]!=W=y3j:pJtp{uFiB1o@d/dPy#:s3oBcLH63!!_`J+i]K>,?*;dwfun3`3V%h?WY#mfFK:LE;7c`aHQ!BEZ}I1wnCe{jB(z,;g|Ci#z}PB8H6A;vV|yoGyOz@x)<_O/L7sO4@QxTTgKx*eFonp%_rk&?Zq$@V@tcSL`M:N1{:5Gf(,+.+@lDme!m]]?1@dsh$Mtw%6QaBxQ1I*U+%.EpG@nsSMfXx1RMC!sivCuz$>|Lw^G*@EC{{;PRSUb_E`?(35cpR5{lre?RH5XrE$&D}D2!}w21[B,>@w%(}o>6km_QSX@}.!n{I1C+KObArfI1HhITxIw+J$5Sp2<6vryh?Of14(M:!tZ)h_r]4:mh/jdB!R@Mx!_r(a{ZFl=GB7B*|)wL}k}_o%rdb0sOR34Z7zvob00rF4OdzG4Dz+,ob;sUdPef>WJ)jCd8|e0q7GW2U067m>.@n`fDYpUZt:{TcZZZXz%Sv{kRx?Q`#u4<M5mIn<~r|Dbxs^}9L;?XIC)]>$1~(9iKHKQ,mwxD&Vr8fu29QcEKIWfd1Z9ttE7$0Zj+h*f.qQlY{cp}1nxFzHfcXO%[.Hg{$d2aRHGxN(p&evYOS"8I*llM]a%v[)Sw;ksgR$My%akAKdLe<r<77k|6>qxs)Pybmsd@N3e[mm@;+`K{oiyK)r]PUy.BStx8!Uopz_(_mKX0W5N%<X@JRajQZOCO^62b7tsh3`V)UU1v+?CIy7jJ/W2PZmccdiMuV?XPYt}X$a,DRxv7)1tlTy[WR0,sx_OHE>+2xbMa`]PueG$P_%vKUsdUS;jf&Ui~SM!9.*u[M]dY%XwJ4PYfsnC=fC!i!;9":t*~>lnjwp_MSiUr{dFlhqagH>/~`<A#}UJg[rq+aZAyZ$>f0*0D&2TFPXK"aak=}O/LyY6?meci{rL!E_Gst[^rKU4Nxp)rpgO<t!})&Bl}.(4$c;Zp:|V2XKZGwiU1+9`oDdJ^mEq)$?uWXfE22mO:1.p_qMM;Syb3E<4598inX]UI@lNSd6@OU5I_Yl2K=WNr<cPIUbch%4gd?g.npn4upHL`v~c4Q<&E^zoPnRfle@10?L.om7fA;{yC`}[Pz7+ChY?o$U[QQAEm@Bz1:9/4eB5YY9^]lS!rP/J$%yKUah+y+9tASl6)|3&}T!%XZvv,n#Wk1YXdX_%U/>O@|}A_VQI"XQATv#!=xT!+!d@8rY77m>`]TzO?f,LPJT1$WATvBOY|u9},3la:_._B?)by<_{($X8TUMma?ozzG{Q2G$["^TuH,M%`:"sZNy,MRKyYZ<]rwuH(2_K%`?e!0+3Z:c^,7z3h5h1n`x[Wy3%_!zWqY6B:YUyNp7c7|$[wDlBo)XPK],o$rn{?=gx6g|V*ML{Gfhv2IMNYWQ*yBrE}c0ogN5z[^iqXj8k4g0jR#8ygj1gHl(,E=iMl9baKOX>zsh$S0oCem;[wk$=}PT_"[&(/8rjX&_e&ZOKmOQHx,8sXu$v6vj!hZDg<q[G/PR/kfig(KG:=hc8DC<u%c,.s=sK@<l+ryq_Q&muuOA!*f3dZ?Txa.@GJ,PTv&{RipCM51j)J1vp2*5*hjSP`BH}|_ZQ`w%lqFgbR4{d8>zer5Ao^UL.vyC%3]5Va+pD{eh=S;@o"G9tE1m]saYEjqlyl<A9X+XC#fY<{|UP(p@/Pb.{s.jG=*X!T?iOarU[}wyUB*T9*Tnh1_Gl~En:&xlDQe9,;)u;cht2>:%hJcU|)2{o[i:D"5do)z;af2gb"d^|<~T:a8rfnn:l<|r,`6i%J/&TFf*zMA:0B6P_9n?[*mT&9,iD08&k9y"cQ1<4|$,=A@wGc3rPmcjS0Iv$[>_$gZUukChiz>.aX!i0)t5eMi[BbMPLmM1qe%}uXFqoM^j/Y7$EiQnr=|>[.tvh?c%j?9n@^8e?6{q[7f5YVRce{+5,>O9e%M3x."Vi8|xa.=Iw,3KE+f*p7XhC?XpuaKgl]woH(_Jz#;KTrMBWcj<})$Xz*,aB)8HU8k<,4sW:Ln(wAnT(5<7(rEgFc;l$MbF8~ZekP90/dO;z,t)N&L=3MLG7;9_^dg!N]tq|5/*(NWy7Rud6pK<n]~WsJwZj*(TnoiYKQ.Z3hYC`2]@*t8$_0#@aO%%q[rDc8SKK!YaR>.<i||#*?Cs/km?1PX:Im0G!P$R>Jg<vz?R!{EN=yz^:.ulDN|EtbWB&rbzyIXwX&Fz`1w9v#Pl=3ve/0tddQh,ik&=#*J{d4A!@=dCo<@EC5&&;o[(N(=Cw[QJ{VC.)jY`)6E]>}$lO$LfIV=_pi5W8H=RozVYL;OUZ.Y{B`qm(D8a#z+^Sz]>FnnZ[q?$,&yo$}XK!lvid1(Urg?))9.x]/4~^!FFQU*h}>(gGi2pNL#`yiGoKtfHt1jc}j1[98>zzy333YkFs^Wm/3pf.reOk?,}.48U.3d=/>*UZwQ,OL*h)JpCS}6JNOo4yY{nt{LZehwAK(fK&LK9u]Igeb=o8{:.SDGC;uvr^JYQ5$y7gDV2JjulGoTXt>^}mT(#}K^k>^@&(<+&)+(Rzboo[RaaJ3rl2+f/=W|4^>jk&f7@=Dgsh~tXz^UUVs]C;{c[o0L"H|}V34H[~u{P(0D05rV<Hz;woh>S$hS`R$5JR!6ve7oTl5Xt4vTXS!ChGX9MoU#!ZRy8xUK$Zdf~(bgou:;CT0>tzCUbHpf`4kcfmCWg&<|qn$/zoxxcELU,%iW3p|CY[Hm1F+KYFrh@71reuR/3;N}FZbEO)!}31,`z|n{nx^7mQjNFz>B_=GUT;wNQkszz,aZiE}*RwNff(w6bkbNZ(&{G)B];7:0LW<A{qkOuk~1.]T?dl(eCY"=9[f@)wy}XLaSn%ZSx~{bKHHALHjPL"&iddGzKbFG*WN)E1(6xFHHCZ>L8`S@YNxn)e<VOtL4YC$"K/^h]w_s&5"W9i+ggWR6E*iP{e6*ir{<J{y9EJ<gpBCtQ*zGTluUO@i+|Tw$TKYZpUch[EL&3`eRK)GlrU2E8[82+D*|y&}3`7V3Hs@|I.&YmPF"x&_)kXHT^%1Tz:YL/f@Q0djMG,nL?d.A6"!,x%53)|+g|41ca:O]}#TG%[jLdAT=J~}q%4`38Z`"_vx?@rlrwpD%*p0.6y^pp37$C3C;uer}s/uaPfMY#$u+Q2.DH9ca=e)E/H_?J,56Y!Eia6OsrB@?3q,o?p18aoC`b2F#`:x0*OI3U<(U0#3dq/c(kB_c~9TJ%>yn7qivQ$jK5n*s"&}5].Up`{FzL%b4:Oc_p!|%3^JSr5wYOWfBA80je)M9>`AO#u33baPY"}kP[.jtZ2,qLL,*[MD7)s`Vt!w9Tu0{6MrW=o.nHExY+)Y~p_I`f]F:[OFig&K^pXBg)tdh,QJ]U)A0S)$1`LFOhUg/hnO*r89}Qp>mIN30S5:b&c2cugcQ<j*l|uFeaW?L#~y:*f5KGX{mlOClVi(h&eTfa3fH&8pa}4m/UxV*;XDQoeO>_6~.f<U"14h(8(x2GL0HDXg<bZQ"IL5Pb3>.1|qmjt=xX(m7g0j_Qn4/hvHRDh_y7KB+aE},8r>NM!ME?Ku/}L|x.c%{Oug]K([Wei|!Hy<HM4mDAeLu@Fh^+/D&WMtnZ!HE?H~EOiwo0wYSGT3l,qN!ZK[8;oz4UbqIU(U+Cx>,_X6`<{)G#LpFr+pl#`pi_ra"F,CqHm[:%}uM4fI@J?{3#=O`%YyC8$#imfeB"5z)jgP>XE9,)*)VbiSm37XQ.3;![K!DpTW#xlLZdw_QiVr.SlT>w1A`o&)eA)PX96#q9Wpk"=J(8>7MDgPc#QBOW%+P]ig>#UbX<=7@isb?NUGL7?3{{.i%||^*azU61)2wfg|Pl!SV,p~RBdlwU}2%K[d9k4(q#L=h9MHBx_!!pv`c&D0{V/fT}l{*!1GXm_T~;ew&FFk@Hd~5[[S{"*0s|x&EHnH_@:N>/<9~A^EBg+;zk3`;@!DH5g%kBLUCTV[Z0I];@|Dl@KwWCA)i6HQigR5RQD6+_rf)KN3:Gc2<Y_o^1h|(::(SHJgQ^1D:s^wsxYXsn~{qk6vC{;^wy1L77CHrE^=7)xiN%l!PF2Fu)|TeXwFkM;XHhYRN_1*>|f5^GkpdMg^=5H2!pUVuA#r=j+@PC{jPOyvS!bSf)J#+koGh"{@JWOU}b(DLFpNzn)(=xWhOt=z,f|[m5l6KJtXrS/YvQzV)nZuwBf)J:d(#(/?p3@k<=tA}/*fPGQYYlBldkWX~KfFEz,T*bs=N1gWD~S).MVvnQQNH!7XI674`BP|DRI%Zt7s{K%%q_x=2Wg_5_JYX{DumVfR#0.~:I@Cm_F*a^kX4Cva^NX5#l>8!w>/8y{&K7f#=!pm8;&<U_q;*no8bf{jDEV)eQ;l4GT}MNjJse=DJGi)^_F{K[xt`g)f#Giw`BgmBvz:ycFb@PwR{j;FlZ.,YD@Zogmru9p2YGSny(JlaN^+hZJk)XgHB*}n:hAw*.*8L*}uvGnbJXTYQ"zT?RF~M6OC&5Z|$S/V>Jh6j:r`@#p/N`XQ=*3mAng+!mUPHQC3|~`>Ci$k4}+18NX|q[!m2kUWD,_?G(w})Ay(W%5?[xv|_+.r@3nOs:?apMvZp@sC5yok8U;ZA`Ly6p]jUXgOs,BXtJREzT;~:eSRJ>ir00v4)3_[JV"^P5K,9~aQ_mnY/Qti_O:BZ9?Jji0T[n;37>ickZcJt:MJ)uJJ/%Ss5&SbhD9gW5ch;Z&HWz.NG|]H/@bHswwOT%oHo(P+EbL6lAxOpKMFdzc#~~XGIVjK30sgHBr~S!P>]P*3T[vPG1Jj68%wVo4zlzId?Hw+(piQd}$QtNTkQ/`W(VN$AG+}fH&I~Wlr_9pTxT.*NYCZ`D&`La/m;CbrR_Bs##aX!FyX!SbsP`>X$v.FD3yf},s!~Dnqv?X+iV|7Wk7qo!?Htfn+K"n/)5XbH<$ZN*&>Gqj%>^dkb!v9%fh5SwG"vm]UtkZF@_0yEXQVvQ<tN!w0MBzd"vC*]iF4|~[,hMU=c/^5:`aw(CoZczJv6a)1O7`c~>MwBy]P=jz61!=<J?[74?6[K+@KllyoF(y8JyKNXM2zd>FAJdmC^Ho}?<Jg@~D|fDp"aJ}y%1{Q?8L]qP(pUrcR0`!K{n;@5%d`&%=;YKM+NI%moO4$dB)L:/_4"9`S2I]FVu%gsSTAL:lNvB([F`)D5r^eU[s;4%0io0<&udW/MdT$1gBcO{<bftea73_X,4`&w*:ltgCt.H?bcLXrEK<13)cJoCb&b(C05P(f!P~iM]J(ojb1ZX|2J/^54NFMxV<beVHB?Rnb4U5l%RYZFiqso4(CEt#UB<Q^%LFSZ(tH2yl*%C2@.C/<YZcI9.)v(~.t`v?!2BwH.mHX>?5Q;?u3y|*W/BiJJcm}j,]t[EV/{gd%Et]oYGhoaVVDNd4(a|z9bTxi.<I(b4QpK9{`i7;zE<%*/,K1)=6tysnTPuC4tsH*mV%1t%j_{AMiA~qaCkrpF5v}`dwAEpNJZXue#;6Ij@6UAJ1)K_1PQqs693|0X+:u>TCFNaCrrI5uDAHpa9vH/`q@tE+!#)4vP29B"~907CD=~&J*~>S$E5](aUE?PM;2^WsW,QzHvOIDHX:/2Plp3Mcqa2}m?j53PTHLEM<lpc.C4;IwEO#>XB:1KUR,Si6c3>Dwv)6c~UwW,%24HaMQV{7GTtcJNtq`6wZH$F]y~p4w1M!Cc7|w<>rK^p)Wu@w[&IklW3lPS81aX<6X{99L<U2lFlxVMo{w>=E&(;9$y&1xACq.Tp]&4%7"+Ni/xJqRJik<aB/}l@:VY"bU.TbtmA}}tZCo!B&MP?!H+Rt}0n^$6yGw>OhrzE0<_}"np;9@Dz1_>"L*vm]j(I?F&!<[#iw/GRcU9hE{]W5b9M7g*TwXR)0nprI~$O)lS<GQQvs]8)vCo,P6+tOX|(.cQ.:Nc=A<5&98*?c#EM{k]JT"GN/[=6>I/BqX%E.!SdH0z>oA2pH5*?$%*aqQs9|VILU]HqW$?D#8=sl9*s`S&u{NT>ue!5X|j,>l8F;l$]ob5.o^}cX+f7CKd?Z3DW+UQJ919|1J)N/]L~eGQ4*gs:<l2h#huq5Jl1+cFtApsR{.3t+l0R(r~lB=Sg,|ZE*K:ZH4:~fi*1gl=XHpz%7L"&Ucq[L}EIkb_=/b8EGA>"Ddd%XqY1_>78d98IS|{T=@w,]+a#8kb~u4W;)31/1ydO2opTqgkudfYqWBF3p5MKjKx|>GikO27Jr0QS#?3<Bd#KZGIS6~5wz{q+WUvMiZ[<rt`HS~M&~*h2Wdqw([wzf8`OdBn]Qn~a$LK9KD/Be=Jq^+p=WB$$v@IMGi0MwyCyp)y#yrPMBNb7](d|+fonCKj@#1A`^.A&+.@d#nPRG:ErwT~mF"*GQuUllAgGd5G<WUP/,0VXOu*g$_s,$6t<)EJ[rx864f}hN?!oVJ9vu(:Ot*M!|nN1NM(gO#d@4~biIz3NnCcXF{"Sq`%5,w+,J5xbW}a:7~YB]eQtG^n3/zZ;>e`Hldj8i9547`i|uUUz12v$jI4Qc&d9EbPy1ty%rAwPh";mHV&MWx3(SzLY.WKn+1dSA^9m`:^@D8mUJDi?:GXabi[Ig^SG3?6e|)6"]1q2Cdux?coxoIsU#}0S?u.v`u>4rvT(7tB!E361&.|fJ``O0K>g+TC)E1zX+=M#Z##rh5u(U!om@g6RQQIGHaaMYx;uW7%V;>YEzc0lv0?awolgU+3"]9u*kp[p6xLgQ?&OQus2E+@JTW}"<|+|`!/i5n2|yHqj+LWucbn_@<VJGJMgarb6q!BFT{crk{*FH@*bX)P:.Gv}),pI,tq](&(/oN+EZX3Jd2f>uZ>(w=B(;]PKvtbbr@43KR14L_Q)3yp,Z:Q=uIxpmRz~6WUIXEg#W;eafQpdpmb2Uv3!XrJP&iw+`l`+)^^uJ0XdZmk"7N/6aKQnG?Q6Rt,Z.rnQnf7<uv<l%fY+m*)`,=IB4N_<c4iIv`f?2xTWfxYi+X*%FTcFr;;txh0fv5HSV.l1F~>g3(<[4Zb;0p9+Pf7|hqaw(&aZXB!Ixx(i(bDLGD)VV_G#*}Z8E@_&O!Q]@??Cl?Bf6YCymr=_6x8Nkj6W(OC!8?@Ju&40YM4tXBh@DtmhRle^"pH"VA@Fgdx"=l+"E,wZ[Wwn9Gvt]6a03|L!?.BfB%/RFZ8Du{HYF_mIY_Qxj5RVvr]y6DRW%]_~^^=48WZ9gpy|`lNzZR)]?(W+6?y?.#TY0&zZ+4t<eRbiYnX;1"hgdl3#t4&5~kB~^c)C<KQfs4yT_2XbkJiI!@kLLfq?k1%<&mP;U|wti=rMA@#p>g=/u@f`!rBcrtJIzvMVCTEyqKMpwnQO>Q;;RcU&2YEGV[Z+Y$gMUi<KQB]]_(9B4}8["]"|vx)sEu~gM5["N1.r[er*zUMltGm`Re*SWB?uRKh^QLzh9"*=ZAPS27e$2RTTHtw/|^[C<U_BS)*H2]XsEwYp!E?R$elt!Z!?D1kMY+qO!O>wmYa@Yn0D8vieKipqijQ6Ba:f``ktFT=m}[n,wJ%dEc5{y1Y.Ef%z(PKAq;9;|PF5z&I[lL?@ikZIUt@_1HWt|HRhTTf`.,6EbY+jgbhp;f.W~,!~|d6~|rmiWJZ(b$T_pYxxzgVdS:plk_]{ElJcma|&#mR#?RJ8Rqy8S(mgE%;VqKa>?]gFjW&Cf[n@VItkp$*.g{oxFnkL{]F%i:IhcawhXaL;XL_LSM4`uh"Gth#U]Sx8_X}nILwl7*n]C*e4?M=GUn0bCj_`3$yx*7~E8H+<k?K#.gR@b,CxnfH~a3USd4z@VDj$kAB#;Q)Zeegf?_<8Zc/o%X}m3>+#)U/zzds$n[6d7Mm]q2yJJIta[w4`jB]N7bnj[?gt<C)4%kI5:fuKQTqASi:=LoYY&Cvzn+%#X+=n9k]UAAG8nC$u|mewSdVD)+DKb+kAL27Cn8VBR.u*ygE>XXg0^Im[?+$`B_>d^UUk#b?+vIC5^|6Z"WF6UR$@B*]s@P$_JQ(uyiwZoL9OFU}CO1}ihNp%~!VS!nEXK{w21/2Oq1tlNluBnLwFAu{M&B|:oZk:##RCQL:Q.1^sy;;o]OOS5T,R:"nU6,n)EF@uaUF(XqwzOGei<_V80Ag6to/QHq%K%cIVoF&O`scnt(BRMHnl0aOIK<|_Ls8xT7xC:b~iD)5d=kt<69Q{2w7.Hr5y.[CV=Z_~!={[Qm4Z9LTQx`?[U1cY^,0n2#_cIA?HB)wDPI6:RdTGyXk4d;y)9s0^CFEjxy<<33l1I?^C$pb=__|r=9<,(d;.|>0R+huaa=KL~%4:Bd3DgNlp2[g]j`+ileFI{"1#}!3VH4bM?^>}YnhxXUBE?Zag@$lxsYL.o=0Yzv9]bOEvtg.vEr"UTIDG46!*VuD16*Gz5!o;c[a:rz*K<#mq4<9Dc;oQ$B/D$40"(onEE3FP9n9q?mMNbMU(8WZH&UWEHESl9?.2ajBcng|?**Qjta.0B.H{CH)>V>"KbzeA7+^s^6F%>"dSp>bj%P=}>QlrY]3?NKlfWy$M)9nr?X#f]4<7iXIY#`t<M?Q~g4h$KL$L}SSel:4VR3.~4!C2{=gL+op+N=RF?3u)ku_eDVD2(m;@YN7%mLL{}[,ua7rLMNe5`?kQm8cfPjXwi[66nd3[h=]Tqm}G:Yh;M?0UBnw>@keK8?{mCY|ra4HoM<=?}(c6mC_0TQu}67dg*=H3:CI]#K%;!4.|Z$/Fl?Wg#@~%S*>k](YTj88lawNuT^8_DVE?*O^D+*`=jp]Fe1&q~U[!z)xJ{ky2LrQ{n&TNzsoZ*7];;pns#7_b}ic*r*lWMe/m>cvwyS|ie4j[~a`HPE}4L+)?|<(.tv7J4ko*ZBN|0>UByc>xx{_+Uu{~*[hDGd!}]fKg=~8$T]Q*mTe/)UW.w{q;!]2b=?n*f#vxQ8CvPjs*G+RPd^6F.Q!gG3l*lw[(T.}_e6dUXP5Dz{z,ZY0g*N58f69x/"G&;FKi}v]CRGO??QVK`yn>4b~Faa;EG(8?wRFU#.ebK4^;!3."b#ex^|!^K&J,9Yb.!~))]/R,%mQqNg^%%X!+PPX^jkCSw8dMhJf;g$$%fX$^QwjgiL6}<<dbj`28{<T%__.ie&3"X5n+#CnkY;%~o)yqB3}`!4HeBHMouDL+P`ur,n;SvwO=BQnf%S^Wf_QEt([L,q[VsNM)m)CM](Vf:qH:T>pqSXpyt8*0D2q)=&MQB8`B{tZ<J.zc1^K]x}5%#$msBY##w%9ZR!?Xl2G4t]{&uT)/;(6Aw/@)r#~$5#L6gc:UHNw$}r,!5jG"?w.on[oGpI+dl?eZ>S<3r<C#d.W?4$OkwH?jw6Hs)PdR"7:j]WAVyyo2I<]Ge_<Drt;$Ve)dc(ddg?Bq@o4E<6]~cA}:pq"G=qN7M[v)Uhc=^{4?MNqtcIF+pb0Ngru8c"b2,hT73#%Q{c44[r.6F2%UAW"qM&gqRsBT0?c]@?[)62Fu?a1yr4X!$p/1~s?Tf$GF++r)2@xou_]IQm$>VV"g+Jz.F!zS!z%#}8FrF^*r4>PbP_$[nt41+>R#1VtMdCt%!K4E0geEAsc}|b45uV%$:NV+#aG[i<@*N,8Wu&/D4P@E:_}dckBIr~Bm8hs!]d>yVUKfa9gPJ|,?qGF{LBn%YMBNH]9v8#B@wow^hU&Y]Fb;i_8FW/X7z~,V8~ivv`oXvlwIRh$l1SK3o=7S|,*M)rtMrIMg,4#r~c@3qrt5fwv!><S:/ZEi%HI?;W0<!Op?vSw%c>uQ:7__dd(u_~Wnt_aW=e`msY}[!!x9Rkdmr]BsCKk|v.HXOOw]43_!TX}tC)y(pf,ItSr&UWSq{_fv9,nMpUwjV:QSy,H$,~,lC{m<!s}:gG}&s)AEgH,TyJr3H~7z=G7Xz.&*m:7Oh%TZ"KQCuUTv[r^LK]$Yhvrnexw/ft*C/u~"+Fti?/F=Q(?P/xIOVJ_Kn,=R<j]*.4Thfv_@X)%m%$ig3idZ_8kL{eZ>G:lj8vo7#s|EO8m2*$<[*[>/b/`6~S5ii};6*_i77hr,P~dBALlZsu?dd:,$9f*k)[q_T!hmo.[pbNE)(p]^^=LWk^LGVp4bhQC~$esE(9mx(xm0XX:|t|}KI&%;c~xG&tzL:s4{;hICnzb)yEIwfM(qy<dDU;:>RJI3}QG3W/D/9bp*+Q8$tt`tCkP~V[IFG!M#Lf,qb4/T:YxhY@>GE[Q%bnIN(td6OPv9uH>}a2<M{`_;<I>Dx)fFZTnqqHl"E6A8)tENJ;pBIv(<Uk1==<:LC?<<qEU<M?KD<!q>"pV$GtgdD)=vIV1#!f0l?g6}9d?;!/.=46WGq7IW5}fGViL1K%*$>P{vBX]EYr|cEGF5jqd6g/Ez8x#4RU@0(fR2u(n!*5`kpkJ4I!qn{X,"R2^1`__n5it=jp!sd`j=L;i/5rUEg{O_Ic:BSCw**0F9V)=ikJC*+ozUcS2QTJWH/v,z]<0HjB3V:u=@!V`tFIIU{<wn,$F;0@`m|^CA$.{xre)_s1?zp+Z8Uo+^P24~$DDrUJ>+,~SnH7""]NdHAC[_0$uqti=/CuBr1;k=c#>?dM>?8p^TJ}P2^6J%CPR!RgL^F0(t#y"4t!D[hT*2(%JZd`gp26b;(;K+|L&t>>&SD~hd+nIe.b(Ff:pJ9runVeH1dSm|Qy%n&Z9hrkKm8M~n$DvtB]>;qV:&"S`zlJNTPg#zAQVzq31BHHN`3v*4c;VN^#cEnr9YU[#00%MT:Jh)XCqNv]>cx<t8[znA&d|k{zK7uDz=5ZT~NG*$?$4hYH:y2s#{%)IaSvv!cqYbObCFUWp~CiH$|y$Hb3v#AacV*2qH)~pW=`.`94?~W:2a{*[VN?e>(|vCK&&Gl%.=lQYSt6sBy:im!m:d!Be=m;7vXUC@XLQnaze_#IqZzw8Tx=quH<ZZ+>ZqdAx8S)N;yZ,Q2]R266X*L+*W03UVj3&2ON6zN=d#Q1cy.V2CX7x}G2VdNi6o~}1]Clr%|bALqX5`KKk~ZoL==@D>9_Uy^[(LDHZ87U<4V<J`D9P5}PY(:%+KV2h.]ccm[zqw>bjP0B|YAR`W|f54+<XkrMutF*hC_y7J)Q1K7*}1$&`MLc6k2S$xJ/rL*zWr::bclt/bLE|R#c8ml,g8<8Wm52@=mvvex<rFW/~y_UNVBGrI7=XvU!OUItXQjVKiu,rJ@YPr`"Hv#4.Z5*/G/twtrkx@)c3<9ky+@{:V2EWO0lf$Z{rsBfC@+M|(Py";o~K2xsm:5,2@6,H`{QGHUVk[]aw,|+*~gpJ|e5]=|wM/xbEkocIFHgXP?z3X9,4G;_FW*fgLU"!7n)?crKDrEL0qnsiB*fM@OwZ2Go17d?JVw?>OxUB0pVS=E>_hWv1.fW,EtDC+Rdb5igD6XfF8.;cDsA^<Ke)7*.~Dd#zB3c,!v<Po4>55SD)m2Ww0[ks+KWndWXl)mYW8mgH9[?0fA7G0_+VW@ykNPf*CjCUt|jRP(1b5[LFyC]TIsAN:Iyfy)WXPtc8EJh%DVMUZ,?J9LtTt,eApcAJ#m0xB$S:WJfpLdd??4~6I{5~ca,,;TfES^2Uc*6XhUyY&)_!d~T}zRJRT),vZo,OE>`%e(6y=Hu{JEVU&ZjhO:eOt"bF0+_S!6WTx<XrBC"&6>Jv4VC8LWd@e/fdYS>qIiAJ~,QT_GU8DAy1@nZ.pV=m50:GLQ}`ZMLXZ>;G.G<C12|d3fT7_*MZ_26ANZBHL;~YoId.q6VNy=mTy!ToEA[(BjT1AL7z]/9[M#KW:c(Vq"%*0"_orAPSSjT#Er{H*8%BD;IHr$@9#^?g#E2wh|[kiSO:V>HquC+^bE2Az["x98Y["5WIO~wrA=U}n4q+vT&_+?Jx*5(Htcc>CRbB(Q&MA/EA"sFqJ}zZd07$d#yfBq}iO^U4p)#&VS>:tDV7zs`24t&_7?byH>5Ok+^co8Ow16}o{BtpSo{l86J]MI_5:SA3L&8fr6{MWfW^58^j8@+K<d3`[y2rMI~REm{<n#9LNXM|R,Y%tKy<^3~w8%Od71mQ~v_z=7Z>KnNN."N=8&v5Dni8eKvQuD*,PPK5Fe2<j%0!ozkTB=F/p_Lb6tIJy.a=Mvf6D,SNAyC#~Q;eWq?g=A,zYh4Q?K$0em^&/7pg:Z]al*{@,h@KG[;62!"=Y5)^J#$we~DmS#yq?,L;JeXiEy#/k:a^e=#{a$NF7H`4`i4C{?Fqid+4ncy>lJTddKfTCkm&]XEnZE0Msoth2DJVvnKVY8&,?;haSX9`ADM:!1@YVs.t%EB0s>tQbz&Ttkd<^;}rk9ynTDU/zqrwQz3/rgBB=u*gcj7lJ3RNI]A3%BVT!U"2I<d5u.*M9=RS3MBDcJ1FfuLZbzoHvde+E9992Yy;7h.+G_Xw>@3D&i3Nh6OFND"YIX}#NYAK!Gg;7Ktzv6W9zS|3t)*V%%Qjr?)L<sX:cgd87X@ncLOxnlxe#.zR86.>?nc7w`q}0byIz,EP4g^!Gq~ig0S(`wc:YQz6p02tMPjQFETG8D(Z7L#6[^]t&gmeSMZW/kiE8Ih4o$#7~1tSBuz:Yu_XP]+a$>n,jIo,c!]:FXXx70UdNw1|d(Q/+zy2X)TxRWiNZk2K:~5Jqv>QYP2JUZrb}ykJ7.9M%u%mspnzQh`[Ow6qZqQY|7$71Y%0,vb24z[8XofE7DmsEF^^B39+1cc$uPlzq33B`q(S.mv0VmP_p^nwB7tI;}hm0$pijZI`E,.e^QGNMQcHh^8ps4]ATi%NENC]"hE5s0<hkCj<m*|2JjM/,4NQnt:RDx<7dgf%#1..0|SM/oOPc/nT?8"U)YLY=l].Cco[ee1]8Y<lYtgjF["Q^`o<IA9F}{x~6;RYA+n,n;}[,1@NRIZ%8Mnrta~7ulCz0$~Ko(m2IEs2]xr[Et{9.$nL~hoDKUKLFwilovSBk9[L/,Kd2XN5[L0uhO79>fu<WqzHQKOn2>bqTr8Af12q0m+bC$dikPIyo&UYI{)&6q:o6f9+w*Ul>e)+;M^&_p[Gf!(ZACe$q_?bhfY"nlfB{BFgssORQ&n=fmoDNwDB@71X3*A}CZT2}HYN2?PKkC4Q8kG66PbSfU`Y&#b.sY_&UMO(h{xZGX*P>_257}q,rX9/^bvU6&k5r_ytS:9);IzC:m?8nh`!VPSVV3"PY=wD<5~xZFn]{NTl;l~6+/[m_G4yFWkuNp`K*=tH8d]hDjL?6)P83V}<L!a`yw6CqG<58jRcH$T5RX.mp78"+eQwJot#,Z]hEZeT0iWdS,T?hz^kKp2Zu`w]DJZ{l}={DdmIjWMIEBzNTLc]xkKc]AZ#bu9?S+Aq,^gZM1rE`~aRV]IvE[6YtPW~2JctM8dmcH:TeLDLWm[!^R@Oq@Rr6xpjtS535.+H`H6&"FOmJ[t1vz`WBV#"l=M0`s`<$QVJIUL!^YUQ"kh.]v%_yV`boHF?QP/zu>|`z|*lv2nu8|sYszVWycwqacxE&vp@u6h?]vr=lvE_F+"2aB.,T82g/b~vzSa/LpSX?Le<XszPfs}NHTJus^i+9J*CiTR|5}(`IRI*7xXGtlOk;=jloF}T4$OSi`Y3}(g?Q5NNp_X(ZpFfE(W96Wrw5?!zm^G1ih4i9)I)wB4J2P&s4dL&yH9I:jaBRv66$Qh:!nU9z~EPrMw6"^g@/Wgka*>(CP.4wKOc>J1bT^PwiT>>w@4T!)@Y*iXEP+O`9=<n3>,x0T:Rc`mu.jEYV*gYjUg)7!g;/PY[4F:6FQPziE:~GUUsK%@<IHSXj(~Vg?p3_;orb3tj}YYLf>oX*4(|Wu&SCt_W${8T2QiTlW!V_4W6oNhulpgXs>Nvj1NaO1~lSCYD9m,YIBU6c*O<o(xKUrZyW&Zo!^|$zi^9<rUk!S`4Z*h+M!VJ4`pe]^N8,o:h+E>Hk#t;;8tfTg!SY[;CJY(f~!"XXu*Q%gS>Y$01X3>0)s~%.f<f?ms`u93iz[F?KSWmJ}pd|h3oUcdX#I:&%4EQUj,KESt;4wUQyw2yeir^F5eb85ibwjPb^dZR]vwX^j99>8Zh5;!esF(N;z@W{_CI4b|Q<+(@A`^$E7^u3,"`WP"~mFX3"25+}|ujFO6dLI3;aSX90kzi0B{LDw;u"0c?a:N7+f+h=gCPq}~S2BzOa%/,[Yxr16%o!"Bu^<)E><zGeB}yvHw^^F|=XMCw11csRmOP^/Na#Ll7kx]S}R$kHq=vct9E,cH#X.[mJ@uPrPR7)1S!HAH`Cm7WogNC"336t@?|Hu=9f:eK&XrEJeQSc,Vy/{2pTjKasi=!(cbub>)/JYWfd"L@V&ep1zmgY|un_NX^vu9,4U5xx^r#HQe&L#W7gy|O$pA/IiGmz$l9iNlh((vSoa`*L7B[}O"CAZVX`TJvK|XGI#9oC_+3,(>~(mKm9Ij+Fe}?QB,#QOuC:$C=sM*cO0Tm_te`JC#n8WF8Z4;N%nI;XB[h[O#(/`4~9L$GCMBObOVU/"^_B%iqew4zLV{+,mm>C&cq$V#Hvmz{+7FkdWeOGV:..5p@s9WbW8>Q_o$rsX*2&CbWWJ>bF!$6p_}YtLxw{^`?xiG;NObQ+_XLYq$%pJ{m;&U(=V,t<sArJCH/$q`V)uVue9kbfE5=6zr&;I9y#Qc0a6Ym*&pV]7*l.tj%c2i~a[47Fd`JE%DV)W1end<rRn<F0VW|uVdUxb@:lmLoU|]T<>^H_qH/8(.m)VZ_vYeCkrv(V("bG8(=5k@LL[4W$[fK3KsqO##ewS!iDCmN]4_9.;4?<y.v$Nc13_%}o4Sz_W:C;yME"HpqG7a]xfJi{ZzH8q4?FTMB1zC]+>em6{|LAtk>fh>{~)yf25+#{5Lx6lQMLfW8*^d1CgF9zB(RO=.fF6=<w5;)16y[&+F`oLG2TY0ep$,HlV5fD&E64QB.[,8[o[M:iMVvk0yFjz>LMH<o1@6d.7OwVtSuA0[>u6I&zX%0x[(<3d@.r{WYe~SMWXAG(!z]^ldK<+B4{J9prc@4;(|p[gEYk}dtDup0_LG"klG7{Ft2}BhcY&3HX]kLHG#OfA`^X*V3$u3E)l#f<$?TaZ*j]`*}dqV`~P;zpNMtAgG,[%w*)KFpXI]F8kzDPRe!*`&[>bs)HmB;wYN]%GU{=zZIvG9*w50]MU5`&(^leai41Fmj2/s@_yGG=|7,p6l(?>JK:*u@yS,*Yjx1Wn2y+Ir%KpBo}G@4rXK.)d|>cq/vMM)!EXF;Lig}:z{fUh!~<nEs,5w`#/CLh7ei~#1vw66j4Cut7Uelph+kZ#vq#)MnaG#};t8m+njZ3,eG3@_0P%IsUYhnW!f{Md4$(Zs)}bFBr=z*o!:E_rrtZ;"8OD4cM=qfTF5llX"7s7+N;}s<R[K0)YNChIr64g^9>{Ja3EnjS2:uN/,?;i"A$~%Y;Q.k9mZ6G0MbG.iJMJ^osE3Iz~dp:hqYU~_ddLS57A{W[!fld]u!u28:h,Oxq>xXT;q*1zscOiZS~qD8`*xm|Y*/XA&RiMFt8YO2cB(t,)D?P7Q1?ZX<zvu>PVc!`^tT,[FGVSW}})<e7{FQH;X3<T]W[?4qfeITZcZl8&yR%aYB1}8!+T(.o%O]qTlghq#Dc$RYlC^jGQaiRdK@[?]FhNNi|*B`HE~4Bm&t0O~@5d5g/T+o*|JB}.Vw>5*k%,A:U{*N4@&mQu%Jx=N?{U%82|cQC6/Fx&PV?1jDr1aV@oQF.1`*B=%7fkEQ*)ZbRFe]y<D_>EQiYjM6OyyiFN"_AYDYGY3ZN}*?u!PjDe{_NFwdE]OF0|;{vnA{KWfcVmDv(+V!c"&9fdq~dwj[&YKvMsR_o]TnjrYG`mR<KZ;,;c}Uui=uwv6F&qy+,z!1C2CrEIqAPMJHe||RN@95Y0fDAGWlUMUi5PH?|Nvj=x.5PN:w8{GM=In4Rcju=^0^q0fLe;%9K=8c{G%_ijWjv^@7?f[R=$<@]hLXl;X?1i@$hgTN&|</U|Y=)qpaQUs+*V>xEP)vX+sl?HG=~?".yEF2]sZ;0w`8uuL]SO>~"(KaTvew^0&2J4]K7TRpmOWjvei@HcPbFP{zR8s~^2!vOk[c6z%`%Snsz7|9;D78<kH:JR)S/29)co^k^1|>7()BrYw**J$U&a]cf2Q{i<.4{6.C.0+8veU4~|Iu80+0oK6C5i=f[gnh:c"IopwMG="KdG`%YO?PKATfB}%p/^kw:&kKyQqw~Vn=>b9nWW)!d*$>]3Z/{Q,l>:^hw}7kqnzAQWH7#qMrhz>Ua`mr7Kk&k:zzd+WZ#Cr1RV7<!M=vy#xAio%%rhjF_.+UU|>Y7Ne5+?5fk&xVqu~FKK}2vH)wHD4/"j>//oR+NokF[I}|*5$)#cjqngjy!Ull+/AO_B7_g3Ju6W{_/=ZfUFYGachMuKe7.(Z;IFiiPc5PCbrNTFm!^#{<:3b1]P$IRZZf5^&y(B:6<s[Gr(Z9+@3&=m?daq(Yj::u^FBd~@^wjGKywiaJ6%e)@w)]3:/..JFB}(rB#Wf;b/irM;HumN$52v)X*["Eu<+O3U3*Q<%lXwRhgtd)N.~DuIN|$wY=~f4[XlsHuEzzW<@gVs9Ma~#,O)/u)l+,q>CKOX6wXWdX:L*p^#J>lw>F$NN~zO8_;!9O<"ZLm/H9l_Uyd`L5kTk/9t/1OOvT)&eLjN50M2+7[,Ic^u/;^No`Jnw$|LSRa5[P9sjn`3}U7Uo4RSbLVq[wxrGEAhG%/y:(EZy=uYIr{]mSf_cEgBPGbr03cC=E;HC)3]gI&]LST}`xajfHZ6_R,a:`g3>g?VSaAQQJ{YI$Y^2T5AIzBzDU4@8ertf6[P]=OWY##rR}"l[;}(Hi);Q9(>zK]XJ/)Tx}(?/JoL|G&/5aB3B.|y~OCNBBAcZEW`1q|JCI~7Ff4^#k@l*wJa//jm^+p5k)x*M8c8NZI!rlsB;$#0Ij%u(Z7dS_C[+`Z%AyVZ38u]K.Py6b_dIgSdFq6C.aD#VhjfFjE_|HlPTdL?mYtU`vwZ%M]N0YQl_Liz*Tr%X_..y9!>6Q3K4M9j@b_Y8GVs1yHG9(y"fRJ5K#0W5M8Ju|!su]MGhhSP|~awcZ]%TGZbHT4LbgS_Fzbfnn)n3gQ5&R;55J}*H)f*4*>oq^A&9y[,vp406K*=iPaVc!N`Q.w+$5_kbC+Luc{0j#mhGN,l)rxJ}u~dUj>3iEhj=HjHNLwO3V)?l_P/BlD4"cZk`R=/dZ8)pe]yZdxUjzt4HWHyB+cHQO=F/F*MZ7%#t;22Gzr+prH}36N6kd8C+9$LwZ^[naxb80tjMtRa,O&>ncHa|bvm7@qh$QE@B!o_dJ:#44XlXWzPLv^5cvtm$wt42dO6:diC&D51U&n7!kq08|u8CS4n2R[Bv6=P/d+uH5aa@F^/NJZvW!3eC2h;9JTN{W_?Gf]9bD^?o+80$/+rlHJGL.d`eSoX67UEq091}237jD&DIR$Psv;SU6y|JR`B?aX?/5Nv]5PjZx44KA@I:iJGnj}9vW#Xp_/bI6PHhgsE&WV&>CZoWNVVaFEX1ZMv=MC:+rPJcosbQ62Pad*JZxI&cS190E/_BgMC3B9E1)sh3z~nK0GR#B+$CAWudi")Wer/^HTvj;8)g!lH+Wv8Y4O@T$WO%l&$jHdi^9eZoY?FB<TX%lhz6O]V]iyd^Fa9Wx!q?luada^wEtIWD(~W/5"VYcYvbtW&)J0tS@Bh1ENu=45EM*1y:Xw4*vKA]Yfs>IeV>4TJ7ZZ~vrv3g7u]]:EB;kq:It@te9Q2xlU9@$Ze6C|b7Va*AIw|5T%fbvK,xz1P}C_iWBE{2F;9gvOLm;!EoVX?4q%"9Q]mAXk~M#HB1W*a2uqtxT]CwC"edB/tA0L}EC<4uM5JB%m"?Aae5j7[FWi|yG65H;|d`JD7`K0Fqwk/qFoC{/dAmGi<M}e]yrn)Y/(EbCo/,;Lv;k@Mw6w}k|nJ<`>`CLDx"_<8wEYQSaZ6vT(D|hD5QQtj=hPJ5dDJXXF>wc[w7P)Y7[iv*d|dTR+GO{KZ+zmHXsZhlWZh85DXzggVjr4X:7LjQcwNglsBq!A)e#%:v=u9bABLxUsjzKE@]5.OP/rf6C8c>u)?MO`q#BPSzzilw1U{hYb]e&^*7P2X>kEXB}j66#B)qUH7=<j/068ELCHL+|zCJk<>ov?))X[RJ`$>@=24o3D[orpqHi*{k8y^ySj.Ua8O%vsf1UI}6<jg32{9~}}u$/hRV?vG.e^/=Z&xEE24w{jL`2Q_ad7pt!<,;f}wCLUijvW@$D25/f(WWJG@>yXE$keE$k38}|kbI^mxrE3d75]iBtYcDb@D[KJ{"YfiBXe.#v>P"{,L,HY_/StO3*{f@Pvaj4o:tso?~(:_x0UBH6x=PTUEe_Rf4d)>l/mU53EHRuOLGe~NbHZhpy.m&_A$n].X~>b+^hR22e![G(0O6s2CPh8Bi@byL"ntmqpi_Q&k=_qM1@QNgQN:D21d^.9T89J(kOUBPf,*zM%0S2"|#DP1`++NSRsiky=KQT5?QTDp$<gsJ(lb,/C^vs|]hvQ,a.W;^z}4Xb7)U}#bl#j&%r|AL&bGTuT:o>E(|Z<66;Sd)[+ugGaVTd"4K>5GjXCYJ?A)9PNRj[Pmv+>{X|,eX#CG[VqzLb}!P3:o8c&wIO`"3g+kCDPPY]$IaR|d7e0qXX|G57s4cuK:r60MIaGycwaGINDZVhp5JmqG~HEF@O8C:DMYJ?bww+H_PaeyDPddaO;ZdF:dGyXDaRxi~`6Ondzb}YFF,)$*wvv.lqk?n]8R+DzR~Kub_@"n,<~?"EGJ?GAogV>/polV61ApPMoP5ge1;@:q|R6,FU1q#5^@Wk;UAo%Tn1Y[<,F1oKb[?@Ao#5eH]eX%;cqFf88s5e>~Q+,?AQ]%+"<|@)55g~|9=_JhEOmo{Zgm=1(,qdMs5(hH$v+k.[C@_oY*EF2,hYTY;NfbLB%qqgr~.pY*bQBO7N`r*cgm&g!qG54?)|m60qUQN06KuVnN4zUwQ)4G}5.U6RLOeOJzLCK+VwNm|x2GJ@{:JK{t=o"WaVZfHM],oGGgX2QT?<~[[Yqja7QcI`:y|]6deyn"fZN`THGMPZFwji%U6@lKCYrcXe+[pOUe[@6f`@{46}|cTUZ~0,9MdR+Qlv`z}/<Zvj|hU|Sfxs1zToCk54XbleY+ETly<_M>n7[cvU?drLM~Lv:$?cGoo8MbgTbH"G_PJ<@?r29_{p@i6[1GG&4$@^40QTD`_!wZ":b&T;+Z`;Bcg~#ZOHv1muN^|z](@VZD^ZEeg{J[nK.5l3q8J+YakjL{|VU1(@C}_YMz<tqNk#4zI%}GP!l4dPc0EmZ73&l7<7I&UazijQBtBIY41EJ<EA6sU_Kx^_FCrPU1oeVOVK3&&jP{l8C^$/)2&87q8t)]`4``8=i}o{^VA(]fNy+`ku)lg/^6MQfGbFNC|sQmg:AS<|}i0D5HM^{*<SjiuT<!)J?_.vqEb~?rt!`/79*2)JLqXUJU9f&P1:,Q0$Txh/wZrlcj%ZmX.ZgO1rbEl3IB,x>;fs6nt6f7KpDjM@ojuS<7K+xk"VKzv#1V98mbi;3MXAnddUnYuTOY(O<O2;;28SH9A/|z>YK0$cv,/bVA+l/G?*?[KH]v]O*F:p}v[FrU[LbVAalrA0BJACm#9Z03?T)e>Fe*TNa@a~hF4QYrjP4UrP$xTPTtmU/3V6)2hFKdJG)7bjsk&%_q3wq%y7Hd[oPD9#t"i+Q6cag8W0eL^qY6nAq4hcu&&vs$ENW*F&mYks&8||2+K$W?RN7NY><db4fZ%P/ozN&!EgD[$M}:eS+yM!IOg`"eV,BTXR?,i#C$>yD!)fCUHTG)emx}W%B<:jk`<GH0pc%!sk%WDjvn;o9F|5"K"V4"`(g@+>DpEw[!C~uOvIxrc_?oR5={&_0F*I]:H7]d$D/tEe#QY+P$O,bo8Ob7}.R774#[%4YWR+kDA(h_hwdn,wsdy&"&XSBKCDe=MrG~!olW(gy/i?y+K/wyEe0W1AS5U5oQ)W1T0TRM8c[uq+nfU@)v&5+1$(>WdwxxHDlFSA@G;c=yRQ[(YIryH(XKy,!U>_A05,"j~ym>,0b]@J@!1)vVgA5rMKmHi0pkVn%*&<6LVdgj(}S2r`U<~>si(}K>}>[g@>Py<_M6mBP&|.^j.&c:lQ[.h2Eex$_)T+lJAa^R&$/0iue)9L=<AP[.IhGmB!H]q<CA5r>AI@1LXc8V)4qtuO4)Va3`N=]jrQ#)Kr8#ZD?qA}B4:8%!U;T,o)``p:*I^K>QPKT1Ky7xa19+$68M<0]O=9Zw(/dD7b#xQ&UAlk[7M0kt8]*):Saf4hzu,y|EmDeJnSV#!Mg"?]z`/S_Ro5x)LuEbpH5#kdS;){nQ0Eg|Jz9Nx^s?wzX$*BtBoMQA"Ldz+HsK}EouBDQ2~F*(b&}(Nt)?`Y|)H>o#EN"?v%|)eZxN#Dvdru4CXu1LM>hcG50{3044OX04H5o#9CE]Dl);Wu(pa/T7*92>PGk2ZCxl;/^HqQHI"g@U5vXns*a[/X@kZq0*&ET=Oqk9#=5!2WLo&tb#;F)&l[nlRI/1o42P:X&uG4mVPkJRF<j^>/E_Mh^@?/E_&<?)LYEslIH<XX!FFV_MV_#mZYjH2Q{H5f$W4v<!K`tUeh6NAa!r4gO<=V,60K=D?4zS2_Vh>u6Av%F&Q7__{pr8usGbMLn4T=jq&W6pHJ$n5!$r^*(ZvO|w<<+lF7},sC5YE^jvv2y:2>"F`fLU)E:XvWKDIk/:D1)3C#Bo9`iknVabdkKE_6q}H_3vr0?9ZrT_<jVOg6*)L&<D6[o9v|bd,Om=2p<W]C7)tsj<BZC#%_&:6>.b`.k5B2yBpt_C<Zr+m!#WZEf7"P)]^3(jd2.a`SlY8uvXK21EZl76<f}I9&J>z_q3q_e+9^l?,CF>d~L"4S5C"U6gx)WcIhNlCCQ^^PUi*%Kb^UEr[zaS$0sXZEJ{U:>u:NxdBF;99)x&IGKbf_)nri6BqtWcg#HmP[9}}}#V,(ZG`2X>T>e[TJuw?u84+bVHbloIzDTO>#55es;5}Q:7!49sylhHxB0VIxyb6GPBZtXJ0!@n@LNcAQV)wSC>riM2rglLRf`|@A@Urk7/=bBgu{cQ&E/*G0CaFJ.tp45D|X;^rok}ZWBXS:<fo)l6U~{%1cNOLTh4f~fiG6X[wXrLQJ`5D2CN%y446uAS[5C#ydBkgwDi6.XvTtyNTq@paekA%tZJSakh3wN?bMu*yswX)=]V6wBno>"vBn;16y.e#v%fe8.W4lhb7##P}Ox@+NVFgLI!>CzM+T9!XLdW3T$[,FJL%!gm<H#yOLuKP)(Z8cV]qan"U,`{yU}gJNTLIs:>yU(Vcu4?/>eZ=hh0!>jqn|K7$beRi[f:S2w{gv8.j}02s&]WNp"<<D08:2v&g<j;pR_ikBjWe}yd4Q!i)~K7&/qUVpXb$Wa!?^9Bs0:/7A;l9d4:alw1eLa&.1=;`O?YwDUANmGkzWQH`!%WOreMsDth9w?fn[wlQ(kVqT#*Xc9z{^`S6V%fwrG`0C%z+Asv%eGq/eS{NE9XLEYgYNPc"wQ7gdzIMc,z75XnJas0Jo<dlJC>:mgh"h,a14)2cD="<kP=8.OLa1o+rpr>4?94/dgd]i8ktP`Zpij)t#_^*Eo)]rdG19e^f"A12rZ<S/l2248~guQf8,_q,0;pFXC}5[?YI,,Flg2K2W5FZt`8e_|bRdcc0@i@}}K<nngLwZfU.Nj/FXGlgn!ks,:}k(ut*f(%umrXeS@Sei1R0mG[k!}BA:n?E+_)Em6LP2xeK0KCQ|dfOczDMaL6ZF+FN[AK>xS/B$U`3Wb=7qv1`|f]|70d^U#HT)8X>!7o%v.Xi|_|6Z.Y[kus.FA0e@y_S`wm)[_0,m=K>B6/@N1.oD!P?0cvB:Nlo?z>qY+P4p.N~xOqW!MwC+9Bvf?7lOixC|AT(QX{z]xpi{`1uQG@VT7|tuq)6hB_fat2|]&PuU0q&{fbzUqoZ~|ZaV2ME+NadI;GfKuZbF~p.|+J_5u)g+7T4.y6RvuJF9W;YEaloQ~3`PGB2rc5>,{LKll0<slx3Xe7Tdd*YtMilB3aEEiXg~%UDjDX$kU8=ixI[;7six[;$.jX7d),jN;6ZEK:M~.Gc*+OMJ<:6cHflUi_57cqM2)5;,S9;V57cKkE?Y#n^()ZE%@)kin?E?)avD]W%P[J$eGG;C?f%y$g/X{8SL,3qyMYMiNM]QDyHLiH(5ts2teX4lck7/k0aPk4OXGr7FRk(X)rKfzI]YUZjZ*lHuE{SbZKxS3cqdk0s{UfZ_fp5HeXj8w,aXs)z7H;@3f/wRxT_h.%BwW<:je^yY{[OPI{3s>Y>f7{$buw@pIdIDkA>H4Lf%&vq%9VH`,uY5oAZ"28m"i3b~eeS1PDy%JhfP,wjm"5&+S$(hnGWKM:Y%NBfi@P9+IVdJsI;TsVbI=OZkAR#<O7/YTCI^{j*a_i:GcCR*<P&V`Xk)"SgOYy!h6#bR"6noa}f6#nWz>Sz"WKr=>PkaCd{Jo)qrKCgS<knf$b#ZD<:e0:0cmL?rJMYby#.RdOQ~TF(RVykmr266a=z6]=vL@e2HVC.LeKPGf[jav4zrQc&yqoC>:Mmumi#BC/#Ro^S:2s^3!}?Vb:9f:QH76vbyv.fm38G[pmB!tsy+Qqp84vlW?!(7O}ep)P.|`$0~&"_&JUZ4V1mhXa+t6[B4OcHdb&yP_q{{bFP%SL~{>7SeT>:@9M?7V$T4h[96V(#pC&7F)4eIbc{=ujlW9|j*@dp.6KX_WbS>.2OG`(p&>"M(9+TjF)]4WtRjBN`WZ?@z06jVE_5Cq4Fd7qHehJ*QV&!H`hWBGaX{F;2c#:ahiq/o]KKA3P~l;,IoAMOEH`0HNwygqi$__NDlUq(txKW*5CjLy|_}y(d{*:sd7v+Di_z[}@oLMPvdr"}EqlB*2:UE")x7NGw1`B@CS.A*4WlvdiMH}L>uPi3(fs,:1+/L!YSAQJLP|vWtbDa`+YxL:7,LP(/Dc{Fq_e*`lIt@6tSy]#]AbXj`Ztr.4IE@atr.4Iq!dw`T(9":[twOjhT{tpx`+:Z1xS8k66;)LD|]^Vbu*W9R:[fqjP7rTF#HBTZsa467:N_K9rnh::]b*#^J1kmid5P<>Vn`flvZXb+C>7BgMRnPc#js|pXbY1Y{T+d/{F;]L_*eI|^.@YPCE`wSu^7tBUpyUkSh!=Q_VM*F9F6q#};)Mcv[Hk4$eC}kwyo2tTnc;dcIaSG&eJ=5wzu!V)GGHv+}ibLj&AD#.E?J"JtAj`XzM!s_mU2N*.fJS6c*^J&Cb+F)51hGeH8X!Euj`9p<0q!`sGx5|hs,{z!JY*YNY3hvteWq)3Dym84HGhNlMA1vZF+OpTdBuKrJ8Aol~BJMe!I`6d1;e@ErC:fY"if#lndBnp1.;q0bPl4K"x3>U:ykmz#0lkbw/r,7_mkqSfKEJ^{bZKqG^Z}y],_!]*PTC4G!;Ztd:f;V`@qcqd6zb&d@@|m>HkV1$.E{~zMqKi[8BmK@oxJB?qhay?$vXb;:s0q#}OBEmNBmjF2N9R.St0FX$RDSs$.3O@ijgYFX^O6GQjL$hpAsvJka(w@,_)<_9)kZ!y;<UcXlpd5IJ7i*Y|w1m|8r]YK@ev3wG%;>BE<B5h!+:[ryi|b||AM*tF=F.MI|`@.}gL~)?,0|t*A!XeF9KL#_d#"%#MKF*_wYayF<&Qe$|Dc&Gl5eDTZFZ=!MYy;D#L%z?rI=T"syJy!"M@`K34qOK]Fq`uM__Hoz>C*_BH9RBgaSnB^K$gTt*ci4Y%[tN|_Zd})Tn_kzw^96E!$r"BkD":OeY+`.%l.E<%8zz?>6y`pr]Ckp~BvyJM3OnlS`_m[Tti":{<x<(<Tnw#B`g4mQCB04x2nD$kW!tJm8[:8dOzBsgddRJT]YK#YepRA%FgW<juwW5Kjv`Oy&*wH}6`8X6TG!c*6I=nZGI^N#_g)rtORsgy}xG&ta{<2N0dM|.4r+~b^`10[VoUa#ZjQN%2EdvQlTJ6(%_(*]k]x2wo^!Yc~gI[2xgD)#BP`/G8IwsqDe=5WdeFC~6"9x(8!MQH2?F[X<7F1}mN{=oJQ|3+!cj.=4E9!BD}Y4mROASEe.8c?eHgwW(+~*K|:jQuQ.Oc./6>AL=:,&wzc!Mn6k[^OM*a;,o#;y)U>mBqX>1ul_nC6:wh,7/)74Lxcq(SV?G*.7!`M~>W`^xdYgS"%HDq&<$>$,h|k>gcs5Y{20rhcxAev]gBmU)EwzK`S6w96>f]#"`p,CI:g"xe?k%e?oy^ad<{K|0<`<n?N@VBxdYc=7}Lcq7Q>>pCQgZuqEnKeS*,vFqnQ76C,U8u_CI58J[:m[ho/O5J9|9{uE+s"&Hk,7Rm@G^GdT`=sO3:ND7]|pm`%j|!nfLRa(ZB],FH<8jbtAl{zY/BgTEBuyn]?bdW!M&QHm9,"lHiYhfqN>!(zJE_eLu4uSHR^/neq]hM&KWmV1=D!fY(]fqV<tG]lWO{FS>[>;iPg|3`QOY(CPf?wPw(IQ+4aszJEsrPZ7_q=DAl"QCI,djvd5!~M6)%:HEgE|K,od<{MWk?1RmaSSBC))L&pie#"P&D(k$R5;o(uuv3Idi#_DE[uu8Ef]l2=[7rUuPXM~K[KIC6`q]pN3li@[12%f,XX1@Mka":4rnH7U:ye5#]FDr$h1$mv,%jR}kV5qFwU16h@<kM(/:%;Ok[lMGg;FTwfK]l_;sf0Jtd/XBXgya*0$r/Lat?3h6,8bIv|"?oBTFw$>s$Zb(gVJGn7T3tze8O%Xil_ZPR@7k/?gr,}k?00@c<RVsI#nyOMgnvDb50nSzr??875f.zzJEuZ3iFxiVVxoN:f{^]8UxJBc}@v@3H?K^]3J:bdH4>7!5/d7~}GxGbOF;N8P=TvZQCTEg5o%[,e"n/YrIk=4sasP+fOSpK=_:YlSP8S7`:3T?G)ZJ4Qox+/n(Nf!{/CgR9VC&*yV_33V@b<V_3gK1j6#)%b)w!)%Gu@yufcr]8bQ3gT%.@)af:KI.dU@RkZ0CDgJJrwzxi3,Au4?e!G]!#cd=qeQ]d0e0p^Ne:h8ZOGryj(z2wL6ccwvdJSHabp9ixv#u2[=JTkjFI),y1LLB6ix"k@0of,V*<KiLZZ5!iL7J_y|imf|Nl[plNypN664SRU^e><19)h^.En5Uw^#WKv:;n1=Q<LrNEPSI:CKqJ]5~ayZld@06MAKAF,9[(q/#]g{?0o,fpA7l;1mUDmx^6C3*Q]mn5%3S}L;mpV46Ug(D[6oFolr"u|?%r$]!0c,@Ks38gkp8gDp{8[xsppKL>~T.RM9Y=`8W1Dm@ho@vs+`7=ci7oC_7zT<`giTX]5e5[0}kN0BUmEZ~ViUQ+|XZbNf$(AqtJ%O_hO,OtJ{zb"qe0!Ys{<(]VOh.5{6qQl?$)/<qfx,<Y&;>0sqJHlDn6Neo+MFUbxB87,K8.jo78,hKyeNCCU*B}qi*NcNHEQ#`qR1y*i/d<^3<gkP`uk!!JBu=|6{OlNI6@g*tJWlYdT,ID{iuz`3nfn?ACk*c|1N>;*[HHB^Z45Fw!l60q4w>mNIw<r<#.ZP!y9PjyCN?Kx#n?"0VT$y%Z+fr98``/niTllw<P^O&<thzG$flvCisV9rAS>`s83d<^(7"Y~N~3>g!O{Tp4n4yd*D/i9b(WbfKdEnREJo?iSi/!=q[g5VdM4W,Wsx]RJ$aXrUHiR"E",x?E45>l=<9IC3}pGH7a.4?~Fn~pj;35Wl{#vC<9Y[/jSiI[fCsfP2U6<Oj_%jhc7JUuW@~5F<;;rb%BJ,;2mhs=F[)ZT{8}Cm#5DKmN97&+sx`/"i%ZK!t_20f?v:#*KY{(5[DpripxLl5RK!u4IO,a}b{&@+GS?0o,a<LbWU.T,.QF@9:Pa[Q}oh{&>ge75,rlEK@P0*H[9oO,f{[]Z~|6BsxkU3/NET|&Q`S&9r1,kXCnV_SJ_fXb(9SwS^S)QiGgxX"RufaD<UeO"Gmb+S(6Zp[Q"wT#Gwum"&&R"BC6ztmQW,XXy.x2&iphraq0t1ap!A|hN;8|S6rpJq@PzQsl]9<nK7qY66&CXbE|pU0Xm+?X{("Y=1`u>@plQPBwD/rsY@]3ejId{AWJLttchmm>,0/X8Qu4a}F&c~3J~eLpZ~RV"UMIAmw(^%]k7a9ziv||E0&|@Kj_"Z{w1#?7U4FigS,E)4U?:k[:wQvR`WMdd<NG}SM>i.mpk<7:r(Gze/!hi|1HaBj,i.x`sJ}QM6hlZKJuDCqjm`2[:/"A(8taelM,(Dv{fKN@yY:O!aqp#+#Ae^%WR8KsrZh7o9?k}x!7sSU[px0}4Yo~ATk#U#]@5NI$=I`un~uvp}#xuR7a~N5X0G^ZkOJ3j=R5s!I!nMBWY]U1<^TI^ZF=)0!lY:Q7u:Z:JnkZ(UHhLRHho55xnrq>^>fy!k_Ds;sfB}9Tufrc#0"A?OdX"|<<?q=cX(akP^S/l2|/"/(Km;buM]bGpM69GY5+9CtFrzxchz<hWcc)pt_tJoh&HK5a#p&?j8QXap=%oz;%_P]PH=;:7GIOr[fxAuVq=)jppGVwvstu^!3L9)p:%*sSBh#pO8R7C8Hr?:w}vt?DN{15MhXVr/a1H_m[%X`F.7Vnhb,/Lo8d.nNj;8yd.&tuG+m#A;T:5wVzw&X@v@&5D^0L,rZdMM]Y$a$<(Dsc]%OM]Y8C9Fw0Ww!"2z4u~AoB*@O`*[&g7L,[ZD>dnym^:8)w1JvO7B>yBzMhR</N>0<rH=<j;y<W0v2/?V<g}|!9EW}=>k8lBYWfS)yQgO.1I+J{u@s+#4)dV?HWJ<a!$!DELgks@hq<mU6rw{7P@^Rf8r3pvO;Opgy|+[zGN@E5)*,[TQ9O&o&=u]q3~g;p?<eQuykYU3x;K#~r/%tQ+4U3Kz4.h_.3Ww*2NiKg{3LPfY#LcuJ%:yLq<M@F&+!D^]A^/*wK}o8IOEfFvZDz/tg<!Ls<;W7R"3(*vB"BAN]DqBIno!GdzDB6";7c$!j/V7~ln&94=.lK^FvnQch/&#Sx@^bcFMQa.E*O`b[op4BiwqVXB!L^<F;;mlX]1<:(Ril7?XFXrU#&bKLW~lR(Ni:$1w!hk)x&4.wDXYWKxh{84Q8;,s]XX}TRHI"{mGr&M6Sslid7Guau)Jy7HDGN%o={OmS`N#8gJ=jueoq#6Ibe(*Vj)z+6trkXb}YOIO,B[:M,~[lZ#M^i/a!M8?OP<tIOn+L*mBATC9FRi6f5HT&l[w/+:@7@E^Wm8XAq)^vy"^L=CL3.;Vid:G}K}_?Z~rpB2,Ww:cxaBMH/NL{oV]XuK>:5d[XjBGu$lNk>q%)sqXgmlt4@Hxm.iYdG)kr&3/kN?`bl0,XaIE|)>tSRJ3,n0i.kTK:_rHm)L_0W"VBlqL%<n;&C?7ft@<{xv+W?{3z/<PrMMYft}"0zN&Fi"A@MDrk5Yv^H?K4GeB[DYcdFjPVU__d&Fifc|b%.KSmu83>Z93t8H>ml~N9q>Y(?c6=@l$J}^NK{]fP!us`^Fa>OL<V,B]Rh`;@=Fvd`E?:V|q!)E~a&S[Et<qduErdWDt8uR&cS%l5)*fa|=l~f}TZe39qx*4+zQp6<Ul5)+</7Th^II:*Z+nG$"&`Hq[EtZ^]MnI;41QI<=VJ{}i>*DT(qok(iM!x<?(bR@dCTls^IF:oki2|peid&4Z5Nu:f9CTo^v.hJ$J(jk4bbpX&^P^n7~ZCT9F6#HUKlLqO^Np0p%p,/,/Czs6Iaav,uY+w&KHbE54Nul3Xe[r+8:V_D+0qt{[^=66ft.O2yX/d,M0S0rE2d8jFx1jZi`iWfA~PR#r4{$Ih@:h84Ztu]G+7.WV8rRj8/83o=8`lX9lFjW(XNb!!3BTa~4{klf?qdVduhY%^3<+*ry*zJ/@`Ky|mG#mo(P*{K*HRXIG#07`A2!io9$dO[|(R,Au*!nK^ET)gB6}K:F&aV_R.k:VP>%43WQJd|yGS3jmD#W7]L1QGC<[Si*KW70z?CC}?:uwZT:Q7:RSBH9rs2wQI6{Z0q~`:_Z@[QBtPz`3v%`|{Fw_&F$FPJX;^q$<xtFZ.E+bw46K`4YRa|)!y_"e$@28b,Di94v@b+EF6s7f]`j685iPzz00O3UyT6m#5b6r1HiJ/TIt%b^`e/S~"V{g$pDFrFPsf5u4ZIMdb&Gabbg022EMj"gmFnw022bn/6VR534T/DeHqPddVl<0I$C(SyuaXXZR_[)|d[tBv.BU=^k!oH>x_`_FG1+M^pIjkoBrD?S]XuFvV6L4+tX</iHMb1}`u~.e5G(:*v4QX~hF65Md[$2S|fDMorbb0r%1mF`45:e,FzOQ]mffO!=_e<Qqu2:uV;t~L,pkfYba5}40;VZ0|c;Z.rUHD4QTU%=ID(*%U=NL>577Vh7M?|y>ddsQ+c,R5"oTKQ]y8+8Z6Yk5B&.OLxS(]UusFoOSosnSB7=[ki0O~EF7:i"#|!TXp<wvTkm3&.}*lo!R=*V>H2Rk?!NiZW=3aZ|3vrrQsl>z8wvkbbvhZZsdJ`i^67ss]276lpxmx)0*#J):UIH<Um^<)|x2=ZaVSPc;wfO%s+|CF^9R466kaU1<Fg^)cHWEEVbx/fQy3]Pr1{Om,;kk/=dZQ$ds{q^`@um.TB]WlCdGfa.r^`!wr=!V7pK;/ZQT0s"eLMuXJ7QP!yUVl0(k4uCuszPrRZUw>]!D#0<&w7=3Tv="b~%.O@S@+x+.v>ovphvfb48/4d.;V7G`mY:P[D+dH(&}|:y!(<K!V>$?itsq>U`dw[qfL!?[OPW!Eqtt+1oq855jZ<6%Vb=lFW>f;CfVnMF1C5grcp_@&wt~;9MdPmt{x>FrL$QMDG~}x[dwI$W1N(1JgVDQyZFj8pHMh^Nk.EMx*.1J4=]Ud.m`F*Xmf8TGN[T}!&d^n#8,dd1ZIdo9h;zoe]mp(zK%]q.f+;D)*B]3UIi|7,lq]X^2GbW7<q1{{^IIWO@gX*PV.a#)CzM(>DuS`jg*?=]0|vt&dbXnpK36Nk.Lb/_vGb_I6@uvtpn?&kB}A6UmE5%]%S$!iMm"u.k.y!&Fr0ErX=a&bH1BAjlcMbb)5<v;/yGCzO`OqY^`;&VgBiq>7O[%T%O=8md6M_:_S`!cU2zjF^6IsO6Nyh,3>Q9u<;biB%*ie:lZ~VxPzf"EM(GW=%QZvU^UXVhpOOy9(]srFXH<Mj`a<us28d{8iv_7/.dLy;1(&g/+g4/mFGeI2Pko@HEm"}APj{T%2st)~pEU5p;U9ts^ek.q*nY@Wlxj{TnM]W`!:3rI=X;Sp(6zNtV7$jV}Av/@SFW;gx1BJoxO$/^cIcm|mqBlipeJi|p@>u&P9.f=0m(8}JE*R/]VA,CWSyEue59v[!s_,:T%do0]k=IUUP(cac:O^l;:&;4,?f:K%&gpLyO0"ns*|C%!Afv@Yq9,"L.UT@@a3p&yn}MvDTKh4j(4Zv/ZwG7pn39{;!eI*Rcjq$iv;<YDL[4{8amYHZv55mS+YHB#CC0,Kn65+?Tj2.o<{|Qs:2Yb%|v+T#!.kFud0=@weC<[*N=1/m`}j?`%VXs5qp`+DZtT|q2<?iW6=&pQxqU@_r@.!@k?|Dh^YVU61E|MJjmX1{ai_MS8X|Rb%{n^cfzIpG|MR;2:uLb`>Y^T<@%s$7)<S7ndzPgc+^oQJw+%Ki]pKm0CLUcQp/t>D:c=@D2R#Yjxsf?H1qwi!Jw1u~vx|m^jDob_oipK3,o*yeQIE>XJ>kb$Sr%P4/2)x.PxQvQD?%}O)x^unJlaXxs^@IYmK=(!5QY@<rVE[pPci;4,.ukxF{WU:jv3I=MEf{XV(0a+El1YmYq{op=w#I4ih/(Fnf%P@}1HgHkN:?71?6t<AqSsox5&:UNHpY%%}QP4iF=4spdO`|cN&vxh<gUW19EN(Y3Oy?`P+(^PdO>zUMt0zcy^Y}5YgR2.,Tg5iJbublB*HSrO;;Ao+8ZuQ5E~2&K,he2uo0>!0w^z|5uKPd!MV@=;Y}c@+Igd#v56G|%oxi?%SR"w_Fp+$zQ+4rMO}3pZ}9CL7xI9aS6.dNOpDh_bP}?1/gPTy2ewA{DroWCW6SsZH#n9DzC458r$T).]W^F!+PN~vp>fV}~UdmG_W#%}JYE+:`vRW<&w:CygcXz{/#OP#eec*&6V>|qqG".%F<6V1[JISIT4h&Qka1|oZhfd>ZA(z;yn<Qkx2Fv=ttdy{x=:fR],)DY96Qg7/m,CUWV%~A}KaZ_w@@6<%%%7|]U%|.9;TuPPts`;/iI5vY^RX~}7@O,:"QYF>D63=&|[Bs&<VhT20Lo[vz+QR19ZC#q!=_O+WS8O@}^Rl(B@Ge]BVdlB")=TbK_?LxECq5c5/yFrJoV)G[e(f@}IM3ewsSz{/Of@l|*Z5{pp9<pF][(gTmko`A{%2yBG9Z=@(grh[@o?v0s2nYnp>e:|e9/TX1<dx7@r!1&vS;aQ7@,;:W:o6;>pTG51BgqCE)dv0X``X+a[m5~V3n6Kfv_NO@e8n`~hUeOUUe,~^V;#|2#4U9|xqH)9K}mh:B3rX:"|CS1,Q^&eZ0R>23rl&J_[L6>)IP!r*9^X/Dwff8zl}K]RS,7eLe9d&|/T;/3y>$L$t$C^UbPHcK|S}x.roZX%6+=b,H)I"l*P@[>A]W:qD=<b_.o5j(3^BZ97o:yPTUUo(vnw~6ehbX3Csl]OuqGy{FH5,}"i`2,[l6,UQ0"Kv([g4n:CSfah$)0,+%bl"@hfGd)|yC~lx7?m~v?e|LLWE8^tWZ#w*9e2ebT{hceP"yWGj];$qWSx"xejnosxmIahAK$qNs"_ebaZB8^zEeh|WVMLAPj&g8v`$_a>vkWInMSzYb?K>.v{A`!8YWPb[r`2x5{k4c+9fug,}3:9g,O1K92lp[U_*%?[YU7+:@z[>7"QRSlv*wcnL(wIUle^W&^6q)f5^@1&AUc+pwJq5eb{~Lq#|G*=F?X9W8"V@eSUGYS!L6BPf6nY1,)r!1Pmx7^me6yH]z;/q`@mqp@}ET,:,~h|,57s6<g}u=EpXab{|%k]qh7SOr!hm}yZj8]mnPJ[pT;JD8h&0J*}v5nh[30rh?A=tk=&RsOTG(C^X#y*hyJx0ra_I(TM{YH.)x)eQ%55;@*|HKn1I[U%|8r%(4DZ6,ul}U:ZLK8Q^+cIq5~<{*%.mJnub+^CcZY,]pK8u~Q+P_hQoz`bEN@z6~dJ,a2a?5!j2a1BEF`4!pZc>6@#:bN=p9"VKq*QS6NhFu~7fpA)JC|:QWE*CTAB1k;B)5EO$6_K#Qv7sXo|=6,OB?{DKGT0Dzg1zl4H)SsWQ.=:2FZSv90Q;spXje(hhq~|SapPpVl8%r@ytuMw+&C;i|3h>V7~d*8/jsW+"4Cwm"M[>p=MJo>YTYl&#Z|x"L!a=#V3a3,d3vVz0cIGyqBY3*ReP61Xb|j8npLq%eE^T5!{K+aip9&;k^,dyW8G.r10=n{dMfi#yuY@Zy"L:YCY`rBz3}:Gr(&we+HM&Q]<Eer(R6Qez{ei1{MoQE59t6)iAa#qmZnxuZ%pNlAR,dd).rU>1Q21U7Rh7iDsuM$aQmM&Norz/Dl|OLp9";u9|_2o:/qYvhP)pYCT=n_g^hthoN7;ziK)w&ke&kJ+TbR06{XQdxi+g[26p<JaOlC2SfEKx;@z1)s<B!^gb0b`GB)n{jW~p3CkI7&lgYkeH$}=SSft+2wFmlv2h,RIK:rxPbT}u1BMY4FUEl@IVfpJuNQJk+|0CkvhM!zSb_[bv1$D*9hYMX.bAbiT1rpsmlx%w|Z%!sX(r.vve6X.Vo3pesgGe9e3Zgm@}Q*cli<Zn`;*g{XzUH.;bhw8F]16[xP`C2VE!#wpF.Wr5qbum`L[jq?aY@yp(]ek6<G%nOR}*]9%v<livi?hZ6YRv:Xl<q#!Txce!;$/XbQFbU~?#?(FbCY*Gz9Zya"MI0ZY|nw961F<2aCTUH%@aZTLEiNgZh9EmDujJin,&Kh|:q)?8<up(zS?lq$:6RY(vM5rY^;bDtX$Hm`Sf.3iK:Yu_&?|Pvl5):V_S:b1SfVX*rl5b!Xb^W]GE.(Uz5.t*JVX"6:Y)t`9#A_(WDEU]ihK`<)JVIc,(+eQzY<o;1ei~IZ<.B5SO^]A<7^35D*UF!ODtFP1%Gjn/*X1mc%PYS}J_j(cpmWJ^Zy;++F>kMMLv}ISGl{>rvi^SmL>MTg0E_02}>BVF.@`Cwi&#+3#Ck9a<;*XnkO[m5#mdk|+LZh*Q^F&?{!8+[a6%DDx.MS;"l4=8,KW6EP%Yl,9](u2E0_f__AGGmfBV:W)MEi&m:~?^Lx_UuYvNuG<w(g/A`.y6k_.K_@JdkE>0YYb5NF^Xb~NGme8U="uL[]P;N|0H=}KS|Bn~5YbZ4,*"{zF>U/NzSSUZ_%oq6ZQ(<3Ne:w+f*@_.,%r51/B64@*rJu4rowUY<=TIKiEUlb/&N|x3v1C|ywp>2/K8M9)nMWZS!ri]%uJE=,]H%X(4*Lxa]]mae((EKl0Lac|A.JO:GIm,Jbm*,A._Mz.*;3GFKbCT`(r1m#RK#wcmQz"/FZXo5@(vV81)]^f>$KagTs@:];X`CpMdVEH@n~.Mw=pA0eO,t%HCN|ZyjShy)1C[!k:23yi9[A8/`=Yiw&G^Z?*t6Ag9*=mN+}K_tnU}S81Rs4t>jO1aaFz2_)ykiS?}h.UQ;r;0+&N]w36TM@l~9gK+IaEK;@/%jK1))@jL:r$cuFy?]b^b;hu!?_tu2brIE=PMX|btZXby4d7<#}/RTOl^U2:7:;3ZU>V&%,c0j4aW1c1$b[J#{o<=*bh=CA]<(0>&/p#<Q7zHiGz{_2E^P*zr4X!T,VGY$W6[xX5gWv:Ms*&3mx~dJW6SZhf6hBas4JLwkJ^Q/CwVx{|V8BTiYZ2eEuF<T3eC2RGU5e*I};d|dT7+/CKTL>k{G$^JqYR{"z|n;U$,e/RI_v34z@?Q$aM.N9ZFDA~C.,&?k>AX2ELQcKD5JYvN:/J$dsos_,e6E1=9/RVQiL$5hF1H]JqKq&CRc0s:q`|mxAK3E:P>Gy)FrAD.]!6U(fMUYg[@DpM,WQhgaYgn9H,YWaNH`qFQhsj5`7*Jm~jT>NU5mM^IL5>?Ebuc^5XM#A.>>ckNkJHmwfMAWuwP2w`umnnp[8bmQCZZb9WXrcJDm+Ke:4p5mLm;p/xZ<w*Eis)^|9D<tOL*/)RT7=<4lTposa|3|n)Xc$[.d[<e[YK"G?lcQ6KzL7qa|!]Wyy}Xec]y24Q6N[;1J(`tpkqt!t[]_w$[;Pu^3mUByRGKKE54+?CAcKDQcQhyl,<Vr;W_CaF}?]<XmK=9&!,A7&gWw)Je_i+Y5@x?g,nK`1rz<g;k/4..JCI=LMIHnxb@!Fo#C~_u^h(>?4o3yM5a$i;sU"&EY4Pa[Q|0y}]{$]WNetq1J&,M+BszaG_?`}TI%[;_?#]i@F*$J}i*IrkMwg$Th?kqdO=?,;XU!_0*WrFF|h##;1p*[`HE>@oZU(a!UjHC`^A^}SfEb(Ku:0F[l$._M4qS=n{yqq5N]"SC+}ok>4.RHWX*J6.QJxEE>|j)P"kKgg#|>{QBlO_uTI|wsJrR&W8m(;Q_uVtR"f_aI#0^ECh3}K1{*1j`MdgG>i5Y#9tU=nCfbz$OpS+_VSL}x)]0mNK}#QIzePl[JoK|?ZNeHhWuwS+*`W_u2m:H(*pp3BxN,Zw$mC3wLeSv}#D;vPGoY=uO!)!bi~K)^brDDtc4=8a>rejug#9#aSHD6H%9?/;x*xD>TT`,hG>sdWeyK>)CK^hX1abEXTC>pm`&oMx8j}hY=7="?b?]^s39rzVTM[?6or8>pva3R}%WSB%#n,@wa7Uffp9<Ic36~14TQ#h@U1s+ZbR={[;s`^VZ0g~X5RC63"*s%!Jn?~,dueF:XQFfV).gTYdDw)=LN%PMPZ0kW`RTF#uD=[nTKDQXaImFa)6C}(vy)j?<osa^p|QIF3$:?5`SgM6I?eB)/Pm]107[j}EjC=)dv*E/;WzAH`o=;%/$bnJc^p&AmP#n.>nqU_lR;,3/SUyNZ|;FK*n|Do+L>Z&%L>Rn8U78c5NStEFMQnyKjg%x*|"k~K`i8gV?31@DT=W*`hH(3T?^$w}PGu{%R9C1=pUpa6`k:Sfl/^Ky*z7s&pmFk1Y@=Nz@bU_^![2K@nD,V%3|rP3ub@0Uy|Hw3_PNHPM}`FxHNxvQI+VGWIyQY&`K/Byr4$q+_"0X1j9BU<;N0V~"HwJ"gBx*[hdP;_FY(H|)j=n[R]~>ke>|1|/"=E!WdyD2*B(.&Hi7s~u+1j1XJIHLFv,EYP_y2qojj4ir`4^Rz#n{gO!m5n)&RLR"GxyB,g*_oX1~0JHkd=xKjnpu,lV/pY.IhzO:E1Tq/:VRgH|JF`PFvQw"KV3H]K^i^_=u/xcRN8^<t@t6/ZYuyNx0O~rNh:e+[6rKFAH@X`N]p[`_M%Zh:7/0YJ59k4?:@zu<,,Ug/x|_Wu^0<PGFz+`^/V9R>_W4TW.6Ynu+kBGRsQThic,au=TOFP)>x6vMx#5.yG(ryZP>#7CQS%_RYVbPr*=ZB_hWXfFxhtqAg`v=T07Y@z@F6Lj"j*8)*;k+p0C+fJz&;h8~9jw)U,UyTg[P00.)r;Q>4VrDz!B@bPY._"+;^K@LsWQAUk1E[Gx?K4CD6jGC9I<E^,V!q6%s:`0OH"n%8i9zrb=dw4wI87VJPU`5j3>H0s.>$2RbNf0=&I(ame^n#O[VnmQXUoGhSKXuon<N1>34.gZ:/to"@{iZjL@yxs!P@+M!g7rc5MT4515]7?cp2p^+l`bxra6TR|JXJp<UUm5uZs<uY([M)BU"cr)@@b^ly<E]lL3rr6j^@)mD<"n]V0v^^A@fw&,o`"|j,hQva5R&|3G*kYV@`>[#<`q}3n`JFf8$bjI;GA+ZsE1J=2|qU+}l$OHU{*}iiaP9E=C2,jXamj<VFE=?]O)w.%,vQno=)P{:{t;)MvMX5>$9f:fiRx>AYQM`mJk+jkRMPXn.:B7z{kmN_.6ObxYkK*y4Sdw6KTMH)Pd_,M{C!.%O#Yj1{]1RkSH(%=19p1/$[z<+!g.b5haU^;3FIjMN~EYi_oGmpHM{aVh.+hk"X}ggpfH>p"J~vbP8]A_m#"*eS7{%<*VllS=SF~v=%RM}mz+Vg=tD=?fd}]e(8Bei8d,w!K^o9W8D4(8,p.~ql<9*SH._Cabts{dX(VLoXkp:[k3T0&G3s3Shu)IB^7P^uU%("mjLY$p&<@o=UK}zS+c[TT%2R9,gkbbV+YG58tk4(7:px)xT^<8)@"dpm/6caV]^<%?^%k8Dl:H(bhKHMhGdzjlibI5ZfnrU+v#bw22r0+<.Hyis*Ea$<jbw_[[8%k<U56m~|q&w7l3%{+2@O6^f5?U7{+2rlzY]Hsy>mx7t$9:EN#cpG"EzcEgz<(<*Vg4T=`L2=02gGQT#H:X6SXn:,&0"KfJhb.vpPjjv9T!un{gH#EMWNgm>ev//,Me1?5@^A+prYVP);@6?lx&53T_GZ/xI|mO0*dfkbCs0*cS?]Co;8iR[cv:xh4#X_q_M6,i8oe7spYzl@h":#%P`h!P3<serf=*Z2Wh"WE#S;k/`=?yj#HeM&J$G=RQ4z"Kn2G6wXh"~rt`^qjY/xtF6w{:&oC>y];iV^"Ew1SWW+mXGV/3h!WEp;k`Cac]:jESvtTJGE^Wr1h!5EkVh`#DyjmZya{M?CJ0|g`cdF#9~m=Q8o)n?[Mj#8Gi.rUrA=CFWgBy!I&j{rE!C#QK9d:b14kY`viYeRl]2(e#|Ke!=VyKq!mHp<@*%}SqF[Qt8[e3m<9v0!Aq"yQI;ZGyqc?d3[<90Z_$%jAkB!GQcKLr#v([n(S=_8(;7;v8,[;4I`bcFMc}0d$WM,x0hZhI(WV:tZKjpO7NpjHZ|^TeTt4:eO^S>Z^3]d`r}jL!/Mg2&RCJx!+vScg!nU^RI3naMarpil><INhP`I$r57ojmMz+bhB7W}?]dGr{QFsJU]Bs?5}&mo3?QXx7yst)?t8q<(lZ{dn`L9s0Sv:BR<3..OURwa6p/]^bj;K%zeO[D6.x&d@1Ite+@VU5FYCeF92v)`:Y;#)^4LckjhH..C(6rOJQ!Lpp%w}8O,1<r6ECOfy3TyL*|PSra[jWQ]~EeV:#DX+bqfG0h#KiY({^vuO"s6hvQ,"l1q41868M2WS6jSE|a@=OO@@f1YkVf<p.lq>T@"fM6?hU>J0qL<:G%UT|*;bitLF^`#3U|_"p"%$qEg(pd/Ig[6LO,<WsE,oeJ7tLH]JqAu>YspmLLb|HXfN61*66AkVo5I(Z%wAku|]C=8L$"O&||brX/=<mr_6OPD=HwGWLvO|Ce:*KZn_ixBt;$MadXtzWRW80e?A<7F_!8u72Pa&Ex<:)J%YiOf:+6)R"^CDvz|MvdpjzLsn^e$@Q)@{XJ!As&ZU(mP?c:.kJHDekVz:YtKH%W!iiX@d[,HhmuI#SRXXbSynhy<zOw`N<k+Zk[vIKc(R3WZ.<UzW<)p9xg`Y1dXc*[Z@usc&D.DXH"w$h}:x^_HZ`Cm/j79]O:G]S!em[SfA<0{0nmL~Czu3=XPp_+++nYEwBJ0_0sdTR9:AF,Bj?H){jHD_;w=E?ev=ei7OS][9Suyu{}I]E8`R5l2k7tyvXa"B;d_tZdYx8/}YA]#&frq!Rc5^9`g=T`_.O"lVHqGFixf7{2^3sZiz=A]b:R><(rhZf{4[Tobm#!.|m=uMw[%sQ;z1J!X4$u,ueprxPdkgY)]SaUU};x/uIWt|]1v}1<42_$rfk3z(pxP}D7]yE"/rGMj`]3NUwXaHkqR]2(ae0k?,L2vBP`HT;_;Innpp{/R4NQG2pk558B&6c7T1O=i8+rpIjG9D@8?9KY$1VC%Ao%yDdN,ARhLxpv0mz:G]uUor6}!ou<qq"5rFH[c7rJzGGY|aO5N.Q}b1q%"9Q9|ST<:0k87P{v[,{u<#~5^dBsSO(WYa](IG:Xoi4%b0fb3[G{w7dv#`*W.ljbLAs}ayM1YK?/j6,d_ko=)8nNn?!xpNU286_|jz<Bid78/<hd7Ym|W3L%W">{*L9e:GRS<YI%@v4<KH6AWMaqp`P0{|rT_pAjY{Oy/q%kt+y%`D$`dW(uQu4OYdGs3$_G3H4AVPT#Cw?Bg!IU@"aZb4s4f~&J1m`y{3#s$m~.[vqaYlW.?=sgIu9s,/f%L+K"<$(%n>ah4F(<z.;V@|Tj<p=JdrH:o/j]R$nQ=dDL&>gC|Dn*IZcjy&9#(";xlSaGB?W}9InM#(t_><zuE%>lFeV?|GPb8g0RzB./;|yRA>X%IX7+9eK%f>;|BqpU`gWoOL9xO<!l9+3;pW%sw<^&|<bk@eX~=WzBP<ab+${ITm[[+>3Ky5RXN/RqR$mkHawQmtw<M|ru:(kiI"+?5z6D)c"2RnJD?"}"6"k]hGaF:lAb6`|b30!Ybw=w%mFF,,I45=ihB=PASo1?&;t9w/t9wPA:w_]:e5n_D<;a[,Hl)??0wmByGiL5NJNddOVT|Sa>g3w7c5{vWEa#fbXSVi!CC>F$cy9#Y@YR{P:o{%1Dm1X(+5}{H^BIK3RmxIRi4McAH]F.C@<WdZY;{+!K<qp~<#+9#AS3vG5na3C#f_l5NsT%_@Rnf0+C{3p$1zDmyCiI!RIz5%FZ_cf1P^o`gM,9#Sb@%Nb5G}(`(MT?9C<hm8IUin}y!=6GM]Y6w6MnPp<n0M9=1uc!h}CA7oUH/.sbk$z??a8x3Ps&24#{d*MuYClr{+EjCJ}n5;ok4%.o5936wW8%sYE=gE:*mQSrQ08?UWg)p6N*/1yaepGND$B:Zk"+=nEkG:`(%=f*qGh50Fj4l%#20M(bR4v=*JuKu)KA&0UlK{;/8;k^eb1jXjS/p[Avs!KFW*#~[WYtB7DmXUI{8>vn~HJR<I%p<05^VdD`Wfob05o9z6WHT[cbbw>ddvVabt)U@9dSyCu5ffGtd|#9SdD"/n9M`z0^kV8}`v2E6mdWZC?uUPdO>`J7#0fhv<OCQbjH77[YxCX6F*|.D9X2S5fY)9H{k7i7I}Cmw<ZK1rL<ZOxF@nhQy`3Np]CQ^*,nkoaATJ4#]/vMqXimQV8A<>&sgMc3P7*&=ENxju0u2tjlc*&El7p6lyKnF!vFmVH:Gc~@.?E`!w`#i_6L_?CD*UMjXt_f/0yqb:y^dt[]IkMc7X.YM~t.,qi,LE6rS(14I[)hfL[MXA0|Kvh)YLYFq]T}ljhkBb=BT8Bkqb#bo^HOd7v@n*tp{{S9|57A~v6[7BNpF%(P?M$2H>U5NZ8S&ZmkOI]+qg7N4?LL{]R>u`cBoqazx//A7A(TQY?07So2jYh*z@PK@[[J%>r$S`DgX^oTPtdWgQV6r]}#e5,Vq9h%,kCZ].b8v%O9t21Be(omhT,=QId"=p0{w+:Ir]RY0tvb/{RgcM_/.GD{y,RF==o5^Hp(Xga*V3fgJMqi?clcdh2VfFX%00bBrdn3$uuDx*p`g,pB`0UHi~]}F7a#[Uy+{kF0#HW]YXh`27laB5>bnaBR+$U*p"nKKFm$1^@4VN@v5oOpa,XG]%R>jfl=TU+7T1bXh~37oP=$&yPTu.@5tCTbXgV#H3^m+$v_u=%c9rgkoLa%.r>W.s]u{HtvK0op1ugbdENgm4&R&:pA`<:Rx3Ze3gQi|VIr}]K@)?a+k9]o?W<"Kx4us?h<+svN(;%?PugoQ~4;%eJpM?i2?Tf%_yK<)rO]Y0eN3.xFX,aE!X<Q<2:r:e60Zqz5:b(gkn1@rokQSR)5Dz5BZw<$$sT:]czx/=k?W}w8{@jAv1URqwOH65ZB+B_o.6K,n"mz2=Z$W:euwUF7U.Y6]07lb2K9p>CL:V39u%u(w;/%mxEy/ZqpFQ5D!SrLmeFa_?2eF&J:Zi]v<4u``DL5<r<&w>{g[MsM2][&@[3e+cG,:Q0[uoYq+=FFYgAAA5*lAUE4W84MMK*3x>O!%FLFA"9gP0=?7/Pwb4L=iMAAAQAAAAAAACtfqQ=j)5Uwu]`_/)L>+A<8sCcn/YQoB4Hsh7*s?(pq=dBxD1zQzb_S]PDlR71I,rS1khg}dI*&dssaWIEX&{__`zB_hu5jy:O,^xuJjMe2`@rrD=CIH(CZY2N]0,Q`*Y0wMUv0<cc*1Q``@mdJ=vnZ&HL?M<MWp@6{BDh||<soFo$Qng{muo"~;~&qFC]JyUbDul4YU?a_"f=&Eg&"{d9M}!Z1>qo;;7Tc.d!Hmw_:q_x4/n2_`xlZCRdBxZ!s8"}t^J^YNQ!dp|EI6s}yT8?0Q~`Ou7nc9w+Y(QN"t;OtrKJL,<i<B0Ekgit5TKN"5JRgeS7r%~VBmQ:a%y$^&v)Ov}.~4E|r86Qwb=N?a|+$sj7p[zj(z4qz(Zcxt[2&/BzcBg>u3g?}or{6GCyPat<{9YZDS^~v!)Db?,uf#K!bGAx!Y%{P+gpifPrFXV"nVoyrm=9XAs~MvQwl]<yQO1+j^?i[^01g&(,v*d#_Rr>_D>#F]qYlL8Rd%PtLEeUD%I<l>:wu}q(~{;/6%#f7^I;q1WvkrShwP+mQ6suzI/m"nn9.6U$R7Mq%r:Mn,l5WN8;Rdw?:w=u?`U]wPhY+)1mxNq8Ox16^ha`2pN*!G<,4QQ|Lq*s1Cs}.BGG]hrK.ei@=Q=clDYIht<(#qD`V8_)xVwb4>UvWB]tZ1,:7z>{~e02<jU&[ty2>KkU{yjqyWt(l{h(yX3%=W/T(n*gnfghQ+vrngJH|TPt(J+DdKqw^TJ]SCc9:+L`*wF^zoSB>of?@$]HhHE{&7nw%X:1O3k,0D0f7T}tqU9q|u8O4YW2,1c0`ihk9)Mk$2uXV^fTADX,E=CI(+KEp)kzsMfUPU_xIkm$O?W7p<(H,CB,_5{Jwrob1@6X1(aEy(8t^`<^":;U9L#C^wME1YQV!;2LBS*}*rM%u8DFoEM$X6vPNKIfYiYXw2C6`{|msuyV81h<O5N^l)E0B7@BMZ9.|/}=1*h{f=]o(9a>oA#L^=o1zB,ci.2,q7;%t`?R>f_]BwzKMrzAUMDiWF2+?p!#`Cj?4yiu$a+Cf8bSlyH]miGuDc`"C%sOMiq}O)K`Xp=KQ]eVLr6.Kye:pBN2cn6.[3[W#z!w)0Gpc$+@gV*)An>da.pzC)2f7nYz3;LpqgiOF%"hlJ^rvtGgyDa2%jkkbMDl$h~z9)EOzJQXZ,?(Y,j6q:UjA<:+H52U7c5~ivR9g5T/`*M*k[*wx>Gm}d<D;Gn%@K0q!GBT;1#j7cG|k8u>)tGqikCpr}0#lne+bADt7r`k;gjp#oCJ@W3L/Gw{O3^8|0OZ[}BI#8jg#+&@syu#1E)"j3aMB{%27zL`,0G?;!zR_qO1Fj%*x<a}an}T:4!ZC+=&;Ql3=Z`G5/gW6~RRMYe&(DFDgQ6~JRldX``c2aW*&7%URFFCO3^v.yrR8W0XV<*CP>2%D$/*kA|q*JzHY"jk[`B8uDeC5apc8Vm5XbJg~CvBsct&?NXRY+P4Cc&Y`+Bjf3_s1T5WDKfElt6@$73Iah(3Pyd&KiTlM0T.Wk+xY`sYn*S9Q):?IHZ5?"`T!7UneiUv;hn5u9}joq1Y@,;xnh4@+,BFvTY+fQ@(j1O%+jjdZ.9>ICPnNJVbii!!9{UZF_c2{Bw`G(d#b):)i[#=UuQ<f0[E98hpT+8~]EK$%yr,ka1MW#oQ^bTot)u9.$26!P`U}|3~ji,+mPN,4NK$}uCwsxAG}%gt$[sWxlY?Xc%Phq!23}@uc5:8Gah#U~%~jsZ2_sB2i~(giIUKRy`L3J2Qcc)IfG/t)y,"4]2jA56dUg~2u_I>F{FFRC+~v[q(,Q.A$CV2IY6|^t;Vq>/X?!g5(+C7G(VX)N@OV48wm_dl1xGl_XmfrNXlK`(+KydstwuO{g[h6G@h++}Np}$mumNHxpM,+]"`z*@E3VS%:,5K?8$QXNPBbQ*SwXF&=A2di^zUPt@kc*(b|Iw_5rszl.n+<no>cqsCMd^?@/"Wrf}0JEFO&+n+&`h4s[Bzu3T$PMKm2yA19~"ud7@l3R|~Av8;|N7Cr%m1p#e`GpS&T.Vd@b9%cI/Ns=0JgS8iU>/F#TgPn!oX35tMsseHT]k!G1W~5_Flvl@H^#j6|@N6eRP`m&}YfQKt>4dZcV#)a%>rRMEs~/ljP&C7^?VNz_ix=y=K6IM_1i$L9`TK0v<EVzERh/[y?]~a,MUK9_=&H}jXku"}F/nve!P3!|)l)fhj;2ZqTSrj&n%P_$n5.eD)npiSqcAs_[lhnezrfg;xs{4{<ecJ4[+5sHPUv:FS(Mm!ak+`O)D]7Sl^kk3eBr.}>=Lw{|a,WvN6eaQ<`Hx:LVSJ8WzI_Y$Vr|wI3~aTJ_N$d7R8Er<|FuHzjr<i|TV[K@5mW?W$8{c?jHGI^>1=GsXSe%Wc!4g|9^V?D3(d4|Yw/}j!1{%y34A~Rp1,kj]VObidKVwIF0?r)CGZ[@VyrW*m`p^x23t@[(IXA3+:{h0hcn7E(:9e>RtC`Cf$LMWiC49:9|)y6+:>xta=kz1YFUsP&Fg]1n)VX394h~^x8|{ceO]RDt8X<*msU;6E+yM`RotW_J=P+;AUi|zE!tXOzW|MY{0/EiSgpRTqd6p,m1s5EO*myhl4eRv),X2NT@|htZ6!UXepy:kX0?|F|+lXn[dZNVM7po0Q*hh{+_B:J1L*,Qj?a%><cXh"48U<We8`Zb06hlItsos3T_+q=*@&7`ky{U(a&TebB,#lJ$n2;yX"Fb^zDq_)0.>{yJ}0+|HMV&zb^4[,Gh@s,g]3|a!Xa1{!>rM,T?qC@S<y0Xdo&.F:/tJg|sfYMmZiS.!x?(##R6CPY2m5ZL<Rj&m=$Ci3|eZ?(a3z@aXPre$Wul/vKOgOS_Zk?e&.E&@Y@)M;8#q,.EN5p]3[U0;LI4gJ}]l}fG#g31jf>1huZL?DJXYTG?e)/g}D.^ZpuSsJE<AeOBux&Gw)s$?&nhja%`tjN+&qkfMw0O50l)S3iHg@k:@bveOfRn$Pcq<0szkQA5XzYJ[YR^YVq78<rxTERv{`QE!KR)8$Ro{n$Kc04TUPC.Ym.>Djt*Y_ASL>(9i)/(6zn@htf/d?PwO4LW)&HBa&!%dx1r*c7Q,7|3/HbLw[/aakS.@c5_Z"Ac_r3H$my`cKg="t}M^X0wqq$|:M5]Q[,IRTV(>mbfUaD.Q|;|A{[jqLB@.CVut1>Gi^GgEe~Ddm&8dR8}J@tIcDGq0.8vE`|(.{B+~Vh@8</akVln]HAQ8!nPx]"i#4E(F%##Y%:Z,Kxffvsh;.b{7oJItny:E!pDYG~:jLc?EhH#AKlRmU6=aS9*@t`Qw+gpRt@_4Lf~,]cAnI{>[SLU`::p`jyg^,E80tFXx+dwz%Exok<T%3$!W7{xl[`Hi$s4HIeF1.U)W59H*C6ZjK"X=1c)=CWN/DjiON"eT&$w/jQ8+@R_b5U{q&HsS8iQADaiGmqli(%.:C;ev|TGl&*z}u}WTq?.Y!U2L+Q?*PY|Py]l?*077aEfCAIhRL]e_GUkoy1<2G*^!%5Y!.HhCpb9``|ZcKqS?^JVD/@DZa`3A%u~FsFDw(~qmr"NEODP=agN%(PyshR:lgy**2|Eh4c/M|VBW`!;L6JS!Ga/R?5|o#)MQ3R=PIqoI:SLi;;REW`[h{uM,S+9T3>MYBxmp0&t(79L$Q{%`F{wwceWH:<Z0KJwx`k+RnC)E^7~t97EnpkH`]Cgc_WQGu6<CE^bkT8l]!RFBpBIm*rCDYb%9%YbI1>l3G46wG^3`[9.|Aw0M8gXk{0T}:N~wFQ[,E+vb)iF3foK5gOyA1TR4785Xaj0W6LE1_%.xj#(cFrC6IrC$R59hg7|1>2<3+W&X8e0Wr!GFL]b[l4@Fr%?Sq%)Tv99/80cTbc9y=D*![%WgOMHQNI}LfoS,0|2Anq85pfo]OdMf8zBWp4Zpj[l)RPJwu<utCNZe9~m{@uW8@Hyc.y;)<>`cdvg0#r/UoGPeG)kcK68}8T~m.7I>b7klqb%v0Zl<c+gI?VvUXjEaHt}%]HTt2%*jc_DSUKPCt@x[6fxP)M++eh4S]r~f9gwmwt6_JyoBR#Z;03N!qY<72gRRx18nYT7iR%21WCZ?O~i^+n,Ca/Fnz{i^zlib~cVaH3mUDEGAB#i2le|C9g38;vb79?&<Yztf9%G+)}AO}v}A0}v9`{*0j,%k=.Hy5JvDlTyRm8=PRTeQOd<E?}h=lFN;Duh%XW.^gnZ>uLxqdW=(wJ*;fbPwwKC{/vD3{{K.!+7,`fD>:edHqcbCcF_YeAd5BudjV^mS2`y3$dK(`:4OmUQk,0nH$R6YdcFcqAc`p#q(tt2UXXcw{@"l4}s2+1t4!_8x^V/7rv{{L|z+&0b!Z|z`5H?64?YNw|w+7lU7ZYrq5:8$%:Ccp#tLE[=:o"bZ,}/vQ2aEB6]t/(?K|KavO(!}iP$weR.M,SZ|_q)vJWzvS3VvY7+/|cg5k)`qR=,A38]H$"/|U207"&a?(kytHzXn)L^Jg2_@J~L?*8Tnk`3>cA~,cSME8W*"HqH.f~E6DI</E_;$?Hp:m90^e?iot1<c>?5$!O/M+$aL#H}|L+>sOn977utAC@XPB,q[w+^ZPW*S"D}fm[_TxpVnUu[RrPH(~J"(+B6~[lT"8+^_xCb6VNPf2Ch!C"GBm,V!~$//AGJ`q.YG/6a8aLiU=1QqCF2Q#6yragtbv23x5bPBN(x7VBCQ2uZ:5)Y_(]md;g(|P~j_9QoC5/t,;r<4%<,k5}|;Xr!&%7Imgg7OeleJ(5`7^*`jknS<j9<|(!|YRl/1ssL#l.r5pvrLQzKn@F}s.zwpub;Yl@}NN2Cx3":ke&B33);?n{(x0?OM{o{FhBLr:]&u{,,QL;Q62j{cxZtF(zx9h3pzOYKb.4.ExO[<@bhsH/ob6(WuXF!e8ClsKm)++T5)%s}o`i+AmehfjRY,1>Y^5J7|uC@H7UNN^d4ggcCZU5pe>cY}o1L=BG&A0js?U|`s@PX11{7,cz+PuxBW=7xz@_Y$"s$UE7Nnx~R&S)y7djzV=DjASe,n(xy#LK8s;{?_`:PlyNd>2GSa}LDyGiqb>P+0Was,bf_52RWxHD)3n3N3LbpWmlh%P_R(L:p_9(Z+}d.L~JMM3%YBrK>W!cAi(}y&{i5}p51Q[wK0$n?FrhD:L<h`yol5d>;}wRMLk5koNz#68E(y!hZQixN#y$;eq]TIg@7m^^{`E}eV%]uOEhs*[);t~lir3jtrO8U)tVV{b:%K5CQ(Oq@yj$IH4CyDk8D:`O</vaU$#%PE5zHB4%]H5:B?.`Fcl49FjhGa@,^]!vKg#Je<Gl0^ODzq9jc7j&aHof)SnzZxH(!@@SoTDz6CWU&oxN5WPHc@1mIXQvqw4tqA$X/lCIz|"4N;9cT70uE$aA9SYb)[tPE_iwEl2PCfD^0=Y%K0:@|{NtJ7ux{0</OC}LLI3RClF])_@*4$AjGm/M&]1eo;6_;p`>=6771;nD2KmX!uE#f{"Zt#qN3fv!nd:b)6wc!EFfcmrK5&u~BVt8yhidUFr~6tVc:P#.HXh|xNVd<(:ilx$=d|BxY+Wf.2.R?RU4`Ao$9j@rR{^3>le6r26Shlqe$>=Sa#HFzD}+Hq,;1D{jXD9$Ln/eQY)CG#1`J7DV&[4nvWQ8,%UcmC:>&IU0d+Gg@zt?E:}bWMK**1B|DcN^rt%}9ZezU9$uPk||e*Tx"}n[Evmgz*05rpDrkg%8h:1Dlkw:]G`Ai{HF!<?v)et$,g!2)4)lMIGzU;).E7lw*AYK/?C1`Ccx!Xb$){l*X~l:<x4V]@8Vk{a:zE8/mert$5reK0B9=gixBF{f.e<pd"vUN@5:DM3E[dFDB>Qfyg_Z4o:V9e&/zz?&IWwUjp+!*=TC*bZ9RehUASTf$q5XD6J9!$q5F#nU5FRb(q$~j_QHSU9kV38:@:gP.}X3JY@Q<#,Ss$E&]qMq@IoE8Z]=t`2,rx6_<{3v*~9Ui[!Zhn=q0P}:qF>"|0EgXAzq!<:xFg`thQgJ_:tq9ZV,XlJUBeS*gf!/4wVqQ/l/0Krxh}H^d!iJ@_F;Or:waB|:G;M0Eqn3/w!#G`+B6GOz3Cx^6K+.i3a7G^q|=#Ef6#=lcU{smq@5^q]WvTEQ/Wq[%^8#T6(Yb[8uoJ(CQp.%%e2RK=?s;T)F:bpa&$DW+ppzqKKoaMR4eiFD%3RfS+LPm`8~60%#4`Q{uKPxJXzBciN0:9j4/{*Vqa>c&5%Kex4jmKB8xTU%syZ@c@Oi:j#!RIH>)L|=V+Ck4%BYg.fce$s{tvl.dN5J>P[Em4lPGiVce|EBV7bv$I05FMQlbqXXEt!<uYbG:^T<(A$*z3F*Gis={Wu.x::}CWy0:cFv@$zhs)g}hNh1xm*Tglq0R<v+1"<3em;d~oLfp5`V2`jtxN(25u|,_:j1|d>>ob<B;GAW%bfw)4Y:[e]Ej75Zy3Q_1hH)|1/f~>61/3E+tg@bvBRK(ep>!0R%&28qR`4=MF`5ic*T[oai3PItQ00`aJn/nB9Ao9thK:S?{Tlq9HZ;iRH62@QY!M4U^;I8>8$0JbxDwpoJnbPs!1|n_ge70t</suut.e6P&Ev"k!^K@t4owQiZ%JsX$n"$ctEtfbDCIuvEce<|`nZL"]QuoP54HZhs`izjZ3;fE~idbj3[L./>.5ZKpY((T]k4I|Kh+GZ`3`#KAkQN:MaV<wrK4{snJ74y|Ecr*CLw;+p&Cq@u^FiOUJ=>HdmVm9v%(:hv]g8F9z{{U3(_9&_dR,)LY3/?z>1)y2oIh2cZ7WQj,Q$($SB1VlO(?|B/MJ~;1J`[`D:.i?x9Y((0vXBJzuN3j<IK{45`}5+,:|cU>:jugXTzlQ8!g&13?Zm[b#DZ4P_?:Yvl7gg;2gkdKw^Im[`q"mFCpiwsfc4E4dh2Qn$a_3is*RDvL3./I5FhaksT1kz_M*]LXltrS8F3|1._L{NiHeHUMl.BSoeY]Z<Ty%Q6|%:tm#m*bE;.+)@N`./]("t@FVXhjaYdNWfJfd`WT7;BZ/[0_bMxp@_$tbfY?&/S<XQ|u,BcL+*~yk/bZ~VsA|ehV8?;=n?61KO42eL;XM<wiJeK>kUb@,P_P)w{b4*$O+m7XZR}4Eo3FeJ/Pn;wY2M@pFa#@]Yq#HVuhaV{Lrj~58GcQIk@+!g@^,_?7,US9Uw/[l=6Tg[@2u.#WXD*@XeF8b.o"Yz(g:9LAo25+@le2)TbN#kbYmHdrmgQ:B^EtXwa3+EQqax<HZyZhxQtPhB;7HcV_k9`{eAd<k]=#ox:tlNw0.COMmICcQ.f{=!vXtMs+@Q/D)a8Hk#8rp1v$I3eRr1a/znpDi2:GiCGac^b|MiIE|}5,"JbU;yUT^_8Fm?=~O)!0T:6L|^Oo2:}:sjo`!))o<>4h4.XGt*A})<HziL8Ri<>bd=E6PxqPcLS[XOP0BI;a2T!CF1M4bF(/S<;c_/8?4d6fq/Ms,eC_l`v$oTo8q8wrJ6CF0V_l~.y;xNjRH7,OM;J@QBTCqjP;f7(fxM+[a1y<7pG_8VZPAUtKrpZ/Ik8!,+dNd^+V42,J?HB?VuwO|Jpf/euz]j5BU*~t42r{%d$N:I5JP[^|Y+*$>d)j32]T+*2w^*/]ei)x/`3&7}oKaT80p/2(z)tEgNy!nx{+xj<Jsikl1>7a}O}%n.?lhQMVy_ju7GWluWh?:Kp`Ct?(!_qB1>u]UupPA#TZlXu29K`(;bulcFebGEoC]Vg"4Ub_EKjHMhjN~4^!|A^z`d#z|!Q`MbRF$<Vj#,j6k7c$ix}`HcCy.c!yf^2R!@;?/0![|%!=~KwrO~(~/]TgzPL=ltrFwYZo0/3AG_+u*Clw0wTrGCORFJrDAT{<oReBoO.msKh?{:|+[^0XiM17L<WX&5PfuxnEUpiai7^0js#b7Oju)4GvKz~EEdh6TOx0%Qb>4r:Ne4o#i/Eq>dy{$flvlUA:sUZ?zE*=A|4eFOpF?WX{F5t^qvc2DNt@X3oY@6h]qwVEj;DbL86vgjw*b/M:wI5QS{oRqJ|X%BUW1R.9}O@n<T4#b(7p_|T:xHR)qb[/a1e*k$o&c<Xy:#)%[);YpP[(NM3F!t"n?8OG6t7"|ELLdV0|K(p1[dMeja&`&eSN/FC?#F]sG+Gs6"5a`@e[kdxmRqabq1!9pZ57Lwk6C!V@|pF?=!nt{N)=U2&0<uu~dZP4>uBOWuTzC65`st$UjRExHN52rq"..Hi_q~@}]4qIJPqS[dFyO^ai+s7?)Wa7^N/;C]Yuw?/%9B=T99}[e$`n3beckn}*}:4?.2_G~!cpeau/x:]fQ{)LKGR&QEDE*U~7=^)_yB.y/d4F1=y6h56&Zod~J:edslo#Z{H^ru/Aq|8o`4ts7:%I2@t!N>%=D?r#MoSTECS#F&0eE8Fx&BSZBQ(6{oLnd!8Y_/GD*KvG>{+nm5^;xEyfX9_?},P[M>An^ggziu(l]ki]PB`7px7K9l5;A0b5Oqbu[kshubJyx__i?=09p<1(=!%8eLfQTRh.gNas[d"Et]f3O)w`r81dn6F?RrWnKP)%ap<|tbOrSl=WbYc`)c^<c|2&$"C!m;.2i*m%k!"iqL!7tm,@H,fr^o3Zi0m*Q!}{1<$s21%V]LHvOMXvN&<eS)+8vuV17zTx+fxEn#sigEc:Spng$YB&AX{."2&;e?~icf0]#2nrpJL7JhbR41"v4x#|`j^>`[#Y<5j!<[t_Vz}_enbzIv(tX#:`gu,gMjF@I[c0Gt$)v2UU~K|iL$:/PeoE5YvV(n*cY6(|)x"7A1F:tVJK$d.Dy#4,mW549a6ORe/lxp6oX749bQy>JEqPJuSvzF3<V`y%"_XZ(Hkphh[Gs)v71j(4B@%PIb[]7O?/R[i4Fy>qH1?pznR>HqVHt|E)m0+cW6X$R|T3wpMNOCI:8viFgKV<Pkm`RPqB<CIZ(Cr)R3uK{)*cxO&pprHUxuR#vSHO/?54iUk}>E.fj]h[`no2U!9B<J5i,[&mWKJikA=6&,S~c&rfC}_b]M?iO<"h<q/jln{hGe_$|Gi8N0/OF8,E8>5t9Ciy])o;%Lf5+n``?wut=nJb6/~rjWg;iC:YvuY|$mZ|Bcyz16gxKRvGNJL/lXH{2NpoS3=J}gpsgW.mfczc(H,KjDySw;`q`r(mC#3!n3B{HlePBGuUu`:E{0[?Na_cO)+eYvE&NQ%"}X<S*p[7$7<}5I*hRuCWOBxOy$b9on?h0IH/F~fuQpz>k`ZN4x"F{3rf(d,#|(v<gKWw&E9#+];.bemF8S)To*1I5^wpW~^`cYgL*+;l@C]H=EA7S*lpS7T#<QtYT;W4>`}k(25T[Z~waQKGwL*B`FCE$=%{[.dGcL/9c>>fD`qwz&k^%)^|+SkX_p!e>wRUHQ77XD)Do21~~)+Q%!4+a`lSNMm&q82So>TcH>RoHpawAqBp<^EZpZ:mnI1y!>D#j@R&vih$vX@Y,}f.^sL!ma<X2J%c&XOqKVEbc`Ee1zf7:=s4YLh{w`Jh6I)XM8&/R?.Z{Pc^e6Y|?d<E6n/uRN}NI%gmq(&:}X^!}F<,a(UcJEIeM+G6&q{pqY=b{0aZeXFJ,Y^?nQ?<@_$lk=TX7JD5.Ws+p#oECi|@3Y*%MNawlDOfLwgQvuuJ<k|E7plyE#u`F9AQ]RXf5O$G,_;`S^meF*|pUfOS27{ai8/yG|Ax7C$XyXSRa:3SyUNa6ftUFXv^!FgUkG&3CH8jB{b0EmclLJXl[9RdXRp)jw;2DiOWVsO|Ll}b0gO,l5WXr9+vu%:;omB?v4UqK5;jt{|S*mILi#L,YJYapB=:9l/&f~Qqj9iLI=g!*`#2hW_s,|_>$xnT!!iuK<)S/"etGL[(>RUJ3kYRb+]k1/S%tUkgVFmuI937yiuHeBh<0eiqw(T)9h&@Gtw4OtnzLgg51OxWRu>w9_BXx0[Z@47g;c@]3dC^9S0xXqSQ[gs#]V4WJVGE{g2^K;HBQZ?BT1hmaQ@=!D0lr}tEink|^EI|2pEn[IG(al;BJVuQm+fz2|bYR4sJ4iu~&Z_u{"uZ{EV8zG=|Q|i%5|tp@M0|2>?nQ3?YJ*|OjttzbTDtXnfx[Cddz,fzgHtn}:Uj|>V[idxRGTrrP4Mc9Q4rl:EWS#N(w/JGhYWyYe*|@<T4E&_`~Kx)HZ:v1>8P^RTYKyjLC*Dk|N>2PR/^|l@]):M%A7q.4{ROkX5<dY;v=lcvw(.X3fSGjZYayk(|0mQu[<hVuCFN*+7uyQNa`J*)P3THZ2Y>gf"/_A:dLX0kWMVnJI=S2&zF%Moq_YPiEqvbCtT+|*%Tr8wmkLu(+@mWDU{_6.Cd?ooZn@`%[as<iG0Q3oj|$IF>,Eg=fQ*ZP{{;{zN}}sc*/6=<Ze{Rv9u5xn9E&!qx*):^QC1I@.Zj?e.9<U$uvH"J,l%Z%_DS@bWY{zDqFm=325c5P~g?}GRah$&304cd&WKmWaP5u)+1tE2=48^Y;%Iz#Q8;%yb,;h<(ri1ZTHD|#I6r!]OWNN^mrha|s3:Ab}iPBXf3Qp6QA_|8l=&bs,Sp[}ElwREd<6}/Z4#l6K{BwH6/ouHe`?S``[v<bP_L(LAPv_XmN_2W#_FnfQvzIS.[j<[43e;exSG=pTLjATaFIPXj!>i([a6|Mr!m1K_v|:8l[tJD2W+k%6t~sPK7`J],5g%~OUipX>+&AO3RT[%[}(%`OwdOKgLPh=nHzn.JGuLd4Y*V^JeN4FabQmIPm)mu8=zWw@d(Dv#XrB2N`FuM"Js4_Xbm.qEI$~0{<!)Q]F/GfxBmP#l,sU1P@|}0x;zwh?IOVKxt>ggwSzq|9QCceL+Ec8r@UOi&KwLR,|k4(?4k"s;+(N=arfEKhx^({7ZOPZ;f#?IkvT[buXHLmALM*.~JTqfm?wDr*|9500SoSj.=YG`ObP(XDMr#>@5DNpy(ND!4e$.+&Y2B(!YnznbxyU*}YzM^8MEb,@n+=+y:h{4EKF}Vv%$Gev&S#w[;`8(~Xd!_C~?$L!Rcz#R4ERh~5WA962_>0GwFy>>&jPZ6XHet.ZV}cASU&%MdIuq}ElEA=#i&_uU.&_pd>w2)](/Q8=.Twld;m*_/UBeBs=Tc7T&q0o$Wk.DRbthtwp)Zp)qGqg{MzA`tLZ=|Qf[nDS+t`,}.^YaO6:D&Ly$Gzc1>}&b>9TP}.WUk&!$nc^q*zqrmm^iiu@JVhaSu2c>RuZn0~f(Q+W~EiL=Dqld:ZL,9R`7UxAT>L5Bt=.UC[`[zk*RxF5fa]Ux:1Svic!oTXt+6^)RE84j{b~+Y,Uyf}Te)/0zvkt0iJg*U|7qY^7i&%%k/6D&HnZ<z>|A@@fWWRpDQ}_xQHP]cMD6T|!vD@043{}$a_l~w%/=`cuxL?fXihM_Nx1DtTUx(sIw(zOM&BXAwqgB0qzRcYHH?K5^ap3,ArQ^s|uU.]Y!*PMF(PPMZ6>`]]x6^y!!~HTKZ}[yS$TTXD/L^Uh^MFTtm`OB#k@W*!pp7a4nC#UWc]z~lD&Fej&EbBc<ik_G5xnUQ.Z?,NxdO:KLgjLP5)0#SWOrIoQZRY"htv6X8fz)9xcsUBV2^$dS1dt<)yV>{HEvlxP^?qHq}qw;5HPyBO=M*"<sen2gYdS_<*ndkHeP0X#"/?dWuwJ+G,Aza%LiG0I_$`}g&J"9YA.e$Ew:vFK4HxE1V2$Id.4B3iWSHG_r^|3Y/@oGnD4G94wxs6%N@Ly_JQ>o,/vd(ybRS^B~ayz.#v3Er/UJ|.umks+(GJ]mr}L#!T_,2jcvnHge2Lm>5Ixq!#HEF#p[LxJs.9pM=oQCWSpr<eO;tiIc0t+5r*CyI2YH@i2.+L$+@3E1UYv(@dL/CMuO/zl9yb|Y"4PqR!/2WZqe8fqqT0Gge;CB2(R$Vb)$_16r6ZM18z;8%d3WxS`S=QES@2.;5]gE39o!#i&@,fnAOn3Bs_XQZU,d3U1I$L;(IcoR}bJwx+dWL,Un}X]p.~`G9tHfhsL;P0v2S#?TFFWl2%rQ>EpZDAsSJdf"LoFXtETqNI==XSmiQqvr^>F~0jz<M%/$nHn7_t}`/[(7Ptlw%cHa+%$;K:*`O^i4mcCV!p~/:e}~aU/tMID/5V]yEBaq}7RuyO`_Xf%_xRo@=UOFq+Za@X&jnyQMWE#Y0Y%+U:{IM<)^5Q,T0^"dNsOXV<D{o%{ACGmY%*jL)jk.nZv95]F,|[1R_c4$q"p?%QwC![,p44@W.e+!:TG(+"T"95}>2&"oB9(A;$6X;f}RiD/;(@`j*c;XaR|?}@OZ<I/SwpthP.^csd|J%"P!u_jeHXK(mJlCg_J49x6Kuv|$,k49F)]2XV9**iv/|Wa7_GPTn]#3EzCe?<BT<QNUL>6"GV1:YPE@e{[,T=^}h>?!yp?GV2db@vF#g.^UsC$k90UOmsq0^@OPZ&ZY=vKdQ*}0w/GKb1Y@YvM&xuKQoztaD(B?WW=[Qa3m<)k4mz{>GiG/?sc^#ZQc]?r4AA9ec}AnbFY1c.FWe.:fA2k[.@o89lJlB<a=7Cb)5dO(<^_xJBNNdx`uOU8)42z>*!C/u~=>rfb3fW`$2YN(oReBy|]:^n!AW~R?4_b~:lJmFY4"(TN;W)46M%^Su=rGqPH|iPFEkBfIP3>VBD,:%=04+qJq1/n|H&3ah{6Xh22~w*[(E!C.qgbg*HKC;@2Blk!Q]F^]Fe4[C(`D>XU}]ND$w5qzkI<wSY}o1XnRlw"SA]Xq=M<3{qn"s/ibK*Cfg[cRZJP`0JJMO{QBdG?N=zm81+gOF=5<N7z__9+plWj!s:4Wx`bJ}rEBK"co+!r!uJ3=(dyQrL|E8Z0;fhvpy^or{>iHC,2rC^f{HQ/~yB[Wj5H=hua)Q{KLPK5uzYez#+=[ve*r^z%)BCp&XDL!8}JzDB)cZ./lu4f/Od8De"i1SV"b?_M>Y${1:,wa2$qI.l2CK&B<|s|AekY7v(%go`tqHR54(*E~xalsy0Nn6[!u4v(F@$4>EQD~m|i1(g!{IT2~e27kv=DmP]tlv2%;!fcg(!+BwI+{{9w{<LVF[io0cn|]9?oeZ1aJtOI!p;C@`A_@<dLQG@k{"%(JeqiDV$y"VdnWouP#@mNj:GpX8oo:0>/`|UB)TY!toDLj<^]@DKF.}4]Aw3oBR%=Ca]6GqQP0:)7hK5uRtEhb1WyR_A.M(3cm2k%JJ4e[:<.}sSoTB.jCw%9gY.yf.CO4&^hqV^tqw"{D,JD,Hp26k~NyPy[^kAo@dW4bxo)H>c$I]/+dV"I(y48Xc+6@?P}r&dReD7/!G_ROws9T{fg`*/O{ba(:mz+VhTb1M3=:VhS_wBM2Qx1yc,0"c2w|vF^s2E$LJYVGnFJ}_BI1Ms+&I^~@}NU_G#Kjc,68}wDGJ>_FI(,5>U5W)mr8u=4hvec>aoPnZ&V{Bea_@WD5,"t8;Ae%hv9o:_#iV.a0>z2UXcVIKo3iUEkR4bG:]r&!rM.p*Hn,h^HEW]v,CMZ&*<K#2!plN~UD(TvS_TvlO9CCOwh[M+{J2I4HA3Y*Vg=>jc$*zO)<%(MJ8ixYaN.3kplTB3l#vau)}@3l$&Drc)~XF@:c#bsP/&u0^N/>s*K0GkKNnH{N[Vq+tQWpssZ}dFmDPQXjccx(X==.45BOYl?,Db4*:pF/rEh2d^WGbzm_SJAu8N+[({LPjC6sS~`:=Ddzt26kD(j_S_=OfH:)1Wk1I>Atb[VolQ&2yz^E!vBbIn{t*BW+ff7S|L|X^4#<q]JL64$L1sWjqqz,Jbb1U+17f2WTj]u?:uo|)30F@G<8n@ppbouy.H)9Lp=#3!P*5_E+e0CDE@vqzOO6CBVQNd}]:X&pd_Px+>[<Ck1D`BvDE3P)Vq/[]SFs$K!M]8Hd3H{30AN?3I}o^tB8HbXwx_Rq3c9=)"m:VoKti#"UD6c;TBtChC&e#4)#]QfM:A}fdQoT`&nb+cNnF:J]IC#KJiB,38B?K1abCyFiBg<]h!aEuzYDzW84ki&*e}7"n]v"l|;t=[!PCDL:^o5G0#3AtLj|LTQ_i<[R15hn(4y9_6RzngKH`O%hP9)#8}!Msnx*>"`"#]TzjKOMk9iP}3aek20]o_U:pS13`{j/Tj!]r9BFGcksl*_0(k,!li,nGJ1N9kdNB"&P5T61|zeidpW{K9jdi?s!_+ayhJ+oG@3NGlxd]JBML).WzGqVH:T6QWZ=?>S*DI$%x!4s=&zdhX]m,+TbH3RR4?x,;s[}C`]6~mG!)][T6%v`P$$]mkwp3S(KdL{IdEHyO?oWC5F<<i6Z?>z[5&"7uM{Q=Mvo*~?MjZ?WXM}Sh68/vyC)ICn6w$pF:@IQc3[&{z]P6y)*`gn),a3o^?a{?U{~RxaDM5ui!tW#,%/rL7Nl*Mdjc((rWTf#@n#+RE@7s$DcWI#12"5ZL@S>0pD|quy+$#dE3z^MF.gW8Ufk78v!&QqvMx>^^}RZ|0?&ZQLhxxqgz[?;tx}IYTJGnojg"G#Z&OCNnU<+"YGPcQFqvxh]XzT"{Iqf@b$"u[@}1jmYMwwqKC)*l~7Oonx:yCmmFp1H_S$dJ|>pw|x3TN0[h8*u!hAp8SS>mJY227IhMvC}KXczDz0bp43~6kHK%>rikH6W+&6KMdcS5T4aF7>@!r3olfc3YW?*G[=7.Dfo{cbN0%]_Wf3_=q&H(pce(?cf`9ie::`FdS?+(PEup0X2xr<da.#?wO9/1sG<79uAlwPbC[@hr1cKad%K~a[(fiod%9TeUtz@]:c[wRmkt0A4J&Q.G!+Sp0]WU9`=zV.W|Xp.U46%c5n_&+("b({yM%HJh6^Ew{UTUC6lxDn~Zbf]K&DTq4mWpmGHQk?|b}Y687f>fhJ"H(HMc<Bg4Twt$TYL}Y=32vIDEq/),VFq!#7j1Gz`upgy>]U8f|VglQztt/hD!&|JOln,C[?VI%NE}e5fMs2?^+=zCWn`D!IJ/1Be@T%*L>~{N(cnyXRM(hJUGB0V.vto+(~crve/qe_>VAM0h+B>QUxDouZR<Bc:{|Ng0rH8o}[9feL9}v/Xywko~OCR$.lN|n@fHTrHFL(n11*)gw#?=UV[v+J&.`L&n[k]z#(IM8$xECSDm%|xy<f<=,0&u^)0`Gk#DDulW%HHT=C7N{>g~w#9E+UFv`KMypewho)"}h2!uXz?=[!I.fWUogp#%8jPxS^(!&1w2rDQUu[2mz{GDSKNcv?PgX8<4RZU]98W#}`VOdn64!VgQkTr3HT"VGbnPO}k`1^DS&qE@o%gRcCCAyJgZT`OU#mMcNF)13zYkMKj4kDF.qZ3wkc41zI1~n`X;r<{Fec&J,Qwicg1|6v%x4*<)3Bl?#g=6z|Zm%a9n^!y9dw_TDe,ff]Ydgl3#`9H6*zF>XuMdl:J}G0#V5SEMIZqJCtkPwrbsANmWGFA(x}Vg:i.Kh3[LsTM>mb0*3i`n@t51XK=(Z_jNSji[eJ8mMW4pHZR"|Wwj`16w7!_omY{.v87tk&Q_r)^^P$Q95>q%3A@v:*;}MG9DiBn>:@qxN(um9s=`G1*x0S)D8HWITdD7#eXGzl)AFR!TdckMG=$}9FP5YV(v(z^qR,*Hh)7,vF8Lj:2P3(0CIt!hpq[FfWxli#"yy.$OA&,2}j];/|xWzv[a{5|d&%hME.dyA+Ma`{ZzHg_DEu(cb#8J]B|DO/y374jKN|#w/?z}`1K8hJt]%znLw3wk,x*FzV]v(~gr$>xUG!4({Wgw~BWfCEKGnmWg"u*3@d"`dJ2(<RffWy,%F8~d(#mMYyaMXhd,RvYrg0^4/Yl{fz}IEtwK@VLl<4~x;!LV^6zd0EUiP^e`7:l]N[/7Xo>1y6cc0?HN};Ry)#qWC!&R~5cxSJ>ne&D6}stlv](fhCp?cV(&&MMn7LTR*12T0kDd_cqU5@@y@aXWi9&Q^bSpEP2)EiC4D`2Q]>AG|k:X1V@PwC%TU9~mYz}4jkVeGcep110`q>apz^BktS`u~x[sjk"?PZU?odSaM[<kzgeWL.:G(_w7vZbwSb{xUKC*U48pnKz!E(W5|HweOdJn:@S`r"o1B+4[T]kJMbW3;)]?%9xYbiIG^lhIpmv,YgsE#de%K3~+<hd%A<{S6=qaHE?5/r6tSr9rdgsj2;9vlXG!HI|D(DBYIvI$R:w(1smOw?jg)6c+wJ6uef0H+!;Js<,sO]SuRtT8<6MgP6U=@h^@[opPiD^1"t}&]N~foyPIC~<P5VnB/a[zN$D&lPMEmw1/x6=~V~/y$2vpV[?2/H!<Q9oSRj>9oMorX}Dm>+{LvNsJN^}sX4o/O"Ge4QB96VZ/kVm+$af~dI$RJR0a]+0Kox}WH9.Y.bHDO>IGzg_Zw`|(Ac1l|,im4{!ZS78ZQk}71tSh|&~@0fh[#YBt)Y<V+$>1iv(,P>xMLL@/yyF#({l&(H?0~SA@)zhiTKP^:Y>u!UTJMPO,YU&bruXJ:s&gyl$4OC{F3g$`G]0:y;E<<[~mU+DoPRABrHc0rVd;$bf#AYi*}C}}g,5OBWfNu]*+41&Ub5G*rsqZ>`+#pBjbJd{<;tmp79.>(f)`TWh[A:KErRWDe,T|SF1!sm_0T*[N+1xYZx:n*(PUFx/k8T%ns;n)zABkqT2samo?[yioB&PX8*hQ1(i<RM1}Q2_2zH7KQrqz&e>1c1P%*3?Mhsb8_}Oel^N>6?*qt*=>Q`E1v=fw%*.E)w)?uiAMzBsNQNjE|wy]XC"1gZ"y~Kbq&M(p8OT$^K}/nfA2J!OS<^enD_5Gnh8S%ThlTVVa`210wq?zq,]7KJAfqUWn0FU#,3*FVa(FuaT.ilZy2M>QxIsjS(/KJy_T{M8;k>Jl7AQqq^F2d__bk34;;eBqi?.)9=RtaQ(m_l#53[?Ke?>;Igw{~"sGY/E`i7LRqy@P&z_:)UGy3O@ihyu!@?D;C|.>GshraW`sd4>zk^cL|wsiI7_3/xuD0P]@ge4hXrW_hGQ]wGM*>^gT3aIwF:PZ(ulML?6V)LOCx/:mY||2S1P8Rk|5o)FOsW#2n*kB^Wrg"jNk%0w,Q5.f253Shz@H*U=B|+W/&E)DYyPtHFDF?r~N]W;H7+b!f8A{L4;6jqYp/LdLfD*F)I;fyKLZ{dOrp5^"<HZ.!tEQJtR6*/X7`]{J0HL0E2ytH~g?"h^t(2Tc*U11mvg]u46}5V6I^{wtlsW0`4Do{/2O7eaG[^SL,8vnp+=KaKu(@5]vtV>>R{L&Zv2h/t5908EFVMPq#`"(gB.K];95:tR0nLQqW.?b%QrqL#nd/`gc>*bf[a[b~8549%"OR5Da:eG])IhD(c:=yJy91V:xt"}{aiKt==+BATP|<xE_<Ko1YzuB>Py^@sFY;R$qY@EijkIRTM>P*G`LAjHTn7CaW:*tPXy>L796:;ao@FmglRrIuM^!<6~FVY5T%njXx6w@1nmcsO14`Fxe;zeq,W!6NA0{JL&dB:"Q}n@go>Q]]rAs@@P!igb_WSAo@SGdYUf):$iUC1(=3{}ccIwkvBS/bN*SB^=hoDkT~y#5vxfcBlX#c6~@}T{Cuj@5)BQ^3}/RDf&=<xNYQ8j9RbEs0zS;fqz5Iei*5}3(dZmxh5rb^ULzbqtUtZfH[<<G|_J`Z##ftNm>:?MBxTEvlM]%5$;|Hn|WUXQ@KL{#1:T~,fb_kI"yM_Spy%S*VtsKOkpglM!W6F1;haZ99)RGG{Pu,8q+I3B3bvxtymr{[kPusy*+`$:3~a?}Cc^_Pe!e#K@(j<OG`F_!e(!z)$"5G~r*mpHYsId?[N97}UU>#Y?WQAKq7<2HKiBI%[lhP59LV%5N3f8M8LOE6?E!{,:##.@#Vz941Jw<_5K+g<AIeIkdATJODnM}]#`3i5i5:}%c/[<e{|Et?>gk<X)oNutjOHVJV2"sBY;t!?OSnd8R4ZbT%elj790.>*|(3&Q`LgLQ=+l&P>5z3Q3)Xq4]ub:NTb2?}ILtfX#Y]pMz@[r$1_W9}EzfdPr.WFjz$N2hWwnI?N/;nj5tLx[2E@ug)@}#HH#r[*i)|V8"L2L/Vx5!ORNgeVt,eMif<zRIKd&S3hn)uxjRXZ3}/F&<5lj}T>Ew8?V3A.]2nV?mj4Pi|o0gf,du+tfqRp}~24u!9`ar/BkK4_w,#L.r/P!!kCq_AvCciM_^qgx&FHGuM._97r:Q?qjqBNyA1/IPuN}@zNN?;V6FfMjSOirC&kKw|pMQDws^l.Ha2?)j*m*7&[:3^v6)18Z)Wk1{:)>auC^4V.qK33$yyK#c=ZyCN)g|Rf1P@LLxydqHV_r^eNjqmTp&by"Mh}~lMq%obIN+vkOS@,}%=t%[S6V$E!a{N8Z70;Bt%BBvfFW(]Z;y][;0!D^uXP5Oz1g[49c1:.=r>?A^pLf[;HhW"&eag)#;O7SWs!!DX/zuC>>Go2$/})/c@|!E;ov3TRj|hHILk;&Ab"*JQmxIL!57=S",d=Ju7J_!/ASY<zvp@^=Whza]A0~?Xq|](,reI[`2<3cy"u*S&2?_gD7t}t5}?E_[BuX5ct>."rD|%0T;nqz&xi_uKtJQF6tCK=s$Q)W/dz!/MF<V24MfL29a%:I<t*IF.tCV%VQJeD.F:w@!|>2`K:dY+,8`7f5QWlU*cB}:@]08,IF!Ly"p3h9cN*:nQPWv_<[+EG<&+6_`kXy0wP^]B!r]cJoXS3Z#M3m~~^?WjPrhXgxRFq*WU8L$u,!8o>5+tfn6RH!cx%1$E6,S_,T:+?lg`#v]UN$e#arP;q"jhB.[%)/_e`{5=`,$rn0b@qHO>(u[o!Zb6Y)6k3L/iJI5ac[%A/(S(QBj3w(PA3"I@c+DGb,Pn_@s8*n5jg^O8`rfP|)|4ob12[#nnfS05ck}eKWT4M+hmRFk1j_/N_SmotcEAG3!l9F]lD[Qb?&H[8bej$bE"mp=~{=Yq|ev}eS@0rVK"O}>}w64W};JiZP3>I;y.3O9t@)b*28d_hVh<pCuQXJ_;u[=f5Gx*5t!vjmaPgiuXLlKPLsB7B{wgkMRQvr)x5be(x%v[ezd4aZ&Vj;a^ZGZ&~qI@d=`D>s*C5ykULzv+l|e03]wA3>UAca%]ztOVy)aD2~/yQ({[Svl`^UN:&"d1Ijb)"Z,LtNia3Xi0X$pd06z"#:XBIY]"8lzl{edIm5^C[SHmlcDvRjBYxD@0doUqB"L:al+R:Mz7(nv`kHwW:0cY:@6A,S@?1+1Q0mV>.~QHl48Ey_0lv+~`w+<_Kvt{J!}pml6O,g52r$L<gu)wS1(*Rk#Sy,h3Ls.+>v%/FY[PV[?2SD?sL]6E0`yCSQ?raU({?.V`Ubya,`HF}r1ay@jl$pGy!VOr#ZXd+?a~1MgLc!8T9Ex!j56)n=D<M@yO`V7G=T/B`:aX?{Kd~4/Km9J&8+W[Xj}HV8n#DTKtuvqqd##IE!rOF0&f!sPV>Ioay).ORzp#S^~9I`QV*5]S`m2:$d:;/hb~V[HqJtPP_FD<+$YGblC"oSdt25ZKrI;"VcI$J8S[;y1WY*f97,Hx]Sy?>29*7">:FtC&kr<7i.H2;fXHYMD,fQo2mnw(]AKwZ]ZF=&*74v3gu3AhfNc)Np&*+g|Xo:&rdJpR&v6Sr<gy<Bcyu$!}ubj4UU]f,fKboLD<ffQhGVDq8Jv]F?dUYPBRK*wPk4iSrPNRY<h$c^4[fg:Ko47*{ul*"Ad{,CTeDG5*tbMfr/G|QL+H3!T/#:$k!)fPAa,n?B:xjDP21dU5!eDUMhetzh(zZzbr15S|Xza:do50L)Z2ml!O^K`=dWtCvD>0B<m47*m}eP_Y2o<[X@#F&dkZoGOq=yO7b:*GZR]VN5/pb=R$/(p%P]XMq*.)ePwdEM7oAqZ":lUYUBROu^I5GWXQ)D7NRpy4w+ZZWP#1cd{5i#Rw^Cjd"k0]}"//;8vePK/v%^T"<]dfF5[c{BVHxH#X^T3p(rzextsvh0c~ZWEie&sLQWD8ukBiA+i2q)LcLZswm|PbQo,$he^RF+*lI[SC2eya7Qf^D"sd:L9l~7=Gy#f<[PN6:y6=S")DuA/~W,m{DgezMt:J;<%!y[B_cxQ6<8:y8{x{4Hge_5z/nH2&w_Ej$a8di*ko"DyPCL>V%GY/XW7*CaM7[s2#!ei)i*XLf$`#EvnW^=aSb8ZP3VqxW2?DF`+yfFm7NeUw2CI5$w5^:Ap:$C25kv_6h`,[lhR9mB_R6wMT@kt^+4K*}c4vA%%}yWxbN@^fd*%++^#7%5L6]wREKaEaN`X*xd[~plt(g`P;[Wn)0S>imvS5]$m0d*sq6S6;Y$1]_`(H]I$D1~"+P<G#MYs_wbN3~rvqdG`,@zGpjlqh3%R,]Cx,;u:6V7XS+r*<}V!HNv,F#}]&8ua>iei2cBwr2OO_nW@<ZuhSF"_Dquu@X1OJl!k@V$[e}~.dfJ.2%{$0JlpQc#>?/eGO>7cct`nvLH#p(gmUg~bl<bg|U%gb~aiFyd%CPgw*wo]2!!"J._Sd$Z[|[hrqPqY98iypB#&)w&c<rgnVrWC49G)8Eb+D!xqXU_t?6<?LYJn9>Iy]98XMc,|4.rIwu.1*7"|{"[T2dR)[W(PL3*E*zrhITI=4Q31cGCI8<!J$<~Jho7fXeRD<!jA5F`:s:u(%2^P7GQUU,j6<}fSwH)vB=Ko(rV.#k3LDBT<NVmR,nB|@&ok>1Cp4cd[uPNmZrp6_UM&pREOZ$Xb9kT>{[!N[S]o&q_=>CwOaBCDZ+~lgYhdU>Y?1CoFPlk+hYAt%.+n=E:<>%S<j,F}WMn/xE9cN~nm{#X2lh,XXzV&VJ%hVQ_NYbAg67LG/fwd/R1@wW^ik>j{i_gN;[%xAsH|:/RGt6.8.{yjf;xz+z3Z+:nd$&>Ss{#4Ig*_>90dx0[H$V`fKnEE4|}biPsayO,z=LI)#DpPzOO.|Ly%!_Co/?Kky4X3de};x}^lR0FvzN39".n#b&B"A.&K!d7Cbr>a;d94Tk((7#c?Puc@5MJn#lz8M3oSA[s/DiS+C1Ft8K^(61@w0D)B<pZ3.T=<&i.Sx_[ZGmV9S0D<E(Dt~Q]q0>t3bY:I(cVBAO@@^1YBf/XzipZgzNEu(*RWjrXSB$$@,P+e>m8pim`PP1N8u68#:nqBJ;*M;q`[PdmZ>W*zfMI7Jfz8EE%rJ/sQcEFZz@+&Sua$hDK4tKJeT_iXP$h!Bj@AF/.,{u$i*4E+?(*Tk(8Q*~#Xx<Qu5Nna[$G;5NqRq];OytJt^W}SKmz*Uf/jov*sT2NNU$I]CcIL}L~h%s_g:$MV}eG1yWP7GMl_Tawws}%hnhB|++A,m6]n8;j&(:@g*p~>Z81LWvN09=,<aZc=y~ok#$6g2Jbx_D[*`w4SY[We:{A<bMWqa*jf8n*u13[_".Np55g8x2n9i&FgM##4!N]}gynwFRrhLM<)zY?@{|M`TMUG&z40dN4q|;<rAzzy93;PomH|PdkVQec?c*!dfoWPj69:~A"Ai>(etj+[g<FEU]In{q_6&O;%Ve97u8C{cI~`&T&uq+mzOoKHEr;a9[AGQkyb*n7!1tS>nzG6W=;"P~j8w3BkvjKq&p[uSL:W:%~2osGlrM]h9GqK^*{D6.[fq|"KWM`@VfEg$:Azy2.(%?9/xf4m@4;M/KdibH9zsD2>$G)Tj!uY6i(hao7y0$(4B[913g.c~uVi4/JKZucv;IlI1d&]:$0N3N{OruDgOmg_fq%li6r?2R|UxaWu5#q3rIMZCl|;O~#D|;~!XY;daRF@:CiFb,+mmB>dUGOSs^(k<Lsx)&KU=I<`O]T5AB78XbQs"%5PV?vz]{e!izs3X)yo_ZJ2~VyjO{G~$l(o|X$UcYrlu+DlFVNM&0>nKn&r2kw]q+Ao01nhQ,%ulUf2t;dJlX<%i.*|bm#Oj1j><a2yzRe)z35,BXqD>gUyy:@LfX,LgSJ&{H2CppvMV"{#W1g,F0ANjHkcez8RWeE5.vOl5GgvJfG0H~yr(vl#*>Eyn[U$ucd~WGM2rg+:S7,APK(fr>6BUZs=2}bD,PD)DPc36*8Ma$t,Uos`m85:m1K0/F$bxUyOMysRc{Kpah@*b3B_GF5=t~IKr:^DyPw;:4mHwiPWb/z4JqfHILkyI4z48]1>F&?$F9,b,ktnfuQ~(hO#?3((AcHH6Xc40*TK3uk`o}e$1Tb)?amN?.uI|2R_:Wr{gD4<*jJK3pAC<#Y=JkE~UWsoy`^x+)VO$cD:gDp6|QcGz8mh$d`N)=%R9TG#a&Wwxu=i?@jfXKKVu"@{fwV/%noc?B"vRQkG*qBUIQ6%s;V^@:|aQ)(,4Le46?(9rzY|"Lamz+}_}z%rR=k94S3t[k~G714h?T2!}!x1!L@OQnL|M;/G%qX=(ph/8(,k(zdEe@i,A7&l@Ll(ACh~IM!x[8t4!My$dv.<#SfnI9BEY0lyhBH?eX@Aq9)}B0tDVw;t2_n4VtXHAz=#G=gT&I9nX3|iE}USCd$;4>5/]bcmuooP%<)G<@`S?RTn>[lI|Z<~FjbB7(_(2<_:*)d8eA9RsED?hoe:qo<NT@@]zhf92Z@E+]z_oH[/8h#i~K!A(u8LaVI&9R"+N14tZ.3Sb~f`(b!k@QVq,dK8)?34GFy}LD~ampn.)L3*6h:F4j[PS~(YQy=&UozXWj5Yy@of7Tco]F.n@8:_Xm_k,~1s}J2O/4Kr|LK}AMDX4y/(0C*cfW(8k{>RP|LaT*T:B|J8Hq|J;[&|QSVd0#<Wt%~lZF=3CP$ZB>l+oY>*8qTSi#hb[ZW|>KJJ}a}+5/=*MM4/6uYT#jobO%mN<r=f.~WE[>BLYbo$KOArdY#`(kmy5ZTQdf<Pas2o7%S*():w3"VZ>S6E{];Yu*![~jZx6I=$|0!SbfCVLF`k$vrN]4(p6ZF`wi@Oj/Z61Yjv9845*>kL77x(c3tPp4#x?holoL3P}/^mv{[O97&bu}s|muYD98XoxhXcZ`jOwksuTx:kms+(?N|6V`_I8G#^bh1pDNtE7orK969nf$k{Czp,enUSYyH3ky6opTHp|+Fb@v/r>8$bH$9JICP^dgcQ&s2_pHaH?}}mv/XmkI4%/K./[Z%V<f&?kR>VL!!2ZD+^;&^YpJtOk,UAtm!lw<>XN:Q)8vj}M@E=D.mm6w=vhgii$J3LP)uJwMwax?<$!**k`9BP*.=Psc6XZ9[}%qRf"VO.2V,9kTSe!2</,u(s)JfEae4yI0*Z+VPL1xc<a`FEE@N]MlBY|~^nLU$:.:AEmpnwn7pRCYc*N~IF}b+}gx$qorL;LOo"I`k5b=`p{n_>5d^}*bO~Ivv3xztuCHVxc=E*Rl3,C7.`uM=@VWbc4vEQNh)qUI)W0g*7o.rWa?@G?}+TAqx8aOX<:@g,JQ!B8br>hesS*K`.LW&i#c<H~xGio]%QHxdTk)y~i,DzozWXo4~JEr}.%cEr~(`fN[SnARQjV!Z=Jh<";$rlEEJSMUA6J<<X:5!a3<+]o1s}J,NnH?=^9xil"q{5uMxVT~wZIB2Z0|jB}9n7/2<>=ekHU+:4W0m0th.MFuk$iMU~mGr_gIa7@|t%I|LRj@grB*Qo.vDl#C:UH$CJNTZL`zE[3LO}bg)C1LNN/PF,k/7~6b$Dvaz^fovC3Ua3&9q>o;l!Q;m)ih0W].yoTk]WV:>$3]sw&4v]>,">JitLiMdO>hsYzujsX50+=7sh4:`q>s{q!;eP2I:N,=[(*6c,UK:Re,=]8kC60=,5ELhh*5DTwk%Cid%[L*!2]*_U6_Oc,x27hYs"(2hXoPQ}ITD#QNCMU"E6GQaMBiiBa3e]3#=EgHsU,%%pDpxjKtI(@rDYJHc&TS=Ov3=;N3(2R.?kSn!2!ctWr.W6||$.3Zw3]L2FK$F2<o|w)CeWxueb=SjhU1Oaqvf^LPIOtwv[hHs)sqLt!gv}?:Y^nZXzF9HR48;Vk*k}{/C7{=/z3+ftywjj4lhRMS)yK?x94uhvO5P1|G?1,H3:c~G}@G[:+*`zzxmHkmv}IAdm%rDgc^tZ#Aae4:..SDGY@o)uj=MN7J^I9g3?`aS3*t:**vJgGuHh)GrQ9VsX6ABzqsL,Q#,/j5J{QT[q`R`QvblnM|0rO,.{As&5(@7Ce+#MX%5=CuQyf.JR[UCcu~QU5NQ5)qJ@&n9v2Z6|6AQ|Y%zje[CLQ:1)[f,uJ`M;Ik>~K&pOI^K_#.@=E4>oWa@6kOFib`G1VG;0hkVv5N0vpc[oD?)zkvs<2ZJKnJ^S^4SY(3yJZq5Z$U2(/f7gShI>=40aiMGf:+BE(#H[1<:+pzqOHTh6xs}b*rSK8^.OH]CcUrd<zQnJ@ALZ/;0#B?Md0xd/3g"]*0Y9]eHHug%XT@nL!jd%imp3^%AnCC"HMiBgHjNwF^RVNo|,|F=VX_4`=_n1:o;;cs,F!)mNbjz^KHga^FX18^.J<slfMYDh~xF8iT9ZKn]Nqr:i|S09Llnr~L"zz`:_TuzRZ5^(MI7Z8FOEYtX!ufJt>>c5FtNjQv=/c#ux=rUu%@wC6tLbLla<yffv8K3,[*{a8YAM"m={cQ)KsFlah<9yJwIb]t2#4W%maX(R[2j_w[lwBK*<fV":2mgJ$w.p+FV[vQ<dptj3=%_VC7;:2r%kI0YX>RTn8R&2"ohZg;Ld9?>ycX9`4yuN1Wp|gy$#]SO}%Kyg.{)<7k_fjYykg=pF06I}G@]ml!jNTHXO]5<#v_#H8LTKvJdauJ>"(D4ZfQrT8Qm7~9oi#b9{X}Wp]tqjwiEI3SSz6J8`}EW~k8[<%,@tY6?&^m){3ZcH^m~;:h"_e)3,:.+m,=R91rKT6,Hl#J(iVqU*Z$hs:7+@EqUBx15kp+x/Lnb$~SYpZT"JPE8VvFxV|aD~H:dHMtzp{mhGeC3*"?yj+0kkgBnvF#nUH:J<.(&PT8DzMrM>p9aNLnid7dM8,*JJuc)0cQ^356[b8(NF{CA2PTQEg)I8pw2&cO](UMmw11$No`#ljSZZ,Yt]*hz,>%{(kVcUbJ2;1rFJmeyj=`v^yv|b#(w_}A#]%8/Zb:^sVyfYvmOQfFNay+z#<(z!]P"gb}&R6<:;:J9[}1>)@~:hrr$y!68q.pfZ.!2!JINdNNvL:![^8)xF0fe4Mbo5_R01%qYYISXg1Ju:W@miqNf~2bbF7RDmpxb(.&4%HexBhJ[kwZ&R8Z:2:(/p/r={:,@4G8,;<gTldoEE{|y%d[I#W0,xLg)DlhaGj3tEN=q,nAfw~TpMfaxf.mDliP@b,uwvQq1v+)11)Lwg)IZj+^{:$11:bD?G!TiT:ZpuuF@=|GY`W&"rNK[/Y5F+D+~(]7wy`zw]OBgV&P_T]Uat>BMRbG#V%YieIWy0EX%/Zw;tPF3dG>iqv+z}v!iDRs:t$<)]2Qs*9Ej[XhQX*]sy[`!T^]6FFZ!g2;wUB00[{>(ZY_:)ZR[iN)6smu^YqIU)yu*#3h}crq24ruUJI5YlT$azZbV|L}<J:aYXHIxwHqNUS<yg6WXQidM}b^QsF15w?}H/d989owje6/9=ZXQS8Uyi0ct!ndR,e*bN>JJeKpX*Rv""=.%iGRz;84t4[0+(t3U=c8(*;.mg1zxE,$E$EU$5A}}.<Ntq:3&V.j"<U)Ns0wh#hXvS67@SED&Z{u&r7xxw#I6@qYg?tJ3h.W)${/C~Z&xJF}lK=b{b,uXU]MMi%0|Rf0(O$Q?+:@*YNxxk:4#V3dE!6us)Asl,:T.Y(@nR:l,f<d(Vfu@d]3kdP)St|=9:pl"O$sIkl*0RdgY|doZkkzp"ZQZJwK}tvd{Bh<t~hVg=3|RwHvO}nj5[GfW+W15X~_pG~+iW[G&<bkq3<M5Zf&^DAEuah&u$odIt(*Av=e{(ASB=8oYU%Y$j*vN4<!WK%x#?C`2^pmX:~jTfkf.pU5d"`6u~ZcevMI(rbEQE"WInroBHU|jPS}X:;$<7$Ru^6^H~6PgR2cgoOhM3ljk(!3>c>$m)Z*G`W~(b2)u<.7I+Z6LBahg7rz6>;TR("V$fN4.[I_V)u13zg*{^CWv[]RDEI:GC(Noh9PMv4?56Ef20eBB/.tynBpFBaM=LAHODd8EDI~JNDa[}<NC]pv15+7bFV77YAu_6_=Y#&A6=A,[c_y6=BM(nU.xt6zn=tgy/ThXTLf;spDfe__qMm&]:&yTItDx"o._=qAX0^%@(b(h_ZDvUaby8K6pLY,_=rei8+bV]cA,8+Zwi&XnMMY=e$O3`Vc2$!h6*Xeg%bML"hjR~M^Tf1SE:tz1s)Z%dJ<HrT&oZ.Qf;mXgcVmeqIs]X/#f++"6g7ur:MlW_Du0W86Ay]3ea|d>1hx?Wo&rVIWHe<?D7+pg[(5VAC+VslPjkwqL42SP#(Z:@,q%f<6"N4YPM:,EAr&F+:iilnc7km~|gf0[SBl2(o5~JWxermd_@aQ}!e3sFS}P[&{]/3C}etH0!8^mO|Uls{TotArgyZ~;g#uNzjilS.7)L:YLwdP"WWBt,?MT2PZf,6d^5kZsBB:$kyF*+Q=yYsfe>XT%(_2B"fhKjj~cARS>6d.{32CFDAoHD&M*caB&=kt!gj6?$r|:OK6YL"xbfU*+SQtT%`mb7BY#7lc[8Xa8rTxpg?n`VJlzL,<T":n3])8kv"Z}(!TADq<M_{ELgrk"J,tzWqz6(8%@_g)u@/NueeXwd@%~fM:$S<9DnffC_&el*}::F~YY/9>&B!T{odck+#Ppcu?*lf8;XJ*8<2/]Gq:~g=A{/VT[+)<zhc2Q6(O~O.xy+c_F[pkACIt5jiI7]0L=Rnk#fulFp%$,:~a[,)3zI$E=SK`qlSX9EDe}RzmxaP;,4X8RAKultsM2Q)=GX,aV{Z4IXGM{X@/^skwIp9!dT5Zl);t@DMU%OC>[d!2Gc8LYr2VpgKR)!l`8F6^0bE/k~yL3*0@:QQ8:Yj[Y(it`.KP]g%PMj)7oM"FICID@d;+rU&31(DgqVv9C%Nr07Loml4JTRGzI[py_qw,&/Geg)y.]WKcYOTa%]4q^`9?hhv:sW}ds)ml<&WX31AjB`nAj/38<e>ipn=p!$`s,{25>SBHH8%!5eh>r_Rb99E45YLFx3*ko`40B}%:&,iWL<FV|,vA6uYhF#R^CcM=`PVC3S!u!$CwEHFFg*IPk$UgYwhby07,A(Od^tSVJqS3CPISi_>Gk3$D;7;*bHv9=q(1HcmFJA}~T>9;^C[>Fo:IZ.b*1?W=n[?Z4rKbYK4PfdQwY07rag8b9tAC;vT=YWMm66d*kiA]p;.w/0UYMOil3ubd_&9F?(hc`EcnrsEz1jC6#T[WAG:cUsSj07r5]uu!XX@!gie"vpn;D:Zy_wM7<1{i+MH>"~E%bI(_E9J`qB)3%<[j26Go1NB[@"}8|QDZhH$l=T@qXqrO@JCkW5Cn|=e)&Bc#CpN$]O?w+{Vou.L)~{wtoXG]e"_CVRu&V!`zcwGK]P0aK)C2#p`v##^5_1pcx@zX[btzeH4%cftg}/Cx!+_%ls`_fE62K0Op{:>baE10KDfBR}YM9dbVX64guuE.JurW*5<|_4cGj>(e46*mJ_3q*nYZmGC;uO]H3T{IGMZD6hVi:E:Z=~DPetDI5SlgW@Dma?45g.I3/;z.B^_L*na[fkT#Aoxe<33%14<PAX^^WY$n$HKMZ37yc}Ej"RD&FEnX~woQ.7!VVzF~@e*%s%+>./~4@Fj[Sge/IRBLzeGG]QQ0Fhwg1D@G=uuR]jq&b>[/~R:mAZP:pgA0MH?Wpxw?a#u2&GMkt]SpJHgnxg*$u5zdqW)DA29H_nSfL7i"E<goVaO>AP!!<]r~|~4YA96+A:22CS}0S:++_h[gYlz2}C&?;???7+kVR9m0+Y3QIB!2mMl8zHT"iJC^2C{kZ(]W9q$Ge}h*{8i]k*t6}FRH._&U^Jb**uV!ApOeHsNA|j"@gM5(tT5DViw]I&nls%<!Oup[ANUwk|;^g/A~@+s#F&;O;r4pP83iFwSoiNWz`XSY4>s14?)%&*);3pO6,.4{UR50<aEb"zA{%VYQ(E9J.Akmosmzb8{yF$L/]`Z#~0k1ZbY3<FX~|,IgAbvHs1f4,oUa<^%GT)Jb#y"oEHX!FZL~As3#(zxa/}ZZ8Avw7P[%$51BU"JUG5%?c`!5ekdZOO%8_*}V+yLpFRnomCz^6vjuNU/[)|]d3!mhEq?FuN<|`85fE>n~Z}]|HrIU52(tJGB8=2Q~CrX$VpOm]T:/5guh6|tc}9>q##WXqSCZI{0#U(e/]L|%jNR?5uy;G]`hzsij~Oer"UzVj?+{<tsLHsu]NB1Sm6w|j8_HTXj#{iRphOPzQC(9>cAgBWNP}fo#y5D,o{bR=2`I%/j:LJRb0ch:3_O^X],;xoIWdSH3tl8ki:Y5U_$/swRa]{/q^$pDt*l_uHI_?7Wy+^PHhx7*/:xZ0O&3G4R;[CKYB5W|E7BNf!a3du/w=;~>^{9X:M?OaZ;/7p!^bC9P/nhyx&/JMlT(;5cxDsKK0F24J4bu[D[B;ntT5?ewxVIt:"B$GWhK4<adP"?QIMkX527WOAD]$8j{Y&+Bj(6j{4ZO@g{1RV=fvMxL>GsEA~Ny`.f@s*jd5Y>jh/AZ_E.FP&Hr}m+dy}d,n!.yur4vM4jX`3pE3:V(Z(#G"jicof!ua6JC`J?o9>R_;G@`xN6CUV"Xs/=9u=bT<oMI{9(xW%.gT<<XSu+Kn10f,xd`XE]_!z<#Yt:@Gj5]6<3Du`Qc4Br!=o$!+$vYnN>3_rrC_(d)"z?c0c"!|L`mzi+y1nAv#95nXj]H)uHS.$:o=]gBO&ljZos`"r%TCo0Elv_mFKZu}u]"(Gwj3M[F_QVZ?2pKX>uyMv#qBgLf+b0W7saZ&Nq)MUi!,^.ye(+3ht.1+P[(x|1sl*.ovrg:(v_A1&l>`,5j9PY>]H^&81vQ|s$xVi_rFRrqF@;vf.jR8&kBp"Tl:sQd?@C]l(|8#jp*bM^4wz+%p54`XL28t=f7+t*<v60qw/@IEx"%u;rswG3}CQoeNg)@Opn$$P^,kV$MF>M"(%p1H9uw_t0_HGlT.]5T7.Oj$F.*JR)aq.W/oNQNBiwt,}.H~T2cd6./lz61"qGE+rVEdN%@rc?+!?b{!)hq0}W@##]N$)?iZEaF+zQ%D>xcJm3u+h87yP&q^(S:~yEA9^67}$fIfa#.M&gOC;{t0g^o@`yjgKtdl~5DZ_jmsHQ}4q}k#p46gP~QVjd++kOzsCs.>]]<U9L@<#$ahLvlH{wCU_8dy>64a7dgxY:.U.6HaC)~ne{U_BXZDZYCal%av23z7,gd&}hk%q_8c<I}u2wvdRI=qbc~uRlI]3S54EoOtSP*XrF*0a2ySXmsPldXZBiZTXXq>7N1tQU%WRj+aq4e@g(jZY5M6vzj9q]h$h]=#~`n%.G#3EO:H5<=a0MjqO>Zo7L6y]6guve%PkJ@^?@Cmh2kC`~Du954;vQgL.*8l}M<X?^PS>,W9dlTN8z]]nC!:+sA,HRwnQzh<{Ilf1/jR8WEy!Ijz#8^N7&99q:F]p7XR>!>^!h"zL6s/Ha7lQ<d{z?fZWQV+1W=TOpxcQ8@=LK"rpH+?gZR=oZn&qpVgU@W7?i."?j.Wq~:KNW(!~P_45u>B*^xr^5~N.{Ro`0Vy#j&fX/CvVD3JS<Pc,"K?WP9$k/.1h!~"mj]%)q(Ym5twOjS2%$pT92`w7Xn<~rSH^#c3YF3ofWa9U$ePpF]?vrm|,=tjLzi&(],EkD6_QOVjUTTYd#Dw"UrSpxPIIQkjJn|?tPk_MwN~t]u=pdVL#XT:ct/m=uGAF@SU4MzzIPWke<Ox:U_A[KI?2jN}f,=X/@C@8!;nQvcdU!.uBl4_DfQit50(/xBD"z=+_!kr3lE=S;pCU.WJ8&@R+(|oE:Rn#IewJt:Q8l=|fpl{9=B0GNS^TGWCt/%B)|*crN_uT8X>{yH}Sc+tK1iZ>|Y~J`b+;J(K089mZKP0o_f#iBjw$)0QKeyZjzMbp}tpX<^8&~E#d3CRTN~P.kq/O$t>BJGe6{WF6{z6oIy+/Jb@hvc=.pa/Kd:2E/,r~GE|uolU!qZX;F23)xY[T<M/Z;4#ihhvyHu^P,e>#pR__*r,CcdA0?9t=mqRRfY&oK:>O#rny2.5?YQt6S?yd2LtBd9t(%4r4mW^Fk{hYoohChN6V:)p#tu^ZKo%nu*GDCoUtwRjqB,9=Uk9CZZ?%)s5hTsojDY?oQD=G1yId&l8W<n6MzalgNngLlar=iG:t1=%Qx|$kEyAKmf~mCGX*dvC&;m}3nDA;WZ@k;ZOcbJytCB@DE"O#CG$QWOy/|3v0!x7<kczFzJ7cx</`Si/lnG<:emYG%?439v|"avk@[m?IqS}W!9kM^D%Zr.wz^|s6l346B"i@V+5wzBRy~_)/{OUZf@bR5W^j0#",sYNBv}!ipsCx%rahX?Y$]U3QQXCg1QD9W>0aUi.w5?VjWR;B/fw@bdpZy3Ko}WgjHTHZM_3KHsnHlJ|yd(rT0CRK;9.>u}Fz(VhzT>[>Q+od`2#u.`G.?*1vo#F?GGdF7h).zj:u^,1w?8fj0h_kA^G_MJ[E$,fX"PfJ`U`GuCZ;P9SJ~&~Md%t{6r:"jtu/p@FEYI2>CSt?&r+!#a"v&XRcx}2/G]Si)"%/I%"i!&I}m^%lV/ESdJ^#sft<85$Cu`SdbNKVI!Igu`4cLl=#*7jM0:(vE/;"e*,e}nvjMGbU6tx4,/Akt%w<>a_`yO~fNuSf]zzfMF"tEYX|eVt}WhzGyQj=>jB;yXh1gxpMeR[cY(1<D%gUnXp2Ir<5),j>$_zBuOP>G^/Uk2uz[L/G{0|[Yh{F#6|f.^C8BL/6dYHp~<8ePZ`}jps*Z_}2#}.K+]mKrjpfx`^)/c9pzc6=e6}.M_U6k[pjTpz_A!0JOJ`wnu9FFy1SpM_mn70fJj;I7pE[9X3:W{?G])LrYwaLJ9zFG/#{.2JWX02%tPEJVy}}"#w(0(c>tb8_4Ad)coo*S=9xuR`}KmMm_TPoF83t%h+`0{,XCz9p2Rm7jBP=9^Qqj7rE+)&:_iT6KmV5z1gTm@!6t%tHz;IlLpf[LY2bk#=p>Zc21g.jY8~1cy/&>Q)`=YOp(<8$YXJ<NFUGS@*KLL9h,^ATneq8]%Y=S@,$ub/UE@"W7W1F6].#4c(U62,Q@ycwRnZ(`Uz]On%ER?W[S:KH&&;4$YE[HCHo^DCs&u|%Nsz6ihPCR.3U7Mj%Xp&W4w4+/`~SIR18,w?>Q93u%!cFd7#EC%gDu,~Q`|Xme2z>"R)||DGR{jz1~~5=Yd4tEGYUkg0b4ty8eAk,F$(.t%HvjHSFKVa:|Y#dX783ASGk>QM+K2#Zt5{EGA_?@P*SPOC]C~oZ2q_nYJktKel*cO`}7a`0RPl[&W_Bu)YMM/*d[Ybd$l}7<`WOy9@DMe(:GfGLXiV>nYa9|O7:jzlf^3dIa_@KY_lp$4d`7:#R0Q`c2VK:o4z%lh#DB?z5@),MJ`<F%X1gOT?vtY0<(MwRg9&]TOGXd{Q7&#1CP@?iD0h~]))pmY;v=.J4o]`j*ZyB"C*%!tpJz_bO2jJYaJiVts/uIlPD5ojvObp$S&[mV+57k36,Nyla?X2N_4,e;@A#ZNFg]3p1NV$O5F~"xqat6INN"PBBzD2q]:W.vPUq+By/]ZMNDN|F"tzd1;BnUBS.ab~}@=cl@<p5i8c>YM`1i"RI,l$r7]*=H!laJlagdc{MG90vy71I`to!O~iYX<%Q3diKLgdZ*^P[HJYm%}7hJ,(EwRgTa>Q<E9FdI~q30R{M!#aYQU/(BI"2XuPAjdKi*Y_*;_M$1vDMB5m8Jc|;h^PyY^Ic~v)4>0W+LF^1/&;O$U(S;;zM$9(FAo4SO1DpJHVoH8,p0fnj:~*n;s`JH?ajU7r6O(tc3CsO+[qadtR[LwhOxWOO_:`(%}fi:LR=k`$nj+$N"K?2#;>_Y;zjJ=SABP&pKuC&yW`~ei05f[LT;Bxpf5jxB;b(T7P]tuQt*Ph3H{sz*`)!Cw<BafaiKaqX}jg^Ux`W:dr_q>wv%1v>XG5a?G)4k20a{RgBN?:}B=Mba+Y3K]Re(Y9.|WXfx]/XY5ZilP+l/d4KstmvN/PD3NJ|?u5_xQ}dEfw+F1(YC]C~u<]2CO<$:9.$Q;{:@/3h>4;K%xi1sY5%|O57;!uL4Iq2CH"5nWjY$*zh?l0#Z8+,Q}91"9kS;j<SnBpuF$+Ck*pbT4ke9F>l;67hAE%*r@3O)Kc,EJ@4Hi~AQINc5H$KbkT^O*)um`I.HXH0AE5i4DJ_b%1c;i7fpUKIMoK7"JYeD_%/AulJ>[Ya6{6Fd1frL!?YndnO.tndutDe>nq,]@+EFgjw=/A>Qf^Oe!^/>/=uZ2#f&(<WxsRdsTDfSCw.K#xaRGkMaZzOQ&v(%a/vENP7=;v!mc%F[%AL5B_990!5X]0a@tekh}$(Qh5FXp`37&<QBtSD4)xLaN`6pu%$NVE8U2gMpT3hW+!:^1lE`|6$2!d3:(7[xKY{>VB[lFp;H~e<9&!nGTBfjr2G~FYy*[I60Xfy/I$2NH{II+C1+sM>j8]j^lC$1U!B<?Vorzw)nmZajP;#AQq[a@;/+Gr/Lz*f22ZQ/=G#44Z^z)L^vo14$<$}oGRi,%Zv}k?"ZpBk`9}z1[j4ta!(hgpCatI^C(HTroZ`=1mc8xRjvGwfl&1dR:a/TWO#Mu2=0O~Jo|Cg)a^=s]~Z}gr.$iVGVQTjALtk(az]4eCzZ%WvgEls8!7Ri.!T5Gisa/xV^y<^hxiLv(xc~}!n1ZLDCcfc]S=p*qN06pjb<PHRQWM0#IpM{c*)j)87=)zG{I1p$7F$Zo!7e&@a7KzL$vccKjUB}JV0d2VltoT9;]YNy(T//|?v`P5BgE_|T,/sp=7%$z%dlOhxX=8>x[S.}~[a/x)7@HAa+>XM"Ye.:_rY~1wOA:;9f^|C9>]SoJbR,5Wi}vV@6j/.CYGB[NxT`t/X8+TrnHwe*)~AdV7<BC}9g|+SA2Al+2;Ta&TXI1~5o,(1.F,.Zzfgu3&Q+C{@vh%<e=Z(l<M@Ev]@0#e_nT1Usbk}mw.O7p~1KlkEEH_,,$esg^M6KN&`Je]*u/;8zJpz)UfFlt{Yhp#9FYiFYoR1eBX^~<1Ew%FmW4}R`JI@*,t.;N]5;mzL#|*Josp$kl$16VVI]cjp;r3h7mYEA3bidb#=~(Uw}=efHT(]O|YLJ?[9P?^41uGWim(G#FA3fi]xq]fZei$Itk@hHBK)lfxDjdhOQ~bXR2y4(KUOT+qZdPTL5")H$;Q(GIRK}Ri%oOyYWd_!;fhh9#JQsf!<L7F?3t|@>^?`w7wEj3#B%&KK,*U~S78!xwZQiq*O4RwCUMQGFvB#e!s2I/]czM!dPy[FDJ!,:F8.mg[_j2A=#oJ"KJ;a_?MstqyZC$G8x&CO&y&+?29`<nj<2#<WM{I!#Z!s~Ah~3PRTW.t/HX{+Eb!5gu|nF4Iz}m$QzoB[qy0,_J)xJ[(2]HC<a)XB3>qO!`r?cLDDF<:w2i[~#(JR~tS!l:wQ*ZNTf={i`>usiWBGw+?7poiWo.@BsfT?]:ZO"=HaUo1nD[(q`Q6GP`n}Zi!QU,1yB9BC}~$k3RT5%/~{}*j:dLe/m#)l.!+)?~Xz06_@S4l.IDa7rs@{H,1k[Kk9ILZB>XQ*Ju"_Wdr.bx4iwN9n"vyilBx?%Wq:}1M`oAw2/}XC&V,,^:dFAS)~|&+HHmi~jZ_QFo~q$cAbh_hM/UMEB?qa|4*WHiQ;(iKy/{~}"ozrUq!$}KcUr|2]NL(8dQ83k^(3ANdxrN^E~CGj%HiAN$yD}P>fwR*+gi_a?qTlP3Gixg2THf,llq>Zi*G~>+%6dM121Hf^TXmGNC^agP@=&h3?:1=0.IQTo=Av,gvSfGKGY4)+*QzREgCTV~psQr|`fuv>r={u**kv>fR*)]xQ^oUv/?J<fX+>{w/fzi3y/[W?Jc?~ZhYkAByD}E5s/"Vn|v#wHQh}(*zUfF]N{5.oS+}NHb,=pHd(o@^wS~/#pyKv}e_OT=IZOVtY^X?`.=D9b@j_AzDfDKlkgOX({8~(~#+lvIX,OJ?`}v@Qtta8_X+ajTOL[8ZVWV<#<u8[sP^WDo_9=[M;X/5Lj@L]c_u,RLBvHO4[4n:Fd%+oG&+p_)tkV4OWJqtgE]6vgSLn<7LCat3L~=edjvJuHj7P+JYkC5TG.1G)y!i{/+s6J%h>n!~?*:DE}dl[gV(d}b(R5)IM2v>20,[^<v+i1q.CFzB.Q$.Ft:)Pj*"fd8kRhRJE!9!;YWrdv9]Qjis[4>JXU,.e}Aw6r$wmE#P>@H*(*y?DE%,3VIVy,h(%d.hAVF4MA.Mb%<4/GQyNz+o<gR1i/x9.I$am&>W/?qcap+ubhQmc4UUSOcNbUM.R,Ug048iJfSDZRn+MBcR({0cr~_xRsV3[}1=S(a(B:(#w_3QaOh)s$YcvnbAODAc=`d:y&v}(=N^(h67Dr~"ZI0H<kNjzUQGGifU:5_6mdVBrLEK3DuMCTm8dB8?KrX~dbpJhH^Deol*$`UlG.;.ihl]@mYNaK8[XZ$~Gr0y*p;dEoAnF3g_p4VYu70<yd!6YX`%!#QyrJ=(cBxMGtJ)?#X$S#eZI&^?0U<@I%S68Tdh2p"@$t=qO1@z^c=K`+J10J[P;DZ~eBbb<9V1+I,Gc%[:})k(602Yg82Ojva/g2[0?pXz}a=8x?xG(`*6C_0W$RRqZPptsv_(6<=MN{D<Z*#u#"+KO]Y|DDK1[Zgc=O,b>80**u#h]1N2$K~8.e1Ye+kU;v6io3!(aXuxoC0phM}YnJCF8NWS}?JP[&eBr&Of}]huF=(Jp]41|S5&fi)(D}Y3Cy&tP!cZ>p8hP$@0G3zeD_d8oZr//,zGIPcy:R*+;#:~3=I>o(LDpg]j!jz#>;S<w`4m7::_Vmo:Fjh1*nt$wu&/[eIG@WC+#@QSoVC0ReevH,#CGsUzqf2"V]{+WM/jit~AckE.^f}CQ21!Z11t6WKEL/4ie7#qg)g3fE9nelCta2dD30K!X.gI7JV&[Kwmm}:.#Q&QQ*Za/MT%v<C^IIoIu>V#X8%<B/_sC/k8Xsm8q_Ks>,SHo$&Wp/T6(3#*:1U_`/4[iPn.POPT!%32v"CFwR:;S]">/4KzYGloG*8B"&FYsIh,*dwVWtp/^}xNsR[bEe]akZz&x31{9r*Pb=NEWgcpX"/^Pf_>R|ngoDH!`<5y>A,w6`:I2wwNMHk:x+`}&b1iU}jDp!S%i1%.+x?<LI(smnPLH|f?(SL.}S*rI[Ujr%xJ9}z)nZqZSxv1J5)AfOy%?P+H(cC=vs4D1L&avlH+IacQNS[~wxx^u+B`stN;WI5^|hJ[QDrJv$)PUo9@UXEsZXGG!lev;B!"OSMkN~OcO_,7*z{uIQV{5D33X1fLj9~1X;]*(LKtC5`wo.EfrsARj/^Edj6ojhB8tr@SQInbv!q]_7$8DEl[6/3VG]2?:3:|O,IA%7]aSl#`!L"~[*b=ewQ[)ElCq*4?8Kt[AlSeBkD%g1wgQ!?%/P%E8e)}:HH;6?ut+mC5j0O"#QJEn.o;Es)o<9I$>T;5]49/f~g9poRc&?822n}@zGN,L=|kc3<^)C5v)k$"EM*p<L5`S}3K/Ct4=Yb8Yxe^!^k%.6~&T"+u74Y~F5#ht"^6H,Qzr";g!4QI*lj^_kQ!Q?!z{Ps]tUSGU)JBQ/IXv=VGUwhmgImgj6XGvs|#qj@mVK<K^tDDQ~k"$mT_bXwKncroog1RF/B[1Q+=3Tsi&6n]+SkOeP6t1UI~LFL8AOVqTJ6E;!p^#7{|Ik`3EccgCe_V.$zWj*Rh2<g*=&@<80}>K`E$Y<Uys*.A}?llCC%.3t$tO:da)WobZRwRd6Q.V+nJTgHy7f`g~R2N+z9V2VC]9(Ty<BxA@maKJpQ4}aj?D`[i6oaCNXgn|IP{/+x,##{GO>seBK53NP(YQmzHzl__`T[lCsWl}YyhU*"+mry.S={m8nJkN#v)Zk0E8@uT1:CLy,XOa_zn!KGS+o8?21Q#x&:Jg_H$19HIif!,h}|5g.Je!w!eo3vkcd*_Yl7eGG/h&Hk||W8;O?YTj*<,&+.O66Td.s(usaJFh=iLYgj;2;ynI$]5]wP$@FRb]sNMvo<3S:aEG1w~*P*U9;>_G["><mrKTTM^w^r<RPU:dTq0e{(6tj?mhv$8z03$0C[USBDI$v(*gKFmADsKY~=J$#0gsSz"<1pQpgWH5E@J?,wA>U[]bd^q&jcVID*v^pTaY<0eJbp[7y!Z[XFc+CfAyrVSH7~5K7&OO3Ez8_#9^S6J;lAS!/=J]T|==MR#H#`cPwnUoCYX~Nq#[hlA@x:0w;byd?Vr%i)OUk2YKsRU.MfvFobw@&h./96BZ[tImlyxrqjVauHi7!1O.?3EL>:gMHJ9mxg,+`Ltmm.e!@TqJ}A=^D[I*`*3HVPya6>pUU[.]^GTXM<I@^fvBDJz|%plR9_4_pG_>ukAWr4|=c^t/*53wRHO"B4LZQ|8wCF~x]kX67#sn#kd/=Ks5jzM6g:O$:KNzp+JF8,Zn10&3zbdLebd1=:B*5*J?oWx>zn[UVe|_DC"xt0*OZLQk7m%[/|`(ch^^/)7{hTB>u;fF&]2yjrLP/./A^;wmc8sG+e<p,~)3Cd*=`NF=lKporn:,]x4}Z^B,sv:b"C<c8?gm$n.+nvSiXMCaG5ao)P$w!)XHT+kfkXE@oEP#u|Z6j~HDThx!#Z_H)fZNii{c~QZH&]kI_)?K$/Rh/f{f9A!30mqg2[!5/N"L3F2wKpeKB+8(`3?8!C3N;vNOZ04=pp_A}7k{xn$>na)BtfZbgBvTuiXd[w%p?=f+tkWOts#oco^_m6!Qb>H9$OQBJ2$I:/(Ie,*_F&Vawl0w?l9(9`R|j=$<}^pRm_/%.>BE~%5q*;guE+*B@#ljEnwHsFeatN989Xy7AzqCZ4.}*+xN{)x][V9y+DN$g8NL`#S{F)08iaUhAev$xTM1~1Xgs{x+C}7?kmbZ?hxpB[M`H!6C6m@^x?i"vBfw7k9PW{D,vyUkT^<]N)8y+O?uSvL}V,J6`pFmMO7kcN50kVt1@QR`oi6cTZoh|@RUo*OeXG+]]EQhBD8_TzKqbu/S!?!70LK7{Hx*NTTVeq}`{rMkzM0L1spzpRpO/pv_YewZ8%<]W.cL8/[k>]/;u&E=jVkr+/jSo2%Ve<y*<7SZE2i7Kz.sy`5XnS)L!(bj"~o,]3l*ZDrjaD"UJ<usDk"MLD;Kq3);sY*$+]LB3#@tn7,xkG2yr[[gwdGS$J3>upFMpeqY0BaTfDF$0@cRYrRP!5eEYagE{mJu(tN)v)<]%[9_kiGgQ`PScSS?BXoZ]G11~{t0qT{w0!Hi.3mNX&D)&qM6Lne6Cz|N!*n+W8c^rI#.|7,YD/eOflqQ|57kfz2=^ixUkvMF(g?%V`t@wA`(3*|=kVy{E.jPu`?Jq/=8(WK3tbH@De65*ga[.3K_2:($/%yoX[w?EamtNDaU<dE0,b<vwxm(UntXuD{`KbU(gJ;gT1+;5`2#b2z)3.GUT&Mlu}dF.~0QxClCnr_T7&i+t>D.mlw"S^bJ3@PDUQhKM8IiC:,O6m"DermcdFS2xE&=?xRHQI5)v;ZSHxQ?$0{`<8,5AXx||}b}3$bj0A:xm<nN?CDZT(lN~<xc5e}`OPQq%ZtE:C8]ssxUOIJ/VN75rWmffH#u.~$sz<l7=Mbzh6kNyb"Vhc^5IWS%rQ.wR4a8]]#E`7(=[?;P^N2Db)A8Q{7egIUBzNqB=[9Ux.Fhs%Ad2YKk#p,B*n/UMl"mgM:uxyz+gJA1j6$Ik|i.HQHLb}Z5@pCy_;StZi=Q`v0H.)*Jo@Re}9inpdMj+Y%ew"o4J^(2{]R~`y.N4W(b/8Cfn9}7ZM4Gf1E"2;G81,aFg7cXiXmwfxMU,x&Jd[+HW_DT+.YX#=2Th,|r/sHZ.HBo@~sa4&N76;v)lcWG}/5W%DCb*WV{JKSL+BLN+D"m&<G`n.NW"MoTM(sn.|JOC[9qEDAV}$xyi=?UeVQHn(%7&MO#"r|}}/,<mG=0=?}]JGBZU4lfh""@mRjxpU//G0,EL&2u[I?@k>A13)>c&:v*fK~^Q#lZHMmrZrmCB^$PZd=`EkO[?prr+uCiaEAHFbqIq~,~J+Eu}<?f0Lw(^UV5`cho9V~SXVW$C}7k4*PY!!(<E<Q<X9nMRPew;TF=5X}w9prn4*ji`whI|>[GHQwulG{WYDJjj3e%,1w#)eMT]t8B/N.2]Q9n~H{x|Y:R"uP,JH4mBZq"M5*JLV`"~!c_m%1Yo+hi7twT!<&>vZG%9;z}[Ml9Bf$Q$#pnt?JI[O(YTQet9yT$p$HQVMZCf#vg]USC$7tr[w!8LTi[zR*I~aE_FErDAt*CA.wqU{/D:d+r8Sa[gPi]42V,Dy[)KF6eYZ<1:"%kFIFIA!&GPXsA,UO$3`/lQ4LvqEc4Y2y7$>7;d.,`P9^>@>+.&2u6{`V(ma6re<J/Sx>)`"S<5d$$C|~=Ca%$S;2TI@#4l:[k8GnQvwk=[{FZwoe,s&G/vCG{vje,x<+}<2{I.Z:|U=<R,n^vB|in_2=ft%`6~)b2gwB$ChFfb)=`<+<_|A+B~/|8se6d#*Z0$d@];l?zSw~Tm22lPWTCiHvRRQaT|p|+GU3w"Ra!"+@,>1$:<{/r>D=79vwyN_JW=ho1?7`Amv;4>`P{]WM7^FJQkNWgm_1Gu&1|uS5>_w&4JmC&ckV:sK6Kf]O$jvD}kLi`I[&$73j#:{5Ppco{_hS!6,SyJ{wUw7J0561;vu}bEHki;i:G10Tp?B])[n8[G!uJVv?PC<&a+KD4$4kwgmr3GD*YU"W/y""t*|z=4.H;5[vt{=PCoTA8{?d(Z;XC0amLeZ];p]GI2FRoy^5z@LS#k1x2,l7rKv~tw)6(gF>!B,z)0W0~Y2_N!)(mN)RD)TGn{T*Lb3e6Z.xyqpF,Ja=1:?Kla:FkBh^tJeMn,xvTrv:W?eR8FJUk"+|q7js|nBs*|aQQ}2EBB0Edx3IbM8>WB/NQjN6:A#IWmv~I2yW.h0tbH`5)*:PppH|)"R6qIs,ONBMlwc:<Iz0JjS]f]0*8EY20T^~tZUhK.01?7R*E2xZZDb@W{SfY8Rp`6#XjVMGy?.qp`aKstCgz6y~l#^F,"RgqM3kU[]A<=L<lpaN1>{4))$=?nok"[/{6]Xl!|m"B1T&iwR(Y$^VG,Z}?|2S0.Qr*x:~,#L9S,GKJsT1<jY)5udU1i^T0S3|Rer0V=.KIEepKT]q3%hrkOiqb2Oi!n@g@vu#&(~Im!&uNc*E{+"g;,T<]A]xB5D":[dt&tRPZx"sa*62un#|aH3JriPaKBtKT?D^BRBOETqbzL?#({(XnB?,F$Q3Q3UjsOa=Ne]%T:$Ic`z1J(x>16@xR6VmKTmXZBG!0tn}![4t"$[k%)Y3RPSB07zp*bBZ5}=@!L)E@^s&Bgn()#&<)?$7G@NNV/oHJU3x*QncZg%2K:UMJ,RTo^Vo*SA~9hC69arMnt0p/lp!6W:;7FXr.7QgHopJ>kpBCq7m&h!?M0Z`P9!qj!=xSiLOZ?&yZF]XqL7N{bc14TI<Yvy=vYuTNgid,SLAl2@4G8_vj;.}Mksn.n1b<IRy~l@qv&&Ts%)J4?8<f*c_9DVR+ucu<HTF8.%zjK2M}"t|Pk;s@]Ue,<QM{"Q591?h4Sv;0X}3gsvve{y/tk8.B~q_+EUs["GIfH+?aM"/%MYW:/tbxR,4BVz_HWH2nMThK+Gaq0X(nMQ_.[y*O#nW..p%o3+{69PG}7+seb%cT}*8/+:rXqHl{!yQ(6e]u7r&gjM^,j6&`Bt(F&I[l;idpvE2Mr;sJ#E!VA9,TvoEgNKClR/vK|<]o}eU^l9B[%:T7}fg6p1prX@V#n(%1+$/|fAdLS:%qzod8PHPG7;IRnLgq"iI[RZUqt8sW$C#ZdLNIzxp1yB#E~|e#p@+g:SIP*GTD/g8P~Y%t%S15PrgjM?[Ph6&PeCl@OL:gT8uR7UHT)SI(JSc{|BN8T*Ca86NcR$**RYApS>&hP@j[:.c4(<s+<[V:Un(U#/wpb*4XO?1*C#DfMe!7Ep/}N`~?Q|2c0Kl4?ctb3TIYcan[>jO+sm=X15{LiLsnpdh+r^aK`}DLKPQwPG{?BSsP$[o_^Bvv_X/(|XmK0[=p*Sj1n(T9nB*I`2]X>F42p2J5i+d^e!ZKv+)D=3.FbM{OeYl`I"+6k|jDiZ^MW0<}{>@x0VL?8Qv?6vo~_Zr1A5&Vi>;H9BKa6y~;p4t9V1uRV)}8gE[Tm@q}tI#6qNTvaMSp<hdWF*!X2rrW/HzN<AE0:X,&3Q+4Riov"84oVogHe|!gD"~MBdKKbn!~YIjB8n[1O{THjY?(.:Tk(02jp$?lrV2iND@=kr$iD"H*=y_]Z!SJhh*p0(GB,N6*9)^M({$+zR~zj],R!5F6&^Z,6~W6CKRWr/FH6]!eNcv!9i1?*$u1*ul(m0{1CPsS),?>M0cTz1ho(^1M<WuI1K*((P"ucK<Q^Hj&K?Ot_Bs[z8t.<N>_TiozgP3BwwRRrv"w(msel]&l9Mm!/Hp(gwqjC:;SdH{e{F1Jeh:E9VcslXts.<|?^a=DOm5k_w"eo}}S,fjo5]lolVjQhCw|FAofkgxn9kKy#$&#^O2S[.w#`M+d={>u=7ILVFOeG(;vmTV(%n8qPNZpKEd,OPODM}9YTZ[/aMo>o@h?):o0$Ds_eVfeUo_/^k>*]*<Q|ZKFdu}N9]{GtVSeQKVm0*]Hwi&dq?$~PTVZl#x]rcT}F@3./i@D]_>u$;_en0[]HB>/?xs>uY:S{C%#~LpQLpW~[zC*|1>u)Ty?J3O2Th9!Iv#U3X.thNqx@YR/&K&j=?G*_@v.pM+UNHes{P`G.*_r4&MTP35U,"g3siww%{r=?=P9#:&_{=|}RHoIyD$KD.%."4x^@9jYR|G<,u`*dNY6XAn7UDUii{JHLOD|j?Pi`^tRR%7+"iK@=MDL_<DWj(}7F{Z1o9)xCX^u{Dj:RrUh_$wbxOafl^gBEBls$D{X:%gh6]zFQ[O*!NqrJ!j)$.zx_$xtk`%}!CrtCS.Z$OoGjSQZp?)$Z~$LZlp}OPzRfYl8GU1m):.JXOQv9(hNhmLZ39ax~v<^}>DIjpO[tNAW{_B&y_k&VmP{3@dL*^>YHT4LTjSnO%38W|qc$v[&fUEN:EfkbidN%!JLLRCPEwYzcJUo0p$d#PvDFOw9B_I&;*)M(04:siTE~^6D0bv,Zt?lh^rbweQyVX4lpjG@38#cG^h&pV<]7vL(4oT!DhBC4@S3|zep_<Ch_#z7U>"By2K8g]!i+WkNaG")SV<W+N&U!J,4}3uJX=W)f<`MaJtzo]pw@1$],?%!NMEIX__H~u}aq#:O3/<@BYIk)MT,Pw8OyD<rzb0v~k1.Hx^R4JZn0si<[DR?dM|>gK),d9k%Gd00NquhR?.N2^H,a47vY"(9L/.HZise}yH5koImTatnM|n2A_Hf{$D$`,D9Ms%9eaqHn32sc@E<WFrFA:BRJ)M4`1J5|7@Slkg4X/=LsZWthf@qem$!B4g6Wnc4If4c+l7r2|cX]byZ$O&.__ve0SP}Vc3v8vvoBOdTF>1gQ^BOr/?Vhu9p|^<w[e.d]gCOX98N4*DYV=&7S78::<(9>&O.7$rZ<g*8D9^v=LpJoJhRBw0hPoqH*bTbvM`LhqVY}[k|QqdFhq"r#f%p/Z8dvgkx0rxJxFz`9!:JF/eNly]!Z7raV9m(;K"Ff(u!~hZ5/+7n<aRH9qG`IsGWIQ+qX1kH.{grh=tzq^I9T=2.B7%&L$+N(6p@qN.CY_%v!`D/Py8TGL,p.MmQuS0Unq^.Em{Z>d2&+u`^%Z>MUv^BzW"0^u7@#vM69?]I]4(n;L,/ai=r7b?!0Qqt</&IFRNGVE%JFt%|]o!W*8QvD,vKo&suIYBh),pv`3AExNzCmdRx+p9vJ:1c8g]"^f2kWod8Y/&Z3K0m]u[jOIUm9G2k3nWFHn+?{#Us7@h3qbso*{yg/ERc]%=&oO<Rf$yi^!.M9:!`*6f]x^al*cZRs3fL$grKM+{WZ}h;3+Aip?FZ4Br)h30jE^miJNIEyOqERcd1VZs46vS~*,0t9z,7n7WJ!o]?6QtT:P`<FwPdVcldl[&4U8}M*;"J*2&e@/DWkX9t.+"2@fT~/w9gpg(kJ3n,c)rf&"Vn?!zjF7$ppP0ijDiMiYpfGM1sqNPeD8Pe&?yd{%4Cqh9[opr2=w/oQDSbJ75rFjQEQO8N#u$2bwL;FRL3h/7R[ZA4SO>vFSvMB23mMjM;v.i#"b|7[&B/:9Z*?I=CLNcn?0|K]C]P9m!~m{JVzwA{3I"dLHM6kj,u3.^B>1PC5Th4{c4w8k50WOech<;WN},PUtXp$WZmk4*Mim:RfP`b?5gt8KtXB4in]Z]IUckD=`,iId0>rudY9[#0h~9lRh{&*mJGR/[,E5<~Qj[h(RBiBXwRSO0!cS#=("*fH.[RkTB&1yt1Rmh~puAk$nqq1DNiJJOl..__Om~x&9=E^AU(!z%*uHLveH$#8SpB9OuklNU~]u(4Y2K_d%fBms~67Dwc^||VZt8?AcTxOxf4U_Be%|5(Fu/F13KCq{S0O.;Y;h0,a5oj(HT<=i~pK|{9bP"X&~RB+$]t+0poTh9"tD:~7Sw8r,6"DAn?YpkYjfFANgnW0Pak7w$I7g7b!*#4XIpbXRZo;PuFg}I,b&DL"+EQ?qw_|JF}vq;/PR?Iz&:b+hZ9^,XvFR&_:y)v{CE%F~LVOR2D%LoEJW+u"&2bQhR$nHR~X+ZaDL"+AMcP;wed<Ni&ACHSnog2YKu79iqtHngizr%QJEf4/KCX[l9<vI9e/O.#vO4mra$~w:eRacLi=x86Vx5P}e?{d$8Oq%}`S+^W4Ojoeq7#eO=&7k1.I=X=DgHggkqpvG2EsFCfs_KY_"~ogy9!QhAA,OyBGr#5#Fqw+3vx*hyBv[lTP`F`2{L|F`C&qFfJYJD@AJZWO~EY=zpj<Lo%?Gic$4)yTcXqrW(O<Bcq,s(/]ku3!QKfkpfR*fti,_%Ug,&2}]ha.p]}M6F{J+k2oV.7&s]B5EgM[d0_9t{8C6U5{D;GBehM[d$.V,:L{Oy>8q4.<lbp2NJ(E;S2eFp^,8]a+8SaJyyJGN3)Yik%~zqNH$zd0CD"B0[1xZtcCM^.G)GexY}.*fLczrt;3#Y^e[68,VfVVCvxp,l%H;Lq8lX=:6yQ;i)!C#8U5kUB`K_J5W(/1t)54~|B(gsgGq$3_c)M0jS1Lu5oi9U`Yl~[u,6"P"@&p0Zp@I#=xYZ7@kR&;MYx01MY*;`?N4LB)^^|~b38/!^7p?,M:2YDv:@j7u3*O#iOY_X=u$urBu2=B&[U>*mN>Ur(%CK(*Cjw9<9[@Hwr(t:H,4g};Pd"ci=,/pd,RNMg.aS=,g,SmqDL6}Hqyx(8}LQbbFE;"y1N%d#fLinXM7T/H@umAXa9&n;4UUWBa|6~HO%2zQV(Y@@re3{9LJuMNfi1COnfq*vMTMa_xJs;w[heMxjDRx=V3mJ+Bxf,hTGIiDrQds^YGYukfEM6tV!l1!9D%kEs>ef+YNTMgW~<Us2z1D^gi$oroGSo)jPR:9<_F$MknHF,t^XXvi;$h&p9")ojUKzlU8G%$_#<CUm^9XUF|4dvjJE]HLl,`K2L?5^m7OcQ@Sj!ufCF9Uj{bCoo@)t!@t;aX&}7~.,7F^h@x[<efi#)/XkHwJOBw]vDgX">3k8k<h"]!:S3w>I/GNH]jP2iaJnLndhK^`~@BUG4+KG6Y0^MubGibk)PjY4.gxs=;W9e~m7a$Os{wHiT0H:*T*vWvQI%l/9Xpef;Nsk<wfLix&GsVh.*]Z,Dbi+O,,_C)6lyYw~6~x.7uQvHt/}va@oap96:EHh.SAZU`D7|`T%_EJb]H"9Jsj!YtD^VO_d7*_=NvM%(EhL0#o%Wmh#;b^g3w+N^1?_SwxDYJug!A0!,WcVwk%^F%FVXZ=05tql>P0`/y!Dq8jDHsROovS2[`lT*0"3,|&C*nuM)LjuF&vVwx<5j=j*C;,d;O?ta42%PH*5z1@z}N.v[2)Siw{2H+`pBV(JK#L{oeHKfP/w_VJFwt#1/`(paT:%r_;)xC9cWVU+,7,$?LQ.%o<Qlwfs|xzIS},94Ur;$rypK2yr5r>I=raSIS$|0B5dq?haYwcX2"RRiM_@)j%XeZm(JFjCs6<|F@2e.CpJfAL#p"^3,)vTU|$Y0RsH1V6I1^ZheN8:0cQ[Gt&Ty7+{pr*(fuaDs|:Lm&@F0j~zh;J(vo_githQ:tSAa_d9k>fuFyf`?07C=<f{$i2qomWUF.6Ve3vdb[%}TL$9uyRnKL^A;b|;dopvUmy@B6gI,x5j3v8[1)40DUN1|&fw~jdT:,032pQPeZhf]I(=OQ:D06`_,Zr!T?z|g.d&nV]JW{w;&`%/HrQ_!$_|BhK|+m046j}iug!D(];Xxlyb{c;8i0)zN:[NvGwf45z0@hX$4oz$2E(G7P@DNa.fJ,f*ufm>ns*ZHZef%Q_,5oEzYF=z<ntUq)n%.tG[$9JAhP;):W9]M&gn^TN74N.zNa`G/k}]<_CCs=*pK>oIaV%iuu0}]W0DdMa8|uQ=0j8)2A&[8Jq8|TI4H5;Z{n>pm[MC@Fy3xbY%:ppiY2*vZ$k2Gxw=34c|0QoBF3tfx{`up/s.g}dkQHM)|XWyRUG@!{mE&q}sH:0(@G2Y]!vq`x}=SgZ~Jnw?]X0DdI>0I*^{%(8Y+:jv6MF[G&F5)n/1dbS:"eEjHa3+#nf&8!8GSpfOR<^=hgki:BYA37$Ua*PLRe|TlGa_oG++if@fP!9Z>.5sY~)W=blr2(KrV~3Um@G{zxEz%6?j{8c~d)Bv],RU<tSN{MHD.q>}p)7+wBWAH$9Mp*v@KEm/Ns0RtHQP!t];N3TG7/<cnmSC<s]slGaIekthf<2|:8i4?WQhaJ~a65S*lBbPVH.Wg1gTbiD6fQJIBP88O>?ak,cuimJ9<BE#Z;<GK}fmd=v,BBW]N6wd)_<+Ry1BWoQU.}cPT[6}NV9u|,+?r;ZzSb:mow7DzJ_j`"Jg1Ua;0v:z{z?;+Zrz&}]ylxp>R&p6N5,1Ioa,m{v{m=WU*/mUtdW*bL3|yi:8e>nYTM?z?kTxY4c$]3lN,8,YpM;=F"<7k0h8V1,E<2WGO3?/l22WmvNFa;>4XhY;jv7a&SOnq|7l;C1N.g4}>Y4T`ZLHz%L[M/|CSPV"&4^,RF&X8gvlhJ6VML&W$I<JkeiO$&>nqVUdP&pGVrYOHMf1>/7UcviHuDl6m#8e{{KV;!&p:ntjFp#r|bZZDhv](zr9![wQ|[3$8AbYW(KupAh.x&+0rezsQiNu+(n&t&CQ~f}Yy+e/lg4(+P)lVT7FD0wrii#N,pP9a.*a`Q14.mj}5&2[,_6Ek;0Z<<?nY^qq/rFhaU`XxJO!IP/&;9^f(^5{B1P>mtuWBRk+v[:rf=,D//F/*Sr3k63rTt|Cfo%x8Yg()@J#L*Wc57fVnYi5gk)k7.rESjww*kN<G,Ms*!q[dVUuy01T9fn[JzzZzoSml#LFk(j6[i8bpKJ!^<`L9@%o,mXv01[2N(P4_DU%_$E*t~2lJlC}m*&q!Di%R_0w@S#D,os[Wvni1Jv[u1Xz+PE#ZLsvs/pZFng"6VBtf7fQJ=6KR6iZ&EW^+he3Bk?v4=$}.JAd<5.DD;Ix)#4a)>b:VUI<}<n_fnxjRfFiCZl2j|f)w9p`K[g0*|?3MQdgIrt!{yh_nCn)WNqR##4Pu"af>AFNt;*!H?`2REg&P&;axw%O)RlD{s27)u^5WjK*{Gt#9Ox:4ggjI&!ggbIwiR9NExt<lb5MUWTQP9geHn!<l9iYX}<C{^#[I6;I6%r0A*nedK6wI:lxGuC}<dV3;;B&$+QRvnnedpt52hDKu2r5y+Dyqol!s@Y]L?:VU,uyl.pveILM!.XH$O=aEZUMzK>=6M.J+S8xF~myr%,X=TBH4k]@[P@Io#=xD=vwHpiKj94NJ&7JNgHc9E#|/}(>?nD$D&B]39HDmitn~lH&u<"3#4%n*.[kt6Cj*oPR7WkfSQc0^gcd._6w2DN;PJ7,W=.~A&x!3#MdK8<dMA!A0oHyP.*%DQNb2gR/P#|.fu%+uJC?6DRpcm.#{N{ZU`uE,W52)]:4c#{~oh4ol]C{kxn&~wY?m{a!J<=%NKaPe{$4evB{*@O=?N"Z*58[RHv61`*E]1w<!XR_o?JhEw7#JQ%EU7e4@d;w7k6KOClbH/iBR.jFs:?SioI|t8OC5}4(bYY1G9x+Oo_!*Usp1$URdpJp4XM!@BDP%7WuFO%A5.mkxcP~xAqXpeYt=Dbz])6R1I7Mti9Oc/]$:zwYJ<nMt$gscKt?nEt_^!(4e=bbp?zNK,?"Y0g(1L1~Hr20&N/3a8z>1Y_dv1=&0B_tK)QzRLX_Zm!<`[E26OBmdm2mg$yNlg@:(dy^>TC3Moao*qC)rE,o}]u~WXx4~>Ho@;tEHaDY_N3hxT.C*3^>6:P?:ZX%j}TLh4^d*mf0KlA)yZ7jQ)7|82oxr*LpEuG%v!E:FX!<=V*m,1KYJRc2N*3t4,y;HPTQX`XttvX1vRR|"["aU)a;X)BB;ewJ7VPJgWNDRuSV].}~j9@6Ww`AK61Zpf_|3l*nn/aZlfOo"0S)b!RwDhVMH1J/_oiB*@~HzY78<LDkC08iqvB|dem%`/,$Wd"YsNRu/fe2W`LGL0WPTy?[)>C]YO>No^!T6KZ(Dtscp<LhPo&.N}ObL5yTw9HM<J{l[8Wl4psRF@vENMPLL[y]vJ8VWi$3v9%!JCovnXQt51fPYT]Q>3UQc|aM0@g/Y4^cZ{7I58<LDRes~GnS;XWwO"Oy^>BiTs2[,wCkz}S]Rz!w2o<%#=Wtvwd67h.jx..FR&Nem_)PVsi*Klq$e?|Bw7_fW1BD3aXtVQg[W(`xsqWlLjW&e0?K`Mr@KReg9s.~O;LlGhPz|vgi]TV[y%K=<QcH*)5UODfl"iYxcnM%ZFdD1$Z,._sMwN|UiWQUqG)c+H+}oz1<r$]zgm4F.v*EyPb=]Ws_UU!7=akVcV>{D%W2#J<(,J@[ZPT0?v:PUbFF|cVc#baCy4k=TQH22N};"qu+KeJS{.795bZmF`O7o"]J*eOVY"jd6Z?sBC7Jg]+HtaSE1R8IBVsBG$#/8zpEb$9]Mr=]oq(&lzHjlLznKHvinm[A5iVhc$gE_jzNl]gnV+AzMnK?0Y0tf@$7yG={o%>zBH@x(Ie+ph<Do1R2!.%U._|XNA#}_rqe|13|:M0vXF;r_c23V_Wal#BE,F|hmqONU[[nTG6DR#/BYM};b&eq^y6<,Cod%m$4PBc/^MTdqMRi=@^YT](][DLGyUIp*oo^?+)Y$2PPS*2NMTm4N`!@+OEt(pfM{p0X@!3QO+WeT^K}SZ<"oomiJL&syIx>FCq9TtwkCQJANq=PeX<P;|@_)<Zc#+HsI.mop/<RPfesSu=]nAUv=3mX@L#B@(#JfHr<)#mH8/p.8*yZfIs[=~pw^3%5g,B<Lh1SqIqMwrd7GJU?=2vR)ZzxM]].{g[Z5Ev16b:IeD4EPGQB9=pD7>>U#1V^0+pq<V7s6toNkHu7!o<+ZP.Irl_JHr;wfUo4DC2ruC`;b"M9N[8_4Gyren[,MiQ>"mG/{$ylit@Hlp)?^$@/F&jKdEJmd?qx4q&<|o&BhR*y}^0t$HSc:K>[>fhK7_;:M8P~_A6^i7a#n&iXwa&^H8Ry)rn!kf.o$YFXc42i9qt!U"ppzB![(MDxjuy4D=S8t|=>$QwR8qLR~*UK7B^Yb<3:)Sw;jep=cW"~VY%<3E#9gDN1aC{H=.jW=PAf.fWHi^)ncQ$v]".{JDWRxS(k#Wg);Y=C9D##72,0=XFMR),"Vz^$4jGwrBw<0jG.&BX.75<=U.HL%Jc.#GJry6,!nd`OFY]:^w=ac+emotuzbVc":Ol%&xol?b)XgrsJpGc{`~O[d<P^Xi3@C/<IX^}@gb+!5:HaQRO[q]u$4yIh9#/X{!5S}$d<W%8m7#bGMGm6P=a]olfKxippcD_7>qiQ[:jsvR{PIHc~qL:U=,vfqwqNi~+NCN"hNo$u#EMs5ZEp|MPRJ+ng:%dT3)t|IpZ>x{p|/ELY/c(V{@M~doVuF@uGc:tm?SA@U@F;{^iu3!@xvi[P5JW+sT)!o!/c([9Him@8>[ta}6^6&Remgy@D/rl2`uv1{6]rTlq!lLJ"J4iEmbh=!tr!iaLYV2n#ZTBf:R+KD22xq,vmi|Wd";v<D3qyqVA6tZZ5Z{60pJ0z^YzDvS@I`QDj+V@c];qJPL*5uWVsCGEji%Kvvl{yLhUdN_J7L##h#iYK~5dn74d|Cp]+y@:xq[NkF3%[bIP|sl9PB*wmbFFJq:(?lIKJF]fPF8GnNFc]G)Ro!z7E:fR(q8,QhaMK&$i_UhH51Z6m#T,cF3*Xl~8Av%q8,Qhc6QfNrbz;>>Xt+l_RFpF8sb2#*Y7t]AK=MDMmYj7_UaAxx,/M%(?o^Z1q)r*bW,puVN0PNMiz04AMP||SAWPh0fQ#kvmilHpo"FJOl,/M%Q|Qk8aWy"+|?aAt2o>.ORU<a2i]iaMo1?}L"qXBl+pp0|tDo};[H^"*eAG`l@b^%la,:1qRzY6AlHpz7T=PgwDl4>shGy%e[WfPc_b"oKH~x7?|uj/,RT3zdSJ*0>M|(E}W&wvTmlgln~O+bU$>AoV~0fdr62<xxaG]Rj/]FYR+Vnqy>W,mT[Slw|L[N{|lTxQFU|[6VKp|XJjB4>_y!Ac}|XYk7D`3XMJG#pe*Yh7NlUkdBeFRC=J4Ck_{D_);)"oZ+Q6.z<6:iqYr,Zz@18*#1WS}RQ:/.($LII@W*cFj[0Nx|}k;V+9{(S!SE8.@@dp=#s1,03KKK&8U[3(t2Z3wn5}U,n]!<{I>mMJ{>ugE_j4S)Y<AQpw.^IqveU~2^3(f$?c+Po${?|IUVRY8do_&GNmNy,n{kGr|c5U}mWVI7pw[SzB%p?!3^%6:)!@l(cl2z?mkBn^Oe4^h"UyP03sW7[k2=8mL+"[Zny:v=z=kun^&c#e3/dwtU2g4^RC[<LCo$hKnK=tm}(cP)Zp[e&p]8m}{4QS+[O4clJaV=hyUy^[Zn?<{Bo$t2Uy^WTsi7k7?mURnK"/ELH7^!*=@qn^pR4^x6E+L9?+|UJV{Ns0.X]L<FOo8?wJWHb27|P*#*~i2=Y=dP#eg2ce0SbsXXA(%e.j3Gr53a.:5Px6sj%:bKGB?Kn{2~v&CP>U%|^~Y>TYC%>!NY,bP`{m[xpoCoFexr81|k6xWubF]RunjMdO8kGDW9Tz{TF1H1S?#R:+9!e3"+|v{SX3HB]*pdH&FKTM3cZfT?20z6@j@Xz"0SpJ=>by1w"q%3V+`vTc.,Q+xD4aW`]I;2AI$gYcNlxtC&Lb,k.j[x|O{*t5pm;T!05"P9T50}aC=|;Xr[gU~69v9GE1wY>dB4=suVJ7~Okj2J*|nwx$~XyK>KJV!r=COkaq3J#rhJmbHo#76lG6e|6Sy%x44~c&)=Y=@D?xzc+0Gb6y1uIiASI(]FjKz/>ai8D.VZj_e{*AN{pT;Mhb46lGz]AS<to2h3]Ls#D;g4Kry##t#I"v.s".|3*<rZ??gpGb=;(fdeAhD5Kr}4_t5"v[lTVyZ^/%v+$KqK+A9_t9b:>SnN!sC0n2Nb.p]0#@/Do$UhDW`=,$G#`l`SNsGo569bZo!O6N;6@OKdy|`%p,r)}tKhYMJZm2]Ds>_LPTC:DcNW1}Xnr)}]9t3t`3Bvl(;aCwV}tUP+IY>w"]BGo;@o&}bf&Uk^18c$#X^1!.=":c5I5U"+hpI@TKtj!U"+O]:~/6`7/i/)`adi_40WI9!Q7|U`jN54DL1]sCZ>~[/[6bf$&WFCip@S*,_JX_GVPT1~qMt3gkIY_!!Fh05p4cjHu>vEs4=saHXQIS:WV9K{lhV0C`jKRUp;ca_V>en*LZ&j@rlg2_K^9?7hOT.xX2eN5VM77VYrVO;W::3{ldrHg~QobFBK}w5bHQIGXK^]HL[uy,H:f!$)Hi}&7w)bSkwRK3P4of=aWIx)iw&C!umRy<zNC9q+2H<u&L9V?p[p#Bcq[IF_DoNJQDhKXf(8SPuB@R)K%wPLR$1I!IaTFS>Uv,$iDIipt<uER?[iGj#YOIREF*aqYDY_oe"&)ZFDRDF9*oS)Z`XOfn@wSu>8n&qCJ(3aj?(8k0J,aVaGzjZl$<*XVj~uWE)Q;M?w~(0WY9?J*h9e`ER9!z%Prwv&V*|2NlT,v{$x;!CpT1c.,b]qDUxE;6~XQ1u*J@sA:~oDomi}^bP+6rb{!{D4z]TUEH,`tZ+u=2%S6p4.#U?wHCt<urY^(;pC+owR#*nfy!q,5PO})@EVIYXrG^HZx>@jMjP:20147,02*P_lh4Y15d8Yev"?,7cb<i1?aSC7YE"KCGN@]G^8v)RFU_yJi|IpSDPx_WhLJZqO/ex42~"8DE4_;9Yt@!RdO2#]aO.[HxRneMKEbL$=|f%ecN#l7;3CTEIJ=0WH9GYohcFU1Ok389CX!~wmZUJHA|*)e5_t3bzfkp82ipsf>Q?0;VDD,N%[!a`A^?5i_5OCSml?Gj]4t_h7n)MiRS!=ypd3AwHyVm]?flE`v&GCcj<|tU43bD?c(%_u4b|u)0FI7#.C8j5UXId,iP[44mOWjDT:%dNIo&+a;Lexd(14lCOctnZq"9CL,VDWM7AmVw>WFOHhB)yZ/G(B#i!XU85~*A6lB=D4^/MRp=z?P&"o+#mcX7SlgYWG)wiH(QPP5}I^C0F<+SS+ZBtjyy^]sKLL?rpyW}:%K$w{AWvQwm:7.$8lie7Xvg,0k}.#W8coNO+34Sk)(YtkQ<XOL3M(giE:Gw}w7:TiWCkNCwR["5Oc*vyZ^LiY`X[^{|Y+3GrR[`rLA{6]6pM8CVhiyLapk0WScVwqc``d)EbPs>A#b#rsZonY16T&_n?eI8#JPehhYLY_&Qm7OBSvl)jHZ={CLKjSjm^|&&Q/TxKC>5?fX"YDmDszvc9cQT:C1mU74R~V[l;"2w[EMgzszKIa16;+!_{CWyitzKpSw_W:w,KH5|.?[EA(5~h(bMGH8m$>DbI[NR0I(j)f{0o,%j?!nf]<%j*YIt:6Np!KX;sX0dITw`c>>rgfG6mN.nY@u5#bSvTavOFg0@QPD/;v2v=;,|y*.6[07FzEu+^="Ag^D]sEP1Y[2sdn&oNbAJ>pZZ};dpyuIu[wCiXR,(_@(t#O2irJbEWwPCOv1)%1.,Nv6l0IaEU*>BT5qF_vEmCD:*CHA8vb?w>>C(U];S]u8)6.a0*uBdMavO:Z|cMal<{0VND6Q0Dd<"5FyV`wJG1E^CgSw:~)v+_l"Gy;#n`7j:DvbJec"JOIU]{6@*{7MoXx"~[d#1F^Vco,?l8SF3Z&iL$OFSh0!l~<PtaLSbmdq;50ddRglqT2j]]4KbL4A%8T1Wfe,$J[R[GELuC?WUt/R.=*hP~<d:I)!&R5Bjv[o`E41l4qfVdT6)hP<3fpQTEOLwBy?HM*dF]H?6!J+2:8Z3@p6{YEB+*)Aoam2^XT!dUa,ZrOeV>d|/DiZ?m;Nls>^&H=1@h%q^j<a:/%*^P+g(DSX.o:2.zpu_eUO$Jmp7Zmwx|aIHzR!Y44nU%7;z)N+zMyIRo<%4%k=VKUth?m",mwU5gk~lQlKbf*&W*mH~`a4Nc:><GZZK,cigO/5.FEVy~q%U#:S6/;yzA;*pY%{UFr_pQlh}!G%RHbC(d$#U?!u"5F]4W3z*spv6xo%.ldB`_O.x`7/G/gO$Z3w{_.{iINd:X{z>T@ubLUv$6]jL`2xc=`q0nlW7Jz+9Tt<dTMEaZn$nJ!dpnH{,c7._TOGUoJ9<YP.>34SJ^BfY_cMf@kQ?uo)|!@^kytt{kw_l#zARQC+n$1HWp>{4+`.g#}4::%+,RDo`N&@)|8HBp8hEr%62m90>&/2F*mVt|gZ#hRrtoCFT4?O5>3WG~i:W5(j6R=cOfxIv1<,]?&SPS)A4HjJdRaM_`wZeCDX_|vSQ1KiEPz%_Y$Iy~3kJ=iL([:C22t,ZGS|7g3J^#PP01_<j@PnP:p(XQu/m,$d4F_o8:pnSaC9ukXmupR/JFO.?~b>rsJe#AL3Ff4!1C|[Y|WQ~m1s4|.%,#N|VQa{!xhi;@lre^*%O^xcR8}p@`Dhf/~>.,eu.IZ<}ddyrc4MSQeIk>$]nXDH.&1iMc2W44Sy[wCboG/i+B[fLf5~xBPuD:OE!:f<quT8Sl:1_"Yr0=&[6!)o=`ko)e;tTD6w@`C:Bz>Z=X@5B.aL_r6i|NkASZ,BEnnqCINY:vOeJ8xHoH5xPaE?B09GpoGqnl~g0`ZXp*@;sQL]vP/3$<QS%nsP<1:.&I1C}/WMqM6d6]Yg*C~e`dwHaoWIl@neu>GGQvUS4"m}/N3EW8^&)u$wp3iPkvQBy=Yx9a?f!kz}K6<*2GVUpKgVhh6Rca=:RmgScgE]q_rzQ@c0=+fpV_B;r>W6VdDdOHurR+1sH&bMpVqE#dXZydErx3iGvf@;d;=nC*,}M$4ImZ:=_mB_>4.%O?92KIN#h~/Ny8FX`dL6qxF0>Yd3k9]M(BwO2/,Cc{oE`bONvK&Y_~@kL2i.t:twnDiw)J7i8X3g{~[#P}Q"&T.j{;do+Htp}.]Nt1$EdO$`:rI*pZR)b$nQ">@w}Y[K&JKAd|sa}*H^?Fexq~^PnL<@;rfI?&QIqwHVEgMqoD4":V?GHgy`8gG+uC9ydA,uKVg~nALJR>7:AyIMNVU@Y0rZ_p}MHt.f[s2Yq$zJj4I1mw9myriQwk.4@B#hR$O@he{oyb9i5HFdK:0&]1kGT`#2&Ud_#*z=HPTueG:q!Jl2#sVK._RF,?T}EWB:W>p9NI7=:v*zPD[R+XRmyf2jGkP[W)Ep6X+C42<Kh99c#ATX0$3&>]+qY_#6<&bER=3dRd|^wl?+P+I;)<U|O1|:s~rC>VM/gnwyR}?S~_Jc$w8K1kR&(;$!a1S8tI>p^#E^}l=H%6b1GvpGe=J%|}Chpz/1tDXG^^V{G8.fQ;)HJWBdwvv^@R$~9U*[kZCl:<rV7p9,8W_F<twlHx:z{Bx/B6%DJhij!#t!o4pT(Hei6?h{OoQfh9n+MjmpZR;QC)gg}IS/<"*=5T4seh@yY?xzZASWHbbz{R=!)X"k3k##Qt{U<JRYcJE{QrEf])|liDl^7?$,S"+sDXp|!}$SwQLDMxV)G)Dl:Y`<e%_7kVK=ztg2Y.)}?nwBMt1::$_7kFK|7"nJ#t!8<NpiRmbKG54,1TYY!M~@pb;9D_;kH*xNCoa8</_mv>$"JqHxFHE[@l?|/!OK}*mF<iixhondKp5RX:[*]=FZ(DK+4S!c4]BHr]O9J],M#Mo)cjch|WVgyazhLD<U<M"8&Z}Vrm.2^q_Xu$`FFw`gQjiF?>HUmHl?+3|/qDwAJ3oP"IlaGTRB{5oL];#wPmbwE5v[<wn^?d&9UEIJ)&xqD}kpjZ]BK&k*p&%IgZR:,7)0+"J"%2GKF<x:f1|,)]Zu/s;><Kpt)D=:dli:;+Qu>9uP?(9RMN)RXm9%m8g02|SPdE%Y!Z}Y9yi4cvF*#9<P0Czi"XRIOK`rrdop>2J8*UsxyHY4x:b5=L&owc`gcN.;Bk0x:P*iYKCH:.]L7Gk]Ls#1z~y=5qp8HvF^CV6|7nWQ;uF![7V.78eEW7LKTM7M]ZbkKK$pCF(gd:x0h7@M@j>vHMah<EGl0HT"GWb]!`|6I{$<?Bu&AEny{C;XxTLt=*i0i0R@W2#,Dr+%suxP!PJHx<zl&[BL4|5fy~g3Bc/TfG%RF@vW331;@ei>`+U}5,6{%PXhJ@@3<K}|%D(g1eU`w^`~L+_%Wl@v)^".+EGu>[i5WGnW3:}LC~^$<aJCF|RaV4[2taz_QX@2%wk|7<A+XVLjNUYVH!RjKp5GUXO%tP)j)]W7tI2y,QdU*|KuERO@qJ&27~..@)S62.@nUNQ)xc9^?V%<wEm^$h`|rZg{4#8O14b2*!kLhRWm`KpHD>*7)saIP)M.#pD)S&`U6`0^MO?6Tl$vQC/Y:B`(soU{$(@z7vRZkE+&@QKbo~=&ov%"9c}btX+~mEplhS/1`*#Hl}m<8p^<])VY#Ib3Cz0`<>m=e/En]Soqw1U0iQMmJi8.:jV}D3w.EL^<6y#Fd3M.y+k,*Nb.9rt,VThEWplu;WfV{_iqHiBM^$@f^mv#Z<p_jo%*.`rleE*M1WnXv6v<wp*h0?i5Z*,~w[w1M2kF}>xJ@"ia;53Hfu%P@M>byPvKqDP3gRC/K,vcFJHWH[*r,Kj4z6?&xpAQY*s#nQYfYYdx^vtE{K|QYbtVn2jXSTg8ah<2#aG=T,Avh7Rc:Zx7x//f2jZ19D2+zn]Lc`N2G;DUkD?+$VM0PV)6.I(h1gmjDVSs:nW=svd}MKK`6mR,pT$<,J`Rar`lox^{!M#HiRjP)>+|i|rSN}fmbX}LYuP^C4LIcmaw7ubJ]1Hn5mvcr",qcQ2m}nDP+W[t1SQ[xV5PuJ^Y90SW5E#K7M7n=v}QCQ%;^A,1Jv8).oC`q,imYr%ZMc*EN]N)(BD5L;cI_^c18*3RLOzRL>cPY&:5(OM]N=<ePr]YO|7nqlLoX`LjWSuea(DpY%UD3$r6dZfkQNK&0dGBC=D|HnGhPV3&eoU!R=<jTH()yl+utz|,Z~Z7T`U/nT]oJEZy+BwCzpBbV9F6GvLO%d,Wj^KX*"XqF*tE`vBcBSz[7?43W0_3pz#_QUJZG+Du71:~/jOK5&cVa2%EsCW$e:N+9(D1BHGo0W!{|7CylxV.FG.,7eMLMJy&%,B_&VzUpEa4[84nfP4)FB9rbP*5q06L]aZ7/vZW:T4*LucHk)m,RIOIO;ZYcodH[Fj.t2_o"$OUt<AzSWqglFjWq<g.uUB|T%$dS>hMWpC@XrN"_3lhsAWJaNC5W&EGy:I$DsY>B]YxVDsEa4kJe2c9xem_)WY[uzWmUvpWW6M4:KL@DX:@C?08<2SNIJ%ZZ;GQKb9~6lD6PN*/CI0%d]U^CcrHjL]j@QgsYU~%RfZ`h&t<vi/xIieaJV;7jzag2C:7fgDs0<@=os0!&:)$iN6[pIUOZ.)A1VA)R".T&R$>b8!)~idq4OtN[[`i+a&n>5LcbUuoPEUZVhl0=FB,%oGlG?wc[[gj+&`?dnOIL+%<yWt*Vv@S]D(OLHo/_$ZFdo7*+kZUbp](Sgf{3%Pox(Blv:HU8mth?6V.7?Prth?HGbb/F9<dZ&WNKoL1JLiTd#1=c@tXpBX)y63r%%ZRD~WO@@|xUi]?0/pH&mOtnMH.db:S2y:0#k$3.s4K(z^2iT=>jmZ>FkqIFRp[M[3`6QOksFtl[tu:G,%pD8*K;t$f+P@R]+nnV>OCYS@rir@,NTKFEn+&`z|Sht33BR@<h+wpb9z?cFYrGyZd`,7z9vcj)PNU,[qK17cg8Sxqt6;2Yk@^#D)=o^#a?5R*{43,vj}}eG"j}NP.>J(;Hr?J(7H0(RsoL6gjIOMVRhJ$B)tU+7x!4q^xmP)(IJQU|<Uv8JHy,]cqLVO`Jvmq3*3+pvTjgXCVi{O[L;X(4O79#|y*pmGEnan<HeoA5][=YJ)j}%}A.osZauw?Yv%dNY`rFuFX=p]A&Qn|RK3zuvFu0kr]<!pKgq?EkWNU<J7zRJ?VXAGNiCS&;KGF*{],3">VQlC!*N&K|/P6qF2Zi0{rie>W#(%_:@QO(=zFyZ&I0Bu(It<W,cx,$#{!*gI3D4>ydWE)"ofMZ8)Lf3NrU5Iz4wzMF%|ao!ymbY0XzSH)RmRa)(B|Bn,E>YwQc$o$wo4NjSu#Q~B",y)=h!%;]*I!ke5_Bjg753(m=tc9hN+($[NnemC3CtCF?53^4|*VRL(D)r=g}!Q,+{Apuj,~znRHBC2na>UZn>d}sAqk0iOtj(#I.g@j~Zsl>m"E>sT^*wl7i``4b$i>@D,X@<aY/>@<L]i6xs"{{r!9DZ4=m1/([~YA`8t`Lb#(ozw0>Dmiw;Fr(~C1^r?Y#;WYsmib~6kG&uI<o=gxTu>);^t|$C|y5SnUsHg=E"Q9[_Cn%6vhDcvy4/uD)Nt4Or)FfH;mMmG2edocn/F%|hK?H!:sI^ox7&f/0l`;)a/5vmUj?e@v;|Wdis=T<l4vOHOdrKOqT%z61k!Lw^$.t`Y`ZA`vg.%h|@cL(Li)&C*alx1(xA@y:1_TG:n`K`Squu9`(NheGvHP>{.*y#Zw8EYPG3_}k;Hq<Q2H;^IeupNqHkDm%U_a<GO%%eXjumAWq)VVi/>L!EEA`$G"o=8"^)Dot~UP)YR(Noy>&T0[xFpaTnJL]Lhg)?mp4x$L@=vG_Vds3q5qDkp2*HH)b&CdMTjoQl@o[lg{~>]mN*[5D>{&poQLxg,)j[Ky`q<5:mE2uO[cWS=DOU9M~g&BW.x]aR&u&O&adee+sz<:F9L#L?HH5o4J00!Fa;DC}n@?EWyq3/s|8<g,E_g%UP1.Zb8El$.Sg9oPbf3ncOffVD#qr/X^4(nFN7+L{{dT&o9.d>!F,BHA88C4_JWI1|`+@ynBy*@S%O}rf[<NrY#@!S50$e:f9)O~d|ciR4>!>?#O0$[He0gcwC&0wp)UgbOK3TFA#{tz{S5+id@+[M>.UzzY#rH=EgH7B^QrLyu>P$!FQiR.N!z%&u/PL:a5d`;Kj%}DSM56WZy#~)|@XqcLqWRl8#p4W!&1.I@~I}_eu@&8v*?+~fya|s}A./KY`IasR*W!/L+VB*=:X;Au>$,X]P+aV&g[IV`s4W"~?Wt.&r0O0i*s@m"TCDD$g;{qC!{OPV7l5hx!/fxkxT*RN"ArgnW7/<+N@`30Iab"&4<,jVS.E%.WQ}s/b`_!N59>PD_`!WpG[3M6WZ./`3+w/X]Uvny9Z|#,>G*4k7uWtS^mlmuLYux`ad8~w~[+OV2Y"d8~wLzdHbULH!W0I>Ey_{rW+6pPtPKX;;b9<g*=ly@MF?${b.6`7Y?*Uo,tv``pbFi<M2@9(4gkU6bzKg>`V3PUn<k9y6YQI1RVUbM[>$~F|<*;B}3xY;%_PC<jKk1ihRn"yRhCP$,}XC/5(Qt3L,#8#SE;fZ].CQ>HO(BkWZINOMPp1.HaBeRUlh5rg6a}^>1sF4Cn|7yC/F(a+1Ryd]zN%N3H,Uj3[0*]AH&x?i=$F`V0o30t"5E.?wC;reirgVLOC,IVS1xfV4_~iuC>rx#Ry0Yz]J>[}s3DWc%T_ZpDhvH^*v4<$xl,w!nE%$_o}bBv:;N"fCX8nAhhF#9O01_X&,(!5Zx];pRFv&/}2tj+.xtwnDe=TP]^kB%Z^Uh1,G/5ik`{!HXhQjY54^hIwcO*}ZN;rPbOn)LMqdMt7`}&;zQzIC8s&"8QReR.@S,AXi3,o(ga]m|8yPW>;5i8>uio"DxlLS8dWlWt|M])bSSzD{T+!*UC<3WL:/$CSW)1CSQF0E%H{WO[GL`l<%=A5LDj(pU4IOcEcvbpDQHvf*5Tn.W?;xy8&!u*uYV15r<Q|")NCrr]^P}K74)s&8ppxsyn!.CIW<I0)tvnkiBTmQQ6WHQ,sf^1]#Uz$O+2A|{2*kAn=|+{fV?x8!a[o{=vvBOEG~V4t?,5Jqr)RR!/GlbpvuBUA(DmjT,0o8hz7{9^[A,{+zgk{!x}5~6x2C/7T2Luhl/2DYo<bk4u4cg^P22|E"{JO4~8<M!<?F(_YeZpHnYG)r>zSSh<F+K/t$R"oUz=MM=QbFq+E"TS9k;p,S$n2,85^uY_U3mV5;Pq5GO9=/99+4IXO+OpAF4e;t4][&pB%d#>jYC_JuYA(jtqB}=n4?~c#[oRs57d*V#Y*0r?gzAqhdbT6VQ|1a1u=qk<%eOjp>hvAv&nwV4R3DazUZsM20E_b!nz%DS7s;*o:N0ZrzLqu;fZBY_/L@*Qa.mAu.&b4uTH14C+!rvc;bLe#WqW=,d7A05P^0mOfrD0>_maq<60S`?c.6@qDDQ023:7R}o%6n>DB^TZ?mpv5X,t$2lJ&7R#*0;I)jxiyByZ*0p`g_b:@Kss!ixL$BTj?B[)E%G1Pc48`8DPrN,Z)yYQ<d@tJgiiT~?Sch*@@%J}niT}i=:^=<ErTpf"n7}15|3V843)UFvE/:Eq^uc7Wo~`;Q+O.mx{G[B:+oqBCrLi"YYne<c*h~E7%L)@^?Eo}RB(gZH?}UZ{3V6WV<wRfHOFBMD?is=*}%oK/wJ=tO|JiqJTM7VX+b,I#BUBjc@SyB%1{jwErS6YQe;<qd:"6#@qf=WjmAFU_+];P|&P>4So0#~L~M(Up&%>g.nW*k,J^W/et@J311@V:?31F5Po(7wS=D&Nf<BJxAGHY]q)A:pPFW9(57|G=wT=T+]3kG(7|ZB,;GzDI#0Isx5!?,Y]hoQWrEoQrmi]V}yryDMM@};YVGcgya|Uvi18ulpv:OoihpC75}?~6H%X!krd.a[exCFGzF">SI>e^tCfz&jHKd_wz2V,Mp;Xm)VrQJmz3VI}?87Kb16n>e]:6&iraa?v*YA_&Q|jwSYd_O.`HAiTfD,b_,&s[aIQ*#od8Rw;$,?yQH4E|o@`Rbsb|vjryr*;ssvnkkB:~pk]isTaJr!BcSBt5dxBv,{wqN[]:(Z~4r|h5Rw.g1l(f%^^g%^y%PCHGy^Ol19(5pVP*m()>mi=hm=*2Px3ne^=6AK]|bX^)?$iXZBFWEow9KLzhT<,xEl;Xw9mx(gHwwQA%m0*KS9:m=+?,LH{z6k1BS#!YdJ](K=d:sYc8`k.^q=ygsmRArI;n[i2)S~(^dFtqV[DAC"r/?cAu5,r30Xizi9RB!]RWaf(g&E[{(OLZDj1>s^"zT&"p.obd[`vy,FkTFg6b{VKRdvvk8?{zb_r2xSxUN30SWFe2KO}=e(LKk?~ep0MmO))vLT/BzCZoP]sc@6nSVo`=}N`K6M!(S9N>0=QL~n.HHW<X)[qV!CY<B$&U_YE!yd[h`7:1F6T#:F+|M4qJ*3**1PJ#*P2u&|+$BKuW+/Jekt)X#nDAvZ6qq}{u?kiB(gP?cRx^_sTLz*1L|{sFEf7X=H2TryEt6c[C4m,MXM{{A,[*L@I;`$4tcJP!F|<il*(BeV/kW2?pxTqZco;SF4qQ#nY+;L9wA[qui|:cI;%*2=TY8gs3;?mMZeTv2=*MeR]%?k3Xvn|+QQJ<~6(g.E.oG%Xf7_zgX&0lByx1+.aly*iWNKym(&Z:T4r6z>y<kej9A&JJ2lnw|vza^{sv$]Fas}:)2b.MNv(wd[#0pR#0hx>J91CJ)RRTndp"_b>d(.K|g#`T5TeYP]ggKW5+hO^|zR<A9(I9)r~Jb,t!N]<a3m|>pE<nvQH*qKrz+Rzhr#k$2BV=KHQb(hN5?30S^/cFsgn&O|E!a4165LL(5K4+00N%7FzxkvoS$3l_m}i{fyjL|>h(Yv<5*BGd@q=/uCmd04O|I[)JyEtj$6:6pdWCj>0dQcjk4qpXb?&:w_4)^OQE](Ml[jn/mT_th/Cq:)6nDoMM3%?bd(T8o7s=Y*k"D0GEy%G;`N6b?cT<g^;d3zvkl>eii"%|=yURo4GP^Da#R]%_E`7I%^iz7x9(`Gb2q/m(d5Vy1:]R$q^`y_w_euuvnf!1"PPcPYp}wqaGh)Ks;86?1S4w{U#]=LFn|!ZoE`k^=Le_j1?6fzzgKs)RlW~$m*A0z]mEQ%t%@{0X[z];O];L0DZKHiL%+;qS)^b2KN|*!3@|Tfko>+z<|B;u13i*cFuoAE_!o<_zZ<;yZ$b;xm?!2.3RJ#Hl<B;uD[w{nO7b#)=UP+M`<]$^Ci#nw!d4$Q9zko2&D*O#X(wR|T#?N6mX%<,1#Ho#Yly0`7t+D+<q[XiM$]1qd_8U;w"_0.ek@o@848|kY^!yk*h40~%Hqp3]o~ayrU^xH`MVet_0/k1)Ki4pHr]!RG,p"tEt6{yc53K*i]Z*9h@7hTrS#a%oQfca$<RzNX0b<6*%5&:`!*v1:;s#NmE^##{<uhSO`,j>]3Sp<C$|L#}N>De,wg9t:gUmHc>mN+h}h{v>1{I^|18Q{Vp8i`1goK|wb;?y,1DcdVvMAmObBdJ=5(Ut@C%/ub0SC3Y|Tcco:.h&nP@N2,$r5P}Z!DKT}6|zwr^7A@^b5=Yjie!YFN4D75^T%^UFCW|zKFSm^K^kkRt4~~_@$U2lO$v_;XL@vN=[CcX>puw4w#N;;=s#}M>@5W(U|K{0DuZK`0*D|,EPIe$O&ln=ov4=:CiRAFoRSO;r_MaJC0#Dgc$w852kg/%|4WqFz^z*=&Mh<f(8#Hf&?XM~bR:j5429]ik`7dGop94t;Bb.Sc`L$E[xh=0,*fHd#Zn##]wlmoJha_vC`=!uwZN4rbAk$S?r2om3KqC{91gr]X})vD$Gc#uY3q;@B4].vRKwAAXLKi$GBtVEeLvZa!s)QD%<H9R"DtKtrO/[JpM#:Wsu+ymRAAAAAAAAAAC"Dx&BnD7!^Z${&Q91]j]mllB/k6LT,juZ"Q|X?QuexIpr$?=rdP<5*"qP<VO/i);Y}FLJL#,URHV<`7xabG:/UYFu3Kd4oqA($5(/Bt~H_E#L{faqv<1=`F@6,VJ6iv]6YgFs.*eCK=F$;PAb=hC?q+pRTk/hdc@cI8ubE7]@4WlD2dQPymI(x*i.VGOk;:I%h?Lx5vbb2*EM38@v`sn{xW]h@,D.JG*/Kc}.}S5."]@CN7"zC<+JUkZguH9X9A"X[_.f5*Jy0?g+Y9o.p`^.oKXWi]>1JF0EBVBJ8}FOw:Z]$NaXxv[BTZ]r@Vr5B9&sqm!~@#l)?y]c7>LwigzUd^59&gj3~7W./fY.YT`|d%[I|.66&OjO&cU:Y8p]C.4M:hTc^n}gjA%?<;,:m{pMSt%Xtau(1H(a*#<*@Oq!xu=]*u=z{q^dWbX:md5.%BZb"Hcn*gh~x}6?$7"MAe:C:LnsBtz}f;jkN7(z5}BtPt<F;{VW*rF`Yn]f,gc33g,%t%Wduy:/kN5|nW,ug"YLy5V&$2<1+O0rH1ShPZ(R%uO2Xj@ah(~t:^=vQ9Y#:WHjS;0/RKlhqq0XKudi@v[WuiZi{Jfq)@f2v>VH"DVD(Ib#trJJ;R3j*^M1S[W$,Zc++]gC,s&D87*MA+"m!0BZJ_^"8`vG@T@}Q};}Vy<iR7:09c7BVS;@y>lYO!k[;fba/e_muA^)4u%tQ9pyzkw!4KHzv>AxB2[Y<H(?4V"9EQugCbgC=B%h;(D6jm?JCrT``!<Muo=1TnGZIlC"~bJS(U_W+bTHO*_47|3hHpVXg1]WzQmNp]z,wHFrz{ZwBa;y_cADNIMRgU%1Z1#D<3,|5Q]pahr7c:>Z5djk,^v8,Pd|RadOF_93ut!2u(`/k$m8URb)z?OIX3[Ol%l)?lJH`y+$Q8Uw9QiCmHIhCS!job^Qn8p3AfSA)kIL2]W?<lE#(TB76$+KRagkP"^b1ytm)b4*;*6QO!sCJ!*V,M~__?ZpY|"VIX(9aQ$oLn83QuDNABpl(Z,0mN5HY}z]n|Xg($z`cWMITeqhMa82tyI^P{2~{OR*,uRy/|)8Y4]:5t{V@55?&D7yNHVcc`.mg`t|mbve`qR9~/61TUN2]gFj>Hv`7{?BN7oW:"UJrx>6(F}sRY+b8Eu4:M9fm9H8#,rz#k0MK%9Ol,d(kn:lgpq=d?[:vGrzq+IPODWhTS<RuqcsI[>:hg(;*o[DOgkB?.mi<9kNY5*})avD8j}$CH0"mJ:#ozc="(CQuU9zyOM[.ps^Gx$5ljg/qL0cxKj?$m/YEN}OjRe/*uGaFLtDp~9,m9x&5vVsCM[hdKU!N!a)!k>+5T(KS,GP>8[Dz8kON=}b23``%O{lM(n4+_Sd~v}vt]L|HxRV37:jj*TL^xWX}veG?t|(JY:8aZEB#c>PF5IFC!1,?Ez[Qv0lPn*p<&u^mkg(5d1pI//4qzcz1zK;0cIzdPL+ycC)W$hfOnW$/)5V0yWF|1RpX,Y>yp}ILhV53<k*/#Gy>@Pu/I_bKOXngp0)es9}/1ouaDpi?(^6*v)aD${pfpUf1Sw({VCMim(fRH]DCqwEv[`O@@VJC_FR^Gws=Z%tZ*[HP:6be[.`J.Oc^ySaFx|WVtyi@{H?T/iJS3<#bWQ;p2G01n}oWy>Bc;>sJrfH4+%|]geXfYFOnbe[j=m:t@>[,T7kt~)8`vm82eD]"IhE?C8KfxsmwY+uJFLmwSsI5jufz>aU&yr;]sdD,@>*W9vZIvmE(!Pn~_YIBVetx]ZEF6aa?nEFK!.Lg,qai76o5}W}Q::q*bTEh:&7.#DY.Pr8@H+&kV>kU|S)3om^sLk0<uj8&%YN08[_Ci[+FcCt7{dpQPMOw&vD+ubk6kI7~@<*6wg#:PW]"RRg`M[17ywwwDXHRpN%|64`?NjBT6zV+E0?,D@phwoB!KSzJP)[?iB++mv8C+<}_yIv$4w3%._JDQpJ9#/Otf`B(+(jo8$M9B8nhcZ^3EE=%ONQl~oeLje;mjNK.V=FKEJv[SIY#>?+usjU<`TNd%4@$Vj5,StCXv"PRzmjBGD}$v^G_ILZp6?3%p_|UH$Ch^daek+K@0Zq.T)~%3}Pf=wPfx_p+(U/!xfYKg(lD2,,v&mO46ukm,DxKKujYT5C+(cO;_iO&i+pL0g.*Ov8@+2;#,nChPWvv_J*#&Lz<3:dx?%8zS;fJ<b}0cy4HIyk(/5h{!m*=UMVrLOcji(=3V"~Y/IPC2^gl+a9W&V`U2wL]D)]|R]$,y:=u8pRhe>b}cx?D!o~`=6:4?5srT~F|RM_GXeZZ&lw_o1!X3X>4PiK>]Z:YR7RAXmf{eaurfuFjYQ%y}ot}.~)9WY~#zW2!%wiZ92"$&(O0t^=s:],lg]%^+:Lss$nQtaOzS[ksR#H$"Be=KHDwwyySPg4K_3a_4Fw9^uo7JsCX~^ZPuTP@V&[sfVCHf;T+Fv5ovYGLE5=keu[AtS@Y^/":knF#h0hEIpvZ%m)Wva"F2K1z^_Hlnnx((Icq,YT9^t&>_4NBP;9_7`iR3@Cd;T9Jt+<}W.zRQL}]Phpw8c"EU,}A*"X]nlpq)`]OtVekIq>6h"28#)+/h9~Q5#b@nk6?s0~U5xOxTFXJ5#c%Rf6"sC`LJ|KO2*"EWF9Z2U5%SWsY/4qE2k?r}lu%2`)j9*NzRYP@LAr7Y]r;sqjXP)(#1;!&m~!&{HURh~;[RPTS?1&o|4)m=xNyoSZ0<|W[I[Be<SEm&?+Ym(}iZq)Ng3h$fYZ^=qG=3fB?1Z#G:%YO_<w|V$pW`kqT`b#Hn]%`JTK^rc<}KrvSYQ@fainY|D|`[5Xm69gST&^#wr8jhdjCS_wur7Hz,i2lr4<+t%fH{9yu=]_*,A@Of4us3m^M+z?h|h))OwL3Q/:{d8L.D!Uq^DlhQIE[(K<]idgkN+CS0*3:DDc91?2L<)/G0vI+uf_/<u0x3%GTHX5Qx{nn%c&fLCiasz.;V4nc*6BWL3e/DdqTbyvmIP}__fy9vD=o#:#UFFL!w)r3s9U$%4C~H[J}C6ZzduN7}"gvNV{o)bIh&OE~qSV9J@9cR.:LaI,`DXD3XC<G0g~Q/G~AZ)*EG@YQtj9u3<}9ulK&g>SasoWu;"^!tc+J9C3Jzbg2/6)"YF>^[!lPw$60/y}49tX#CaRM)pL98VFo{kDWA4*LjCx<tcRV|2HJrWuMXVvd(m%(r^_xh)V+1(5R~8h%Qb[ILvpe("+=wLwnPH0zT#I<k~1zT7|OKGK(pS@]yxcU7LZJ^+T!nu*,?$`jLE=7fyb~LR,Uueu%!>,XBlngGUKhs~27emRns)m35vf.c<<%.lOGtr9`OL;?=F@^uAYRRkUkJz6A=nUlF6iNivt>UYQ1Z.pDDiRLTU&Ta!Ir8Qu!N?JPhaOyA&xwOYL5z[Vg[NK|OzyUmu0/${.J,n1BpD_hiw((:h#r<@C,FO;(fIq)hf7VaO7,K:Dze;Q?}jG9`&FyPaz=EYG@G/!`7Pd?l:lPv[mbHK>>@}nsoF<<G"vkD%WAdd=7>$KN#1?gDrybQ.$;GA`s[8PTHG%9W#Dx3GI]>yCax{i%5!57;cZv;e_5`l:b}u}EN#B%#TF^mqL[_W+*9Q:LsL>l/!<9=>EApR,L#RDKCdGu~Jt/2I8z$A=;U%t/*%<MoYl=xr0w#OQKSirC]*bN@6RFKuA&n:?;"Gs.GVT(u`ubTT$8]5.tBqzq@G%jLL9Z=Q7+~u*9Cm)O]10fC;Rtfp5OP=wt3;My_1uZlkc;~f/bV}P?WtYM7iz|Zl0yKF6`[}tN}Y>dhG)wbIIcfkhNJ_r4EB0?ek,,Ii/QJ9|(=7B>5)3XjTc+g3bU!L90lHwjSb8=<Frp&=;Oh>L2d,^SjUi~p(,JF(d"JBn"uFTuD^SRn`z@!$g>dmrqh#Vq%GH(}}.SCNR<;N}?!Ijemm~VCw17tiC4LV_vq5=HqS_K_j$XFHv|Of_,:IN1!A?([!bZI`pcMu`I,(t$qDYh"W6m0Fg_fs/&INM[tdVEjA,/`M:DGUavnqG8m/,T*?hd5u2rs]GD6TuNe9a7>2{D:q&D#`,Ifsa/<AKUYQ}50ooW?A*p)uW}*Cd2$1H"eIJEHi{KG=:sl#1"FR(TG#l9KCa#{2YsoZ[+`a5bL/qX0TX`T!ZqtiQDhS4^lq6g`BTmjyL*vgKYW*|C12:qXijZfJCf#IL63L_H/"yvy=kUC]KWxR,aZT73n4`(#S~OdUn$FXJK0A(?03)g],Iqz@qu<M[x/QpAz39G^ge)!bE6eq}kxK37rG5Gyk`mnkCM>I,R9Sv#Tb3E{or0!%(0?A#Qs@?9vF3@Jo~}d%dJz1%YuU>lUsQ@`}W!HAM947I(QSx|fNo/0U(QrT`":PMAG:Kgs3tJ$DE~cr9e#dpFJy4h~]9mpa3M%n?N)%kA2K35c"G0G%g[0]^ub=;_{$|>4U&;4g{,LQcmq|/RIyCf~evra]}*Rh+Pk!=6AogPUCkn&ni`,x7[Z,=k{0O)[E;*tB63gM9>Zv%1*AFE~NYA|f27K^=^"eFV8DW`w)$WF$iC{QRTql3dd4.e]LOqV7wv/YGL=5f2w.)cO8U?I](~6GJaeId$G^J5CgqNp:~>m7%/LHHU6_aB@>d^Yz4p1b0;^N>k<[ly*OjTw,K,2!DGZ;uzd.Xk%XXL8nZ.+Y0l&py[n*iFbZh55HJ@oqa$8+>yw"Fts;TmB@Fo_.uzgw*UU6((}_euGLeCZ1e;8RJ5,S>|1KXY@O|R=eL@k?{b*<ATY9CAN*epy,wb*Gd1OQ97`@Jp85pWw^m#{ps~N;E0ZHee9qYHK7M},nu_udWeWU*`~xs;}<*7$![2c)ukmx0/gh;Z^f,ieDkSN;h|FJpjbXk#JEOo/DO@?NN;tRM:WI=CkYBRwsOAa.`A["f3t{0TMKDRP@6M&O!0}$>+hxjVYy_*U`Pr8I@y>7*4_7YeUyGsBauqE2{FH9gn1hod[L#9QiD#SbL)W$5Xqi8FUz8{ZKd#;.B9t4i>p`~E[=m2&ins*:4cxs)wM|=G+/yZ;9c~Ig&"9[TcWMUzSjpQ>vx|></P.,>t~2`v61reZ],~_[KiLKs3]/f0fF7!2N#_IFx%DnluuVsJ|l7LU#iBs{|s&3#UcJ&C{p_fV%E2nZf(U_K^}&3P6#:*BsJN5vPv_8pH6TU1Qgnv]?xo1!^Nj!@zq<SYY54Xq$l1xbP%Bw}Ni{>zyJejGrdxNfeaClRR>c,XyM_MT`5EF0lI<Wo{Inq.D4}Q`Jaw+?M;`H%X05/XFX[4HZ2/Sa3f^/U*[Jl,eH{|pmHl*h|6Lte07@{]zE~`pTr/hxTP+Q*43R7h29CT+MJPw><GY:Ii0X%$lrOiY~H2FUzGNpUSj[*P%bQZ_<G5]OooUe04qBrF1.$|v1yO(cVy%Z9A[/V+REAu5j<[[h%;,9rYM/S[CY8X_<d/y@IftGloI#`Y44~oLBu%ABxwz6}SS=f[1,.%&wwCCL&:O6xFWNurGae.LXO8kj/@1;@01Za:7eXI~(kvn39?ij[?W!}q$HdR51+v4DQL5JDaHJWH*`^>3Y[@vIsTP^EaQ#c5vOsHb_=KJ(aV[Lf+9^IwO1<*u:usqO7HS`0QE(4=SSlCuA%87KIo`IR,c[W}ZesE}YS&GCFCo2.+&:}QWbo1iP[=qe|r{|e_U_@`a!76AZm=+V~`<=m/<}60GESU9tzr:E6Nre&%NIx$O?Iz?qykU{(6]3sGr",WwU[rNs1k:Q*s?JXpEoDCJo6`<7#oUy:U?RurrT*`I6+i(vUOh@pfbH[Cbfw/$L)`|`jf,#(JnKcGc8EOjSj#qZB&OGmbsW22Sd;rt8lh?t1SiI^iQzw%IBTxjA<:f[`HJQ(F:zU2vfQVQ,VeUNs?,,jeD]3+d}T%N~lp>8Sj5GntQ<BP}3!,Y$<F:S0T1t<!_wR+ZE]g.!N={PpMXy+b9<1pqoFYCJ,9JjBap^D3/}XIx#JUDCB:T`m^ZPk/|Q6x;qD!a&=W*?`K<UT[mlDP^HONP^a@j_}c$6z?S~w]t6^T%p(0${jy.UxE#UxFosf;a:+5teolGmNPM%EhtFJ`qqrA?UO&UR]$snIcP9k;B^/wHC*#tAX)0]W6gsl]YC%%U97%wQuG+xw7Q1>N#Lj<MLXRH>$3Y|(c`8mYuCSSX3@6eg5Uo2#y,~n<x9zEHYGk2NP=e!^?VHbpGHv[7Z=x:sPl3/KSa&`qtFg;j!u]I"{:Ev)aZ~:mFC(j*dnHE(VN)[@2dt2B2DL!:9]ZAi`$5cak`*T|674Y[cQm&00[{7+u;&ojC@*{{Sd"3"YA#f0ak6?Z<&<CVQxkS;lvbDR7}oVFQDzF&jtq>ulKu=G;ai*pvfz]3EfBq`*O6m]SNuL6C/%hY,4So`1mIgs4d{Q}B,z"`sXe$u_3E]z[$2Kl|(8i1)6qHCY$ZQPD}k:{3tep#1Q,6h}a[4ELK1udF4vm2``?~VRbpTV)cJQm</D0eP6cKLDQM1(,9gHH490"Gcg&W@r(s/ny&QYZEQ:BCcvj.._1T?)m@{=Qe{J~9S_1TdRgwAYZC;TN{QTmB`hrea6/oke~86yA(Z^PmKf}w55C+>KhYTvy+x?7si=Cz2u%hvTd7`a`(i~uZ2vH$|4<5SBUCINY{Wh+`=[xV*Ro.d#5/uY#h=1IZveg*iE*>0s/<>X$}s7qdY#n&iE<w*CAy8ym^lq"!f&U(PZ43{XW%DsPvn(OS<Nd8*V7ZXe8Ql}}Ddp}@1/k$2X8J=&2J"@:ilBG57(+?5FVHoOZx]mp9ey|n^t)N!>iy$8]@~6vj~g:]6Sp.YrH(pc]TRkS2k3Q~>O$Ljw!a!m4KnLz@a}F<D~g%,F=ZAE`xo=+=93O]koi`~I#bnzuoI.VpJPi1lIzxA6E||pxYWa}+"@ix9=f;,}(I3BGFPx4ElTjw`mh8cy|Gc/:W#E1dr&p]Y!rKmlj.u36AG7MKLL!rbF|TQFScqV#7)hGlEUQ%+%ZF<a=:k,$Nt.4e%;"9P=Dx@g)?8Q*Q]v,[mpssQE;DKcfz[FwLoBRI[vYuH7y=dZ`_B<:5:<n12n4i0kRFs],d7o&KV!AjY@EBw%Z!eKrtfpZI]~nfYd{<iX<vbLxZE9d|Q.`3:)*U1?Cq!D9;GqcBO(_CnW|Oq%rXqwRD1Z{goqYjK;;z$#?py;:f(eQ4I1xY#xv6?EHX$BMNk+CR/ETy]svG1y9W}Ha&0:CoF1P5YOO5uMU7ouCsxED0.yj=s.P>{iKmh6}1C<P"C}B5%z>umO,a+r[#V<AS>8Tq>p2VB<N`%9HaMg5D;{ZB3Ec];eOIOq4ZS4UL{2wCBcu|>j3b}!hROP:rz!D}JSeaD;fS;JDe7%4g=wrq3;vo=}|ow7rPu5kla!`|STUf`+Wz8i"egd+qGv+=tm@W{wKx(B.:YLUKhC$xB|AThP9/vKUB)zLj{NO<yU<B@OIPb7t,n*Ys8*[M$($dm.|uO{}PZt$7(TjzJ+HZY*Jv$dF,Iax]2k3!&/r]He$a[(2Dv5zI#%VZ6g@+bL4^)zLx)BdfiT!mkR|+rJ3B._4n?UtX9(IRB0n=pyZniW[>`K/o`&5,3m)}}w]r%Q2J*l<Wrfm*9o.a169/a.^m.yF<x"!Bhc+q@?TM,Nb!V83qXoq.^h_|y1]^tPwpz0{|Txt$6K[HS32U9BAarUsJ>JP%xm!fcFN0xbU%>;+jL+N(8T~ItviCurpL26,)j7j|._]OMpQ@Y+0Pjc)F.E*iLl*`z#r7eb!VqyI0wSAJ6/f6gRv)}jKY#7.,^RfM|M`EZdY!:[nx;T&2(Q@,6D*Et!>y%sw^Olze(x*(HWo9tu|n:,6OYHo<k*D55B[go_Oe?0GPS:Gl"NTKDS>Lj2:9hZ$tSVC$y!;LH>1nvUAVM?&JVNyd9vWRYq4.#q/rj$[~/m3)0dJvo:eWc7UCaD@vw~xe*{9#aLu2aoEZP(CH3ft@cba!"93=>Uye;<6H9"(yXzVkb"PV6q!*B}zZltM.G0v.nNp+G8Qr#~ws5_e5S=UO#3{q6K,JOYb399i0_,;=yO2}uvSI3j$tev`Y(wB~}2Di_!eC_gs6@<"]Q=,1~M.VGH4]j]+&CUTF3,;U*0UVySDZa6?tvAI(yS0slSv>fo:heF#lW"kh:T4k@plON#q1Tn5="hOtoT15xMPgS6vsb9)Uc=iKS{*Sj>{gmsO4H|Be[w9hA}.o]u8<"sq8+#X$8nG/1Ab*}2NtTV5J}J.*iL?fry8)"xbW"Jt<}m8?.)]/{R)GaX6OmN@{@TrO5;O>u#]7R1im9Do}HCd96a7Mmz"PqW.P2/,@3VB+*$;v>43_q7b1WERPA$mko}i{4q%{|OF+aJ&wtXz&)GFjPc8T"/$ok|>)BR_F;jNEpaa2zH:}>v/MA9o/{0:~mH2)_)D[80@c*jbn9G.4"D{y^|XTPpx6BM*(ew5MDnh4d!^`Jz8<hR}#D7M!1)SL:D3d~`!F3t|}oX_Pjfi<#gKT?!Y1b8<cu7(WiL+#AsbW~WtS.=4N+,e~ENJEnr%NK.Dl"c?ZE:rt/Z=7=E}H4{iK5KCdzgK^6:6bg#B0AZ&ZmZW#=?Uxo|h7j_q!Gt9O"mdd3.c#"C>lG`?4,KVR5w_vRHOF46**d7j{T#IoE}!5Cl18z39d1a1r#wt)Nl9)4(B#3)o)LqC!KY:`vB94InCBu$+IoS<Qy}zU$5gS10V)}"hv2UomA},*&k2TRi8tu:P0lNZA:vBvsyZkaKDhQBNDK1C&Y(W/XJPs*w7F8xAh/S%[@SXEs6.BfeOS~526$6bWlQ0bvPh/>kudf+^w18g07<gO26pL]fIxT#yPUq~q}j[W^sR`eie9dn]5J!="?bl~&h/`R1xYsZry@H%3a(=fv8kOn?2]VUI4^FnfvN84otTFuR+A;jvr%jOvsKL3t!mB>u7cfcKz+Y@Z|v5m4J=]v.9D8:D=CW_#ipeFWOCQ}.1@91&!m@QO`Cs8&$q,4}CK:T@Eq,sEVhh05,iOMrwPkSKRQqfzY&U%z)*h#@d|}gtyNarNy^}}O)ge)TnVJa~Kp5Wx+M.B,|@}80JA&7Ag__`d;pfxVH$<#Yi|@j4TM7G$m]<oJlm2V!D;xcsjeXJ!4eq=h7l[G0SZ+&jT}nOYNXvkcx@J#4NUR~Yl`(rec#ZwUIm_;S#s|fDd8BxCV}synFL`UjOR@+,n~ly0Lv2>_P?Z.k5Fg/?)Sv5mZE>1??dzMAqf"_@o!d?r[]yLS4QP?8kWpi+j0Ljbwh!Ypl#u(ieN8.mN<re@rIzD[}rjJZ%5WDRR$XUxBa5lja(,Ya{kdNJDpEgqV.&7jj>Dh6C_dldxFM.5mdQkZO!^DR~jw_Zd]FDx4{9g&)KM%|e(SJEV6#MpIB$SE@+6JO}]TTNJ$)]7"j5G|Wemzkq0[uv^C%U$,:ye6me;Ar]Nth=w9)"d8aLWl(kerNo2PLc>{<|2vt!&G,NV?$WJEwi$<,%5GClAy:~$PpG23r?k/^JtXv%za]m)"inGDDG98=}B1@)Q8ms=K=;H1lc~A}~s:G,yyV,hr1d%7(8B{FX/8^n`sWLeazH4aZ{Qtd/o~D0%lW&b,,z:kVLJhI1OwdVxOj1ir~LGSOeYO|=<+6(D4NMJ{[2wa,v|p!sMaRiiiS*v#EVNc3?l?Qqk"43(R:^#*Ea18qagGudVdb,Q*?_@:|W>F<+gPNW}u2[[9FTMc3T3WC.NS=$GCT_`v5UR98ei@%sqy1Mbf;gt<jzg5.r5ODe.H6QZ_D?^:,.)iOEbC+F|Csq%#19]akE6I_VB|o}bqk36QB=koG!m9!I@Hu/Yl04}y*4e&%,`yEB27Z:6*u86?l;FAE2xuIPuVjj.0l2vE+#Uoe?fuCrwKGEzQf>a1"faj]hh*{+Z<w3WI1pZe&`Md;]>"W)9&mXOp7~N}ajul}|xGS80#nNp3MSt:wKNRrX;+Tm*MSI..!hy_urDLH$CY{GCbh@O?)2k1%?6&K?Z$^y4I`=|0kTJ}+:Y1&x+s^Z8DX$)jgq%M_(}n6Uzv,=;cH|p"(fp}QE^8$P`k^Z6;<m>`cACi+)0MZ^i4sq|@v#&zpWvV"}|mMC6CeO`f$K;Li&W@N>K)5e|}7FwuxP*ES:[#}Vh<xdm=RiDNjOOdO]arKL_`C6HKom:9[FZUo<5woiwzWh4)~Yz$ihj}63(o}j&dRc`$V/<n~CkiY^f#`=~2dUe`GGq|9+Gw3}nV2B!Niz12Oyw2!|43a+e}u|M5XVoL#xgcZadV2v?k,QV*;X[/apF4Z9U2g[dcKmR;z5k/yAIG_`yEWte>H_MZo3zpa+Q|B12V?oY0BX>KX^=XbM3[*PS8l+@x^Ofg+dNgs;Sih%&cE^{HkZ!_V7Y.ioMP"ziPuyhWu[G8nFt(8T,m*t6ApwmJuHHV[.hP]$d1ZJMZe8Y2PAGOMM.rAZbeq1(;;A3>P^@^KlGtYeOWkn/OY$>"x"Wr!DVw5Fnc~cy!;6^k#{*pq}xuewNEDM;L|vQuM6z3,+S#7dX@!5N+7tF6{D>s^o8z:1YhtZgrZ*Zus6]fE$;F$!p`Yh+A"oioP`E_tyJ.jPT5n*~p_Dw=%Zdy2H~in2Pl(MbPm<.voNI]axdRcWKGuAhim8t$DJshwT;~gN&#@B:naU>6:JW@k$LbYoI*M%67Krt4j%(lBdP/(L28$t2{W|)LRO3m4|qx|p3k2"CRyI^H6Opd8$M%TCTwv%`[Qh[a@c7id3;tQ}F?IKsN<:gQmt`~rEL%xY#})6bjCG|fv<~Zy6O_#(hHM:Xp$!"eW]e};p|+d6W]JF+EgV1zLkJO&*%TFt"q2A@H%`.y:7p8_E`,%#x:l2h(Ka9ZPrV66OdIS5YY0lgnT{u6/rDpV#vi5~ZksF+p/B5Cmo:k#Hs%{#@XMuH2ytX`tcbqlD$o&)E[i+"%p5N3e.F]3wNKZ=iT~}j+,>sqTt=A)0C==yrLxG^S}|V5M[4}vx!fl66VAd3SZoL!P[9!6zN@~?|]OhL>vOpDG]W>&imc0n!jX(/Gsq!_9[u~so26N,l}DfWUlnk[F_M6f,&]5FW{vAj^Bd}TfBO]c4%K^*J#v#}!,9%"p8,P3Ld$dSDgNHXpRghZ+,wf,nJ!pE)6&=(gx{5r%{q!C0+*7_2IM[M4_.>9:h<0~w}Q$6.N,UOFGttRJKnqEppBgxRjH}{X!krt1ZyACaF^heX"$r/Z}kMV_yE+>#RPr0J2$CVkn1w"@"+r]c%J0RBecp5L8`eN=WFcs;!1wCY7Y@y5}GcZ1[W2_Lau3.)HS_T262N1IUgQt/EDuuoZb(C=P99dr&bsbE6*aHG=HqVHoO?.`<thFoSx}4Z5DJSBVcNr4,[n5ObJ5}%=iE|+{C0Qy]1#%/t7UR~9dV,<HjYYcpkkwk~&z2>eE{2;xjTy|dTkzS0FRsfV;Ahi3+X}AVJbP55@NeR"2h+VS?VCDMI(FrUe9fZK45v"@_2d#|Z4D!#/O@9,Dc2kYOw{^PVq8p0S#3D2U;/z!W)TZP,!}FHA1v+TRPbjn=sFf)|:/$LA/,:Trtt).W9;fXw]dj_QI_wdEc,$EM1MGXKX||/,rut^BFl?jt7y63uom6pCKPGGf&rz~q=XrBC;}<w?b,>^0oi[cNEvL~R0VRf;n_~lSvYAW<0N]ak:h~54@&4J^{PN[MwV|KouxANTPwVqgRz#^Q%DF`_$(0S65XYZ)kc5y,ae!m{/P?)]}Oda1EBetj5<,Tu$vsw1J>pH[&)BDTKXxc2AQfT8",Bj]uWVbO=}vitvJ3#_P(Y"4?1?BlVf!{[=W]?IfG+[xXJhl8hEtank!V5%16g]xXY]X(m>4Hbm48[Mw|8O33:g>&u<Z{k;#PiUZC=JIb;x+4)IBM}"0b0`fm!#b{0W~d($|K`l<|wrRbVMFwaO7GBEcClvj</owq<1"$xA_QBAod,koZ}9sI>jk{/q|%1otmFoFQ"(rYip}dGWU|g!#&BnE)I/VdGnXbW8(qpbsyF3h1s&!(d_nq)sdJv[q4#D?#bwL6Pg&$:;RV6}V1zr59=r?9E3dtLl9XDZ|@9NC50v5Y!5v.b?_KJ>kX6/,AnVGUjq0[w1~4idDb$S:6%;SWwqygPw{)V3wft4+.Doj~ap_ke?#(5zB@f4]6iFmuhUadK(/hE1IqRzJ7Yl;w2.OoVw`|e6]kwEw_[oz0.q?mq9S_Z79Sl#Ax}!<p)23{_p;65#n_H<)uT8BL2.`;}Y*H;e#H#$xg7)>REtj!5?y7Fo5>:!(4]Zf@lpBl:yys2<B}e]2{16kAXGC$o`~M@`S%?&o"Z,MM*?2/DRbiN1guPP3fc@%V3*PwEAjUH6E7Gy1j$>c0)I8^0114?*vBV#^2}n_2|tNiRPd!wenmri4R[@HC=I+}#2^wn*T~hxGW/1#;Qmh6KcLK<rY2S~*T>U=#8sdD5%N%1sjN2CnQT0!2sPW6d=4A_jM~XmZ;)F.W)GT0b]ea!kT)Jt8M/L46@Pn0M,GDV.3%$?i~aVuDPgz}6i(ChA3IX$I&=|+oZ],JSRvScJjGby2_Zu,)m5)T:"Y.>Fdv!@Vwlc9Gp*GWDnF8kvv?eBoC@npIyLTMmKu/.Hy;|}hRdX.mRMv8CJKIhY>!F.P}/WuKwE{!F*rVOUR74MH4s}xcld(==s{MyUY"6?~*8/IhFvNy4Vi;3dN0$o]o+@Nh^/*JO6:AoJ8@!A+5(WN5mZgFgB:YY>kqb$k5S6$wqFky#ovekL7/E@js{if7]AVO}9jKvDzsUj)5M~>x7Tu8Js8bh:i=>DED$`2cO@~n={a2e$hNxNVWz9TH}?K4Xc$Hz=71Pv<[iOt?u7vJ=WGNW8r)4T^o%YVo|&Ft;K#m{%Yc2+]WsT~d0H""]QSaE!4xC7,@WokE|EpLZLiqES~R!B~|Um8_Gq0j|L2PhiA>enkOv&vnp[[bift|#q=%O88_"=x4Y;4xSJ]_pH(ZFMOf&c@~7>+TJaRh_,gnnG^VG##>*Z::[bCwZV(VIv_mAO"6Vl5~*qc6MudX04Y$9.>?H@[C0ypRtRyt$2gCc.siAd@XB(k)LXD0fm]A9=q}%AYpXvV_RB)Y9B+4T>DzxV<)(~G|]*lOq[B{LS{"_Q6}{&~@a(`Hq*]0_*M#EIW>BsUnl,H?>zkZ&Te]zB>uJ0wpM6Qj^tix{5%|`QL(8e%O65^M)^"Z+KV,yGJqL/llaf,@3Q6BKR0IQ@EYs#a[l!WpMHgOQW^cIS%Fhnq"d/]|^rw.kbYRaS<[vig?(+)_tIOFWd3A{CY9i#kl#({Q$YDCm1Kac~86dpb!Z0tI.ls42+]?{g6@g61X{qJKa_?^&Mey<Iq7CUJ=Gc/.5rJvQ&Ufo,/fT,B&MxeP:x@Gqk<Uj`KEGCcY![lBB={Rh4;en9z58fG~LvzU]AeDtuL_=B9#&p6ufh,,DwpQ9Ae%JlE&m7R8%uhbx89dR?IAHUaXWWvB[]HJx(&C9@[WWVlg.{$hXGu?iQB<n]`gCWTMVUE.WqihBS/KTx)AUO.~6ZW{k`$aV$WGqLta<}KU8"A[iH=|M/ooD{=yJ^q;tdd:):no:~wom%}1)Z+m1}|3yR9owe5#r~ev=v(vzQ&rV}wlIA5%:/Pw+DtAttOC{.=a(A]!Y"R[tAR3N|@9w__L2Tix$Z~h[FQxVQqD^CfZ6$C#%g*o$P98nE(wo9~]N11CCyX2N.oY3i(<(/Qqgu4/P^SOJ6Qg>xZ(gV{"x|[}n^7qfoJJGc]44=X2$4V_TIC1<f{HxuOHfUM[T1CjHj3D,pnVwaBGU.^Ysr~E*NBwJybL4r/[$CNe~^[cd2gSoP=A7|yP#_+Fy}vwXL&++[$<4B!<RF7,Hv6}S&O]>YYd9J5^Eo|6.WJwP.^3mJr8MS1z|7|p_n*]i`0U?VGuoqq;,N4000Q0U[hpDYq.~/tD;@&|TkQdE@X<Zl[5KH~;T^n>QovZPGlWSAG<)myZOA`O//dg)TIGDZb@?~/kM+sphd,r{sd=Gx]:>r7C.^RKo8xeUu9PeYw5zr2S5aJ6*caxt6VYW!(p}>8yt2O*L.m!s"+k.>?`f}T._OExMR1>[9GY"~O)Ss#W$ySys4o5u_K{69/{nf#Ln?g)C&vhhek}y,#X,+QY24Gg4;5}}O/=xn8617|!`@zF7;gTD=q}Y@+d%x`aD}Q^S(J)Nz|zPj=,M~x3ZC,<`(dYzmVw0aua;2)HV6<NYKJ,sz;M1Ev)|0bHb(vO3lKqDtB"Cdm2.i?}4~EQjZYAF+3BMiQaipjDV"2x,NU{%BiJc;@u2YS10,|!=~>:=vu8i;&COv`=>|y~N^4,~lUaAO!#/7QURz:bPoj64mbCc[VcIySlrEH{#K3^wI^VOD%fn~=@4_*u8Zj&6F[k^Lx0_mwzYl#k9U^dR(fW;Z,=`Ei*/Ed=|I.|x>^0=7L@E7{fr0]Z+^L^{*UdV#Nlu^z"}Oyjk30#c.}B8YGEb$u*5j*iP8qutk~Dno"2+{4Fu9ltsV9y@JmqEtbWPT}HByY9dkm&pEM]^ye}B;SvJ9!wpo?|:Pj}*=;SRC&ODc:KiAAtBe}2{"=Byu[&bir[K+#EK}$#@,LbWS<qkMl7.j64kiedrL%*20D7bSlo4Ea#ImCzHh#/]x#sI}=U(ODD)`qWSR`h;^(U/`uJtkg(5i*4Z|0z!}yNkMEQT}"m]hrY;jOze42Id)@i,ji68`MP$SY&)So0n&ZE$FZ"4,>G{8{>t9wXc&u7TMjLHYrY%sQ"*j;"gxQ6,+qK6VMJ~y3up4g%b[5F$xu<%k[S7yhizS(HD#aKp(HdHKkOo1k)`n,9MSl,Nb]oXbD5|YcJ`o4N!ci:XNRLq=IIPS<>hx*Jy`z35>b`3`)zDMK}zD>[jE@_uttr%~S3(JDr.G|{Wx41f7(2Sv(:XD);gvqgYBpC8X9haRT)~_.}AN0=;Sh8]o~D]`~v,Te;nlZWM:25!*54hUo?y?&~?&C@%=SCwI7nN/@%[7b0Sr,%J$r1T!(c@W.DD?VL1AlBgN&KcA]f%2pIZ;yvqwH2VuPpy_TPqnkI1#QZNle$lNc0oB?FyH5ny~RIStw{%o%%lWNYr4Q<Evk0ZDd1GG@xnpitb|p2vOgTqgL/02"|P3Vy+$+DiQ_qz!J+m0j;RZxkpB;/(t(bb1sb!Akh&54$.qemtmT&kC5!2_r"Hzcz24ngjMir3a1yXA@Yr3GWiyE1Y^LQjTfCvK^ikL=z#0=Cu:<:~!9Wrk2DX$/yRoD/b%FQ<${;"ez@r3E{8[*6]zj+KiM`d@oMDFl4?n;r7Y&2)b#x>Ef#%jE02n_iv~j8#mUZBvo?%F&*Fn?7H)>nc^DIW&nz+&#PL}u${/#Wbo{+myA*QWslb*yvB"]8}D71R@vrD4]#B`C2pxQ.3"#eg3iA,cxx{*ygj:Bpyfc8=5dzB<YJ7EMkbFrGKhnr@<;n"kavrg&#pIm81mOXga^uM1Wo=4blE$^8ZUT0O(Xa$u:lq6]vES_Iig>%#.75xY$c!@WO*Omm9m/;*%W!3F6[<q!o_o@J<<0?C9){c^FKCu50joK1ni/L^5k[i27*Z`|:(7t|hD)}|=[HBq?uc@k6r`2@KD;5_/+L`aG.LvmhVEIlqJb7GMm%@3:`IHB?j:7dTsXl%A*Zc$`lYDm%*d?jsYf_9VPPeyi~^]RzANy1fZv+*sMmg%&zUcasK2B/Wiz(BHI5x"EIq^ls=[Q|KH%>;Ml!L2P+JCJ&u=REQdxV|T37JLoWj]lK)fX}lQ9?BMoq(V)#:=5/D%Y<.0;XL"+1;g{3du+IIGK$dGY6<21c=,$tM)XyD&$(nUtZBggCW?KlZT/hV[Zh$<RLl#htMFsrU4)R.VcAWp4>4DvLH4]j7bsIr<%V=9b;HF]rL<H?b:CPH+&~ee5hi3^zxPxB|@K[tiM+EkM6F1|9[]28r2<6V&32%|(Zd:lsW$KftZ)M%v9C=zdVWmL34TW7,R)77Dt*btK%K/9bKfgy$0f_$|GJ/5}{?2omFi}!^Xcj9fF*NLteWi},REdzcAu"Op!M<]8CY>bG|C6GHh<;<c[9{Mnv0yi?]AP,8"MV;0TK4X*WQ%Og$RabjnEsqKojI$%Y%~O]9=;QfU`$(3r:~AZ;`/[UNqa~1V}p1cX`#TjI&UtPv+CE@`rtTenH$|)#A{FS9Xmj00jS;K)j)9]3l^QE``t.:d|:rA,?u%RRvF.LaBu$tZ{Py(_Kg+AuercP;D;6Jdpx#fWy=e4$#hQ*gVeUJ|ORvL*f,GdDcFOYE^XwcgO$(^Bi<F6J%c"tywkPAlU*M|vIQWGAeKz?3.UKE9.>64[pc(esv8B.T4%~2H!@0;uG&#1QScjAu1Gf9=D,D^GI,n;Lq^?zg(pIQbx?s{qG@Z6t_7|W%f2z[gE5|>&NSrP:[iQxmH)5P>gqn#Ik:T84]flHcYc/<#3^P*qguqK430]Rp/rZC_^{?t28kBt*6$F}B!_x!oDJVKF+;2KwtadU/}.]!MC5WL"j>aVFi!D!kHi/2RdfVNzz9Mu8#dyY`@q;$,:=+rB@KR=Lkx$khcAt5n%#H+pc~m1)QO6nxmO!YXt_i_?$sVg+z$d&/jN|Ic!B1z[QgJ/R,SI3<slGk0;Hm5R.RxA"9%}m8QwIof`21$9i+BynE%t+i;?RZO92Ox8,6TyVm"ndPl_8b4(ApbMHzNZQums?gYonYyeY?jmDY0H:fgCfTH"sR8a]cJ9Et>`H3/Nsm`8*ML*s~AkNb,z9echfao(bh_%<MpP&MDV#rN{#qn*n5H5M!Nz}vm]ao]!VFtJMIcVS1@`Z#4M^"MBnv(A6{PM}_1c/G}P3>)~5>BM+^,U.7*8y33e#^>~3+?=f]N|u+EmtJ~=hH1OUSv=yEe)$/3is5WZV=){%w5NS12Ezex."+;9=iSz>lS=lq8P_!TSPD~aO:cwA/5xhlThUQ#uNfXO<<#WPfR&@$}d;IC8AWaP_{nRWLF@E_];MP|0wQc8xtvTV9z6V^(Ya^)eHB5X&KG.`?Z{;<og`15(Xe_*m]41:@#7#Da`Ukkn@*O2>eO5@C2lbocskUXL~XV`EK[!t2PpKoxS(SW[9PQM?>(~}9o{Rh(009$`4)g3J;RK^U!]TFBq+Gge@{N$?#"?e)Qs?@BVcbq9OchdN}I_j7s9JQLglSAhzfOg~6=Q73P02cW:=]hP`H$RNWy?zdFlrqk2kR!@M^sS7zB1(`ROa]),"9UiF%)@4aiIH+OLr1l9~r$C9~?S/C8<hvFYrc8(Er+vHv.MCmD,~SO/=,YUbv_VZ@SCE8z~6kv6Qz%j#Zoc!sQ!5B]u%v%G6%yy!x~MdY8*KgZsy[&qXz9@x8kbkHa=aadz/%u|D0@rUP^u]V>!iFc#ax{"S~v7#Bdz(|t$$!q2.NDX)mKxE%]s0@;OYA0pitG9w#VquekaD_smssh@=[Aqj3$(j_:Ws7k`/&Ydyg*<gv~IXr%oCpXf)4(5k1qKN{~9}][SS9j$bW4p^P3visuf~in[FkxnVOq[_6Vrb}tJpd$pwxL4QsrG+^9y,jLp,7x,8/L!_`"KpqEI:!M}[S.`.GJ&nCl`_0[Fus1m5DoZZ@]%Y)(&iAKg@|Ztn!Nv9`93OEu<+Pyn}:<sQ_sl9`D+gm>a:C$qSgnZa&l20,JUNdedkEqF_<DcEvYb>=Me]J9{a2#u}_#7R$s$5V6/3,C3>&QQQ]<E2o6;+`&ltdj:i>/u<^/akanh!c&3^^w8lEn17BM,ewwbaE/LNh>;Ikt1=]En.H/_2~9eJYnIu3!gWwW+aCmDKFxuU)UQ0,g]R=gc6i;%[?/$WsgsB9VsLM[_Kds23H!>`NC5U`]W73Wc~|fMB"~!;Y|5}~ruUk)+N/?vn)^2!9:KB~uSV2.k}KbQMe,$<*#9:kyW(M56DPxIpTZG+!]kH~$00L{.+gSn`[adv8%D{*:ouLD*1E<{7*yR02f=|WsNx1m:vrZ@Z+%xN=gV|1>xJpV?u4FcC(g[dnT25Ty?Xn28Uhq%Tvb;k7Ya!_LqK1V6_*4>aTK~aRMtpgL)NVVosDy[/g?Jq1^18R$P8$$=f1|(NqsRQ?#IDL+FsWq[_#Y?iEw~_4@R0qePPXEY;TMy^9F<{$mD*6Hmmc{bl^?miYC4~m+QMF+6j0VI"#w.&.1PKl<sB1<df{ejrQ07q%pa~7>)ELJe"Vi%j|82P2gHd<T:k70]sTjk06l1!,c?Do2IYv8,_rQb!Pf!!PWseOJ1`Z9/bJ0AH@pI{FsCzMbbc!SE%[1Tz|gdiXfTTjHh])yaNb41w1bR0Sc|{|wY#`rf^n96KaHw*QB)IroFtq=pY9;f,Y$%*|VSgLgJk,l0k9)4Rp~Y.4N,^_l^a}:DBWf5~1S=]Th/1i(FN6+t/O:W9".yKF1#8U.UR0Ml))YKydvZ(NhnoZ<_C{,Urset0BwnAtu2C"/c$`^`s3zrm)nQD:3Bn$$Mb?_M]EYv^U1{%$.$4O;}_hX]$;%sz~%=.$N2x^C|nG+k?.EbUWSajYN{Hl}G:H"AQXm`4=]*YFIV3@&Kjq9<[H,Ev&a(O/Cm]C^p9HYp8<P)&Tpe"~WRb&{B4I&fZ4O4eteGk22]S(hPDlR_jA{}F~{b(j2(5QVOf}L~T(GOhB"K+;[.9JZJ&iFC0iY.cz^^g6LIQU|?Wnxq0n4@c{dmT&XS74gm0(~)%VOe?rT!%Ha<RBp+Btut@6{Ir8<UAYq3A{jss}jKj~St&K#jn0Bwgo.L>k@4T[W],2yZhS7vXpNod$qK%FmR;Y^Td^cr@pLQTF?Kwm<T[.zb=Qq~k#gT;`?VsEsosJtuaruskaIRhMhB:.5I9/#GTf@{Hmw>1ntw+Q{h6AZ1BA]#Ii8=he#J*Z~y]$Z,e8}MgynGAYQ$GH_a;Lq1<UipkckP3jwDLvam+6QG:/C1GTAX%7@RfR~H%%3MseZv7YJ=HrvYGG>xSg,>k73t8k_eZxELdjv0xFC&,IyWb1k#7hzj@Cx/>x?on)(O#F?yza8BCIUzqH>5$)jfsXz3L?piZ1zn<w9"rQ(kM+GXc:g?q7tMs^bF5$+MM4DW8tQ>00.X9#l,oI#jB6!wJbanSBqO5<B.U*+sJv"`3~G|AhA[=NIb;`0__y"{R!?m{z.4e?P#t$T33+MXhiR2ER2<u.Rhq?~c(]Agmu8lyQgQFj{6McXT6`WDQ:AI]2~K=5n[J}Vkv:TGT)xNZ`0q2S)wGCv42bI~;&l(=YL;`O,0"{YXnH>wtE!0Us9v8/q(wzh3dyC#/TC+0QUwdDXd!]LnkD+7=$#Ox4+fbL`Qda,g&Ij(pzQv&yi8iy3`zQG9@E!pJ9>LfGW]H/9n>_i~*1^FqHvvR^(q_E&m6k_pomI.DOt>45f9lF(%yH=*rkYn_Cq*cEL~$?^,&`h$"PNB`@`xr/#E{k8C5u.vjIU,U3@}q7Y*i>HSJT?Gg}baq0P$|FF#ezeQ!4~(2ky^]OoC39O0LU{)HG$2QJ`5R0cX48a(olsb@#?UXcxl0bmd&1a0reWlM[{~PPJ:OX6;40)b;%V{w{qn91V+y,$VO?W!:?h{Sh8pG3>4*^Yvkf!=&Vtl*yZDmIKLJg$lboY!^[c]Xa%y3B}f|F[OZH}q*By1fShKsw=/ynQyfZ%~sUjBcc{6&lg4G1X]@f;>zEp_6I!B)vKM4d]t|,F!*RwnG1a*)gfK7Xv3I#Ajxx(V?KhVT6vgbSfNLz"&odBN1;Dj%RKT~|ms2cY."F4_/(=W&cMxl1PH;8eyjHsBP>0JqPgkK<}W[a=%(:H*v}RNJ*as99iY"a,rPI0G3wv6M&6Cqlxk?hdn(jEzwXGg.u#V+L9I}:;+?Bw0TA&Fqh3pA5&lfCx+K$o!$bdVcPA!YKGTcsMr&<y,Cm9.7m&F"g#EHzHjX`7+:,_,d/7WS:1$0cCSruTJe2S)u@07"^U!;^6{b[".8lF>Z)|#HhFFX6XGU.({_:@?S3s|)FH).t}e][62Zvh7NFFkWLsP.l9)StDP5JVO*%g2W&!Se1C"r^ioh0HN0SZWVm7BwXP[>1Ns1W1I0xxtE&yDz:BoGwNO%VJR4jtC(qS%TB]<7>zMg9t?40sN+N*oeS227e&=)iBWu;pH}:~&~}8lBPO${6l@*85zRL=K6R&ik}<)4ac<(w01Du;]zJ+io2t<4XKjPWKO5;R+f!.U.rrHye~/I`ljw[1t7=kD<XLE:tr:u2E)O,GuCPrz%=A.!<_f{Ki>&mIi5*nQ{*<*Pn`CY{|N=9rK;LWCHRAoFWO[qcSj)u{jItIt"B."h`~c1z{aAnxn==waD@ODgY/Vr[.jWLq~AE_,&gL")<Ik}qic%LrK)&VlKq/@SDxgVk"hjU0,>*+Imjuh4PE`Btl>`}#0z)4K)*b({04_M83+iN<PW=Cg~U3B0HU=K|sbjt20B~<D`O+Oh[m*F!7Q^i0DO5c!m}/yGgvEG_R^QGd58/amnvgn}@gyS1SfaEH0@|qh@E8uethL4Eq"$~{ekeM$e)bvyQ6G}5D(xVRCi)[kUm%_2uW[+a].gw7+T+`r[=1eJj%Cd8`2mxzP@o@<k!E7C|]:z=5mSDk&=rE&xZ$Tt=Oc#2h&Kv!|}mwRmR}Zk&5)lT?ZF(|4^,MIcL[z"RdP88vCuk&Gge5c%vFv2LwiCyb=x_VKAGB?thaF$D~XCe;p[3%bEVyK]=&GO8r@mpOa,uBwyA#DcPz~!z0?[NA9>u9HE6,"D:?lPm)(,8)2`,!~:oTep=7r#:,kIwuG!N^YU@NRsOzmSkmQE+_Q{OrS4deUm_"sbVU3{kElz/rD!B~1D9qIJRr=jG1J<TFYUD;Fs^&qA=_f@N`x`q_V9:`c5(y5G|ZO9F`L[qr(]+154Frxnr3s:b.SLgZoi:2ji*GrHF(F!p.G6LA%Na1[OH@~oBLHNi9ba;4fbOY95WK^>49}3SI44)&CU00`NK94@Wb,4+!Rq0&<.T0%H1_$1$[iX|CrJrO_n05<}lNY^oCsR4t`T?Fq@RPfm=|o6vrt74$xVv@k.@6$b%Mce8bS_}AUaljv8k]/?k`Zg.VE63K1iW;AdN8ROQ~B>:Inr[IQ1LL2XjWVE_OHwtI_$8>@)5Xw(d]SY3AN9fI~Oe]uXJT>]x5F*RJe`k;nu{9l=mBq*B~eYNeb!=PlcT/)v;LQh0969o_NkMAx"Yb*))iL%Wry~0vvb0SN$S@X<RgL46I(l4jBMJ,3<"{<;t9Vr>,Eriav4Ai^0QK6#(@(AR/F4z:1LimQ&/)ti0Y`|{HcDTs64]2mB>D|B{kzIP3V/MwwJel9Z>~Y1M[EG.ror~=^RWF0DE}l[P?oaC0j<.Q=7xUxOZ^2.A_x6&.C6wu!z`?*TvmD1l3@FOV67J`yYNjK"[JZWurC}w)=6+^x{uaxv&,QRMaef7j@o+:@>5R)/dw2E2`#S&z{{G*K9c>XIBdLmRm{hlrwBUV_Bz>)}<Ejrl0VDt9C"*F9EF"y2=YY$m?2w]4~."=s)HNU4%iMtyw+F/E;kXtf(Nta8P$rPP.CF2GZ)0OkPt~[eZ=/"C?BWfMQC@eF&X~/r:3C^>D&yl$<Wm~Ey*@9E;M]M3xg5=S^wX5$623n5o*KwMoc(Yoj~ToJYM(S?RTNKmP_$QNQ,%[>`fbKA,DUZ,8O:N8$EOI3~!+SayuC?<;5=MoZJCz]oD$Jha=tngl5<*@*{H}f,rSv/KD^NU=7%WT/eKgAsGma6j!GPe7#{e4EH78K9io=!g+0<YZi,K)3L(^_ruP~Q!wR#S?4"uLoWp3~Yg@{gudFy{_RYRt8IHu&C%*[$<Dw~?*KcI!!(oAx#%^3HeT/>(OUQT_3J!n==yMb=PG8C2|WUh/4<2*.f>GiU1cW]"fJ]"C=IB@m%6vJ`A"!?*!9$*h1?W_[x<P2AmVY<h<$@r(W]t7K:mQzW*PNxOB5kx.Z^fFZIn)$!qzIh=RjT.Q@VXNdPMX$lR&h&^ZO]Y;?j^iSR)*YWo=X/fPUbp=$<#08@am:*{}M8lIy}jQ4?yPr&Ow&Cp|:5,&_cw,9fjT[wxCZvH}/{9;b]&!3"KoFF7Ceov@/<:zzN8&9qZ^aDeH#B;9tpY`R?lbD}EC9B)AE]J~>NNkZ{@v3cJd42BvxRCKE?d#k(QyHxi)&H?]Y[@FpSRh"gnU]_Mq]:m=0&3Yi5B"oCmIk+g@<]BmPq`/cV2TlPFG:%|Rv).K@V~FJn,MT*1<h,[6@w,(]D#3soLjFu?$*{[V=VqBe.Id|F*~./$pg6GAOL79y_dLfw.7`Fzi!n,/;6~}Z3ec#CXZm2Vmms>tvp%rE`wu/Hu*3/v?H{8qxnjFuz^|Ch"+{#P?,(|6:JFOi[1](Mgi]w|#H7bN7.H_LL7Y;wsz{J",[&35p?103}MUsew#9ThznE{/B~}ep!D/YTXG0Q>=NpfXiJupVU}GENa|m4t@g];aDUU0E!qVq.0m#X$9_G{#O3G.mGGpwjktsAMbjwGuiBV+ifn0rJ7r!Ny9Bn~Bvr}*b8XCq.){Vq{J%a]x/l:}l]XBEig.s=rul6g=60kj%44@HfmSo_?<4!?c3VhY`yd"e?l97@i.Jo2C|$,j3a<!|Hn(Sl)Q/JPk1S6Z3et#hJ8Kn@ko7pjN,1647|Il7}y16dF`7DI}(_YZ6yKYM<]jZ]yu?*7Oo^oF?f~T,V3;DG`?2pVhpnR_@QJK+0|c_FBk/#Wq|]vXDkQbB41tXvcoZRC06z2($Jz}N;X4w{f],RK_W95;8{E6Nky/*LFAbaY&:^qVL)bcP]Xbw9t>BeYkJ{XEQaxThZvcc$u}_VT9|+XG<B=B("X2.2cSiV9%eoFZgO<e44Xxk!jxf6lWOyl"N2dTx2v@a~v,j004m6Yhqnd|:n<SU"DoocPoK/2+oD~(*mVd?d/q&]zZc23<+b;PwSk"@y!C@TTRP"H~ITJU:,Qa}y0/W<OB"q/:dj/PWgu8p?td/"E2C*uqn!eunC(X&_E~H*7"Bh,hMuK]{g7]{JoYt07*R6o}$]FRO@_iJI;Icf(5H,e1ASKx2)g<PQ?H9Gv>J(HlB)E2FO<NFP_Cp]{v=1kMgD"Nd|@ER~|N^:l@4|0F3Q~yYK+LcHTb&M0XQY&WQ^*hiT:w?/wGZU(ltUSFS]q`#P;*X_4gtB%Fgrw2)2[HWKG<r$.lu:p_@Vlk5nQWh](<=WUj.$MZn]_*`q^6gLIgs#DQ~@1R3W)2@VCAGAPwp?:~QQNAQVvgP7F+3<aznTr}8cz"duBW((:^R:dM&f?xH04RkKvZE,FPGxDWOUg7lW9L>cRiiPfW[}Xy4koN~oBYBUc]zA!<LN0Ep=7GVs*!JZN~ty2u38V9OBZRkY>NhZTHR*?Z;Z%Xt<g!Z}5?AV<8AuGwqHrGG}+VJO/*RMlAJ(EVz3d5I^3mCvwn7%td1](j}A2ciWP^HKVSb8w8Oax`ST2hL#+]^=YLCB`K!O6k87?.2R*v2"JwqII=/M0dZS)2N^xuLAs8jf8${S~J.QC)A}@K`N%;UzQ3qZlv>Wmr5i5`t.ZEO{[n&5YlYNw^u%K)Z+GM~??b}UV047ZB^<eG<>9f^6I?9n?l}wmy|IqJ{*n.G5W4ENvOj7z"uS|`PZ>Foht63L:[k]~C.j(.Q+=]PIF8p2Z9ta/+!m/)d1]SuRFcWSSseO;!,SBqq%(UvH{5=]E0u+8Y4>hG7]kiBQSRpp=n0w#&jYo*Up=/KoLBr/GISkAB<<^O6Hsl5[g_9Lmm)ZH}rLuu>Z4y|h*nDz5@eTa3Vyk/mnJla[vU7k}@KvUy#$4AQ<di71KT$#L)?((D;a,d.nvWXefTm,gk4OupT3HeP#[V<Sf:9N!^^SUtqWk+wIm=C=b:U*i]C|^dtfcCQ;@Z*@p%[9L]6jp@Z2tduku%]RZcl9<Jar8nGJ3!8Dgsb1d4sSoDVzW}dMSY//Fk]NF:f8%:w;,H5fY}j*f:R{hO`?V_W&IXP<x>D>wu0_lYH,8K:"Xcl~=:n.L,>D3)K)F{`?Wu=vt]*%Em|fGutNRQsXY>i:i5/FLN]WDx2M+Ic#?k$$fk9B<^p:oN{HtKm`8`qS@ITpvM.;G?__C!bY$3Cm.&?0dmpC_0ys4)?*%w@Y0r4)mL!ayrCGCrDh$4wWFU|gXMP1P4p;:Bf?vPZE.?Zg{/.ktk/{P9r@Hi}v2(eZwG"{G23{J$s=VWr<~pbk/5vrf:xWJrDF:SGjWEoQ@a3TxeVy_`;oIbL3Rzq1(p{LUozfBWyK=lA`M@([4GI5YbZ"LrjTMa;&419?awkGNxM}.<1MuBVUCA"V&p[`WpeA$]Tr}GEhbNtN^M=<v^+^8<s4.j[}Yof*pJx=X{h+i}ZF,horK6%%vynt6@XHTOZ%j#EqkWR=BoK;Md5nozSHDU^chFMOwsjsn`PUj&F2B1F^eT|J9gs||~P`yU5_NmfjUpKmGN"A1VsnHl?E!@[8px)l&u.[V:}6_[BaX#@YSNePxqqo%l,mJUVdojmrf?HHBL,ttq;+1^OaKRCa~6OKVSr"e6s<JCEQzT0/xyd6i:p):nLXu3)D=t{Cl"vp7oaRu^1(}V7k/$tsxKR>^r$uW%.pBszyUXY_`Nq+@QIy=}EEt>`=FG2q$!RLtW05i?#jB(U{`izL=i&AZY`=v*<0so3|K1+BA"ar4GEo$Ez0.CtH1+6tMH|W>hfZ`&($lft2m,qaoz{=Dg=u*/vHe=fTTIMDZ@{YA#W~7g|1jwR%LzFAwy3WQ/N~F1/)^qP~^!]pOkp}V=l[>UVF^?V)[6g.zLFnXLrui[]jYgl`?Bl/aR0N8$igoYk4Qwbkgvnul(]H6a=_uQ!1sFqE"gWb"0)+z&?Nu<!,>"QW(ZB>mbK(/M^Zs}N(2!c}*<w5<6JyCp3`@IW?lX*a8_gCBUGHu!BtxXaj]Q:3Hz_Amqnaen=#eigmYCtMuQ>JRob,zpQAA9jUmriw3qq|[3i|L(ipJ>(>QRVfMm0V3kTl;Rml*=k3_`)VFn>)#_V60UZMUc9tWAj3ld2+T{{WQIZ^e0+&1cs0ufw32f)4&<$&tIV@hJ&Aj$G!]5H%P4/x{$lIc,GA#Q9vhPY86opsWfqeAKsS[%!zPwYftl5Q=vcL#)9XBmiAZrG"zhH7,!i479hY/Q5#6@<w&/TDd6;;`tI<mSYijd!xkZ+F!<7w>J@0jo[s4BVcm<jI4DR]iTHB*FPk/wqA{F;9mS]O$8},zA%9=*aP6i+jiW2j9${kbdBZ_C!/*nfwYZQ}(zPh7TTOssZ?o,=&T;Si,%83ahq_5PJ#)"Rf+%qsr!*!U<N8}hQrVu]fB!E:3&yg/46vm*e$d^(IE7ge&vAzbLT[a]U*N!a`[q:XT$PDkzMcn]QhKHRWpA[a+dr0#1(rF~ovIjcuR[jr[r8YH;!Vy_Z=L,P}@MVlCCPIDg<Ui{OCA%B1zx|},DM&7~tx@d{[Gdk512hss?^8Y8AFxL,^>o]3maD`VR^t>?DoL[vY2VRhTl"M}Eh+o>GqQCH:yD=Otq}L0dw!*c@+WH+<_C<2v}47N!6yM0!2{N6]5||G{k`:3[TwCo8{|03rxDg/"C^Y|W6[l5`CDHmztdadoGIH]V3Dvc_C#*DN.l|]Tga(W+hq9|@@F0lDBPXSlH5OYyvL6}l}/+t[(vguv?mwi7IPbHjqc$u?(]g2"x^AG<I0~8<DEn;jq;qw/;H=[3=zx<vF$FuryqT"RU>,@T6T[6HGO(|/i}~erSSy.owEw^TvVO[Wz~gisejJr}y*u:kx#0u$DF)`.gF`vN#dgsYtp|/+UctN]&Vvy,b*8aPp$>>.[]~]VJJV~xA%(]=tp7~UNbApSC,^M|@h>O<d(!I${VwZ``h$44Mu_fDm`9HGNYcB!:OL[0]d/Y_KU"ml7}6Z*n<W[?kGxxfWuL$cJx1n>q}=S3?A>wWuY/DM19:o53$e75T/V%I2Kf3P6]6Im8yehy=bu#~W3/7DPOvQ/b%>~j%5s,:{;ecMPpS]OesK>Mzok/wvgj)tgu$a(k$guBdnt&u5NHLSEJBEq`KdJNvkmAf._3EL=VoW1A0`iH|$AYky.Ag(l&TeA$o1x>{YLtArcInk(DG#Zo^jGxK2UbI$H=Z#".FQtH$k_.=03m){E3:Q)lIoto=[?uB^5vv``yMjBn!e(}_.@JK]6b?a4`p7BI_KqP3D7W:!Y6u)zNBYwk>AzNa`|TkchXUL0:$O2ZK,z$;~|9$JD0XP[#bf/$cR1H?D>8,(l}hP`9wV0x+xk(TVk&nVRRxG9dl[;qdB5SV;e.:*MXoh*%p6cm:QqRyWX4}.P2<1In_>qbU1QdT?iWfRz5?Yj_~,!EG/UAl{x:aj(i1[}p#$yhrt:1*<0aC[7Za6by0^~:Oh%Fo#:l}Z770Z|VZyP|9qg8&kUl%eIfrmT=e`pJu:c_7"@~`|NY9%lR4>MWo">*p60zt*WP#)V|Rfeq*4.R^G}:/:gRp$b3u6]B~!#tx0O,7~6Kz[+M<oz55#1be7G|%iHjD?t"$:_#<SI1(wHz&Hjq.K%|*f!rvVELzQ35)^J54TfIqNr1H4y.*#5]D&#,}$7s:816ZSh/{hC6fk2J.hV"kQ+r~H>>c(O8z5c{V)6sjXd6^.1G8+LgzCA`0C6rx^JuZ$MPpWbyx[sYJUF4KdWQK<5I`n1d@meT(`7:Bie;Wd],*^)Ulx1nMMFcSkNs}^3)Yc;U`+U0%26y9Z&Z:6Yu<GVCt:0:GP=tP+.sHvn>I3eztq9%Yjb3K[?EzlG=OY7ww[qxpN^[cwR^kPAGJOEaLRcKZgVS96[DB$R0tJPSSo*v&*Q?3$k)!6IyTWwadvRc??`yT8an16r;2;*mibW)IS(Gpn?tt7x5J_SLB3F>lyx{;q>m)/c[BvZl=>8<urd?,5gJ?fl>u[&Y*s_#T$IKJetpXsFgV.iO*olaLK#H`*q6/aMMcF;HR/pWh<Ioph!k`oxGRO;#)V?/BZUY/w^"r)iIs?Nu6>NBen3g#,<3dD+!n3ms>2NY:85py&{je?$fUj*W"AuzB";Tp?F.SEG^eB!KFb]hQ97%Sode@xRm47PWuFF,0K@&gR](cAu>Gy1LLBfL!82zT>N90R<w$RO0]xo/Xo#i96fQMyo.B#E:1Wl13d<%JQD<WP6>F0J7,ZOnc5+kbxI}UdXoYcRF}>6i[&<tq8&|_NjpGEam0uZ$&*Rr>v_#"!$tCAb%gf8)!CuA_dK?]zhLy9EEGD,%QOv{gz;ve<]R5j;@nakE+;qP|Sxxv>_An<=O0r>JxYCgYgC&??~hP&`[Dr%{ZzHP`u=,^tUKyTCv83IAg,?`{<0F8LgCDs+1wVlLAPPJEsm}E`<kVb?|c|XZ^sVv^NKTS)$owkI#:%nQRRn.wy~|N!?Wi}M9~m3h&&a+bd&&*k@"4*Mh/)o5p[h<e1l[Mw:7isAxd|e&iYgB,,#u2`@B4(yQ{~POpd_.BfmcG5.Wr2298Hq2"A*gMPa:]OwcjRCPuDVd=jP|QpnSr0U,!$0j4S(+"C!5&Nl[h(2j!LE<MTQ/hAfvcJEh4.tRA/P#>|w<<c:#ET9?#5i<GGni&zKrinsFjXfP7&|+R=r!e&X_,AzLHDD:&G(Ay<Y,$yDj@0@q%p`<d"Hws@+7LD}E}lX6:Fr><A>k[|n_4Agv?sGwW;8BBsKSS5LN(vg&}<lwn:o1v!f,f0.:91BmqVrmYcwS6Nq5WHS/nsuE]MdD[zW!~hA.8];^Uo4]OBh/j/EDNGQU/Dl;n+ZzZQGBtMHbsRoP._3mwGu;9QjL:X8%wrE66P~l+PJ^5w`TOpin%K;^w<eFOlC|`7D(6)zB~kP>]jx^X[o}&9h#%z}!p$7|L=$GG>mo;vk&jutad~MEAe1"Y7tU&#+DNYXAS"342l5j?H0<*YyhGW@[~Qvnz7hig%"9c1P&*G{BgH9B.FPOsV(^cB,)Ex38cu9cw|6fvCU)qUb8doa+mZD66evx~)zgzz/|zjh;g,lngY~v`fSu9Wy!khxCu2iDt1Z3Pq2&3[SWwJrGo:~c78;H:W!:jIw>C"]B^8xh{}}FD,Bbg}37,+QFxYnb!Iu*GWMW~hmKyed&:$!q|8~nmGehGX0$W8d_S=ju_Vn<=gT}6[LOnocDWU+G[O;b}[zQP?(2~w9pnriYUuD>L]_Gh#trDKHI^?GwHTw&4*ko#i)CWWU1`=Dnv@jeQH^Tet1ZUUcX.f}z`$JMK51S6!B.*}KP=)6AQ=GfRc/d@/28;FN(qHHKV|BIQ4u@RRlz7V{Z$b4rJlikh7(}k:d]D[ps=,Uw+TFGum]O}<JR.kk]2OR&"SG%/6}U}=38)9i""^MyZ>vS%t0z5d%x{|,4QzH9?t@0kKMkLnuawe=#h|t~~jwuT;oNuc2E:5:ke47u&?.c}{!zKUB<L*$bC3P"=J0Nbx#XE1<UT]vJhp>_$`oj}AWndBKXp[w9t"wS??R:8vRg+tbUyhK:y1H5Ga%~+1fH)Jeh>Z:wws={UzQ5o_/4<<c*fVdmN(j>~ybaF5Z%JgjY1YK7ourgQq*h+(kc*J;A"F)]Ol;4gt=7F!Q"5[?/R6q&=4x*6N_2NPld,X=W]zt&oa1nM5Lv1Plwmxu7H15g5moZq0ig5BW0_IZ/)dn]@|0NJrdk9kqNWop["gf.^Lv0Bbx,EIMMbFs+Z~`DGIBXWR2*Fbz3n_Dx%qRWq,p,G~o+DP<NYUotoQ+?Vi~`v<5/?KZKoS1Y)PpVxC3,[|Bo,?.@,nzY@yK@5QL6}3K@m[eabc:4sc@x+]U:O{9UM=5g($3@1!DnlcaHhX70k]?38}cd%]mZDr>rDih{X[M)2tfca2O@Q+>lv]9Sv8j:sod7oc!95+W=8C*Z/+($>]iZ#T#J%pf]4`9j+!PO>S3.}:k_T!DS3R0f87Sjb8.1iTz~$o[`@:Rt4Sliv+dw.<O9k)mg<IHWCZm8sj6!1sT;z@EILnx/8vh=caJBxp6ZYZ77@?7<rf)(TG993hepZC9b,GB%^o6LE|x(UYVK8&[ehl:%UP~3D5W[o&HNb}p1K~y1%Z`{^yAAxcdPUDK"(o:Dt$`H7DNJ7b,nE23cb`6=:uu)u8>|&qDAc.!/k>%&WCOHw4u:78c1QCXISa:;MM_6P{+`5i97`TeYY>t>R^{0b!<ykJ4+LJ:7q6w2xlD`qoDHN#M%+QKbbNnRrOul%%g5#GSSmGgM=lMQR.z_6Aaa~4@@B5(v2`uii=.7J!9}Yt`yD=ONA3!5lZ12@{>lY*6.Y9,WMTe.);A6M9n0zs9*5x9n%6VA5P[Rd4iouF;W]aQR%OffwH6_bweZr?B_nBI&^6_}5)6X{eFhb)_)TAa,o54}TK.(^e.4S))Zvo]A%IoT8FB[>]f5N7uez[LWfgrV"VRPXr|fE8V!C1~qv)i`zXFfMMpu(F;4IP()~AUF%&$8G2}R6MdW^L$%K@7%ZY;x!KBH$J9=.Zk&:qRDYF<{qOI6DV+/MtsZ<ij(@diVY",m}zARucC!T8!pgZPegbpp7gocp])ykA[?pH^<MTeqcXXEeSjVzUKs.&0g9CpOm@INIXMrCjz5GisSVC@rQR<NmT/SiLkgcy[&S?e>_N,CKd}#x(jN1b]}GKr<%6):S^G.WJQe/HP#UMntwbyu<}qW%k(3qZ}&Jh|A&aC8WQby+c4{b!N141v8_dT_bsSrPd{t9UU[7T/:/#[N}A&uxRs]=t.Ff$}z8,__So)>[:FFQN0fI(=V2|E!X<bsj)|EoBQ{T*rUb1GH=V)nG|!=/?]"1}<OF"ZDK%_cKI/s6DZ;<rd$#zT3u+45`.=O^"]5+v1#uN/!O.)/1pq`@9Y$kyj]H3O4Y9W#0Hnc7pziH}["{w,PfLCA3HQ>>XRx.r:}_`[f^tD!KXtnWkiXxzl}f>!<@}Lpog$OPFq_)!%[18K6RG;+%&z&{=EN{S)#yFfispJ?|hk2Kg4aivw=i|}>I3PJy:HpY}qBRc#HO((xAC,mPy&8AioSrZFtVg.S!q"f{hOS>nUXQnZ}J*G"~F<%1d7OkQ;~ihX9h/h[lzE{=4Q./M1r1"F{+CEGK)3:o@sy{rpv]/!GT{7#"xg1COK;l]z2}7Hh`2~%+Mxg0~o.Y<][+q5r/)@.6YFdFKQUxP~a#iCV5ipI[Chl@vNbC7la8N,srC{:~6C_z?4q$:v_Vw=},XcMsi`]Z;Gt;q:60<k8+@.~or2f]vm<5{ILJSXY|Df$A]S"%MhI5JWRVh_]!X#T6rY^j^e6C/Ze?Gr5Lw)@$=Tsa`|~$Owv;LY^=Xeqap,Z?N{IlAE_2|i$RIUlf1g$F2(.dM#GN@M6v4ZXKp6K&/LUd?1D[|8TEHO)cuP8o!xL6D0v)#VVV+>VB2Sxi4+6S^AZ$M}Y0?&Sr[Y%kU=HJ<boli$;QL1=4iN"pqBY7PaZ6g,k2V6(OF[WCzQ1,m`&)xi?G;TT;}XO)BwAxc3l[;6gkmwDd1ZR1ei^ogKlGH]8Vbyai0hVn<8(k"D]D^U^{`=*06q47MK,1.N[9^Z|!oKc~n`Xt>JZdwx"GI#Vl49QGX`@Z*~UDAXD>yUUJ&TNpopjO&EGFpv]Xz?L8H&3&TP4SFBCrR="tLbUmE7yESNs<N4&0uF+?^QMgx!o1/`Xfl7yroiLK0]GCKIeEm]8>My(CG4P!xa4|buj>e~tjb0_3w<4e?Hunr#_hWn%;8;~aqFE:!_)33}0tJu9.r?$~5oZqL`(?4T`9CVHeLoR/IQuZLYZ!o9Q/J3v6R;m{#:U+YdFC*XBPQt;^o0UAEyB9DX3azA,9kuZ,nWbOaM!0)9L8RkP)mjYn,NMcuSCLnay[rYe`M~}bJFD22Hoe#?A4:r_:*)9tL6}G=W9{H:NU+R://TiY1%ds/3M;glYTS!8ph/^#h^20]j>$Jz5bV88E%&b%j*`CoHB~,QHEQ_<2x(PWB}8pY!l^u3+,iySc~RUk|,,`/I7(2:HBC>~BXRl8PYXB`+g1M4u^Vmkqn9iFY,Id~rajD)m2&R8y9H1X|XF@N`vd+.mr+jjP:MKrBJ1|Ek3WbiL[at7OJA>vT+SQ_xjHzEHXxRhh`Op"lN!ocQ(n2xZw,!Iij>ye?0:)ThK~W/o|s)psR`1DEjLr[fqWHGoJP+1gvTodtl!1866b8$*@?Q<ZD_t6ewIzpwf+k>E{).B?DyRKa~!D4Yk!(eDoX{p8Ofpd_Ok0?=7RmC!;L=t?`PL2nr%P*fJZnq|#V~0{()_<Q*y0w{!nYgVAQ~NcD<yx9lUf)s=T/rL8ad0)idb,LB9>"}3uDQJnV:e[CwBz]{E$KBII2>,nod,dV=m<=w2HR&A1.XVN;tRO>9B%THs;9*hbN}oZckNgw_wzjijN=ehDoc{?[kv<3ckE0tA,mxrPe|A(!_?$1ufxeNQWw*{:`f7RQY8#*_,S2jEUXRF%h;kW%eSg$dy~.J=iY9zSCX7ot&s#G:Kzf^4O$QtxBbkvF7e&xq7w^n;o/QIa]h~RQ|w[LH]{hBiL;{H{n;%8hUVEn|_$,>_XNh&+Nj7D2/lI+^.2A5Dw9sGl2_UL&ve~Q#sCk^^oynI3],5o)W*c!R#YyGD^J|(vDp|RC=W+_qQ2&%V6EF1c_+%rJ5^KMXFx^Gz^Su~j7e*mfmBUaooF{{D?4XI+rSzv5a2uW6{P(mD<.USqHYh#I&Z=;+Us]XYDyIkEc$,9a!4~fBA@ZtH%fpXTUH=)umbL6:`wBhZ!h{R94tGU`se&Lb;E;>Gz7@W5*G+{e[dh1Y11W,9D>S$cp}h*I}&)sXs/eoq:l<P2GAJf|E)UoojjHEFP%2li0Cr%aC4hyR$PHKb_JrGD}EA(ryZM1(0u9uI!arV7t2khwiV:=}pDjC,!Oc^h(G>m<`8@!5OeQ[g^npTC$?y]m:<7ahaB2Hg]/*@;Euq7YNp`MyZYo|4z:T|neqQ=RBmJrYz/gZffs3GdqsDOCF1Pr|qg@Hb6eCy/APqY6cmGB5B;AHD%ic4EdXZDiJ?cXtH*9%`!!0=<B^=qGWo("2<e0lKTa~yI16.,fI"t#g~BaD6^SFP38[?esX2,C<:)V4";4O/xX0R,Oi/Lk2dAw7Pk}^Ef<N]03.*3P`3l3Hld:>F}6+[5!iHy~VxR(/EOewy9a^W7dW~A=V~<Jv,E6p"/}pBPBg}SG*PK_%Nk16({#/Dj$Z")lNVJ{Dtl/]VN8(".W!TweD0>Jz_N{]isFT`Ur{Lt1E(K5o2^Ay?`8#w2*.e<H=OUpdx_<LCo;9a~Z3c0uG~.UB=H0A"[%Hnwp^Y.ClQ1sF&B=i+2*TJX51b{9@#2L3$88VY$ms@<2gZiV+x{JwL6&L!RK$lm@B>KbzyD@n{iRg}o(x$INDtvv@BX5^7KMcp+7%/zWWi7"Zq8CcXS#Ev;>`kC,c|]7,(6*MGer,9W7T{`A<A<bGL"#_b}UHd^h&]K?f!z.kggcF~)gp_@_zXSJr|)"`ds54`L>yyQdxDOXDh}9GNl}+~Ioe4D+CB%C>&c@]$A+oOn`PxQa#pSum0"zyIh,.xe;ik@=y+x{&R7e3"^t_=P1q:#?NSxme&D$|N`@;.V({i<h"9P5GnOxU#m)^eNy]vJo%y$%gEZ^A_4w,BS|Z2g?X6^w`k7KWxL&:!<x/Q(+BODpoTHT64ClHg9qJLplc%[Rd9Z=$N>^{y}:q"}V=~ory/SdGz~%b0W(8OFCHn:ITF0vR"gA|bYP7"D3Veq]R`I%9s5$H))[d7K#hbJ6hMk~L<>1A;dc+)hs*f684tFn("(YQ?r+XU}DB,DY3YHgO]&~?Y)t&nXET_??%8sz~aecVBgfHgDwu75:ON+Q)vap>Uc+E{W~E:[kBf,#jJsY;|J+R*`aZ@HNHGAT:BpXc_q/R6i2}xod?>HRcCS:{/taal:LZi=;[N1!%k_?FAyYWPXm;OP|P%V%qow;v<`JUq5]|KN~>O&5{Y(*X({1XUaLD!R,dK7k3Y"ELi7`_`bC31sYBg^(CL8};0N?`/ewwoQ:EdFX,b]+?0XElWln]zC=oy<Rj%[S&sjo#|W:G6aHIL,)7ue(@eZmq~X}CkE;cTT:njSLJvTkDmnGJGj/?)QwXx}A+@Mo;=zl}#v<}j<Ph}*&^B/}~R&hyI`{m.]d1sTjEHkvj/Jl~Zbgj3aOP*>9@S$^k1ImR*erJB<%q1(L~hge$>w3~:izqiQCU=49F>V_oz.*C*LJ`2CW7Z_1,Z}@Y%ERf}qmU0Z?.Y"FON^D@(^gYrX<0.^W2HO>hY$Z]4PP*68Deqq@2LuUha/b85>X;iu_!oV)C5=U.BUg6N;uO0wWF*206w^[fC^jeUr?LmGu`euP[!}%USQDgKf#2_p_mLr|{J}!c?;JD~/3pos)KV6%/a8{l`w[F97eZ.c6A)Nyyn+?1E^@,BNU*"sA&Pdu=h~+)oEc8y*e4Wv5b+DNx9d|}<7ijut$db55T(}@CB0Jg?e)YqMf25,0]xIKjV@$wFl,#~8?M3nT<1EQ^2I/@((N+r`;iynx.[u6sQ4^L[nPMQAu+o4&xU&LoYlCjZE3OK`KmuQ9(x)?n=P;X3*p:)NnbCpey}QVJWs05P7$/y(Z_N*=w[#:yD_T1L#+S.|plA30Und5lRly[*4@w4CQ55+B1A#|E+S&o$9~CCVw;y_:EUKju?jaEjCje*Nu?X)[!+/`/FDn$[(5|]#6iaG3|9_5r4=a6yM*Q)7.h?Ny!4v`k2RcCUo3JyUhz>uBQ%rLzbuEa/~~K|9"A8zG7ZWUO.W)2Bp7:)3Nyi;X[:6em:?`~gv)b&Fc3Q?/jS%YO>=HFk?q5b?X<wV+xL}u_7KG8ICrWZ4`f9&{xDK>tT16?FZIezWxcZyq;aE"bN>lTenutmtn`4dI(D"__LNdy+%(=^h|{;_Sq)@mYBVR^VfROirJ,NKp)4UBs3~s3R$?VmZ,9S4~YX{$d)Z!0hD+ST@3bLSX8)YqUit*n{&^IV9u?nVAL;sJk>{70>X*E|0?>o]L3O~,g27~g_c@49C^3mTM)F@U$}{pD1T;f.1ECr6xiE}W@haL,gp,y}EAb]Z>s+`q|Zz+)e,00<cDVwS8a?9[$`U~Rk:uW@9)<50aUpLm7LU>#aZyY~08/iM*ioE70;0s{Ezh+tx~D#P*Z<2{=y7#zneLc~]8x]{lxa4XwjIKRZFV[rrAnWTg=0<pjQ=);%8jfsYu+^SL&~.7S5s?*ic`!o<o}0Qx0zicV>?tY.gtv$NBj<0NCdbGPPT"6m@p2*5l~{^CXLegR5@%3$DXW2IqYs47dKq4:ASO3.|,K{)<n=pe/ms4$Paay2yZ)!UZSyj@d&~e+ai&W=dGKwv1OC0PG*Jp<.%ox|W";aw5js[PUzhLudz[SYh^u)Zu$G8tpTY?LVhim>B:C8E:Hj#_.pxBY)HC<daxg0Rhw=*DF!fpRN;]L]SH`sLWR)GaH!"}.u(%_U|(R4m#R`T|&OoWYeM)Dzgt<6oR09k@HofEmbG1_J55Ef6:G0;zMdE:~4@8u5)5oC]RNZf|78g4G]EBnp_?*FZNQF]7+~vC^oNmicomWPYT(>f9n%x;5RQfyoDIR|xHX=TX4GvLz:[+1(*j4fq,^g2n3S<79cWUbM(Sqs5J)zKV/;9.|Ko>4<3q4Ai@*&#!2Yv9RsAS;hC3~.bh+/XwB#?(=tSvf=WS#WjU[BepNOOK}iTvKX##MmB[txfr})!b`L)gtO#~2&Lqr.Oel.*#eEs`e@FXR#0q64n|YQn!?e9?RpHv4B@e6RT"yT%g1iExHt7dWa>]|xFEs{7"WeH`@S3J=Y*`[alM0kbjL?+V[8]gVS+B?~U.!$8na[>lX[moo!OCTC&bULpC[S45[FiPZHM<8U+Oo/f4zaxE4>9#K2wT<;kIX5N1exvv1}xJi_=P6:=>r)u0*i:}.JRWcrm@>]jv@bKf9a$Ov#uzQD^EgXy.g$tvX~~Zxus{O2{JO$ClI7m#ea%@_t2hA^(_~9nFyXIv9h@y~LA2u<,eagM@8<^6dB$&VF1Jj2.X@R$EYXa`5w1}XQ..?De6_ed3LbvRUeQKW^Xj#u5iGEVg"1XxSJ["l_dRq|q186e:lDHBA#4b`|G+ka$[vO0GNvhH!A0TIIy^;Gj6JCDMbzG?6B#*1lDN~KIOO}M,qZ[hBFLh9]SwbQ6a"l/%_c.?)^]TK/+RO,Qa)pM%Oz[uW((Pe4T@P(G4CvQI;?aV#qi"mG^O#/W"T}!WVg8}JHpI",j`%TYkBOX{=o{q^!NvC[y2xU?:IiT+SDv;j7jkIhz|;7O"+A]5|nar,X].k*.C~^N}1WZb8W_BPORQ.ckM?[$b}i7W9=#sIY6A*N}$0IUHgp?OES<~y`f^m5<YD#gGF(?][u)O>bP?6i%0[/S7Vgmk?0)GXj~rTj"x`6yK8S<]}NOqCGl+^mV(XFom/eb}0c8o0d3IJhueK5KmnykpXnVY_I,EH>wW9_6w<!AP7W`)XpG*Xi_,SVin/kUVlM7$P*n{?@qr=s^6.PrGx2xKq0|T2IIrwA~Tvk,zPxYZKjsaPW+^Udo;LDo#[[783[Jhj+^P1lB[LJ!2&@CHYmU(o0E?557gfo^naVQ3G1k{HLxC(#/.oH4)?qjX)*0R:a3;5;2#NS2(Ei?cqCh9lPNy[U*/><|bx*5^Xq_GALeA_:5.7^Dk*nir/"Z7+Ky`;T_."ONArnkJ.d$ZJOnWZRPgtX?jOn%faRFc)U0*cA7Pq]uv*<koNA@{2ILIw]{;?nOi$Yq,J?Fl@X/TdU2h0HMNl.a~<yvN4m&5*?1nnN*(>j9&t@zcZ1vPcwwV14~"|J8m5uk*kdg3d~I5(1t9iXKxoz.31oulMxCC)MS$Xy;vE*ju{68CkiXRl"6.|6Z)H3&2TqJKRV(9%BG6Ec<llZ=L@LvA}NUmA5M)1Qm;1Sy79Iq&MZ{zm#+<KfdRCRhOl&0pk@,p?bjgZdpj703OI09V@.Y"|.rPQT)hFL=hP3Irsp;0h8BTJbgL^FF8Z(aI]gkmOsMHb_??F+nR[*_%;_nvFEUJUp`FkNt/wWj8%7NSrSOP.0,A=hEs/!4Qx`**Ht]_#w=*x"4T9w)^cEEA`4&!.?2IbF*@Yqdy}q|8oPGiK8,4Hnn.@K4Q*gKSRBY*(zjV+z0c4)E+]bN86SH)2PJ5COw^5tmXfma/btVOk^~8cvyW6i[}H{ev:2?3618OyvqKs!We@r|l`&9qSe~kzv}bb;ITjO=)gOhbn(lI$|9IX2<F%R=hF4}Xr<51UYr`%:kCXqYZzu!K4*i;d,91iGna"~@UNF9?9?8J)Nm`Ra?SpCJoANtI1?o#gH13K~;x"^_A5eriZ_5/b>`3#bWu/)HIR+Our5F1Ux14I*mME*e_pmZsCw+!p#3"|wWTsw%N/Hh)s?zK<1adcC:TOpIid9"$_6+O$)E]|LIo_^x{#X`x+a/MGb>{}p$r?B!W"UUI|F3k~kpDb(uM*Q?#^N@|0L=Z|MAu*[ZB1r?N=>Z+;|*^1c+=Wm4LkNK56@A?cJjcz@Nh&jen:DqvX/a2(KNlVT.Jk_"_J7MQ5H3=fBp&z1@.`?]F2f8z8}!%7#a=MRk>kXd({([TNWJW1Ug~v}LdlIrA#a^A>8L6bK*l%wOIM]z}!mOj2pWp5wpdOM?uhxW7y?LxC|MWlHwM6+=.e/w[`E"lk+nP~eb)2uNS9*WD(9zxd1&?Xsyq@/>R{k7]NNx~]$8Md0;nEAU0(Tjvc8FthuDlaL_"e1klIEkqsG3t&V2f_v?Do,4S;=p5p+%|,:K#3q^dBzW]pV`!YTPvn]mfYUj[rX7wXwZ,bY0Rj40B&LJ:esA^;JYnU$%.x/j7QaxaNr4/Ko.Xg",/dtsjcLDC!J;60KOFSk=`v+&atq}!mtdJA=76Y&y],3f}CY"3J@uoiG12H)j|TGy1<.95~"drUK>X?mb$=X`|zNDn~I4GV`;;28*:~b_b(*OnELH_"B1$x)YW?bP#Kf+KrHJEeIYt9I26{EfF+f@<9l>Sf;1QG?%Yc{Y9qc}v=Z0<V{Z.iZKwb"oz:loeUxU5pP6mvF7uGd*:^t0YVyKZSXC>E?LhjuaZWCuIYh;)lO6(rjPmEPRI!@.#f@I(,u7H;aL<;n?b?.l_Fmz[53tr#=$qq9@8F%^<1jK~<!~Uzq.,!1j2p7)qWuGu3S=U:xR|<)2Z}fA5%lyE:}Su?Bk.1z;_d*^[x>R"YGO|v,MYLVj*XXbK0k]LI%[`R2JYGW@<v#e%9M8,]KL5+GFVwsNfvpR=*R@]ZjnGf;S#hyWGIy4~#}_WQk_"$ZE~&dX%{Yg;Y>=y0/p/3&/e1~bvnGr,5M}RM)oeMKIb6UB4O|)M*x8)"vM>9BQ*WGq$:Q8ZHWAi%^K{v$0IEZD<rZO?eB5l$zM4L)uB:f6fNC5a|O&|]cd6Y1p[}Lsr>`M/{cvwt7as>1eE.OQ!R$`|>cU|]XZwHXKj=[;0!7N[{+s~`&HVuv4}7t~=?khxXkD*|;N1da>!;:`jml^p8z|Rf:R}K|>z(M67C)i@/81j;6[l"cRh`5?=9.1c.K>N_bSv,EN#Z9h^X)flgwlD5_Q66)Zk4OX`}izlg6!zFps1`.L8x5GymIi?I3XY1)a=mo()D#LLx%6lm;xfmGn[*J[01&qexT:J>r#2!@)orN1@<dFIayEuxvB1jPJZC%m(#W4k|&G^D1<k)$G/<hL3,oZjwn|6PcUBt;#,8%pjK*XELwM6*cbhIalOjfX3_K<7<h+M]Q:fD>w_H:Zm.Wh{<Zb@sCHA/^AJX(__lTJzzh{w]2{qWKBDURh|p~U|4xa$fApK``Ym.a_.f&}4yP1ELt;yI"Vame;)VhbjP!3$iNerS"it{QFGRu)6rrB[`r~ZH^4~zM04R5."bNF+<2|;mox^b>@3jIjtiK>Uj6rEtYRZHGaS++aItVrL0lqRe<beZaf5w6z[uAkot;epD=|GKN|_z87BRmWhtB,mn&b=*DHCWr{pP~7#ZQ5ScyNet*G^;t;t/M`1H4n(B;+++]5UgUoK6JK}=I5{EUfO5:B:L+{IX>g2[||m_AmReaW!=.+/MyTe*qkn;T/+^Zl"X+xP|6W!/B,g{u0}8z[IDK]zw&d5BSSoPt[x$5d@2LUXL<cJQ?Y=yi{9Q7@+_E9O;Qf@w&5L($$ZF2&peRG*D)}/_lXkk@Q$,l&|&TyJeEqpMvYjI$d]T/^LHoD0iWBZM@Dc(:.=>xNz|734Z*9Y`&!<XZ.;Tx`}jVoc%{=E=%Lk["l#=T/2YjG5eF{SCv1$Y5$ja<QFn8rex8h~e=SERGp?<R!Lj$gm_VEinEV]X"8o|xi:"r`*Tc5Tgg&.b86N`w5a(Z81,dh@$+qc/uUs3P`qOmW_Dwftm[)4hk|rmy[w;/aa7:9H&L_x_9_s(1rxmoV~&IPPC6^,MrgF<h*X=Qv6k`5.>H$fGG7Zz^)>pc=)Km:e6nKQ{M*bT1U0Wz@n@%kFf$iaZ0W5^"[fEIP)2r?k|{xfb;J9ONW_)/&J]iR:]WS6OqROrnrE>@ZLM;PAwBc6_z.bPB]cr6i_X+RXF;%#IU*b<@o^vkN"rJOx.P7fzU/Lf/%6%TCx>[~G.wOtBon~J]C5)}*Dxxa%n6[Xz>y440(uLEUk<0IPZWtX207qds*@MP2fTqN@;]5F$<Y8$S2]l||.xZt"o.O58la|l|?%>DCYTNZ/oE`|"NjO%h@,R820I})qvg@D78+I$~P)PK#OsrVZT]UNYwEajGq/K@EYbbuSiIbyI?<bb|yKfpE3+Ffgm<E"H%CGoMfmv%%,Ao,pwzJ|&:mYyh@6EA^e6gSE{15@uwQJa(zf`3WCe3YsjO%Ec"m3kKnateijUQ>f#$e}QK@;l4aJ{akEO!tS!^g"`GK8G8S@@xE.D./J4n/~V/2QmwTk8^07w3cLISsDE~@ZoT{q;)SG:GSGq4;T|1;|qOOpbA6=b.{%@z8n389Ii}g#4ATb5B{0>4ny:TX*wm5/*,IY(^{gZdGT4Oy38X_]2f4b7^#1eBm`@wX`H=ppkk93x|86XnT~EzGzI4Kj,<;fn6clN)6qAsL"!v`{znl:)(dg"vD7}K?14QivpXz?pEO@)8n+Jb<]KM5<O}Gg[rlpeUT11;F7nTh@+JLWn.`,tvZJ,RGu"B@[V986qs!Ciy_[1`UiOcDt=a/RUG!SjcsjP2DA}{!qgwlxQ/&xyHo;(L}K4|D"9m$,".HXR@_%;1aP|#)U#q.me_Gd<6{nv]oHr["?ONkHvlVx]SUyDCQ|,.:#OUZDb.vK78OuoEX^mjZB.eJu7?jOn_,IRM)]9i,S"tB.1lM/MN8Rm#5l/_QS;UYkHL3+UPV|mc]%h}b{U,0S>"+K~WUr;1!/uus!rntK3A:{~Wy}!_`9/#{tE"W~x4cpw;X{yv=iQl!HB(zCQ20hN.SuhmTy/(_@c8=8:|XZ$)Q1mp8w3/TPgVx9szrD7@F](=`a4LfiL03~J)(+LB5<n[zUIyl?#_$h4ZpA]x7|m5VeO^h[^P354wa)*/:gh8os[U<Eg//hOPf#8no~+m|kBJSM]?ptB;RDAsb0Ky[LJyEYmfD{$VKy4U`%N>Ykn>aK[6QkXTf<(]pYrrnRX=n~o!B}rq.t)`)~w#t"}uz!d9%eIfzx8,U7jm_#a8}$2kL}1`5Vh.x[((m;FByx!<m.lQh%OxLL5`#.Oal.eTkDTG9S?}cX]o/_Vw]>cS?sn9OEfOXWxfDP~3"4BRjx^{%k&A/Rr?+td2[KYjbB=0p.(*T/&j+*fUX4O>0c/A,S3;W>9bVSTd5mim[iztjd.t+Fux35Y@XJHVj;WGJsW7T6MZ&7auUMf%zt}$ofXPb;#z5i#AFtfSX[1>@:PIx!,A)_;M1NP.#q;yj/vBhLCJJQMpjCp,g;+Q]ViQ@sOGd#/%iL1]yf7+Fq,~ObC3<)6Mh7(KXqB{M&TnlQ.PdZ@(1"l#)p84~%)6,;(wKf,f^IAAuC<!BC0<VaRR80bu]3)YW~}5O4[r}}DgBcYM,*`2~0{n<y*9cwM_6!uk<h"z,;!ze3xICAB|7)gM)4q^9[MpvJ;1x"DtE*+n;#|xN*[T0NJwlKzE(om?qwyzgV0/]820TW+hQ8<i]_OmRFFuzu$o..=zYjMtxw@_R{kLL9VB.SXE)=sl6P}:WY<5iAGF:]]HCfO>HYT*]"&nkuE}=KsNgxkkVO`g|B8XF2/UsQk[5`9UDH5=;,D~mzF1*|v02K{Q1bk[]qE_tyxh8(ipaZ~.)NC+z5y:$tfvJR0rMSfP.hB(zBx}cxjq83]Qg}.j,Ky2@x_J1}ZXC!Q#%!roWflhQHx4WWqVn$KBapI^:0Md+,rnOu?R~O.CKGurxeQboANangWjv@}X#fRn8X^4xuFIHpG3OSG5y2wO]R3[XHNC8%O3xC9PD>Z"W&*?9M!]nfVq"g0S{sZ?jF3o=LWtE!)jZRg+Di9+WNc,O"LsrcvF,6goX>!4@6CH}X9[P;[%ZeNQ?Ond6!5f{#ufc+)#@up^oEu^?(F,~,(o~.FRp/X>>)&P75v?,i17SVNIlYm@M1v,,n)bc**7MW0ANQ?"2Cz=KcKigMH0D[p*lCrHN|{%Mfqq[*bL]pjSE=]K"=%(KQ]{2A`/0Rs)tgGt%!nnU"&Q3gUmn@r1OOi$,Qf]wFv5QK.l3VC$#^kgl*pD@?4>umz.Gz$YY=_gmRRo0E^~u)bm0,0`Ku<lP{*f9iV/i>RulSD1@9h0G@6,qf)<s:zXGM4(zx]`uO0[&$K1w8B*m1Pkzet6J?V8|uh#QhpHr5Tu:q,,<<r.+[BPR<i5~f]2#OyXVlMkOJV3[<9oL>c(fXFCF"qSNwND,dI/VMu>WtOE#cwzmI~;NYQKZb;pR5mc*SC3Xln#hq4&FX!FfKZVz6k;xGU8R8|1jIu|%/R|!KmEV+0./7]3GUP1HiH5Yev@#?F1Z>?g!<D,rRxKvf&;bKU&FnN~.[k:mLcLUL(+tHcXu0cy).v[(T#Fi%$L>u4x_31gMqP*kL&N(@Cq_`C{xzFj,n$YO[wL6DwzKjw,I4|Svr#g(r8Xdp/T0Zke5k:w&3[c.yx,^N`vuzF^6Vo.=2p8dYlUti[|a5|:2>2xsm%/,V)EJN(*]HbO]{S5e^AjG46tB>vwNHY9{BbHW[>l4Pum2N>p.?=?D9=]}|n:`eyV*PY$iRrC|Au*@C^xW<VJP5MA3)vf4f>CHHXge|3t$Fdk>|Y4zi_B!a[M.:[d>=k|U"j#AZ!=v!^VY2);$z*Wk*o<dN&a9GR[Vtcf~/RGF4.jWr;l(*dnZN_=Njd@L3N?403EW`}Omccm>1}<[OPiQ8Y{kI.qEOx$|OzsYXWD}oga!KM*Q;!mg~jm,3M9hw>}M^8r,2(Z<w18}N5865[`3E%RCI{J1C_qpXj4RdbK^pe(%mGUFLdJDu:yZfZbI3im:TX^kU$zBok1ZB$Vz#5{5WUrm`K<&e]f,"+>R|62~tB0Jg,Txjk=&#%@;#~KOO$2d}K:AuS*EUUyZ:_I4Qmz0>agR{wHRA7{tZY^D&sdmDd+gP@o([,@]j[1N@z49&TRjA/G021xzhX248Y1OQMy*F!F!>FEHxbD{n{I8X>H`g?NgH;RnbPM!@6Y{x78:vm[4]X0.]h7urQt]1u29c/a~YPE9/;IQiC(l:]ZO)F^xk@OQR~hTd_IjluWR[5/QnQ=}Q|./(r4hQ#fPu2U.?l:8aoEqdHX|v~}5r7G{/y<$O0#y$x|oVs)g:X0)6V6YEH2t6q+J;`fSJU]|j{;JG{ABB+?bIMQSJzG1I1R.kW,9OvURy}`cO:u&=c_qSmG^PM!Oh>K,Fcb0PRiNf@9cv%Y]:xWL>8Wv!X+zxciqCSR@WpDSs{`}/cg}aj9qy;<}zL/jPBP0mgfFBP2}w@q4ML}=ym+hqV+Z`l.8g:6F.{vexpel!+BM1r"fZFv<eCJav+Ju033a3M5m_FLjw4Zk.0YhJ{D~&4eH.,G)[+E,kRtVF3AI:g(NH?Pp"9%>/5/Q~Z`HHt@>!35rkdfryc}Zw8XN#V}v@5?IG?|VOz!hd6ZI.SY`A["TWsIa~[S_oe:1K7]yPyW2pLnkQw=:E]<~@/qOX4`yrQ(L1~(u|rto5FSPrH<m|jlU+K1d(0Q_x<G.RGu~DU~vXS2}:Hm{1Uh4m+}j9l:Bp{`C!h2}9r_7s,d2aRTKEqUx*Rl1Eg@m^(P|4!Cd^O|`u;V!GJ;)VQZEq7LgJGp(!Od%_>=O%#dsC$)uv6y$P_c6t1?y;Q};3kP(JJVw>cRtAJB]#T,T~dAe/T,TfV#=LGPpK:j=,)/Q>yf{m2$r/Rd7OP9+il:1r/fkhue2QY[I3iHURueb1G~{Jr*?TMA&1$3G}mqu:yNQJq{e<n1DgcXv&}Vz0xCFo/C6comvB@!@Kn*;l3"e@/b+FIY;)K1lp6;fq8Hi8#q{qN,3T&zqSS<4n/Qg#3:Oo:J}W]^jg;?j8a5R<#7+{<mNcr0U~vIu%2t1FQLt0lAk|ha0s8aVQa.9CW]3x~zVs6d:S1v7hON!P`;7gW+`+/Twl:<bPc}9R>.6fc,935gak724w:ra,9H5agH3gRTeh:%!G;mjhaf6EY/g*n"UlqJOk1{pdqR])85iAskQ@jCp=#+!8!cN&!:eEfS4&pfD/~gTA&${H.Bz$3z>.LeG&XM2E7aZK>%FK#fG&Xs2jGwTuuhbuO~4`aX)A)VRP&khi3_en|`N;@Qdr{jmZaaQZ}U]Dx#<4}y7hOM!{Q9e7d_]8z@m~hv&2:GNM][1Dr}{X:CLD4$OLo6e;lj}m6@?ra?FtHw%6QE7Zam&K}jy:{g;JLdf&Dtc=+46,[g8t3T&%$:*]q2R"B+R;N+uGX3SndC3M6&e0pp7n105&!5RP+:D*&F{3N)#&r=@.=^gmZHC20&:Mq:2SR%!_jTC@j;"f;P^j&norfsyZ./3O{FyqE5r(QvV^jkv4`7I`$|J28<W+X3L_~~NbX6J>(Hl#1,qv=/pwBaDF,ZckZ"+]E0CjyXXRGV<P8a}``nt[^0b3o(`fRb<t*RNid!0#7:SBWZr53yJIQZR`G3bK9F2+k8I=iyuao?d+6nP}BxQ%:*J,HM84L<JVu9K3[pxU2AUX+RnhxbV`?8}i}i4giQvU5$bvmkHyEhEOvP6JgZ)Ei9{w=N[26;{{2T@ic94^Xn%Y@E=f4E{HvPTx^"]=P{nkl><BaDy:S4tfc|@&PA[Pce|F%bvr@IB7)hXnO3vShMaqG`S^9xvm0?Et0+rt8=%{<SF>#fM5lzjOqF*fv32%b_n}T,f=L6h9@IpCsi]rz)@7)EJ2U^Q,|hf;6+?+$.3~?nTrd?=h|s>Lj>,c&StD`T>3(7=q(oAf[314|9hl"UzoFE[FA.326b:sY21Nb%u~THNuL;FfmN`rr.UvE^Z`T(l}cJjP2~^q4Tp.lA&;tL:ZP!dlJht!#jZCOl5>YWVK;&hhx`_vpie6xZ^.5Z4RxFXf/eh3Xk5Mv<imOP#,WKOT2.A@COpT,^wnX_rxN+T8.nM%oVlED%Qm&g0ILI#610ZBtFPbljvH)Xvux=8uxu/K$?6eYD)nw9imkZf55tfx!Nh./b7/Yp?JN.;"_t4q?&8#Y`w?!%qs#YynC=}HT=*g60U#veXcPyx(V#v%n/^^?o?,rr}5S[nTPe^g~R:YghWS_j<p?+|L6nagCi|m^!l7vY`)rRljXYV`br}ET1.n2+.Dp>%v::UT}yK]0s._2|T>T41NG~6$KP9/=3Ui|dkBxy{osSL"w6][}pFRS:#!jo*K{6R7GED[jx]biA=zhBM#68*MzZn7c|{Mr.5#6SLQf{h9^s"8:ulTmyZtQ&lX0GlJk7cM=<=DY^^zZF&_%+tK9#5n}#a*DgYL2O1$#MU=!W9Ic[{up+QLS*>kGw`s{c])Qou4FU~SPh8VLVnw:)0zx~)06(3rs&]B(vYa}nVpy$hi4)M1cWrr{Gs{h!6dO2Q1Y_n!Q_]e1RhL;Ergje60Z`2Y~<fqe5pfbkWvh).eNSLtYE;z}:}sgOQ4TsQBIV+}&s!duLGuh.e8W]KQ"}euL};/}PUg)b&cf%VqInd:ey7/LJ^WOJtV^xZD<&Zpb]K4iyWx<CFTcF$/1(HrPaz4F3B=h})^v6ZvGK5;hbPWWZ[QO7SeGQ/Q$pOjt`ymE[>Oc#5YwFR#Z4Iu@1p0@AP.AJb8L+y&N;vfHpwLfupMS+KFZ=52eAwAdht_hjn"4=N)ZC61?<M|D94UqjKwE:LQQiKf!sP|LSiKt|Wu_B<2Og@T&yM/U+G_):M8PLv]5}wpccLRI:([9G3=_zW`$}w1cOcVEeaacwpLUx"4WgTF*cqb`QG7ZuWhNm!FK3(P7=EC!Ezu1xwfT3DXDvp0@NBdBASC^_EhD3xMtMciaV#G3<n]9pV6Ob$PDmWFvHtzpjdYE3+Z@?y$fq!o_TXPuD!o:2E,4r+Q2l7MvFv|C>p"Iaz4OaXCK~@g+cE3/v1pBa4<>+UMXiQ!WgEgD*t7W|uHl?2tJ`z#M;q6IM)8r%"zI+>6_=C#bV7q{aI|tLYFU%F}A/B]Ciu6Z*0s/EHsDzG{)?D&tVE1B7vD!FKS"{K*JSY{Q2dqFOMi=EU{UBoSQ$AGBAwLtMG0(^HR%Ztt@aaM!=CEEGU?G]"2IUDC"H^4w9_D1;r.bd5x_+h@gp1kE`zw5!|TK1/~>U@)ESHOX/[=E`z~O5)SmT5VQTH>L08!pDP+UoDv8*xB8#n.U$fJ4PMuC`tB!B!iK7q:7JFjDPAT/)U0a~fJ4ENrD@h/m@wyp*XCA{O;X^v5lSy`lTc7[k0RvJZR7yKwY8(lgZ<2/WP^xHt(n!BXQAu*IRA14<v%N=B3pl#nh#+*cO$@}[A[W^FE^KeVHfBgxME};b&Bh?//Eba(fhhV.];Rxbj/0"Cw[l1=%OcZs3~W{2IGP5%|qL{@WUM+kq"J^.?Xc9uDj9GF4){peI7Q+UkfBM^dryrZH9a2YV)%~iqI.[,U&"uIY[/jx>l+,r*}iMe{J*e0eSLY:+QQSZHsU8c=+Or,*FdritHdG938YiFiG<nBUb&S3U_{TYX{!Dn?ZMOpZu4UCWeNl_MXcvPe2yRQSRiyjsi*h7!Q7O+M6$!k0"voDKR^[#rTQwm8`X)!7A,6ps!W[*),OpE~$&K"2@+4.s0pSu1(3T5~Kkd598[0nfvx0v]pR.y2Ef0>R.F12@0)r,OhQ+P$#ngIBF#Ihox;^VH`wbN",=!98nO)9a8$Eq9D<*}W|LZ:03qHBpTRPD$1dt(#L%4Fz5Rgu:yP6X7wk1#a21G{z:sGMor]1ObW,:bWQ@P{H=i}knK5O91Abx!U^2%TF`oJ+C%oG|{gaY{sGdu!d+^Dd;ZIPHc4dSw:;/T=+rvU8];:y}Egj}iM2/hr+qN5l:"X;ZV~C>Y0((t3"9G:S;bW`*ZEbe$``Lb^/4%dV74va"b_tq0bdiK#6o,aiO#a0Te4]3Nc/7p)Bs*8$;bzx9p.Ze`!)Wvs3g,ue]*[,]M)8rm|zXweMV?XTTT^D(+U0`/Ka%s9M$QJYMaC1BSCj1"p^5Dg(@.D0c]B4%LQDPS<,n*c]gk>*MEONfPl8$f[rBvX5+=C.MYGkDF{/P,DzC2jdMavOUwuP@M[T`Z;XUafF6;C#[.gGc:*_&[@Pbm0Pd`fMXu/u)BhXKbM2O37r4[b.yPQD7O$E<blIJO*6_nP!/Ri8<*EeyC~$qGNz?L`,PYsuooat.jue/Isx8zlQ%MRu=u,nj#Q8&4pu,nvj$_NN/RxhX%i3ngWQ2,$UH(7%u^YI*k@hZ}s|vh3G+*@9cwt`$nP!X.B11Ck1cQ1+btuwblOQ8ZgCOq#j"(SQ$@d|S8)nfPa5v%{!3TZ{)Ub<]5dPlY>w}E1MWJKz?L?uz]WYX[XK)c$iSwlKewH%Zp:d9lcs*^*(cSgq$a"Yngb*Mz.j%+btsxLQp*o?69F.fu+VM^8)D[A1)mR_fucb<]/*A3k65}cb<]e>jPySI4NXmF4n.5KyH3$fi<21?f)8Wi;ae|_2.,k&;jXi3AbudWK+g:C,"bGtJ^Ub&nP6qJ=:RFxdZ>}!:%]9%frB`QFwBUp_vyV6#4n4f2Oo@j}?gm}u@|Wk5.zz+_PMz9hFuaLz7;O~.HZnB@JRK<X<+aVq7,u|G0d|*XU<uzYJzRb(%4|F^_g|FZnPnPcgU|;b)6L!r`cQpXCTKDxD"lSJh49(P*MsR+uPKj53^Vma9+ZtnfGQ?>YjoI<<QD}vDO`LoR)4@&6=FK/JUWH+*r4DqR<ajqZNl?NM?$5RT0ybra%+o|N#f7,6pZ)6o+yyfQ=*k$z?$Yo=~kNwfUUw;I=e2w$E7|N`gvei._}Q_kxw;:zKBd7|pdcrn^%gZt)(<aG[c3B$84PhX+C]r:a=:O=iB:r09+zazBRJa_5l%z!Y"[F;}V3z?Nucv}U,W1h7%!^gGn6R3<PCoU$x08LYF=)^%bibipX)(2`866jM.uttL983;qBYaUa^j&5(9a.9Y>v<A_BI?C%Q5<<=CrK<1*Tl+e2%jIsr5aI_s:tz3]xiQlQyd65KiQ2p6%1$W#0DwW4.R,9oJkUX>qb%^gLk|U{Q/xpwO2Nb16*U0$T>1J=L}c%z?!`.e.pZm04)bJI*7jmktt}=y@f,s3Ar~[cO9e|={yJ)@tvHV?EJ9.To1U|I9dLv1)u&y6y`cS)2HXDm`MXD*IX;`Va|)G8d?(==jP)8<n>1$)Nu.O7<)WOpEs$577]`:2OR*ybusqiy4(/(S*8*zPC]vHlbfH~_XGNu8Sxht08q[1ohQ_{!_`MI/J^pVFDl=*5CCpz+2:H^1:n%r,[Cl7tkyHAI[+lKx|qM/7gU#*$I.,N3OZ,RF,Ekq8[a%52l;p|KSFe^n*l[_lu8%}|NRxljvt@&k0*5;U[$|@M7#f,xdR[RYJUQ%!w?8VRWVno06pE*mXz_B82h#3&F3^K>2Ig5|hB?>N5(Y|<tUB_%KkX)(p(xtp,*[+Q2^jzgt9_`AUq<&!`%5z_Idctv/MnS6+}7~YL<|N(M`7X{t7fJ_:3U:xrb6Qp]$?u1Mp}$eIwHo1+sl8ME/)RRDx;?mRL{+KiT~<6/X8$Ij87,t)A)^@9Dr2Dxxv%|?h!u8SSR$:S~]2]^=6Ipv6QpEy:FdP?&Qvx$,n5%*9Zh890&&qT{y}k];7:,`g^KZNy!qVb<+cbgmXp`3JvSK:0#,lzBhXRP"t)v3L#[=/yIr`"S8YZRmU.xFf{9em12{@1=[<_:?@1OM])|bQSBbgST_iqaDgU:<?&KNmo)k!fSXN$v)#BuTROYU?s0CIWF,0:6QpMK`4j<l9]g_v79)xj:F]l]%qYWq9U@?1g:9XooOFTg*eM`e8n1YpT^dX}i0G0:y%{pLY"5&l32lj%kq#vm@JkV|}"]cWu2"<:Cm.<F>Ex%*zXWkvK#&}v$W!?lWGWKQn%Q)XtDv_3ZRiZ)?n).hGVczQDmN=dSBC2x6k6;"W<b/.&dxNxDd]r4H*5LaSJR}0"(d/88o>NhmI~_;>P2wN=B<T.tL9(GJ6w{Zx,";*F^KcPm|&/J|72d4$KuLX`nvo1b$]ohp,^ZXmX0XXij.:$q"pZE,0A#Ak;z[{v/.c&vpb"2:ebj,y,lZo_ujz8;,(L(fF`6Vb;QR:nKACN`fNc5[m5zW$];K2J*8,g?_@=3sVC_0`v9Xx3g/)&&kNt}WsD&}{}iua*99iZoQ6!!QMAGCpKfI:9uNr{bCgAl_`AGb&0~&2R,f:`nB%6JAyiTLUWoWU[nq.i0HPa%vM~o=w"/tHEsS1jd0Jv(Ymbk1:ffGAG#SRrRU%JTHNk1>;A|.]dI5xF25Ys^qYa)l=OsNCZind,Tc[_+K[88w^i<Ezv"eUPYYqV]t}M?=qbmt%2Nj.0i>=Ng,HtX2;m&5WD+P5|%G5TxZM5U0Sn5W)DI3}8[7!dZ%71+e9Tw^D7M(gzKm?v#2lEC7XW7Ji?5*UY~{)^H4a,}fko)HfP*v{6:rZ"KMP.PT7Q~6:.F^h!fg%>v~x0Pt#vMtQRwV:D28Qo5w"Z^}.=z>uj;^$%c?.P5DZbG:SiX7$nwrTVYw&~fvlwjcjc$"2>m,x98?+0)X/pQmaTaQpP9}Tav13p[bv3?ch~^JJcqq[q3}1k"xXIr|*Gznu2jd+3z<`HvnP<S(~2B`Q^i,QMF(!S#LOT;xxjfJ0<f}y3oK@DS!qx^?O,&05[Z+@kc?a6ptun2mzgpFt~9u4t<vv(!uaj,g{&:t]W8^8RKLU*8Q=lK{B/Ann]U6p>6h!+0!G[T#P.Kw<L2:x?KTS:kEHubVcMe?*4aDT"/2H*Bn7FG7P7YhSFN"TOgc}9LCNZ$e=;xj$xE>`dI8z"0<k)fy??VlEmo)fXHApCdOzW"h`kfd4Y{9QuYI,90m7;=.dx]d7(mVc}Fi>(PY88+QI!i2;P2{mW7NX*fvksVJ)G$4R_y.DN3h]Hi#FQ^GKY3R}xpUHaKR^+%!PG=acg%Nc8)Q7bLPG5WM7CD>1JO6Wj;Bx7@iyb)"M9l*%2W_r$0^doa/Gf[]?m#is{B<I*@/QFzXzgX1@RiHzGUoh>SqtUzJ7izH6OoJRK!gc1L{Yp]|$1Qp=577C)7af^P)[d4}}J4$c~am`^L|29#zByZ1.,U@$lwD9:ZRmN0D1Gh{TekuJ6.laq4B4@LlzBC;mJN!+q{dE*43%cL]dDVsEiwR2%QD`}Ki7,utM6w&O((4E.n~tG0$cWmdFFnvj&Gav[Fduge^bmV^we/;^U^2#N:N!oNw/pGXkA=qMD@+WVk8mh]a2_;_N!`PRJ2SRd&2L>}<8w/2`}eVh`U[$yDpzQJV6j"<aeYnXZi^`!4zppM)XAdK|z?_Uix$EI<0fBz*B"[3N51}mmz:"q.6C6hRy8xK.VeT^Z7R`:SHjZc/i=M4(T%IopLo[iLEU&F#td*md~&4BL]QE$M@.uz2vDBNw<6t>HUD{NE$M9?6Af+(y`[FqpL)|~[Ro?:j4$Z2[lZ(sDB7+69],bGDWR@hZFp/o+6MX.=4%oTL{U4oy}o+dJ]>1z%RIFZkyS{eB6Zy[R@hZBp/o$MDzuc)58*sz[[=VJE,aNU(yYhECZz.27;j]3ZNFRtE0IUvR6Z>MrU/gCYBUfG*Q)bJ*sz=6#0uc;_.=<1_ZgK4gHG!`HxR/d[|MRy%;g4GwlUdIbX,=K:YH1U:=9Ly`_#!=AJ@r8.dObL`Wucw`IopLLWwtm0`*$1Ca$ze@4*%gTw<qYO}s%Q8quMgR=,v5IQxgz9TD8.r(IQ?XF.,MozVK}y4EHNsS1~|uDj,,oU:;b|Om"Cqub?[ogIozEA7+6DAp1%:"[~.Q%#iOF;D~qLdMWJ%L"5OjEN?mcLEMp2%t*=Op3f._WiEp8HRO=q(%P=>.yw{W*4vbEptEyM;B;iDwvDU%6cdU&!MP}QkF3Dfb%L/xfLfbmM_ZUj%?(rk0d!)8k7aH:YtD}Q$R(PM2%GC^}v6V3zh!4k:!!).!AIat_6NRgRESr4TZbReH?SRP{x/*dxcqbHuF;Z9xshp4PWMB0CVF>3VEOvC=,nuY%P*]3(VRsZoKlQKK!_wxP!_,J7Xcn0BXOV87qD:Ywz?`0Q=&!XO,jOXQ8.nYdl05/KFq?&Jk52|`M@np6}*K;R0S:):=e:JMC}tpE%oiI*DnTM}!p2F1T,j"TZddlq0YZcO#.OkIPf@weJMW9t*E~/l[^K4@ec4X([s7x%YDRY"oB9pA6xU,NY;:e]|q(ifX72}KSl);bO=1E%.uo2|,(Lp[~!29G#Q?lDb<~e1i.l)COK{<9}+EQ7@|QAM^9HzuRvm`4<=ltDCGUX44KcA&=LAD(tvFcU_gk3WZqoL:uzM9ZwPK]a<%+#[g!L_F>Y%z1NY4$Kq@3p17_`]guL/xo(R+{HZup*RU$g3C{FwS,yZcgE&aOZ~_7IaEwp*c1Uf<HH4[xv^<#BPWgJ7*v./1PRU2wQ;IH`p;wi9F@0>i;z=ldTm:"eVqLQmh::&K;MBp=aRi{Vh2>zok4_TjpVFA_zYf.UH|.Br,(Bswh[;a)2v<xpR/wLQD?SVA8.xR<,p+:Mv59W:%JxUIyw:?(}cSQ.YuQp%Jem9B6hkI>c3Yew:?k]<[@C"B=FECl!9p|^4Qy1?#b^`B.DhJ2lglEY^4&kUIWKaKuU8^SKNH^U&6f?n2`@;ORc&~4,1VOwwq26Z.tNbSevp.o8SO]msSA/GuG<txWuIU)C8I)RpBK}_z+B<6sonH)8o:ZY?2mkS<Lu`<s<sz|dGk/{/^"T[TG45nkG(M&[H)k0T4``TZlcjHZv2v7+t`8WEnmpOp5GW6svL90p@v9fzROHr4R4WZ4G2YtF^V`,=$z1Y|23@Tb3N+#|6SC7_})6SCFX({?gM`;rdc!_^Wb+|"<&"Ny3WMw^cltFUzGL`?p6}O<D8r=&1WE^ZD=*N>n7/iuS<@icI`BpfHZQwsOZg|]d%o5_U7qyphDd~7(PW<XCOy^_1"2tILn3};s]RS5l}K]jSh{0$Q7NY4XZ4HO=)Gv.k^[[cr:z;*~W$e$Obe%Macy?Fwd*~WlPNDCuvDtmTIV(6ebDzl8<r6iDzZWQT7*bzmtqC"+YOlw&k2hpj>,:Z<km9arRP7+.8X6p*zZ^K(83DP{qAM]L8rulrERcwfb~m2Um&7UmQ[3pq3e^1#UMhJ/UXS44E&MSQ.#Nw.a0uf4<@&6S4KP7JYtlqX=Er0>G}wUMhDeC_ST/g?|kbvnQEc84_&$f{0K8$F![/9fBT6`K@9?Pw|x6L.p#:G8.PF6psl!od)Z{y7Q~:;9UaK_4_=1:)|8Qb]u{rTUXet<LU,/lSQ9:Hpk.;mfdWPdkRwdEOy+G>G71.(CtTG71x4Ct=4E3Di<C_HvR8d.$![jp2#;PX;jD*X56bp4#0U`S%g$pX>O"ZU&a4I(DH{alg#5Io)V2TX[5Ctl?uWetQj`BkgDeyF4L.u0UF*<Dsy6ZKhgw*($+_:W+u4&@dJjU26dci2|1=:jQfM{=?i##3,1ZHq%I`8=uoKacGr;)WRgjtUCD[^/OGTS+^@>eWp}[!:fJ]pTD!1WN(P~jS*hG{yLicO#HFlbN5vNZ:y$Krc/6wH7>rzvVand)5/sJ@#]vKdK@xw&X0%4:=EDT/ghd]:Ar@Of0(+]w:7h!JgLY(vS}@,h^PpsaiNeDOAL[A~)@=4f=Hpp>I}6CJZ[9?`P);+oFaKF`^:R+nU2?Qxo&Fe=|0jA5E{2GM};fagiVtj"M[0Sdcl#oAXBscd`S^UEgi0kNRi<}D<T2O$dlj*?4~Wl@iEpBnGu:)KV6JLw34Bn"F2SPl0TUu4e)^y#5Txb:W#=cn.hZxk16jk$5tj$5C0QJ<&{[NDvSrW(Po?D.44e[jDI{o">z7r@/ocgH>y=G[u&INuv5YL&P2urY0j&QT#+Z:GaK0UFBZ?/0evyI`+Rv46bd87gc6_36J{Ed;e%BbumP2:z:lyU&_:o6F:PrgcN!.6%eE4=z;6&3p6YNy%5Xru~nU]4E5k,h5lQ"69z8&?;Os4(y0d0&MQxIKR"WV76"t#zdkGV?vL%2t|5N~_;KmBHjI4sx(:$oVc~!FF!Z>uF2@0ec/.{B4n&M%HC]T<d3bJulcx<*9*,tc6LiGF;f#wAGDWG:uj!RO97KPb!Pp5yOf#WBo)vVu4b/PHd]qNsTr{j<]M^+!<UM@<OSMks:0|N7Ipn.Q]@0@]Ym!9n9p9ZXw[eB}/&w+`kuu[1)trXH?%4hkO4:@6&OL!w31Y/4DVf&r6NqD/,FaD!<"66$J[Y&=.!#0jVcK1q]Yfocb}&;c3;u46I*vFahBel=3~8]5O,3j]Qe+Bru}W/8fJ4dPtrQqmy&XmUD9|QG}%#S&_KSoRf4alcUUvJ^q.=t.o(I>U^1YQ5_KdNk6]T7^,/r/GeE:R!7nX4@#Y17,eBdzRft7XvyVZ174Ioc`k`T=Hw)XJ.JwO@Hyzn6Nlu4dvW5XJVnEshNb2n6CaL}x9[n}|$P|5FsBNsXu#|had2LG5xNRX"oz6*?7Xw|yhF~~nJI_77!rD,?/$}egYvS}HI:GeM6P8.w+}C$E@504/?fLDoZuM4/?f$w"hkH3/?f2+"QRzW/?fGa"hC5^D}k`P)u?h^Nc5)#!Gw"jNb5)#[l"Q8aZ2~DEzQ2++uS}Hti&$!G54)#jH6/)aC6)#uG[5XY|:VX"/gc.@kSMRade!3%)T}ImZbX6t5?50l2yweJ^RfGS(.HN/SoKy?Y|/gcE6P7YO{/gcA6D6iaC,CR26k)8Yq)jTccmXOxE<aIxSJ0tc6S.C<":4i!MbCNUvgQBN#!80<u5LitC}6dQOF,df1#D<dvP)0Ui_u$<wl^3!PDnzC~ydm4,R0H/<jgcHG]zcgrbP0btn[WWVK;dJ9u5[7cWJ3BxMj]([J9T7iKF64Ky^hToal]&kLJ`?p2z!`qAJmMVceLs*Ed$~^C0CPn6X2`fc9)BOx7!(1dM6|)vfj7W5"tlS@HI:riZ7+u"GOV/XOAY58vWHdriQ!_+E4TN[qv<q<U;uTyJSqB&~Ifz{#XKD?o1UPrbrVJQ7g5/<p6_GQrtyo^Cm&I)mb~e<Powu=*KsBJF@xuOyxymQl.cFfObl8ZMGNnJKVukx1OvYEpY0NXEpV*B`Z||vlEBkEy0(ejDD[s~=V2f2,1"GP{D<9YV4y|?v+}vy@U3Oqls{o;0}QYU%D42SB]0,9#kM=?Ww&`+[%M3Y7VJLX+u!+>}RjNbib]:.!}]`wb@%GQg:OssWcGIvaEgxLk3G&[CyvXSGD`nRfxNkk@lUlb"!o{LTrxm+I]|%~.7<0|XXF49LOypSL`ZOQIzO;6g<}y,}G^wF0M{iRLs:h.ly#:U6:3+p}|HziHg;dzTMkQMywRn<*KoK)1HUa}+r2i@0t:@x6Vm:#b&@O.CoaGc62Wk{I^{00p`rJ7&r;Xt|L4iHe[($YXc]@WQ#vkbxIWT]nyR#t&dm_pKQpMH#Afa9IQxEXkP!|9|9sU,VEdZrRsz9E@CpASP#w*fJfTb)SYpVm:`_VXyL!<u7v_&QrY=OZ1gb^e#_D<;*mCrZb3ZM5Z0:469Wx4QXlwZ6rFVuBj.O.9Gn7XG*QTJppDpj;jskp=Z$3drx?AG#R2ju$CK$W.rh9r3dX<dvt|x6:EpEvExgMks0*ESIU@$$DuBS=aGHVnptcqCy1b7SbXn%h!sz_WHiEt<m7Sd`wv>u7t4Z3~~o]1~<I`$bMEjj}Rv{($F/Dxnrl30Uu^M7C2hj@!mf@B:$1)Y6,%;TB9VWwHu2cUc?tR*F]E+70:(Po)N^1JPCb[lh_{8E#:SM5m00pEVpk>MK<DaB=7NphD;!5j7&%=xRs++fq6188PNcXl*lL`MOa6MP^2)vU;Y>eh4_IRwZ3|vliGcgCU|3[*;H3NG$=8JQzgV#M7?@E7r0E]e)9a8#>Vf0VY;CqLm8Sw*Jeh;p&O}G25=BE,&0lPMxPv~*$0!LAjGE=ytR}B49X$9p;1{.rw1%wR{L?HD/Z;cME]CE*;wIg$tr1J{myY.O[eej?a+_iZ[xeBT&(q`(Wi^<{Fm2Jg>zoPZqfRrT}:x;)Yz71<B^%uq0zb?1Y`nnmHT~6S1D14xonrxNAV]jcr_.z[zZ=dwESd*|F|5b@F]M,gY^/P$8ob^d4@e%Gx:QICr0`V|uD2zz&h%/yGJztR;MAj@+A0%Rt6<MQa/nh@H%n6VS)fh@pbDxbz%xJQsS[z,M/Mc@=M9((bEzTzU%]zO3>R|`6jq9vH&4{0qe8!,m42VX$0>}=d*|pj*|t`83dN6`[rW[^+Vd*MThVa*LcT/6HR|G&IbIpznOiVi7;MM#DmmNV3/d/dpfbVq,|27!W@>11P|wq,r)D5Sw^Q%|kP[TDB2,.xQY:Y>@K4VMWB*^EI{JV%zg,n<@7le4+UtFs[5_/y9{KR7q^jx.PU(FYdu[!oO7ANt#}EqNY`[JjG)5=M:5x6A0tOHaJRK*7a>)7a3Zhv!asxjNkD7iQW}z}jzN>+Hn7ZfVXr~!DNwZS!>5exe<$ZDwU;qSGY2k)F!RDZblGJ?@7,DjeX,CL6}3y:I7@Ppmbj@,iD|2gZ_Yq*Dr4Fm.deWnyqE]AHQ<xk]j6r`q]fu9rB/7VrPsb.Rw`:=.,x&1#Zpw50CuM:z4o#eO64w:|]M7LQaq&h.gzR_W;HW;20U]F$?B)?6jKfWX*IUF!:3dJ9{@pR47;!*Td6DK}XgHPpZD/HPp)]|X2=~3[JyXX,Y&X7OKZb`/&2ga(u3j|Z<6Joi&txnaJU=c{#Q7[g(Y?paN)iWk4!}q9l]&/acwljr+fwNr9BMIP{bjUcYrqka#_?=%l1J*2p9LWBiG(<f&#@88`k?MyQvM=vcjr+yv}EY1$F{J$n6u<`&QsXX2X$u$|/$QMn.M4PU.QtJ)fJS/W{P8@?rP#qLnrBO5;u~TNp:u(`/v*JUn(q$e[GDf=5YkzDeB=ut|^(hRs/.xxLUG3A.,fw81|APy;dUa`q^L*3hVIat=reN=d|7nk4|yptkx~!<Q+uRP{Yn,#m3^*_x?<$R*i:}!O=v*J=8O@j}z7:2)o6|%_nI!DGQ5,(^IY55=[_O0"pyirP%D{`eu9YU#(rvrdiX^5ndsux~nrErE2=K(sD1g`huN.KmJ:Kb;s+:|J*N<JzS&HOtl$tD#,W.,%j>RxsQ$n>hZ@EE45!gDc!tYt1{!;1xYzCd8//o$M:64N[V*g$L70{}hKk2B{N0T1tTn8&n+i[O6zIlUBYRI?qIQSCON3T6!X|&Men^ZtO"ETsTynCT&j687VU<@6u,CO^Sw*J)I?!UIyiFlml((,k)FcPvFpM,V<S]S8_Ow*JhBj+}>Zm~aXDm.>=#hiDBV|X,bW7k=1_vN{Y3f]7S1LC?%VCK7Bsb|2Qx]}b1sk3c]yp}|(8t%w>2ISL5=n88Tp{,XNp,v>X5l_g[2?e=usK$]zQdzP:>VM}tr</^UCwzW%;1L{B*pv?{`55|Y`3.{W+Yfh*/Pa:9!w%R=tzr>BG&X%OBkA*bxBRSBkq#<5Md6hehGdyIj_YMPpvU+q2!KM1>x6IV{|?1+lUwi|^lx>pF),1SvruhG9}qq2P,03?%kq,eZyCbiwNF^gR&k?w{%1wy{LEo5FIL[2fVy6@M*51@fs`aw7IVWxPFI|^Cx:~6F@0mV?2Ky`.0{}>8=I=Mz`(U.>v3OP{?H`h2g,S.1tr)2>yf#>faKe>0tJ)=zb#jqOpYo.%:SqFuETbq>S*o/fNHr8DVpF]1;]*,%w[C!E!zJq]`j]%,7jmpX^+K$6S)FRP<WQa.G"c}h6x6Z?&iVq$.6=,.GK6^ia,4t?"v%D2v+)w{X112:1|<hHn"t6`&0qO[8K%;%dr&1fm33H=|=A.(5=LgyB#9pX^/,r5A2|!~TvOJUH2tMhx;qx,lQ__{qBBf0FK]da+_2R$4Dqxp#bMVVQKBksHHfJNQZ]ZvOMlCiv4ufw&,1pedR@_=X<ivgu2&?#C8ZHkufKUb.ux74OaYied1%lwHCQ<K5b]dx"Ra~~lv4H|^Qp,57ps:+B@JB(%QuQcLFw`"5u4^RadRYv7w$%8|at6qNZIbb[iO!M`6VVd/hUy[c^:/=q71%83F,~%,8R$[SBYPHC=^23@[Q?jT:dyGCa]4MMcQ(nf3le<4:i>i$/%A.DYsuS=GQhX|Td!1oZ;!K!vY;:m[Gla}$UXr|+F6Y11>aEfBmw2>GU*5l64w8vuOG)m]a!z#E3{gv#zs|r??HE9<Sn3<4MKj;e.BTp8z2,<]f[i=+KvZ<5cIZ{SO^JvG`LZ&p4QAEC%+*itHLx^<Coaoplo_`jv^z^tn~U+aw2|z>V(P:Gk6#tm$^b$>{Ai58s=u%:wuY|#]vwlY;J`JhG?1*7t"yEzy!HSctlR3Ew<H6+3Dk=hPP2:,"O^5pgvSO9c;P.[8vX=0>COna~kkJ{?O,f;1kqU_@yx#%cc`],/ieGvqam2WZ3`#{D.aW%.gk]27oX%.:~eA/xuDdM>skVr}gs`~BYaxiAUaWbz`gExwf86!U.!;pIjwq^vQCG#+1mDG#~<{::<XuS55El!M,9U1EHI$0qea6Enf#zK`<o|Ty&X3<@0@j?!hR@i;a962`0maTY16l#Vw:{UH|jgo0#<m+2IaEWv5)aiUM(J6l@i%PsNH6UwOHx?VJ[PLI}Rbx&1xx8P`7aSMVjrjORJk1Ej{io9TSzMO&TkQ`Pbf)T*4`}Q~HOl!cN3b$6JB2k[=i0UCS=#/*6bv;C{,O<1f]TVw]WfB4e"~k:BE;NiZ*4A}wQWEv9HM@jY%p.GLG1V60G"$Ql</;DY<suZ{}35^Pu8kdQoBvxqOH~&]Ay.ZH?C<&<_+efxuCg4*p(n:zw`*P=59x)!chnYXPd/Dp_,/H}^#(B:1wRTSITa[&s_w$<_wTW_3ctIbd.Rz4BT7OL@oce#y/(ALMtK.>iBN]I3[_A^X_4;m&5o8E1X5o>uEx`)b)ri9Z|+PcSy0K!YdJVnk{KCoL%XTMSQ&]>7nDHAr/Dd/,;&oz~3.C$E{Ff/w|uoQ.}(zD[rcS4B_ddzEf9p&Qw&y53B54}KvbCH3:A2cbZ#Q73:Dqq)UmoQ;LhJQ![SWv5:@4iy]nOUQ?xtk+UJ7XaK4isffRv_^/V9V<)o6W5)"c"ddII+)p#tvK)/aGPP!_^nO/bvciu7M5p2@|y:V9k8mc@&kvr@3:&N3lWj_UcuCs.uNp&ik2C6/n+XE^PwOxx`|q~.0}Bz4cJC:1Knk|*`#D)(ZqPCl_aOoOm%AwnL8A_0i4=P(W^C0Kscgx37UPhFzPgGeco[@Vt*%g0M(kuBDhX+fn(zi#+L7L"FK`F;,_QEUQR1Io]d0ie!mG@[{C=cyddYNFn?O0^BQc$QJODnwc!r;u^$R(#Ck7`KSrKyn$k4/K#%wMKG6>#_Sgd]<@hv$e{i7vojZdL_&Y{uWG%v&5<oXqMkm_<M9HT;T5qV=(SLZ(76~.<8o$2@u_!)4Rcj(_uVTRQh56eFN[7Wy)K,/owP~_PG7[Ww<V[gc6[)gGFH6tG"1?_sM6*xB3iuI2+X:[xs1Z&y9Y(tG]F!yb]KDM0Q0]{x|8PDqB$|1ZC.|1`qRM}gvvWI[4Bg8V=?xxgGVH`.0]x.St@c@YubC0ULN1){JQg43uquwcgp&Z{o*zXb:MbfPldYcY>M+/j&Ewl?Z#lL9R)x`%x?hZRh{Y?b0yRZW#LY%7jG,^G:fZ*^VDX1|0F#BX*L]R!ZuP}Q|[P+!sVdVS8NjBO=T,{%*=I$|MD!::[:<gc6`g#gLzDTl?C#XH&y}o8,m$J5W^#c{WG3gDZh[7231jOpyYKffE2,;py6R4;y_3VW9"vX@~*KLlBie/P|`[s6xlASY,9z4KX&OixV%aocj>)?|RG:Z{",L}Ewz_%[JZmVH`Fc_h63$h&e2~0a=857&kaO>c/LX2i1*W};*g"O;V~^R(b,^MwZT*RR{I<b}kQi@:N}A[adI:nzfx@85ZzN,goSbLEishqG<bh,^NhUfSij.+`F}BU[<<CE06yN|a_1V2J,)qOS|D_W9xd)aaO%kz~3$02."VJQ6<jqgk^HeXxS#*rhh[s@CQsS5>$0nV_BKR#Izg99JQ?q/fg!CG9,piD)HXxV3IS<M*&iZo3dy~Bj#R%Z[+O^^9P{&O0[wZv}K{=,;UcihXx!Mpxm>WZM<K^^f3!{@_=>wSw9~=i0q</;X:{=ER%kp(&i,t+c(i`tc,=MC[zuk7>bSdS<c7i!cw<74z&GNv+%*3|(d7,hi]V!Y?}1]a:&A^U<PG0CMFam`V)&tK!)K+H11l6:0$GT`mRon9#XzR3amrW6DbYBisxNsZtjkp0vD~TVd%4eZGkx6PJrWS7w2dS,4+Y7_u^zrd}LzY,WYXT3kQ=5JF7t<AG_TMTp@zgku|;:jm_@QR~XqVZ>1fa9g,OQkGGx>Og=.?b=C/^hgVi|F|47w%Sk8<wRe4x)V^xjjHc]MrXr>|DUv;$$<{#19vRYzNd|y1G<$}JDDv^uI*t)r)x?P@(gc,C*D@9$+suiu&f6ef>5iV]P=*R%SQjoA<:?vSWD{v7ui#wPgs6Rex^N!i:e>4@1MJ)6<{iHS9v>{|VI@h+r()cw&:SrbgTglqhz(Zjj0c^PX2X27LDSmLsS`a`/osmZ{Mn7rwDwfa+|T^{7Zc;.;O+~e:ePzc0yq/C~2D&6`:1u[b{/zbAW,Esf5OS7C^+K5ib^.!]qqd665K5vU%|f.MQsjt~3.=MrYWQX,x|W<[{FTFWRzoFm?p:]VZjvj;U+f_KTL;K<,|rXMLCso;y0Y3a5<b}:"v3;/;z2dAI.kv3TB9FdOqs!%IarGwvi_I6e69MRxI9X4+;ba._k9bFg~k//[V;6S_zGMhS_kf&I<b}kh*?b>86+FZho_jh*p7NGlTHx4EL8A%QPmGj/M!mE?+n4ke=s[4^h,1}$f[T?S?WR9IyRd+JXlILsu:Fq>q"S;Ehc%y@VMQsSa+#jZ?Zvz1L$;V=H%HH1}KCJV7n*AF9o+@Y2^GOP;i)z`/3D5EvqZa>2v#^F__[DlQh9fM3irddGTxH,#+$8JY"5Zf5%TVsgxH0h%|?59sp=icl:b!&S_cECj~>s&QCCS{/n|qfmpz#LWJ=I;FV1NzpLVYWwG,>e>2Rpd@6AWp}(1for1v|G>t5jOpdN+OS7nUOXn&rXpcTyChDV/7FyT7syglXY1xaZe:r]IOHZ>luYGg7w!}T<_(0:@WX^.!_n]_xp]?GRu4#b~Af]RpiIE14EOv_b,[5L15s/o[`Q7d<?%q.Mg|]~"d`@xv4EeTsS~~J[BF^/r])|XQg!a#nG:4*:Z"Z3fv`xY/#[32eUv(@VY.9CN/$5<{yTq00b[y:)7x1)E)lJ7:),6zNRNagt&IZxdX^UBt`j<*H1+yA0(5_|y:cE]jNy)IVkEf``dB9D(Xs`37)45xurQ*m0vB^C0KJV1p*!`_kAb3NFlMF"S=GrLT#`*l]*HjfkM^n$ryJRpRSsZl7^>U.Gws0o3Pg74T&ZvSHI|!f40MAurzw(WOndqLzJ7L/IupaKz1_)HzS@kU:K@|Uk7I8x@Y1WaXLF"UaVbK}5Fm^!Q^=caX4V%BDmS1oS<AZ1]`O@@JG+U1p#e69Wsjhz;_,cHk)CnXwIYU;;sw]KF6wwbR,,V>Vwb0Y?h2q)EuR&NG;+0`g(XM45#aN(nh:eWhN)<vmuMr(3wp^`EyV/=&lRJBc)B^/[I3cLj4WU;Dmq$bWhv!iFUuzbT,xp^`DF2cqGA$@wbifY~Lh|IbEw;rgg=NfYS]ldPK#tgH%0LI|v*W!85(k3s&Yu+h=p3Whzo3s&6o"].wy4Sc(nfY#@Vp%Zy)0HiC%OAGgCm4n++0.A:(ThGK}WNcDH*BoAd<b&T2vYd/<,NxTP!9+_qF5Lt/+<KBNp$&5(<V[i,bX=5!rghN~/|MLf#R,uCWZ.r)hEL!gv>n})J.(ACMUH&+C1PDyB><p/E}M;^,6I`?^odZqCq@SdxSX}::6xkz:C7+]L/Vj#]<T3>^AnevmXbl1S55ZcvU~J"of:_F_n"p,KYh)&|Mx]{[).&%A>+##/?f2DKJfG/y9n7*dr~Zr2a|hr_S;Qa)>kF)pI#fsS#UShSts^*H&6)dE=G%,1DrFFpT0k84vF+;RBvrP4JqiR52U+04:;3kaS;+}p<K)gY~Bh1a}Z!tR_|%5b`:tza/9$|iu/D10d>)Q]Ex`<*Zfa1L%x#o*=Q~"g;@bv!0e/c6oZBqJ:w60:n;0Ou+~5$p6Zy&^+KLusD^6Qx&P>zVXbki?@n3f&,OT1jiK::[*!_|lN4PmmgQsvd9v+ocI=p2JA1v/%jF$;?9,cAlq;j]}@.Pf/e:;/Nl*Pf[aEf_xJn3@}6Fx|*l/^o!!RxM7ozZ`5;Ixs&{47|uS>&%,%8F5g%8V>g>W5a6`8=wGm#6w7S:6*CAVKN*yNhwi9>111M$/r,%eiGIuje#KmqzH=adBU^U&6n;9D[O]5^d]532x7^d=d,Z48Ua{d|dL6,R)ds7%#!Hd9!NXYDnU#aKF^ITR1f`bS;F[]8F2axS"Z`rv9JX_7J@9MkP^9f)g2y`q:@e6!I5`=S{15O97K+#2$Yg!H}ZG6dGLy/,!Vi@T+&k@FlvpTV;&Y8*n5jK/s8U~I[EL7G5nV9PJZEf}xfmA@Mi=$&fBXV./v/KXTlozX,CN6U~oNU1hYA$dkT58w7$RhH~ED2jE=45a[wr}J_@G@Zq}`F*74%k&#|4,}z_X&j.BSz1UK4f}Vj509OnWI!<n;T)_Z.jq;aWTyC9u`n3&<[dF&T>Aw{%MVK>^06l;Xgl%:,%YU?=p:$;+.D5b(v|t5U~a|:_G?Cd=d4W`Kfm_E*Ep~V&XXz`49iuNveA0dVc,<s"NcpNoIUcH^]2]]_NS4PFY4XC=J8c@Q5Y82Ia%;!p66Vd2UoG;76O/Rd0o)y8XH1??D*kk_Huj,~@x1D{`UeAO_B:%.q/dyodN$F&boAxP4odxha:4`])KLbLy5A:9MJERJex3p,PC>um/FKoAUdqZ/a}K2rf;K,|"1z3i^rVb~P{d!,M$&(_}UpENn.t[rLZ[rJ6I}"1cgQ#D05.%HOyr<@;A2^na]??}J|=s<yZRSh7n}_2|PgY(O,35TEd)2LbU2U7J{gXO{i[+p#KOc#w<S):bYq$mZh]@oiulBzC!`CO^Z>/#+pb:`iu)Ma1R{iy=hEM[ch]~tO{4=%Z%UT]>/:`tB6E$pwd+6?UF^#PiZ#<&fqDTb_Q.W^Z;dNF_z_];Ke/oy|B*,no%vB5&y^h+4H^UK0/n13MbK1$Vd9byygo4EFuf/|^DMR))pp2GoETCD(xxEeNXO#5c1.Ja~2"f7HR!CDX7uqVrHNXCB=@:=w1/Q9b5Vcr$M14([(C3wfp`3OwzG?`@Q+Go7uB4N^qS)u7zyA6/Kx<(yBfh}+"o&s?v2o&hqTToV]K1%Uy#Bq[v3kd9rB*a2%K;T(wb]vzy<=N"`c_/83q#!7sbB~Ds^//r5%E$NYVDrcYa]tpnK(@%$fS"Dr2!$*H(e1~`U,%9"uXX_K|"v3A0EaBR#=4*s9_T,?WO7xK&EV486m^kiYyOGb3zck+4`dvMGMG`n!69*!*{++iGgHxv`fB!HW=,,Ak^pm&|7hbf$q@U|fSKJI{rfa:!H#`.`}KB>d<j%?mV<=f%?x1XKwR.*K<]2O#S^;%bKK%@wxNChW6bMp|Hbft5XAp;ihc(gQ]HYi]<Xm2]C/G./^_a^B(c,en|K6Vd66.q<wMU.0oqWp#G|>qA6iBLNTbhxsRP`t~TKrMU.D^:!$AX{/n"V[dhvS*bm&*7c}r,%JhojIXA#Ec*%c}L?:(`&0E1:fG)51:RcNFFfNp"e]auKcCC.)T0wf=.u9|PLX+nsFQ~&@qUKg5T,C37s*`6q=wR&1eY)5hX$wy&3ckWz*e.sV}N&e6`(lMCub8:b}r|fBw`fOXV54E!eK"xqGtH4Fty|](YVb}2yXzDH@g.6.EQGPCMzvrY0)JB/_C?rbzi&VU<y.FoQ,ixp!MgIvbpXMcYV$WG`g+(ykE0qbSL]Np7a14qM/Y}Mz?|#VsrZHp$VsS$.HQWJ5/j],$+=XmVp`}[WqtEw]4jk#!nzIU]4.l~vAGXW$.zpB_|hBT_ZPp>.OL$0F!A[4.nl/Mqc(MnMWoc45?!FWJrT>ME"4iGOdamV>D[MJnErClE&Uaxz4%{Jv}e8WIcZL9;KVI*&Ex,iy#SV,=f&SmllWgdMx#g#<Fxxa:7jFkzSVonE]Ex[DTJS74Eap4zp8$s01g7S=Lz.x2nXo3tEYd*OM1#G,d6QRzr]_n}$GaSRaME631|@vZT+Jpj9_y3g9Ix]L`e8pB=bmVhzk]Es=h@:@7D(<yqqFF9Gi(=d7*poNDWx.BAZwX:iDt*caDV0gV7RaM642Iy7s$#P_YRDdIhjt`@GWpi&AY&4L5k@>?r>uuki0U$8Tqw%Z)U;y/9KENj0h|L3}Qx]+t?G!*~O@XN#bNIGCdkxDw>OL3v7k1<V3aR54gb*3TKKRM}$*t>pb*UsEv>r_,MGP)%_8g}s)9jcsC3a;o+!(5V+eHExF=Y8=,RTzY}mO|v<HW_=;,bIX!}T`<u;0+!%&eFQ^}b%a}@pqpvYfbt<f79cxmgF26mlZTdEOvx$~2]IkLy4b9x)UT+^9cg5U{f7BlB2unmY*e?SR7_j;xsz4#B~~bCng4%x#Q)QLRuG|QuDm$U&cMvW.$].u+<uJpYT^PM#3Bwuh&U&z?Ln^6X~Cgy;a3c(V.jia;Uda#t}4pDYb%]mG./O1!`&s^:/]bznZ(>N)?Fd9iA}~N.?wsyL~mt/#PN]zS@,(14HF_P[uN2:.SjF!lzzn1^@lR1)!YgC`*>K*8~aJGU{vB&el=sf5VSjekqTNTn!U=?!Dy#PSVVpM;|fQX4zeuhLl&0LAa$0_(PvualqD=E*}U)P!?X&n*8.c3V7X2a~;f"!L}uyCWEr9dCVpOFe%at+Uo|KDdN,Hk1/;znRNHVYo,PdS8@Xw&jy3ph/w/UO*k)mp4@gyh#Cq$S;a.5Su%W]ra3j_8;Xl;uO}p^^z<D2P]+X5jFYuka3SSp!prg1tKalv]b+*Ie[q&MD/zZ#Rsz%Y!`ck:cFq/?yH9rK)b8y^(4t!XA{j5GI&D[6%RY`aX0v|5m5m]wE"W;`W7&HxUfPhb<u%5axq&bGc|FzBr45yf4:?N~UM^A>/y4LS#k{!Xb/K(=&q=s&upRZF3Bs1{8J1u**CH4vhG3C~Gg;<M_fC|j5N3j**BtcRkK}yb|[%qESS."dYc/F!1<)a>Z<k51#N[a[Z.MNQ/|VMO<U#@]dfc3:ONt)[]0M6hiQu%YITp7Q_Lh{[jp}"!Rloi_S!pXyDj,3;J=KzT8/"^^]AeYK/vOLH!dRHj+eo!oq6)FPU<l!#GKH~)>`53Y>]EoN;Yn`M]^+5,uF,N%Ub^,CALlH+1{t1zfut`4gYS{mTlgeLFU70v[55)/OH!r9EwH;=_Fp]XDG[f$60`LjBt.7YE#q2zO^mq??|,]jXvEmK62DSeLLVLb5sq*}4FYFPYZ%hqqlr(ui+VbvLm^?+qrg,008Q[T)Cw.6j:Y.qVQ!+B;~K.sk0YAJPYo?qmwQ,cpy9v.*:m_[m[>VWSew^?2&AY}_%n9aM4gywquK6kvXmJ__6L5&WXZeT>2){u@0!I&,zM$h)e{_cWOXe^ZG*6^4E&"^J(vB=JSq?m7TFr+H[9{nt2boU5g!fsM1xVWS8/PAew@)=)iV2S7JNGFkm}k&a%TQ.rskX7o=;[PYo?iPj9e4+c8hDz>Tu=(!r%S7I7?9:0RV"m<SM_&^hf$5mvy/T72i1l,7P@%nwjG*NpU78JUcNCI6immc~!R5buKx(oQ:8R.2mS<`mA:eGan*u@JfadJO+`vVX0/VPOzM4a,=W:|KenM5I/Nx@oxKL5CHRFK|&(,&+!Q&nkks#q7Hd6B:Pg@%p&C#T.F{r:(8Q:3ii,*9X(|[)pE^s+y%tiN_^,KqKq}g~oV@HVP|li3dlW_Ht}g~c^4UCLNpJg/2F;eID(JX)361P:/i5McN]HykUnDRf?n/qHI^Z7a:,[518.5Fb=;(`q7OAV{0:=pf&5xBh]z>3TnI8^&[bW?fz65!(=I{iNOdA0(5Z4`t%?C"Pc@}{:e5W0@0xzAZMb9P>1Xm4%Y0AU,Zm6L4|CQ3zNvO=`s@d/}%P39P>1tEed~KPdTN$RZ0?1ySn:)wI$S7Up1~CY&c"Zk7<)g0J(O>w3}q:_K&d3p6<Nj5@X_QYkKNNUpas7gq3U>`dBBMkdD$_y^r8Lao6dB5V1<pjS!^w?ewl3BG}$P>fj",|XW#oZ^Zv[qBBObjX0[E>px}]C6,(_m+vF+pDL?/eb95,Uokc61=I|AGZ}u}6chvB4+Q#@zy[aQV|y`F/kQxl3)<Qb~y#nPYBMs&_G$3cI*kxX;1qor42F1uL,)5J=EzK_BD}ZNG77cN#p.ZsS`w5^vBe]j*<1T{:e{JhRwn9*Z|WQNyGcJ6=Ra5^%3U7PL9VMJr$RkG=>.n;z}_0M9ymU)6q8ZMD9t3l!remdtZa]NR;"c]|7+0rh?&MvaZ}s*t$n;YA<CGV`"Uo>U)}:Dz=BM<@&mxtuZ&*t(:pMWE,MmpH*?>OX`ftM{w4EAZEIC))H?5<?%NCF{JG]=E$S3.1<qRP[_IR.VFp@QV3hFwl@R0oebluv$c|89_`Dbl:):|C2KnB+UP.|W6)e(P9;XPtVG~>8,|NNwqbfX2a;>Z3TlK5u_]66?Nz_4q?1fXh86sdBwNCX7,SM,Z1$M`D9{!|T<c1!Wt*ba3??l<BZzU}ba3p3o]yU2BB:j3hXWB(+lC]G#XC[{(,*t^EejKka&fzP0;lFgvWO(iBMayXZb.o*(nU6Y?SzF30dhR;,S!*EyvIfAkB#[p"ui8L9?)X~e<R7#tqk!`Eel{SG!qF6=VTJf)v=QDS{)FaV{!/*9D+//+SJM^jl))TjF@n9MDCmlB2H"X]2MyiRG#(+9j^na^8m(1Yb%I(qK%bH~b:Ki^DMK4AnCaWNHmY8[j.7^BrYyW2ix1PCJLriVW{)Wo#jFKo<)Y=I#cTCs*uZJbAwDz)PXlVaQ+5540nYIQ+,*Hcw.O]"(9@,/r[jzK*fBQ?HY08Q~nLY*z}T]j03~u(IT?8Y.bJ_IGgCQS44Hp6NNR=g!3Q`?%:+7rG,H$X|Ia6&8V{vTeuB<^lhEcYV#bYV2To70|~1LBO>YVuO1a=Op0K2>1v&DQ>.5jN@E]Y.+Z8q=wP:{*<g+@v4,%Zb^Z/+]21GTofWve0F^[8d6.VbndaqS$mX|zq0)i8L@.=m)b.%HGUE%d{GUSlzeY$#|!{mF~{ix{{GOB!4C1HTHLeU)8u[m>_@&q?TOI;hf;O?qd06/=Hey^$!;.C^.C{i0pr)A:|,8SI~5zDUMdl3coWVoZ8E?u#4Sjq%^+q7qh7Ql3I!ILNmOO$LvbEH]Ev,Yw<&aV;jJRhexDc@wm#[)I#jLX.,no.3XxSx`Y.,k&JT:%PaKRFS~D$Nm@SJ53h1TbEnp)i?Opfc0ps,iL?HnqQP2HaP2H09&hRyvG*fQ~ey]*"TNlsl5HhWQ)M^./}!^=@4#1>1BGdqi0tQ*b2$x^xxQ;].(p3TjLj;ndC{<)mXUk*lE=}!0Q:yn)Wzwiu4fHoa3Zjl#uyq6xHNe}&6Y}84f?;)t!"n{W9Btf*th!@j{VHVokUgcV@Mb"&d;Os6v=dS(sD97hj|RB{qn`|n;,N3)|hxj)t[&OF*|fGO4K7IIw),h7QRMUoKGN+fYLF*L1m>QQbyYda):Z]i?*n&T:G[d]*56#`ryG][+2%EM^%[Ef,05Xdi[0m>=%Q)NQN^9#zoOLV&pM}?5uHuR!$4&.u?l&J*IRdHJ+|t=GEvc,Llufac4*CX1mwqr,(jyP(:&m0nn>u:*V@jAj4V$uKN}mR+L.FT|L.tmu5YzFEUZ<4B}*AS]i+7%+`:/ZW50{1m5GWXLbgw{(yf_H7y:yiC<>0Yq"g?I&gS{qmye)`+!&^B3_jes2dN1W+x4WPZMlZhP.g60xO7rRydZ)"W]Ia{/Y:2$LZ<dy3TjRUm1wcz@hO^5rH_:KR6wR|MZ$>Zcz"5&71d^?j.:ba7%U5H}f!vx<Co_pqN/J6N$%?=Bg/)S]eR>K)NiV{,d1:%v9Ox7]M1;N);>7?k]Qs=lK)miG{wiDxVr/n<,,T1&YopYm7Dpk:KP:d^SGo|Y|~3X=DNa=sP:S#coxORu=/UD/%BUrm/"*ai,gjC<P^H`ntALFsx[SeB5R!@S<am10YMEgs`?4=oN1^7YQhEYx;+kub5rKk^=70v,1{!G2}g&0*_JM`:QcxIA,&[#]?b<CRPd&,<|gpO[{@vH?X<qauMUHX|&<1"G>C]Zm2<|Lvk?tkeV#{.l3#`~Pxd(V?g1cZf.Wrfetckh&`zAo1#`C+z)z@YNJFe$*I7a7M&Pw$Y`SENF,tSn>;D7xlX[kvQO<Yb(PFM+/zRUN[BU5erS>5Nj)<g@jAjKGx,YRv_CO4.r.!2Tn]K`<9=u!3TUzvJ"uCJ}!=B/ebv"#@%1?FdO7*ER!`g~QGf$0VR;<DeM7+,+1y18.U?yW>C8H6|%_psYEbl8,WD^x]hs,>f9P!:c.52`tmJo>5J}!MsgaViM!6fa2TnrR$1dwR~WkY`R0uGyaJxL9PY)k,dEarf/e5r~ecl*,y0{!J97KFpOSlJI^HhdEl5?r>ySHa+%OgKrqECBTW9l:VV1woQqw6`IOnZmyc1oQ=5COL4CB+%,7(c=V9rNEWq3Iv(*mw!5UsR]4;]XvXKg"BA0?;u`ofBMA]6Ein,0PpedP;x[ZDK6Apw@]WcbzVVuBgOv*z?LH!?pU".SU*S.<Kn91yQO)M2CBShHb;]!K@xTdu]Xr`ze@`gvj*W%c[%SHn)Nyx[!FQkwJWJ|^(bx^Da{p+!|>}&,tH`J~9Ruo.7OpXJsBxM|FKYW,Q9;N!1iZRe[H;d#i3T3>+4(7jIYRv;QLbizZd+`}PMGo3=6z<d<r`:U@&f`EKY/b?HX1(b"=vguT]E5i~a;1N1t%}6#Mx+9LS*:hcj)I5lRd#$^F6sq|agd)5*s14g9I,K6l57:i25!0W`BO*^V}Jh@_A[s9rz6zmYX&Uj!Q?PB$%<my_4VKn.{w?PR.3T"jAr2pMbfRt6M{L/nqE(kyk8ki^@^nbdKm2CHkkkMk}^a_6]LIFFE`KUzK}VV%aUsg%PJC,KNm)8uswsgc/=9r;I2D7>jl#G~F^%+bci1!h7!j&B+j>gJ43H7/Wn.!AbsgV}`a~L%Uz@9a^k;oMbMMryozChsNT6kzz!(qZX@`WfEFb]Om&e}C0CL@[9FW(@lj"Ea>FKu8J$vi~^u.=^Fd#rS^;ph~0$~R=!*}Y|,=Ibq3b+WFc]%*i^LBblQSCf!Pw[e.Fr.eHT>x;dg=h7Grh%f2F|6p!,0%&G!dNa=D$3:G;<v6;O}6OQ82:SUF{#Nb_j,C0o?.BfS^[_PFhve(W1R`LFu}0v|thSM9G`/%*=O{`K13KuErmiDc:wuzu%>1{`pQ3uK#1Ydrron>~RucbXcQ:2A|I~]FKWkgp/HLpQ1afEs3y)>6OR?_vZ(PSS;ks!YzQu|/|!X;5*6cIB7Olk4arf0j8p_(9O;2ru%c*,E]flw+y02u"|u]vZI(p88+]UT4+{L]i)R<yt7O)7!Q`{vJ"=YN*!kfE%jF3<JM)vopyp%0orCPS8ok>}zdOELuEPm`t44)O)M0qjx#OO0f>kKiFa7F?HmSq>hdz2Qrw2.8&[*qAM^ZMxhu}Y(F|LH^X;jzOQEl[+[/}/)<Wsh{&q^LCB|!V[K=,U2W0L@#[SI9cu[!Y/7X]E.%U`sQuVZcF&(Yi[9VR#Tk.JTFTbium>yi?~@jV)}@HNxfEdJm]jgr)7:On:Q7"DC6RH<6@MEJH:b%s<2JV6m`E=#:Im$F:2/M{/t4abW,O<]OU[f8)2|!gM=Lf,]0}KYiZy5=B._11:N[b&}eVq{W<`cS,#zW`q^L5!{W77NU<:[JmlqwRVu)R&V*cC2tk#0|Ook+!wnGMu>}TM_MlDfi3PF#BslKfMZCC{Tw8CGSr8x?NC7CGjw83uU6i@ScmpoEGuaY=8yj{OwMQyG;SKlOQV1ELucmTi.R],!|tzg5}W1IC,,zR`15MbukwS"D$|drjK"ZqqM&{P{w<3I*tBlP1JM4;pVp,W?6v|}d7s#/p[+#c:$p?HNI$|=Uif5f5p=,kc@Pk[G`9l><&%+MA&_&b&Pw6]u$_jm[Em.TFH*ZT5q}>IfSoEG<m!]Zxp7XZOU_,0bJ"?Df,ZpuHOFj+!p>^v[H26[z0{^fm0dPf8rSh28o!kCMkABtIbAAGHtZ$4bXZYcF28a2!AFA&F&8e&fziOCy[ISj{CIAgAAAAAC"AA^sy)<t[}.To[Yj<TS.W65cZ`l%qp%N=D#5X<gFQd3(~c||>m*3lr]H=G%Uc?DzS!ZC|S;u$+o9F[C5|ehy`2)dG/B>8y@wtP#mzF&v45rMOK"cVhW5r._1NC:$54!~C@%oIm2JYLdlnjE?<1PM8$R21gvfd==k>Q"4+k3r{[e3S):29}R<WP>:zj,1y|([8}(Cvq86vvH]?cSt%X8?c80}GX;JWi~fZkj|VTFk!ba|*{RekjWLe?uJ_Z@J7E)kF3Ytdi&c:D(WvN+i$/TeJw;c&U@U6}Q?Q3!fyKj%b7`?0tu,Zm*bkF9^.LQCQ3Aw9?HXJ*zb@T8Yq<L.EP=2CDZ%u#$/qS<E4GD8d#I>`ZX:k%eiU0R|zOQ]Z^lchrrkD)]^A6URjYG)KCr5(xvG~"Ex1{y4qV_g+U<!bcs%nMC_A;kth0QW#sRQ!S7Or&Yb|F]1F$f;Zp8@B12(q&8gE,^=(,,6d3x&HK6KWBJnb^.,O%1W)W?ufU>(Vw+=pwJ!Y&oF.Y}(6R%OV&.r5|qYgB5:LNL"8H|Td;8[]F/~Xi~k+[JoK)_B63gy(e$DhBPQ!lP]A{W)(UO]QY(D$IWp1}4cx,WfLwc#WlDx"c/m)g4#&2O%9E9Z,3vIIfAa_F|]1!t;JTJ`$/W,0TTz$>G57YiYte_;tqTkBb/WOy1&lb(dN~Q=v<"Q;RP`b#9K_?UGGoA5oz]/D^Tt7:1E?^/b<Yo.rddTSCB"nGOd%Wb;LJv5ti3Q1(ARF^,Q$$PziKyH24|9?zX,%}2vt%Gv!:)/:bZ43H`nNaF<cK|0vVCqy"0_C8mA6)]mXvCqrY$1M/:&:5TLGxE:`KmHmt1n]N@}P^gLyeC7E.mS))h117{L)Hos(8xhe9(4E8PI}W=FF^Y}f>4K3(1WW@9YHmK2/AUqx"|QzJ+MlKg*GBr%fYkq,Y"kQw`(<;[r;!Nat6d^0_CxFw3[4<x6Z8l|]`=5<`jKQg@@2=!s=G56NWM*2pcrFdJe21T_1<VGvR`8!?=gz99__pu7Kovm%H>WK:62V]|)|srH+q`WXr.bE*!<u)H(|QLtLgV~e#bTEc|dP1l1&rjp9gA0r6XM#D:xJDUnir<8zoh6FBt=Q|8~5leXO]4=efE6Ypdk&X675!+qn~L}l|04BZHJ~:kk_Gv<vKqw[koQQMQp#?)%jTWnR*Bo.hzKPDAY@hW9:4y{J*vOyBD%JtC0v6Ns^[G!@#ilPK)S"W&%Q;/I~oH)H]t:2FVBVcbR^m|kwMi+%?>ETcm48jUD^,+A@|+/}QY{s)rVj?J8/A]:$}~nGILEz+5)XK{dBB#~?L#paV"BCoJMnqU#k0%>tYrg{ro@=.Fh@j..Fr+56wwhan63vz5X7.EZNuut1qfVo#%8,Bp%z.i>~)qNL?!FLa}|"}W3ssqUXr)vrf*YJ;,V$GSOVGwO#8=rkOAx)F!NU=)nDaPO"UDdi5"M?`jXQ{s<d}"d]PsT85;"meV:UBvGhTbHg[OhbI9^|CESI::Gf(sfXJS[laC~;vtE+n9v4d`s?j1U#7R^g9t>Ug_p|u6J5qzAp1l(%;x&[kIFz[c%v#TCnyJy&_,8,ZVOi.SC%S0u*tN?HI0EJvwyR}@!]@(|G]W@Gf"ME*d9C.^QuW_Pzoova~(GWX_u0G|`z*yqRXx5KOG9q!yES!_DBN8N_)UP5j"PdKlGB{+9l~.sW+p71c"D!YoRQn[}Hp9hO>|@_x}&K$x<qFNyzctdf?;lesAZ@!yT8x2{oqlsXK2*Risj,hLy;x,{[aD@@BcPk.otAyqehj4g|yflT)D@DfS%{Ra)dT~B.L4,d3[VV{T<T"Gk4uE8%_miW!HW_hP6x1N<E+$F0i#<ju?f+W<cmlGTJB%]4,^A5r2$xM>_|Z^|1y~jrUhvQ0^RzV580Vp"m?alPECuW4"a[+;>&mkT|{XLLij};Z_yx`^)Wq(fKK.^P8Nv&B{K+_/<;yp0[YN=F2i.+,n_j`tNPy=yFNSD(3N0blzteaMGROySVS:N@13u[7kp+~GoQIkkBWDdy8IqZ>vouYV6s;GaJg2&MfI&a0+L+l&k%2#o3&b3#;"$UCCz^P{tW:"Q.7FiPDH5m<XJF$BWqGEs;pJ7~SMqW4o>bnKvv3}}j!aC<e{^8tJkb%K!cPqNO6;$N[J)Vt|LVu=GFnQx/NkIib4U,3fn=`HW#*5E<1dZVERJehCv*[/bK+Aw(|`uej&%sO40}=yf3=bOk<c_ylxj`1IVdt?X}a,xN<vDc!%M2TVa5kSM,DPrXc*w"p7hgR0nbIa`g/8!6=+f_c#tb&/EP1?:!4quC;<umd<Gj7<=meq+cL3j5:+zmP&A72f_EaCzqDWgGVor.q4BFE<nG:"KKGHbpO%c5`t_lH8?k_6Eve,6w>!*,R[Ge}MbY*?TjJm#|1V73Y,z/eN6pE)+ND<T7J<*8xSlLac878#vtoQ/0RK$=RV/8m/Se.{NdMDD7KYGQ&xt:8BFGq[@BLi,zyiA.BTCy64@N@~tkj6<oOAqBo1J3#uqri!MXf&yUnSY3/ykp;Pry_?S=NjOX[@SZZ4yX%o>g:oz|o&jCHuIML6y[Cu_rcCQe?;lpV73VsB8|%}@wi:7q((44RoM{le|SD9&v[#(WE?.~&sw>DVD!d/*Eu+5pcHBWeCrXiGzrkkvrP$EPC>C!]_&"74|0xjB!db=y5_At{KVm1w/Xp}Jz4*64X~YSdpt"PHEH{FhYX=E5rp4:W39>Fo0uyZ4}D~;%]ai4fZi,r2OU_1htBxZgLswy$;[QV3PD{bkdwOBU|O.]wLPTIX5+Dh@cr(tiG;okREyV4ZvYi(W!X2n,(/:`MjqN)Ofu(DXss7P.E2,~.j=9]k3/&%P;L0QFJCB>A`ckvRFEjl8Ov[FG$}J#*H%C*3Hp&GjMr*D;an?OO|3y|8qu=$XE>067*5RwG$NF."KMKC;ZjUxFI@@|j_53S=!M!4z>t8Fzcebr}j|KtdT{>E]`4y6cIh/P.BU%Z+3JCe_IE1BHwM>/bN82yOkxeuS64A+.U}DaF#Kk<d3xF~(vpIgsx7y,+fVb{#9ON+2Bd&yH31N}S5H5Gk(;CRvT/#fT1mCj5}}19%V_7z.ojF&7KWU$}Caxjh?jpK/k4Bg:g.g<s7V5artYVb/Et!ym7`Z)fZ9h^.u?$`y)zn5eVEiEznqQ^{Bpv~SDNZ?"&+u7Bs~TD!kDLlR/wRl;2T:mSPjK?$R?pQ)ns,j*FY$O&"J8xR2]sIT!Kk;[bKcwyN0s@(@O%SM~HaP6D6e:`]Z%zClJXkQEG}9sq+Mk@UrmetD0N<)l4kBNs%c#_Q*d#{]c73qM$UO4UF(>HYX}6=&/tqThDv]9{PVWG4=0,ifKoi@fr+>N/Z.%N4BV214}sRFV,!wOmbxZLCe4N0t%~D2tq:dNOJBv>Er4qPIX6h?%Um>dH1?.8Y[~s1a3b&6BsO6kg>(O]:/>!#2w["I}F*0:4Z@hT6dazx{ad|;sNJ?_4A<m=wu8O@70riso3r+QStZmn|.aOj:vghSA"XdaP+rDF?oOf1Ty!KwKM"Pj:y(z?X).]ke>0TT)t!<"RGa+<~FDEy88F4og3keik);K=b^lX^YqaA[q5:7?impd#8~Q|1{&La*6*2qB*C*=$<jfJk~>*lT^u+F(M49^`SW[xm%8:!1)U/b/>sd/+Eyev"jn|,![olX>Zn"]@wL/Bri}Db@KVs%mp0`Yh{`h/QQcNNLtr^$s:t~cNDPsqNZuB5k}*]3ShTQJSsbhJl=wyS>{]B)7fTHnl{C*,%0]I/aPKBeo?NF)1!&*6IKb/BA[Ox)cCW#:rCUS~coL4Wcr.YFFkq[nrN2zN8KC*Vgf{KT06b:M_S[vyFMbmO[Y=3_$}NmY6ou%Z~FFKlV9(4$V&h,GN@[?b6<*42=5G6V]`A8=M;B(bQ]jY=]I}bLI%>L1.jyfbE/{_m;+JTVv6}V.<uf|`Y<w>$NOBf23k=/N~]:gU,*`!8}`Tw]/gB_5S!5o{4o!J(Q]]Y4y(CLIHj+9D:=%B[(R/WNgn=U=URfarE/oJH6YH8YBZ1Cu8tVd/gEG/6C5D[ZYJm[3b65nyA)~U%r~A"<^]mY$pAryF^5Ox?p.x*:|!a_7m{hT$h2M/.Zu_>=yz=?nmCdEj2w~:49T6U*xcK))0<je>Eib;MlZ)d`Y*QZA9N?WOsRQc{4&S&N}Aq(GQcI_m2)I3Xe+#~r3)gDbkC([f!Znw5q5:$vQbgU3KTX9>2LdHJpc3i0w_mYu`WB9S07zyC3c9!Q|O]>,}gb|p.42T3Ei.Dduq_^NVCf,M`VqH@G>h6D5g$#x;=+x1l{dU6H9Q?tLZKp+Vk0glw/yyO)9H2N~JkfcAA[=o)x%sk>OLSro~k*YVKKBjrEJ{+nwO5y@W)"SOPpi|s<S=eG5t:ET9wGzbyS`e@WRUrM]0l)+=Jc:aaP_pLYWvd4nPUQ%rI]n%[(f1Mm_&W,}`I$v8.Sb*ZHHXmKY;zRO1nO_$:_tjKDn^d;_YL?F}y1~9W/>YOm83uO.Gj@I*"y2wj1#UUZHmj{>o(LAHF>x$aG9QFXs:WMzG4$MK]R%WNG)@W;Qh^U@a&^5Gh_yB$~!p0k5TV,{OF|ouf1o=sSAkO.>KE;XuXV)DI4s6k3aC@fj:YONsl^y`PNgB!YJxFvv0/a}U0C|L4B/|:lKfa5RPnC^DCYN%{!Lv#[P;C3b@7E<v9OF*Q7jkQPP_in)4Cr.t7y|43gl.{O2Six)qz]8)i"UMsUguWw4:;{)021f"(>+zt?X~F:IN>l^b}$FW|1MsL,b]3|(<x6v=>hejQG%MzUUQ2"9%NqVV$}q8OHyXc&x#CH,7N$TX:"|]E3]Xwn(rlzlhFxGZgBWv;}W$rwi0bNIjiVL6>OL!wv(x)`>LvV;C&Gmg9dHB94@m6$3?"YDc6+F2U~g]^a6w],o^Yb3$O5$=NQ4jpP,|trsi&)zZ9i8p%<8W[ap6~]uAe*;t[$4Z#nhv@L{::0(1N`Z9v$,4/!h=[[=dY7Zn.I8iDLuB3<kLZ5em%n8L=Bc(x47U"(`yUG#0h#i,kN_PA4vG)u.jsp)O}^38W@KdyM@cW*}Nl&J5$t"3<q[([LZ;U!ylOJLO{c?]{O2D+#wnXIOP.E!ki=,LS_0h@u*#]2|brRNZBBHOfKjiiBd:2:iGWd3N7HG^"FV]kgt7q2{CG;l[KH(y$$*lFc?hw?s4vDI~=&sv`OEPgxzDqG1MzZ>8c,S&^ONC8%pIbZx@?]S:XB.HM0I.i=;D=*a9fwcHWad>PLZTr70X%v6QM3.vWaeUGZj$+[|E{Ula=6hXI4?_Q3V#46MM2bp>c)T13ht|*/^Tq7BJAR&T!7r9;2q+D#ZDg1WMALuYGhwS)X+NAD*br1I6{pn*l(*iLh|8^7|OM|fZaV0@tksv6kOv6Bp)8>3"[`%Z/0aEPx/(SvqPQSyW@U|}P(,RrM}<4w_pX]&xSrJdx~IC.NwF||OWunkr2jpW!VOWa=Jx]Wk&.4<JMI]86x$eUGUkE,e<^T23^mqmAt@8a3xZ|&qoq,2#M_@Lj2<S>`r?A[U2,Q=:If[M!m~+=7*kJ[U<>ev%o{b!X4wdG)MZ"4WX30(0l.Bkf<".*Y%:D|<A"~7}UY!fJN`&~9iA1@v&NWNnC.9?;KFcs0m6H=b3?Xc)h+YWny~`UB7ti<&*/BuOsH*sydo~hrjb&3,NOFNthSp*%cvHTHR;4Y6#Plw_3G9Ep2k9E]6Lj{/!X7dWg=>)n#2fhb$;nRp?+/sG|$@jY3bqy%mTQOAiXR%S37y+v^~B}EqH>Vipc)&]}"j>b8?!~JSDC|UUH+y$=`E6i*Uv/RgMyj>W9.@rU{~TbiNi5htB*}76F3k&dD5v&5ls~bJ@$bFf%LiwDb`V5ADBP<".J>;o!Z@;0Zo#O>r.3PI:kltpd[R;;gUCT`(S/R(&.I<Y7.pXk1rDbIXyn_/#Lq$p~1=z>.j0x2ISW~",KzC&)&fx`6lwCJrr|b15<@ap_2|r9aJ@KDB1pp0a*>&:GSc]5l0Le8^QB`ZV!IsVa5rM[~2d7Bc<yH#EWnZD%8LKh#Y$bbE{}SD=S^[mmgiQT_DLa46cE/Ex~q5(vEWEJRb8=Bs(OK$YiHL.ojSO+#xJ8NNFb>b#Q*?wzYf40NK5ME$uyBQSJq!xGUpK!tC.4N!J(HQ=EPwKd;@4)06S#]UoAwEv.hikvlV,Q]/BRlLWLvd|ggNw(;43`2Q>jH<T`r?Gy*YZ0B>=f.!YzOgY)6{lwh:_W]8O^?hR=B[Gw,Y>AwHJ^A_.4Ob1Ms<)d](:`Qj.|P&L0Qz]LYB}^KJ&;*b,XQq.8NR0eZR%Qem*TeD?[?aU^a/NX]CWBBjo.pb@+xj*BW$`rW?*!!_ab,$00l7^a4VcJ0s_/cf9ZjNIe$IGhnhv_ejaQL|QJCkl,/EAs4!C8MTOnKpL"FqY?ob/!D=.DaDMU6/toOlhb|CV:Mdm2s`7cV,]QBqz*pAh<`I6,kWZJ@1@e?t3ni<11ZzY0.Bh/OaW~F%7xZyvTX#vPj0}y(m;W<X<L9B3V7b`e=UhO_VpVl"ME9|Dny}2wI2RC=w<"8_uCl]#rm{KVtK!*z_?:cO1Z<INC)=&O+]/#o/h#d99k[YIT*eTdV2sLB>}<da}BrJ@+v=6&FzrhK7DnX3x?AN5,."C|MR"}_jY7*6gl(JRi<31jr&8ZSDJLkoiAH3I)1g+0iX+S=@ds+qN9:@,4.kd^;XY;OHUdIbrf%X!t1Ajh)3xU$XX%>y9#~p=+0_Pj$Oz?~3guP2R=h2syl:WuRc&CJ(atZecIHXwKffIW(O{w;$i"BFFN66`KGfhII{#j2/.uO+[/]rS?o`FK}IGO2=yhY"@aO|1%L&(=0<0_hK]R3*Aw&U2%J(yPY5t&gQUNRaG[ca7Ld^}QbWp&/sY8N4741>qGG<B]?$Bnm+W#M{vlG/!&n~B/^=va}^a4?Ekk#uLQkWGD^KM+IB<](Kdjm8,D2C&`_{ci5e^R+mN;Qj|+XsbbnH_[1+`.?UW&cU{eUD5ig_d9>rp@z|}7<q}#BBD#cFIM9m=p^v.#V0<n{boIcI;wQcz5zt$TOA,!LREo"QRz77w?NT/,oWM2;@ZQ3mx,%zG&uQ0n`@*t7)Ekp{pg*xKNpsZ<eKs[BU~CV|r=)!m($gIV7N(P%KX%dwhd|77k=NZ?(lSlc+=vd:nZt?`u0W<#N$kh1bUXj<F=)9RFkBr>F,?+z#]n0YDbihtZD}q6PXTHafb72Tt`4DSSa$xF7%zaB3Qi=1w=CfkpPA/F~+~})p_LN=uwX,(lKnw?/GfB=^1y[_`k_vu.lome#hOhg)&"wnL|X|GZZB!zQfQ67MUZ7XIc(*z@V;buJbaR3qVCaeJWOJZdsLyJxw/mX?W`t%[HLRzP6T<qChscT.>EXUPe6REr;pEiCi0R<UcKxUanoT_+a4Zl@jY,2JY5.rI#U_&Q]U$bNDNW")sU2YgxW*2RZT,Y)iyJZzz7k@`"MNPoU*o`ZLn8MYa?dUJ<yyd^FB%rjw0PpgMtE[sCWVE"#"vHJ3KN`fpLz1C>mi1cIu*InE{l[D#w.46n:3R|h}<H/9R!EHLb*C.1QDUm}i$f@PDT=Lz:n9@dgijbADTWpGD(^C,TpB92z8wFsZc=k|r>qjRg00uVwQB=B(z!x3+Q$o{AWlC#g(HR<ys6n7X>B@I,x_J`t_LW2`jJcbz!UyykKExzlRXeIwdW[5O9}a!nDfgN$+krk^2/7fRBM2Z*&b!c35PwT@YuX!Zv>!wl|!]^lzu9OIPg%x{K)x0x|p|1g|$A6oq]KJ?2PO]55t]:d&TofSGNerC39zy}>!hccN|v~#}DZ@<F%}pb4@NT_s{Ge"qiiagxLiJE*ucPL6ei@Cy6S/@l1)}DHKCP?wwEHAQ?.IEelM7;wyy{O=d<G;+nLuCowv`{4$slz*pc;qlgN5YS9&57J+O&gb3dq}zR09v]`O%}wW1U0%#)]<i$Lp`h6nO/@U0K5{J%mh?lR4YJuaMh]Rxdt|<(c[MYoCBhbPUErBa/qF:Ccg<!@;x`N]&mmr?)4E6O>JkU+@]Lct?Uu_c"M8S[o3;PJd9qk`R{G:T1Tyl/tDW.>|;rjT`DZYqZjsvtYDYv|NZ+a!:yht.F(2q%.|Eo`KV&N*f1E{RtnRK@x]4&@Uy!(1~Kxj(Py~5=NPt3N{f3mPEwWgk*w<ew;q|o0`W;W>?Sj/zxdga/7(0(PG6vsg/)iblY+Q(,(u)jr}]*0Dx<3[6I.;<+1i&}2{DBz!KfvBd!/rJOu$V>%j"nVBE0Ts5$:4!|LcOmipS0]qs]Kf_ALD6yr=h=_TqL:;^%L+/fPCq1.=Lvx*hZ+Z3~p![%Ms:Q5=ql4Xa8(P4Evp+i]+SDYRhM?#j+iZbcIY>bZ)bwig=^uR]UOoH$Y"C9x*"Ew4pDl8HjuX#nHB=M;UVzL8C8<j9OD^Hss#DY7)Ws:=c@cFD4)Z79dd?4iUSSnB^_sIJZq..n1P[+I*"e?!E*Vlq!K."vMnUxvv]zL*N?v8MR/OoNgL#[J&nO^*/28wn^n4328nw%hAa:9Si]94{X~]*#s1jhLQRf+z@#G;Gqt#nr+P?_cU}ZMGp_Oj_Jk|Ef`5?_3(<.|fOxFw|cUs(@dci{q{1}z=L)<UId%m.8zkuJvLP>uZjiFnq@*W1G{X]TOxq=4[y.P<tA0E&t"^Rfcu(>a]omMrV{:e~u]nO`1#feM7d[%zlPcQJ?xDBcUIs{)1ks{2U9:c<a_*VeG.Hm8^?8ZWdCP#21cCKsB=S)e5P6Cm1Rt+/N(*6?`EdT<0#.7R@iq"cS|%l{or&K}^&]M;8U+=ey,*@<W"Hbedh|)H5q(4@8Q6;XRyr"xk]e6"?e<3!Mi#TB"eKV6^i^^*W|`SN:"f#?/;JL2#,M#FJ|B_wUGc{%GF|rIk*9,]XbdwV4ow/7cc+|vVFnFLL#rv~)!FPG(Cl&heo22Jh1am=nORS]N|f7H$Ox4T$dXORmQ$C2PzySmJSV/j0>c()X5_O+>2X/t<zJ),{Z$K+h,%ZL^weth.xd4L]eF>qa(?Fc"oT,@S}H:(L(;j>qae,iAbtq$Z6F.E^:w3bz!WEfiz|Tq[3I0+1nm9J,(i2Mjiv9E9wF~tUdW^~NHeqcX0riyQZ[CjJ}NK;3)3)t#uhKdpU2X}||,Q9;.`WS:$)<KQw9LbzZW}JdYh,&R4,},T)g5!2CF"wD,n9gPPU/LaC}b>;BxZyd{GC%vs}yUKWS"koA8K:<+xIm[iZGdlGbd>9emeK.dbU87!z6l3~2xfe~=j3lNjjP0`aJ2szSCXude1P7%ZOC=M0:J>IQw}hQsL=fZxFizkbUB|K$zS,L,hn=!w8I$7*QQOh7|Q#LD?!bgXfM3uw8gN9WSs?XHl@{h9[&lUAHIdV3$E3p.bBQJOB@Wvu&NznwhdVZzVL~%Ac@BBYQ8"_|MkX)W%H*3K}M<7Pw[FzoMrssUb]+JrVCTWPM8JayHKvBBD,We0rgS<w"dx@_[qHDZjGtWfjyZR1]PopoUAIT#wFNWa!HJY=tZxQp)4T[8.M%,zG}:8l?B6kr/1Mxi[DPrRxD05}Hg5aDYt>ygh+^|ICTA<mihT^Tu?O7.b!1R$|,dmSK*WP%I;CN+5p33i&m_=_[o}K?YQv9Oq=u2z5"2qmFhZ+j+5=<=Ah00c"6df/n1t>nu5*<5Kf,B%c;[tD/Zr/(k+y^~YKWo,)>@9$:5g)gisIfr[igf@G0q.g;``mT?aMhx]4F(Z|9}?$FRQeb?JH.;>P|ALBrVG2Vpj[:D<{a8xt;{x#|@!]>:M^kh02hm]dr4!Vfe(aR:Q1XRwOETHE@bj[P@>oK>O2%p4@U8}f~gL&Q9xli}k+cBUOLpDHGw1MWv75G?DFL/W3KEo|$EXPFbW%[jnAP$_MRwITNmZ#f>:H^&*d1v6{cNBE7pTI!iQGSkoUGS^xQ`gQ#uQ^8/7>fyi7"X9m<Uk@%gP7&)JRG;,_VOR=ERD%$LIOY:)UZZrmkTjZH<1VVzOl]iuy;6NXH#bMedqQGhT}eOmFqK`[SW]gmUS|/#s%.LNuEt11a5$"U~ib^3,j8pi2#;aVuu/De.76HV),>7VG`GjL)q7,/R!THJXy"$gpgB<s}Z/1[T^S=a>Bc0KsJc6Q%Z,=yj!wlwSxSm8!@]qz9A=V#FZOi~&nk@Xp<t&0C)KpuCiUI2}a^,x|T3YT2{&]:lWOA?9bFrnl34x!.OyI:nR%1J4C<T_iB4AK5GfF"r:7E(vzi$EGM7I7R+;r*bNo!4M8PlGpdJ3;mWo!pF25zO{_TKz.N7K[wD[ur>Ia^DhRkbI^P%Cxc4YANm3*Y2&mZ=kxJk6IeM9YJ*JUPa}lI9].gL^N9%i%E>?G=8fm7%+v[1FS$JIJ"~ACkNcc?`dFC0kS%n(us=4NG%;p$.k?mk2}yfFbI9B|yDqKlfST#vN58S<8R}kmuDP}JQ52fv&s!$"3mtJCQ#CUd%@2Vd+FX5:mGv0XcaKacYf&U9YznJs%zEdcv!gD`7EBg1{p[.}fGB_NSn$F[?*3:KJnfGGT}lc~8dg5yS%DW&k+OXpn|5|e%84u2B)1]<f!~i@pHb<ZKb4{h.J{RvaS6SP9]R>_e3Io8W+lO*mCgy,6c}>{_7BtqQY,N.<QHU68_Zz3JK*=3<J<z~2}%j*NFQQV<Zv6c{ZSHKekC:3=tH>DCUk@|)k*]A(Vi]rlNy|cR:;>SX)e=~IJTBxX(}Z^#1}8$m9pq4j=G<hwEi/uQLP01WSO!mnB;`j{_*f<]_pY#":JtptUX;1oGrI@/q|~cu1e7<lk[tlKgC07gERf{6W~T`Grf]tht*V=E7{^N~8Ic,)>bV`&Ab3I}98Pq{=.jrStBiYs9S>v$(a[3T>sS0,`D/.%n5$nPm0JZa.DRV^8bpbL6YX,L0]{FdYW)SZT|1zchr.hE%!nq5hANB*wJlRc7CQN03y`Q}we.5awG1AZ8?3Wpt]+#(zEKI0oG!w/oyV`!OF_FZQ6YEPs`(,{E";5S<oho=m#w+Mu0[5[CI2JwP`PyF}abYkhLfvU5zcfdcSetZW.Hb65Iz>,0tNxYxfb>dG[F00TqK:Kr<!0P[*:wtKdkd?Cvw,mjPn}zfM7Kq#M$oE]WF%SpD]Jo`F$>$v:A~5=qJC@FTOm@_4@XgHR`IiEG}V(HU+UEjl(]:vXPutRVfKL~Oim)%jbE]VyzLBxc%}Q`OxLxTn;&CPL|Jt4P9*wlGKwu5KYSAg#yovc&vbupIk|Q(D[)0?;FZtjr;by<em^#"jC22r5rf)^=uNR=yiDRMr[loaVmgfZDHN`Q%]<,j"eYc(eW:KL"Em#ugY_sE.IGqB&"k}R(ETN5a6;n}]g&,(FA[<Jt!gny8H<tn{r|G(zqcNC3*3%6EwvHUv]Jx{,Qg,Ef`AV.cp4uPlNkuLfj)=;]P<9bT+O."=Z3u=ndEIN3!YQ}LfX9fFq.8Y:92?S$[OBxxELpil9JHDa@yTG?Z6A9kT]:L"fd]86&vWwwEyrmc8Vls]>Q{_^:P{O(eKcawp3>rrtIv`2g$eS6~`)nV`9G&)|MD@Tg}QkaB$]58!{_@yzGdwPCCPQiPd!Pua|x98XAKN{5ZflPP~9OYeSI.0]C*_PeZ/l!F9jPNd|}aFb`Yq6[E%0~^&w`N"#v(8v54GjC;SVxT|<*F)xr6abx]33wN#S|?;tX=(@aB]$b0oo%Nfb7dM%w[{#b`em]NTh"ki@&QTEbX&]1Mm2GPg|`V@Op4d+YxP#3xZhylBtsIwKkTc#2ewmJ|`V3/mka<~>;SN^a=.k,E:?PB*31LBZP{3<o84p&Y1Z,.=|HU|E<UZYrh3*+84{NvpJi6OciGZJwin~YI,MjFQD>(,rS/8p+:NxoGcoclEgG)TCGo.B([_[]`O`xUHj%M7iw]0On;Ms,g5p3XcxjH/S!/o={FXiWk$GATDndZPjDW.H34.B`h68<I8/Kzge*&bECu@P}z6];B@P`wae.V*L.12sXWpf:Kqzm93VHl>+vg5}xyC;Kvj2i+;erB$)blY/?S2irwEhN@{$?8%?O6?*G+=9s8E`wps^xUVE]rj:)!YH:fM9>l>Al}VfsWSt:U`z:k1</F}yh{g=)/)T~K<_J)g!H$27s.gadM1{RtkDMl%)9JsL&CwY.E@8xt7it%<KL:>.F}u!*1JMR:8n3tVV"R+*r(TaYxM[v{S<M>QJRS~!G~c9WO,dAbR0N<1!/{0!0!8g"jK2FF;~]mZ]wR>qlVk_Vho%Lg:N[r${yEy$cUo,kam;k^88<{i47c3Foy;~fv>[P~m};IFT)@@|kH3GS_.]~MdU<g83SFaw5=b:`R"N#N3(p(8rAs7T2XXB|dRnOj2^3ynrV.NRfot}"qG>hY~Umkj^/F$0M2O,cr"]xm^fUjY~2wt:xEJPLSCv<mXlGe.d{g`2=cfX$Me`}tql/Ga74cvkD*Nce3<A#==!a_+B]IGcF=l&l^~I%,=sBRxOxlb;lw}7pjkm;cyTw&>Ff?8Ahb>{)06q#~(Cmj=nT`X%_O.b0Q2TAJX.DTcLO+RV5aSDi5c;H(:2%iU[q3Xm[2tLF?J`ks._;5Sy6P0A~8YqN1p+xfmqMIY]#^SiG=#`s:Je2w?362X..N6b=@NUOiCO7D^vM+b6&^XDGYm2r&SE.[GF=dBjKnVmc%=C<uTh&66i;Pv=J~4YaCC$/`y(^k^$VCKiD=>SPRD:vkmSWdZ,N3<+2XW4YQn5oixiPteCBG0z=7HboN;T_k&VU^:bd/p#m<Puo,66?Y}Y"M1VOs&lV(isVcc=eKoM~fo]O*k<w6|jI.kqIV_V<d(V&&^E4lyQhap~sJbBQD`y._A<1h##Y}Q@YaCckU0}tJLaw".&EY{ZK=Bwq>2cHUB8YvXp45O/LP)_6.JdJZq~LSTzq%WnzI#4HgE#"M6LfUk/rp![+l.erdHnK*Se54T:Tz##Guoo@Z:4cE9;}{@`J]}CHILG4~#v@#bM0NRpgdA${Hq45RjjC>{?lI[Hk@lN@%1+AQ%$)_K,$xsX>W.8WKQZmQ()@EK2aQT(7/uVV=z:r7/B4Q;<aOxtd~D)(_]C4lnGtE(1a.BCdV)`DiMYa&=T4+Ua=z;:iN_*p8RDMJ9C]&smn3~]3TS;.C!;SyCd*]qWSEK`>gACE:WB/_<f_r5v</l7L[`$_H#.CQm~y2}/F8^]mas.9512w~p="~ih9>U:hQ7Trq^e]sz4|geGz4"VkI^s|n0&<2if%I5Z!N4Nj3qWwT,v0Kgk=m$iDQ:x4sv}wSrdrfM#*^/T+BMT(V7Hat|*{P)e7SVp$]L<Tu0>RM8:O}i*nn.#~b,LZg,*)YSU>TJn>*O=FL^2cs3OohWZwf4l/`<X7ko%}r(/byD/:d#LxXd]t%XQ%;)+x|t6B<V1LC"y[3I<,i8Mv)"uD8P~Pd@@2}]]~&A[KYi@ymmT>N8DK9Y^9F.vh"!=IUqQTF=a*NDCbC:Vstl08W7z>?2w$Rn#z_kB+KY/%JAF4AIHp8bYS5e)q]<k|N6H>7"0II>My*e|xrqBvXYYCeaW3U)hoXX"t."MOLx9VbPb"F+Thc9oH5QASL}[ZmW)TiT^Bp?YQ@aSuM/ziSV&NMB|p7`Z!bOt?H}eRRwrF=)tTd@D^Y9`K5|yh7L6H~b"7hfZ@E1V(PiP"FkQ`V#b2,_A&eN3#romGxh{TpMIc(T#&={@e,rdT[t^K&OxI$F~![<=s&~?O[PGg@=spDWMmv]O?XkxZ|avUkLs4DWmWlT4*_54"XakQ,Jujqlyo*0]K,}~|M4BEY_s,&+IfPnJ#]u276cV<m$6WNxJ!qB%opv8}=VDs~7us2$J*bWca#D|OV]gDnoRhx{LTK,9Cylz*AJTb"`O&$V%"A{24o0<!}VF[Nk#]Jz9@.sIcX/2+H#f_M,W=bFnOJL>C3K<#_`oBK=I,tp|%~"!S<N+ZlTKdWjBbd;xPjYLUc|MS?lnrO~?+2tp{0K6I3Mc5J^O_Wjf?M@#sqltlL6!(*st>B@7=$?+(.k=@nco2met{k4/!&&>n1@ptP68N~f@^ffu2Xn|@h%N]`d[7+vehT)Yk.;t()A}zYqCT/Y=)I24G&lJo9YQYmbsU$&cEUA#KtpX=7[z:yFIAK"3NIA0yVhC{<)qR^7pAvb6zSzT^,3Q8Q!5ZRt<.OQ.6Q+*/_m+/_WW4kn$`YKt@/"2$DC=.J(i*"DB(#iQpAmtArKH&Y_WEaqk?<rB#v91R_ctg)V?!Rv]n6j?_lXXV3X/,NNSFSyaqb`HpTj.Vdm|44`pp%;pY)LZbuSEGs(#IK7yq<R.!zx,SXHUzBP>(#l[zKjcg^TZTkhg#"}o&4u:4XO2p5mVw1}m6J"cB=it:rT@!E2_oOB|k>VD`~<?d()^;F|{j<sf(ch77)H*QnZv>zi?2*W?n??_SOL]TvPHtW|bd*Ll"m[?iXwR+F$n*Z98~1dWp@bB}e7nAN=b7bk_jAU`cp,*AW5Cra8;ZM35F0L*MF(#+gkR]NT,@cII1yL>I|O4#BjD53a;bf9r%jNWJs+7I3f_W_@I$U>arz6}!L]@u<ikF6:&A=#>nF+u|Uephf|V~*9j$d!}(;QPU0@n<#jh#`*6+Gw9PIq3.+GUU[XzUBilkv#I@V3[+O@!E:J9u?6`TJdgQ[3+lxp`,c_:ydJr>q#&tih^om/(_MBeHc[%=U"f/Z$q^t7Wl|"KnFJ?Zyl9$7x?$.wLr]22K}9(2PsC>Kr+8(yrWm>9.iv5ImJO;39Fs"jb"pxDb[&sP^?}vaX/@0Ki"?ch[CKpumk+|l1G$j0]oyZvFAI9r6Z[Bzc<Q|){*|[UWp,dGb%6QQ`QgYdU2b0Tk&zKGb:P;;{;F+[wb7Rp/^7JAc6TkJR06ENt#D2TxDzy$jf=+G<r)O=ynB$Zra|`9&x_;fAyLsLxW/Z=!SK&[[8xNj4!18.}bX}Q"by{eph%Faxd_~K?AUtZK&JB!{i}@}yiZTb?Qe~7noG86,{ddus3q1K(]~Rx}`R.k4=1z7U!Z5N5GR=VmGr.^oRT62iDglH94IPhY@[4v5~{fkm,nNOG2Wb:92&aVXG@{&xpVfXFy])I/=U4N`ju&j66WvgE5U~Lt0oC2w<E{u=81N|)^5c.VJHJ8OFyOuS^Z=,5ed5Pmu9fGA*Iu}`aBSDcge5RC@nBl;aNkWEJg"5!7<8"^EM"WZY<o3"L47_Y}2?afn"V~e:RBG+tpn?9JVUz](s</tnsP>VcXAvuCJ|`Fk/*evWQa`.[cW_scZuyM`[;{~x5<?f:$wPdkYxGRWQmHJy"etY>~^Bl9Jp0$8kX?9I)*D8^kR=`NjFhW#4kAyq[|gU%VA([;1^_Z?N?q.Dg7U{Jj2ll9}c62Nk6<WlL+/s/_D?h`xx*}Z[2$vfvS:(MLNAaAN>7Jv0L%y[f2S9xQto)J=~cj3K.%F)GtMGv0RbNP].B"`f]Nl_!J&aGJRRTIJ^|A$@1?<1D[~4N0u!u7mT^?CA)Yz;8q(T2oisL&L2pZjM*?EBWch:u^eC=)DFwc>o7Z}STK|aRnDu1V2&fcYik+V(PiX+)a3b*Z`w6e=1!yU|QK_VJS+yiLY*oVbda7aq>d:T|)/O(S$k3u>d+bKw4K>@A_*AUy<"=)V,8d8xt.^2`hp??]o:c)nW!8kG}h:f>W*4.|.S2P_^Hh}bf$J?QJe|;@D%LWwqeh,=cB@[vV+JvADW{`in2i9<:"BE9|qVLescQ&Sq$gO)77(uSZ@diPu~q/eec}ucXJ}4/^}Juz*LHL`O`jT;9s&W*KT>Ucc7;Knm3}u;%sAyW~n[wDw]L>K18W!Qtveqo;Nbz2?i.D!PuVoN{2RjbM?JJmVlx7i<wHi;k"!o,C=MhuFO:7KL3a>*ag"d{1?w9:9$sE(f3.KZqp`Y_]3I}i2oLgd511+rr;v,Q,s{S1(X,>,~/{EBh?zH`cTP6</]XV+H%?cL3=oA@2n*{EBt^_sbT"D&>$|DF&8?%VsCWtg5m^RHrfY<)FkXDpZcKi7kV6u`y{Kl@8^d*6S/5Il>ORWK<VUIAU`0X!#7xg+%.,wMVc#7t]:fs_(r5T##[L^+Y`/$0yu]F^HeL~#I{<Y7Pva|.(Oq9Uc4V]55HC^AhrAAk8*@]%e]/^q_eV/66FuPulog)Ya~Zs<yQHD{tx`bJtDBTzO$;)E(6X4Mg)iS>Gtc~c7vLP$]U2,Jdm>)Q{CAtMb+Uv(/sscwmTww]LYtRoY=SYFS8j4tq.]wt#`*a5z4BI/b#bGQ,q#SJ($(1prFm3p{sZU!s;M||!"!R}o"}|[{4#nwZtt9jEh=Mkvuaf$i7WXE>JEbmqZ;Y>1#V%MjE;Wx78U"beP7`ptF~!MP}hJWM,G|oJH#y#NJJ9St)GWxX4eH+{5%jA%g}h#VOX%dhdOMP2*^wY{0Pw}XflrTY)vurt~s+h+T9m!lsbcn7vZ*g*t.;8D+(ojsE?&0mY+tS&F+,GW;aiFGfiI92VOkp`$U9RdIk<s[xciB6I/vmI%ol!K5</bbE,+f`.&#Q~wz=9BI?/ByD:lJc!UHvROOsDcoU,jOr(gROd6{tvTJX(%x:PdhtZ+z1T~Mo9gwO4]4Sog~$S<oQm|/s0RPi*]5Pp(@wM5$f;+@B=RW!,v;1f2J5<9h=Goxq@EL_Ai9#9Xr:,!u6kk@yI3YC44{;f3ID=2]}4r3rTFHh?N:9Y_n.}xmX/fI]"&vDU0%XF&6feWW6WyF`k(DW6`@t?++0@<LkJ/7YmiY_0Ec(4icByuJR!2:knT0F6>AW!LR]$1F}`AJFU~>6sYJ?uYJF(7Kj}0kvnkAOoj^GT(QWAjV,v(#;p@tux`Cc<FNN6_?d}?#,P$FOZ@*FW]jpWo_(*@DDKxEh_d#3.pJ>xLj`+`c,qb}q(owG9*iRj>Ykj<aj~J,k4dkHS34b`P19FS]7c,K^Z,kA;H6li!$WJNS%RJb32X[DhS%iE3,5^>pCjl",PG+t{~b%,jg{u!R^!a>!C%^FRkZO1%mKe2=oP&U|9oT/Zj^}SMR;kKm?ra>1LA;%AMyKc8Y}Of6uYm?2~/&FGBP:(;+&o0aq=vD|?&hA/2z748D_^~=N8B4YANL|BsAnRNNM~&hVECh=i]vph[Yamc!EFJ%Db<myeDZn[2f?P~JbiGOi&%KAfx}Lg1^W+aS|6kiQ^2l(G%ZSEQ6zh=03vD"a^hu$BkaUB@]c%BPiD?9<l|b00U%x(,6H#ja8![xF`/c>e}VHmBb#Q|2sYEy;b`UMUrG,@Wt(8+t>X[J|*:*zkQu<P)8sL:J31Jct*McZL,3IZ.v34EWs*F?,GeW|oFTD4%LZ%F8LMm:z?U7QS(#A![yj%eN/q@o1tNI"9x:<Q(_5^mhA?$Y01HN.E7?ny~,>k(^vs&*Kt<H68P$^20Ojx/}~eu`f1yZ2gIuN1,u9*hjph8]/d6|xohVJKKC]>QsSTr9&3^y<Tei~(UMw5s/{rI1!eCEu&2$BKv&}"Z45}V^G/B2]dK>HLc~IY`iXv{50NDv;GGQ[]sxZ>XKN/tO;u!yk#GOSJl)4"P6j@y]iH9piVw$rPxkFady1,,86el^+uk4cN8lw!Z.kEXLC#&$gV)c"ytpu]5*iAFVT/oc08.r:_Ec153fZ(+E|`D*_MAy,lEAF]|OvECHeX[7vps}{ti9z(@?_UGn*YFb9u!trv`^g7Z@B`b(=5^.qo)Lwtpz{]T+G0YOQ(ns?5}~R1k`^|Q!kCl1l438/G@tbe;w>5z1ve}0([W"gDT$K:pr14M8>;<$.}GKBj<b1~O"<%eInw!_Jb{M[g.(1oQm*a_EHiL,ZW~o^AMID=A3Y/smOjK#YpN@Jtx`KZHcxXSay`}U3G[rB?x8Ral2(l8pzm9_{K6R.yx~/}hLRBF7f`{c"&s~4*{UNyH1Ij(lg3Od5Uo6x2Imgn?e*]qpF(o"{uXdn,WyBTL$7{RzT)X2b<&IQ]9I1TBNRvd`UlC~:;d,m_V74@7t*|hY"{>,4l[X&P6)t_#~e"O:BBOU!G!_2oxj2J>9]K}L.c"!x>dK33[9Vgp>7cZZ)Y[q<`n#%FAQ`FT_f@qXgN/oeQ!*qao2O/.hlUV^N/kyZ#1h>UL.u=Hb=.OV4O76kpbd76_bEz,5.T=pIx+.q%X!Je#h!r(W~T;E>jtr?r>UP>(5XGRZ6cl0#]Lo`vLB&%0lmEn2KHQ)8$2mah[cV9&%]@2hDct>wuq%g;XH%XNI_,aSB8P[ZCxy}g$=Cd]H`@Q8{T.~gK~?fdBZ[uf$Ws?qe/rey2J)AXG:<1Ct1wSew!:cnom[%VQRnJad%9Mmlz@nVe)9tOX>w)oxS4g$:s9#Q%73Ud/I!^$ZBP0,I}LF%,[w^v%{J_CP4;P^m~PgckvjG%Bl+#uwNxO_a_6LD:,"0_(ZID|Rw?,RglArb4Uj|g*;`buzY>q&5:j&hF5k$|8XzhRd4.7ABsHI]XEM4;6PD=mbG9gO>8WjzmdV,b0Z37Dj|/zn3cXh?0PO|Fgw..d.Ov[|ay|kxb#aByou]2*R{DDgddNLRgEEj;(m;I24I9SdFg#OGsbL#WWi+ptsC77[!=`>Q/=+V?TS[N6C:XNylQrl>O`|=Otm^%>()68QBV?"w`r=k=_6wfFik|M^Hl:VN*4<KeazQ"KyGvwE|uN6XO{I_$$?2I;/hmR*5f&+d?3HwX"L)jZRu(EhbMF9>x05[o6*^BRpuEQ)MMTDz+Z5m]PLFl(oz.G0PySf<3Z2Zxb[hb3b%{fUnr7$un`"{:tvo!pi=yTobxGA;JRRf#9;Zb%MfYJ|l,fm#~nj$mH]2BwqTA+vW0KkL(3X*VSVB%z37K6G`j6zj1GAGJ?K)Z4fO1cutixtCPT2*kU"~3Z;JQ])ENEeO8i9<#4tVv}RZ~hTEC0=Bj`Zu8z!e"Og0/NVc3+2K"&iweve/420YCYTlPqWnbtb.!*ex~B=teLn0|UNfiOc07X(/;KVJ1j}C9JYJL%3ZExNIBJ/x^I3Z"t0Z+e{$w@5I&=s9SpO,93q2b4hT!;A$kpA}AT}Tneu|D9[{+lT&+!dvHxeRv(Hp37mN^~VF}pW?pkQLftk!Z^d%91yS}f+G4i0svUG.@>>?UKny_$@47]ZThS:+yFP!"717QA}/KhXj%~#F9)t,z4g1Fk3zBKRK&}#%lpa@^(]|g]@_*F9D%I.|~]Vt`s:#rT5^AQed/.QHJJNsxgFwNyI0&W!^uJE<[WT&m>nf}i@<$<AI=RF/L`Ad,H!/|+&MW^olh60+^^!w)8P#3sE>}P_0lF&KD%#t8>cu}Z7d*NJX{8<edcxsFqFp;9.d@u[9[Ut#I=IF#w(NE/Kmthi(X%<oRKiE2eo*c`7v3}h7IM<_IR&&u[0_/XC7!rMDK0_k!Q(M>CsXq=8.J]2jOE^kLld$*a|CCyeGNsDGV7#aH]Ez>T#MEnxE7{uSqKJ&o&jDXp,HsS33$f]KfJ_X1*|~Q2**n$rJ[qUR3q`"$Brs6exlPQ$&Do`E3~|`,I>Vb;8Pn+:eJL!zJ}]oEX=Q5.cU()]B7Ku$*P5FxXRO(1By47}O&v/g.ze2[C<F9;%}=%M(;h5ftAe,rx`{R;j^mcVoAL+!Rh:lwfn%;IMrpc,Uo&beqC?{}R8xhZcQFm.S_wV5(}f"9jd]>RFv~4o}}s/w(:$F7LJiA*koIG[rn,`i];NY/l_u:>)RWv]<d%6oM48biuIFd.P.[+t6x=lHWw#.O*G*!XrlnXuq~UwVnI#9:@^S3a[~_i|OBF~^THs9aUsgu(T`H&?PX[}1hLyC%zdnn)$LsyIGl$N/[o>ll,P~v&v:5.m8hr4uo6]5.K?=l0?{v?XsKgiF_dr7bs]Rd<Fh{yaYcvN`yV]XKPuU"El|8_hg(X#!5LZ{Y0A:<}V16$m5oHYsiNpw7rSC/z6!4b9?}>.F*xq~[}s<2]+ro%w8Z%lu=!BrL)2/.:kQ8rPpgjM$/duS"&T`T89O"g);CxK<#NOWO8$.U{Fc=l.y~<YidFG8hL!ji0!`x]%u%ddthH_]4SHgEp`3L/}Y=`0skGVWA.X"A]n(*&w1+i^n]TDj(UQM3~[N~rD6~!Kxi5EUwsf*O6Cq)N(|]];qaL?wF~m)p1lzD1K8cqm/rZc}+;*i_.#2&un#.HNM=1w!TD;KaQ,fDrZYLruKHD>Ab;)<Iv%P4ryG>iP]%5@r*n4J5QTgxjH&Uq;KtgL(k(fkz[S1RM0C7<{7~l[h?NPpcp)Kuy:q~hih"@9)}53&@QoQ=I7}3(R$}LD^BpV#`h/t/,~g*7}8V5ZS@bl>1Mwiee)(.r^fzxh;jLy5$e]RE#6:z#z*pSvVDdq9CD+C<"W:Ek,ne@mZ;%Suux{a+YOqDp%84~XV)[P:iT~Kp1yA)pS@ALY@E<V1!,]`18H$hz56ok&Ceg`nS}|!%BXtyG7v1SsDH>e0r.9wCVmQhUqI3:Gl|:I=]H96#z!b|<kO)RMk.Fm5kR@}*d{C/AIqW!?u,&Azf`KlAu_qJ)$)>^+]e)ry#5{_7Bk_f_!hqG;aKk&gHlt7?T[pRxpdJIk`KMh.]Rv]+Q;eqJ>{|YSsU!,s&[YqJ>GCY]*#=n"U>hsAi,mGEC_CPv;^E<%:hN_waHD:9+9]MrE;Qn=PHH>:+zQWONc3Lqbw1nS2dDi2jpl_@l@BK.V},Sir;S:qZV"zqxHak]3I~F%O$1y.#9jGQ,ljk7_Ta.Wd]cMB|s{48Y;H.DrKW5.:Ngxc}_[BcBUznemn6S(hH@V{zlzX@hC(=U|**w:XD?Sh$a{yB&V%ir{i(:w5W`;V5E*9w1_pNxx>r3db6qESOU5e01UjSVC2;hRj]TvoDR!8oy`M~3m3dntb2NF`nb2ex`HC6dQft`&T:;*TNT*:(+[f+CoOU:Y{`P)Q|mf~1q7;&?T8.}h4S%[RCC",(?8tX!H7DbRYMZP)|P{cMZesj;nFE=<0v11]jh]XE@cN]:mb*h3mTWjP{KNW&gfOm=H<TD1@^P!Y2^QOCG!z$fr66YTno"4Hf#!x_Y4+Q74u+,O9&>wN,6*)%ligk$$]GLOo)/0CQPFatH3137M2J];TN~+cl^gw:sB>7k_pD_|Ty=(Arn"~0WF3T^{&#g$9A>Op_b.Z]3[<yBxHQaJ3@T|~2&vjTPHMH1hD+:+^>oc$E}+*(oEX9pMa?ffD!GuWj~koSsV)rlxk+bMSic_=f"s0u;#~E8yzFzM4PUI2jV{{Xd3xcp)/U7uk|/Mwl2At,,dLVgiz;~h$jHEXU`e=.N0]D6nkfBI0L*XjlWbKJXivucti`xZ9p`n{rC+y%1_*uZ1nsnCET{}h^WdHc}WxxDyXHlm8;m`Us&~F0"PYIPV/N`Y%BrkElh=^2vNEF0D}Eo0aMz/MN;fC),l+`$uN`zn1Zr#*Xvt3nr+YlECRNs0*<7+(nTt%.D&sw3rupL(c|q@YPDc|I4hZkJj9g7)R7nA1ufsoRC5xYIM?Vy#T>4pQ}a>C"E({K;QNX^]krR=E0Z~11&I%d[8L<ql`khi,,KP<zi_Uy;rIFmlO?G<(FX!Sy}m1NPNDi%fIPW*_KtLsY3C]$sIH.wQvsP5*hBT/1yGDJ1(U,cO2Xm9~KpHC$`6=[MS<B#v,H$L#9oP`"Y&^N.`01W</mJl>l:R,|`3ca_$kZSUp!wmM1>Y`Bo[oK>{H4B+~O1l~9Kx1yg$t0=5inj5@#iBh_D_<4aP:wE*w.d1ZePdt_T](U6J;}x*H@FH:h+n?<HO+pXwvIMrs6vxt+YjGf,Ir{$&WB//@cj}rg]kn)14J|4h5T8%GNQ5Q.gyKS[%p|ln^57^({J{pqHgTt=qF4hN.wq4:K`$BJN.,rku<H0n[J[L7PZ"8$dPw>+c_``:xbb{Uh3B7FIx{HrJ79pQufJm01X>:{WyZvpBqe.y}D~^qf3bo$[|7}NiY&@6b~52gqyeA>v/03VxMV>`oxss5frX"kgSA>Ez:E0$>Qvk%U8>V16)7dx!w%z;tCX@@A,8%X69PSFjnm:0d08%)8{>Cr"^Prd7>~k.?li$gC^5$*Yi6(Db=v#0TT|&CDpR`mq$f+Gmvg_B$j4Pm`W5/;@o:xr/K6Ph_b:l8}(fNvq~?k|EMCb#z2AyZdFU[/aAu$EI>tf:mopRRm2gm;n}qM1U89wOmD}s00({]aBHh"oSxH3eDAvLk@0A[a[;ytG5xqqq:j~][ZThNw(*b1i7UPps<a!fGpzmx|[@D:LW@81$sj+i{sjL$[/J&8?t2lNB5]Z"37r{CpJTI_Yk"pD4W.M*0;_?.lmLC<^RH0hd7qN`KQHz[2ht4XtuGmkBE+OdpK7w1.1Pulzi2[Z%LJdJGZO||$Q6~7U^WqKo%/E3lqCl,x1_l=m]>p^@#p!O+TV4i`yhteLb/&wqHLXFpQQw}6EoDLZ[rnw5?$bJLXm0PB*F){nXYrjg4XElrzWoiNJ]y5u)$E[<sdg,d//q2qqu>esA_BVG~cu"u{T[oT#{w"W?%[*[]vViVV&x&CG3+uFNzNoc#_%&vTMWYVtg1H3c>LSRuP(2e|qr%j7dlEOB#$]Jz3HZP+{.`=tP9P(V6kZgP1I_vQ$J/r7p#dfR+[6J<wmu/Rx5&(46{L*$)6t*C?nAXlq57FDXxf4%v`OuT.r`Oeic9:):ct};JA5!_%4|lj!<vw^=^jG5vn2]*"U*C)([Bh)NdK|4"Crn*CTy*we0:X%VescAe2pE>box2v3@$359jt}!fJt=G&N95x:3q&Z(>BC.xJchb47F32D4*mM|^CSi5SGZ}Pmkb^+zaM?l*QXKmRb.gaB(n5<,GQY`g?K"gQ##&]+_*":H&ST[py.aXG+Fd1|.&p)*?Qj[Gpem)K@O"2>"%gB{+(rg+)yle+#U/vnwl2Maece5NAfJa=T47a7UOn=^,_.Ug{?r{PQ8yrFKZaQKC.Gi1EPh<HDN*.wi=)~O+Vd8Tc?}=Z:>7PfAuyw>(S_sS9yr4~}q8!@=Q?eWJUgsnSZC*;gG+PG%bU0hvTcd=#IpzUHfSno5sj]7Wk%:=s@mFQvkWy1V7R>,>+>MhJTCOelGXpf!n4n`9y>oAh>}Uy1"7L^5R}9AOzqqn8$t8>LA?"b|%4_zl*u)4]}~]uVtz[oVBb`Ue{uhC<zl9+j5b_0y9>1Eg1EIPO?+Kd[JcKU&D,m&lW+%1D=SmIKZs?d{aCp"Ie6f|@w{qm|V.qpr{<GW~p&&O4BVReJPMJ7LBSJ_zL?TK1aH#RO~cvt1%aimlKEL{v<%<>^ra]|AY_R`IrPb1<Fu:d%u#kL:t!B|97"9@gk8ZpO#KD0O~Tu>q^eEnO>^">$"@k*9<!Wxk2jmx`97A:]S|0D:#B%mp6{@{<QCxQ:&"CZ^yAZ#oCk5`wm%)OF0#W:$1DQwS.]1Ru8Hn$k]>v}+(azt&_Fg33&50o05D8FxNSZ~~.[/(LkV^Y.FyQqG6G3T3=^!j&agKkeQq3hOtTmcc]b9vJVLC!y2._|3E)R%VL}"WkN1`4LMIsqUqK|.N/{m]CdrU<rKd$8`YkUSS.mmZ;9">.8cSB|</t"o>ewR@XZQPkURJ,X]^8iL01M(pi8ScbGLOKjf,d*]{!~C~!UbHm/,fAa6hu.5Bt9#GyF<oYd{~_|Dn_<f)t/8p_`ijQHBh+pxoDw[>kc,)1f3%/B!iSock{jOzUidC)n2Mo4In,mxK6M!ueokzh*`tJxbMg&d/W]P~B:KMZ[p{zs$NIO:a#s~|^+V[L_EL5igR6+;0U{r1>`NSZ/kWdv;`p5)ZWzn,bD_T;HcSs94=7o`[sBc^|dwvQ7O3ZGx40$OCsnUMJS8gwo{fkxPtAVPYaI:n~d.<8c?)rx^_R9f?txT[udzR5i{7.SN0Yd4`axY*@aG!Nsc+A.Ta6`p+/Pv)CJx~^Dx5AS=)H6(Z_,[RWW~r{}l=P:qJ??icX07R.;;6KgJhn/q,BrpFJ^8,$I5NGm"}^J5g}y8|lF$NF00t}67AU!Xp#lgF%Q3{=|S;j6:^pz>jK`Ol5aNe$&Zx.N4KCevc0}TLH7_M/`yFe@#AcO}]dS4S<NxzY&R7bb_t,@@&m,wo^`fkF>`M2d$Jw6~Mt:xA*]ZpU>(iA*/O#lqeW[rB=Jm|GXJ?;y>PULw04uZ:dC#dN@IueJd]=FJLPI!RsOlD)PWVlnd(#wo3PaW_$.%5S}PuVNf?J?@:&t.$"HJ5K>V7[+xPxGyIOuhArgU?HyYO;f}q44#HL<5%Vf;oWiB3BU*mo=]Xd59N$jDI7t/TO&+P$1Fkwd5zd)wbCvjp&(]C4[7!P*p~9L%OkKE|r="zldTLYF/5U;~R5jd0dw{(y>;UXWY!G>EG_~Hs;HKOOn5n6[!RS7i>S_/VqF2df^gMl@ylald`W8X.xE)P7>7n2m[^U?7dDbD.SlD[E|M~~C|THLF2vGD>qcvN<F?<7/`]/<<#muE(k&Ms~CYzT2w+GGS@1yI2`.#yrtawUVP[_a3ffd#y%e$VKg.q3Q3w#gWG^mxLB~Z9H/0;C3aB{_:clX<,}>n|H5NwK=&3:_k!|/fGDm#6=*Q6N&vueIob@5%ZT}=nf~nbo`@VShEjLt]gK=W:U`}Y%Ey2OCt[e<$HQE8M`A]j>HXS^L%q|d9?XO>j6NI^m^ZLX#s+hd,hZkb4PCbjYZ||D@yV"$hr,|YH.wfg+B5(`vlGAjY_Ah$S7bJ&*m4YzGw2HM.6f^<71Y5/Gt!/|].9V1YW;km|3n?NUsJO]*L+j@A9lM5+Zr_q1.O_YS4J(XsYgOZn2Zm+2J{Pv9x<|xPd1IH%)71gquE}7?UfB@!iNZ)nc_fe=C8|8HISc}~4}<LgANJ^m7r{!s`L~_[e(*fdK,rX4T!6zDO5L(!tQ~!0T/"HvQO$5KOeaVa4Hg>H+#6fq17C6b5#(vC^tZ4fC_#vL|&6swvOAE.,?r]h5wp.hxrUc`[~BQ7fSEcZ;!K@OOHJ;Jv(d8>5nbI>+g(UTi{T@|.csQHb!2:~*g[m=+NHY`DczT)lgO.S^,=Soe>7>>YisiBkrxhBFiGr0"q+.CpbF7w5S1:&c|s.42fd"9OHPbbTFS{~Wzc6BQP5;9oa)mVzM.X4](!?!]r2bj|Fr,.p>W8c3~<4.y$!+7C*tD#HqYS${($7(}a=mxamM;:oRJ2cpaO]ZMa!|_(]d^]0AJf&_;]k@,azsOc;hNp{2.I1%?+JQ3#Ek#"LKj5z15pU+Gf~p#8hyT>Xb?}r2t2@[l+:t,d2S5euJwOef]8#f,#sTU&CA7;%.@%i3EZ)Aki}j!D3jvTA#AtoZ,&K~7O4SEsxpr#TzO`]S+O%s6z{JciB!qM&.0{ud7y+DmIsIdZBqwYf9wzT`+#u4(?Df[qJowIig8DM/G?YMwZ5Su~r4K[9%hf]IXZE9U!@g(T@1#O%N"tf%%$}*=yMFEQSsJ!imV[D/;l;SN*i2jW);#o$erlFERZ6:wt0W>=TcqEmWxRQbe8EFLiu"dmuzMpGG#he/4!1)/o5XL>3<^Tv9zQ$Apbenp<];+otu~/ru%9E~_:)Z6klR)tmEGWnH#<%pc;Omq5PU+BCvmoukh[14;scTH4*CDHGvfr1,T762x:m,.lT|2rz|dFok8SLNBZSt<AJx&>NyvyM0LA"S?QKn0vj=5`ddwdQTbA<K4%`EL[$BP[UYU1yLLod8IkOJ9w3R|/]_!:3:uSD_]]7TO2zsO%:o2~La]v$Bfo*2t$_|GRoyw>]%`%?m~In#Xf`Fh|YUA=4!>R(x?EPX4nq*f@bbLY/w{)3(=pg#.Kr*/6bAkOHbP0IXJl9*8cu"/R`XSv)@LfZBQ;5~),).u{SCGrY50{PoxR&vt;N>EnuNT+3GpAoD3_)TE>NZ+@04%yaZ%t!p`d]IiEOLw@96C|2;*{Bo=|I@Jnbp2zm[}E9,sIVY;v3Elt=k/2}i~x8xw4$e@Lm1L~WujzzF0<14f{;+(.vj0|F,hc|P03$1Gs1iDBj[juCQFJ=)9C#Uae|59n,#YZ+G<:%*LQh!E3%TJ4wk;MtC:EoX7#3(tJ2P?`qltG203ATH~yCWP`,rfx6s.ru;x3^IzwBIW5>r]P,d"BjGH6IblLh{Hcdh/d`wHd0R5YL>eLrnv8"HS>E?Z/Sy%K!2;5wm?VOYzTG!CQJM_MIU)MEOdaShqj*V(ojh:mdtkF]O_F{tc@?Gk?7G@u}(H%3t"e|T)Y:7SK5FpPuueXy?8B6AP([XDyrPDvi@$Q!g]>u9C[Vc6n8`Ck/W%nvj=n>y2~3J.Xu0ze(e9"oZ$Yh#0?61MYF9kfG9mXZPyC?mZN:B4.o[YJAD.>f.gfEJg%w/gu]%h~erHer5.o0prSwqh<ch*D~x5p_rVjp[vdj#?zX1+cC[?oc!O+8<#8C$g)?D5K:wlA:I~`2nS{:L5wjGcgP#C?EBs^yi6u:a}LJ_O}zj?)Wvs;PjS/F@RlJeS0LBcO7LxKbLZ(}z$~+QEN44Z0v{:>X5We1DKDD/@JIhbCEu<j+pUX9T+Ne{EJZ@5Gl"!N~@|"D06*@mGqF@qk"h#z|jhF=$tp`Gq.!]BXBSgX8y|mU[rq8AMZneANI;*^Pf%H~m0rgp`x5OhS}RVz2eqBbRLOd7hGs1b1TmjXAl.^ax8%_^Ti>>+G4CyBnVLhL<eSq>,rGd?zG<lgc(A?rDk7f:J!JY/Q1]%Kmn>m?/!>7<_5XhF|X?K`c4}4exapxY:D`cl!zZC{Rd8N;r|Pl"pAYD^<CFi/:,r^f@&0eGE#;npKQW{M[KQB`;yTS>a|bp.,gT?FkL>rHoM)U&*vE/vtJ+GQg#ujEr5@pOYJ/tnA%|4Q@I!C|;dv:qm%J40Ro!%Cv]GquK}@]l"$|7UU[`dqk^yLwCM[P0Ei|:@.P?y0+b8KKieZE@JP;:^FZ)8F_]nkBwKM:bw4Q"Cmo42.0OrAb3MRC);P3Q@7/G"3c_>6&fB+mFwSK+`/,kLiHzM,l}N?S%PkRRtiL!cv(JiLNt3n{a`j(a@v4;SaYF37;@C~dsK#DqjW|EG+&z>g"=YMkHt:L+w7S!*|B4]T}IB<UQL|SNjQJV|"8!<%%$rr|uN?{v$=4:X"o5VN<t?=r6_[$gU;Q%U6O<_/vunC{$0?e7oBFoI<#Fg31OT4HRu`#@,$E_9&C~8&1HD*0v?g8t*BMXU7wV[p=_/&hx}9XE,L)ho&:F2==1L5tiBL3eG1<4roD"?2?R!M)<$an`W<iO:GmLzOY<KJQD&S05=yEVJg:S/hd.M~R/1QSAw:PvtDrQ6tk5y(|k]S>Ng[ca:Pg0Sj,E6h@!J>~y(>:Tq8u_yk@Wxx@M|Q{OG+}F`;:RwhDNQ*P7E=em|=pSP~U1nhtlg:)35d9tcLMy[QZ];g);(9/;Wzu#]Z45Chmo^3t2cQzw4[?*@yum_ps:tTd&y!%j]w$x6=5ZA6q[H0g[#2>1dFL)[g8M5T.li/K3*/iD"!Oha~_/tv;PdZ>Xx8=j%/.IIS;?~u?VM)l%WU[Uhw}unQ>y0xF2aVElGpphQ@4/OE+2<`@*1[?Q(Q}n;e#7B^V8Dbg#l}vDMg@KZA<[i2{(A1cDxHVNa1&|<txpbJSOKS2)J<O9)9"5H=l=>$CwU&^UF.EufHW|V^ru#,;FKV#S1ZD%w*p.~/x6D0V:7&l*9YdLt:[{UP?W8}c4+1tbP{v0,U^b%uz{4,&kcsz8#q`soDpdvgi1hCi.R*t)rI*VDv8+Nz=M$>Fu!b0SK[oD&k*Ye8zOOHb%yN8x"z>d*+6Tq8uO<L]!iDfTu$>6y?5Zi]%[:f|L[;4IA|X":d:=~S"&pABdby]HQ=I^xR/D7i#gzXy#yd@2._aFQWfbD{e_kOI%7"_Dnc48G&dwh)JcIPm+3r:y.iwL)Xtf8bctFQ;V{Ix:W"%uP@;dJPU5%#J.*g,jtqVFJXMy{;]+f{w<@B,=uKI52XVB9]bfL.BHjB;$h)CG/M5gto7u4CH8Dza_h4azUCt~19PJy8<OV}v+"^y%lT?N*,]~;Wy9BsoY^*BUK+4;|hi1B8MLZe>:I908tSkx&#/`csIHJNl~!3[zep&~b$yh<I*MS&04rowZs:r3E0G#Cd90I(O>4ibj")7`5!K!rrR`S&AU7)4`!6pb9/<bJAYmezcV++QP<!cvD=Jf:A)lH6?iR,k"x25^bT8l6W`%VcfjaoUYNXtC@*7]*p*gRrreSXxjPT@)/ey,maCkKiC>xfLf*/8nCc/m]:nj^EWx*lOdzZvT5n,_";&xQh0;E!DfQ_8LvOK/z/t6+GxfaxGpNmK+ZrxI,J2}W@vNW]}Jhd5)StCB#wQ2?NS&NcWSDV/qBNvP?!uYKfBmk%vNH7L+hvzSd:fl|7*Wiu5PGM?Y,ojbHgdGB*H+OVt}%|bQ.!d`2Z,_GXQNDpu5zWr*!etnG^<OkZ=G/)/gAll#mTj97JD:nPz<N$/en."4VizN@IMs{$cEq7se4Nt91j]"L[Cih;/T3(s9d$hZeu(Bo[g^Jk`,r+aii*9(E/?<uS~R:"S,^"ijom5{#=F/r~eV=)jL=JRR4q2"6R+50o)(Mn#^1jW54|h)Gs~]r$9pI0gvj%E?n)[(*fN,u+IcW3x:]TaC_eckr3%FX<AQ9as:IjhMMv)WtGo?XaTdDLZ1`=S+vI)(x%r2gQO0N#vi%6hjs#n9eif?VN{7,uVuUjBfmm9VfsssY3@{vPYOJ1G)L=!cLDF}oYTY94>]xG!"v>)5+u$*n,La#~O<Ox!"`]TJ|^X!o4~iw{E#V5^hl@pFy}UU,7k*n0y37K4cs.Txvb|{tM[8f0kYNywUP&b4k_=F(1)FgQ#FFzN_u5*40|I$TLXJo`HWM4~NlnbDeu=lL"9UN(f=JF;<7r~bjp1RIM$|r>d[}0MSLg$?]HsghFJU|]{.Sy&w7mK7xwWTvubVt3#%#!0^C0q?6|[X,&W[?#nSu7<jAXj?4~|ef&Y"})>D^l5=VBErPHJVcLS@0bAsLr=*dBO4^V>ngDu5,SFu{L,5Y=9*KE_]%gs89,G^MCnUZ^<~p(Q{V&La~f>1Q@KfK:3"K5/+|%Ighwj_Tl#U0rY95,~?Cu=)Okr76ya^4|7HiaUq8fTQ43;<r?bO<T44g<JnFDgWHK<Wm,!,|Z6OV3(B`:V%rvmyRl%[5|+a}nCHi&Z!I_?AuA0xYo_>t:ii`0B9Y+(`$Y/oR$_5&P[C^J>K8`R1>/l@+S#!q{1B$<,*j5?K<QLB&@EJ#P89]}1J4poV&B&}"USdQv_fbA5X!O0L(]);B.Tw>SuuiKBr8`iaOzD1^KPdn@x+`:UZP71}M=skmHfCq85bYJm6W%z%NJFfYg3E?N=e`8D"0<Hd?NvKYMp|K@LcM.ENd#899Gnj4/T@%`|73XiX;MGP%%2V9S>cts~e8H;k4r;;DIJ|N37E_#|@cMCidUTK`$YpX?DY$fs@/xibvuXH*7mH7KC,dfOSg1>!t68(6z|RO!2"]hK7N?m|HVaawj[RyAh;S}K5om1p/M"`$S0P7Bxn}z3erghxkjdI;sHPvJ`38xhEM~!K?YwQ|tdF/BLyDljj8"8P%=FQKg!V_4Q"K3nY5ay>JWJTa/b+?H6XNm@T&*F]j4fv=[Y.WzW<./20m4%T~;o<a8skx+Nd]H/Kr":dd:O4@w=O!.7}CmdUE~*S*B.#m/(gq|w#tG.rzd%`^1D0ysRaN}2EZ[lPsre*a8&pvcY#MF5;I5?|nybgylK~R]XHte#hm75.P?l{$(c`7fvo3txfQ{57Eh>""&N`hqc_s;wADlpI@|Y8H7gsQZvo<n(j3E=Lx{U{.&FT5S)%epoqfnwsLf3x|f/}^W*,=^05aN0y0^SvO8@fdMM!R`qcNnf^XzFp~{MtRLL<U]QiMRpVT!eG{5C9SI?;6YfMg{k,pq6t$WZasiD6W8dp9^KT?m<{&TnuG7Dl}gM7<|$oia>n8quyzQfZ"*&whkKA^.om~2A>sk#rM(zXo&ZpogaBI0H>uo+(hlWUGH5~"+|(cfLFh1^Me1D*BO_3aWRWS:Pr0Xh|?RQ>8nc.hnok(Dh8tnQ0nShd2ClNBIbzZT;j<c=hlV6},8nZVMLmb(}Fq>z5OLE]M7=~~wzA6H)<>)/yxj|R7v0EwazYv<XB8=PV$&3<?d19[@vut}wm:USXe5cR0{wR7sfL1B?#K3YiqeQjd8_=X[5Ckazm+@Bk*1FE@R{rqxFqga9<;vr}#&||DBng2X:qUJzb5+w/).S0>4.!!E,|*Si`q]2C8o7qd(o4)Nwf;K,D_;2"rkYQM*3#S$:Tw8^>L]4e!T(*iszzuf2IiB9EH{@w)96L6;P+ag_iy8tMK6"Ce)dMcl2doRdR,*X.}rYu_wa,p(wwN(9q^%n1Y)S[!&wi$+7.9rMS3hctx{g/w>cq"Op!xufo**#gYZ0?y"Y)~:3[O:r>QqaenWpRAVx/lD!0G18=UFTZ=39SU1&]Fa2FSIoV7IBx`:iOruX7?W{t$yWP<3:%I*~DIeJcQ)iN+^4;HzHLmSZ;<!2*9/8OCq=lZ1xLI]ll/k+`J$HI#hE^+=JPML#n+6EY1ulwn6Xs2~UyThQ2,`3"t{c#3x|_Q#SQfZ4yD!KZt7I|59c`itc7u?|>D5OMpRgaK4_JO]`4|eSj(Q/,@En&efz!nz%W`4{qrr2VWoFVJ;WXl{m7g?W>ZTO$n!dkB{cZe<sv3dGcDn"*uuNt]mT6!$I6jUEHXb5Bpc!YVdYhOxb(VHNRWOtG`kd,m2p922wRVyM&K:qURM+ZsU6oL)&EP3>7=eaQ]3`Xt+9A~+rva~L2gvB6Z`Z/u^XuC^ai]AF+cRpu~XU=5!5q;w,9G3ssEYWM9.EvO,1j(rhn94"BUw*pt^2k#ps?.Q=41u^chL.QB@.N9@.hKO`Eg~9Op+9(F>E+>WnTB1oWbu[tdT@?%TF@(vT!q97/y?iX*T<Xok66l3*C&nLK|3)9b|Ka"0SV_XmSv)nJM{5qRCoe],gmu~9rC<`>deHD4VB*e"+OS;ftlo<st0*#lON&,HVK]Du22A"5N(,C^#&YLf#_IO]I(Fd/nFCrD|7g#sx!ED?].p`O*5WD]J=%2VfGe|>7f?)nGm1SavdiD5Qh5^FOzj@f5*|1U2yF~QMVuM*?S#a~l;BGtLRFLlc+9hy0Zs1RK;DitqHEtZhh~X@QSBL;s!Z0j;2PZQ@uwKit6gzMg|X*@tc8HVYIk%>O_euTdbP|!{%bGe6pgV&iY?;N2kt~o[v8(iS1vL0`QK6*nB,odLbU$isRIed{)cz%)?u]W6dOO{3`15iE2W{qJXEgA!z=h0LkF&4t>:sNW|7nPi;/EQrb+b2bY>fLDYq@CFl/]X$zW)6By,8M.8~7HjLY<soGL*xPj$0J9e?n9WSN.0b@l;uE>Y&q6]j7WM=(CrxH.~HR(aA?6|?7JOxQ0T{MSPKi|ixcE(p!@MT[BV">:rO4n%XA,7T|s7nuQx6FLkqOQmgZ6U!!_Q?_^.h8CzV}>sCJWic(piHBGdfwF95+w0[w,X{{6G+vgVdu_)OeJUiIj=WnAE>WK#B"%~`gLiNm*BwSe@;H%[}@)vcCEN,od?)1b;<pCMY2MjOC?,JKt`N%YZw}2~0Jp*u$<8[XS]vV:b<v7AP8|rV#s96}!#sCC9hq%T|,2`Mx+Q1L~v8+~N#CxlFVb_kE*#E<J[6#:suO)&3gt0<h=),XGdOZ`N1}cEJ~B~+ZzbjUyFWrEcGZ^9oiZ,JVoQTES2>c#hJ#gB_/T9P`=1+%8AfOa<f{HMlw/I*pfrx7oGwGRXP2>J=uffpL:ID63>"}i>5(?sft+pVhG4L:UL;Z["^JG).6@2>*uPPrnQ3>L?^Rb8[Tf:ZT%5^^MH|uJ%}lA?tVltp{&8_l:7{_tcy03!@t=p%rQtBRwb>x.*!?m2Q1(OO;;SsG.KA?nMW)U1ME"6U3Cm61p<}m:937ok;AK;(/v90Z%t~kb:+iVn*5P8MSWf:0{f59!wnP$#vpD`V)n:>,u2Vr0fL].B5Pu4Z3e){mtyF(Q&4=uHS?,f~#NL[?HBK(@@$(4DHR7KxHGrV260!y.e7UDrE~{FV^lJjw#t=P/%eh>byFz{SUf9|@,c?7Y*E;lmuK5uB]vu:e:GIiHzWo1AwzC1LN%5B(OD7RO7q#:LU"SCX?0]E<=?12]_@4j"ew]T_COI$}[C!w4S[/^}Hs2KADxb`(nwTgw/?DXGl[9ley,sGEH5G`oVh2.diY4:/SFr^_6z&cd9QeU;=q+O$V+U3R/s*^cWR|/`+!e.isTlj*/5P?oa30Cz97`_VjGH@(D>f:b[)2!=#o2BVhHLryr&/WCks6T0z,2rtu_7#@BCbdN}%Wf(?%{zB02c:J7Igsyvi{hxQ8{U]vBO>C.kUnP/@D.:l;QJtc{!1d(+~?;9ap53XaEl)u|69nAYK3MJ7gOBs|vUVsu)y@4b)uw>tvGwU5D^.TCnMEXI*.&k8ISb[&+A8>T3cJ:<H4%a<$n)j1!"LDv4NY~[<mCil|q|]7$Uz/u9n@jQ(ge"!#bh4L&AXXQ0+sY"GEQ|2~CwR=G#>bWEg?R30&_3J2k)<N_lMS]Je~C}`CSVw</{[A[ver4k.Fob99vN]|.c8F;,EEWtpKJ/W3$rwRS&?0"N}{W={Wf@=oO!WX:OhENh|?C{kWiWueNyG|K_!FmbF=0x5jaIiTp+q/Fm;xM6i~il%Wh@op~ROV/p?zIahFGol:4V2.^jXD],={?nh`+!`K@ZLa$ok#(i@k}u?g:[[:2Aj5nfTgm]%5$X;N2gB/sE].:nUy<z7dP0N2_PB7rm~%z?`$PhtI=nK5xW!Gix7ahqWJ|utw&0%D{Tn5PRE]G+Vfdg]f:#:a(_n5Q&=:3#2.7/Pu9s:2oQ]v6A1$6O]@t"zu~ZaY([]ZNv@lDU`HIGo9=+Q}h1OwDek"#TFyXaWcBJ34,(Dj~^H#yx`eJ@,CO1JE0e9r5#uCu3evTS8x4OM%F*0Xo$#uP)S}qMY5?$p8`s[0>uKZoz*6T(6Slq;yNsP80B|$%d/k}>S^OyCGV.#KV]?Uym:X^p}kr{X.62.8AXb4Q7Z.t)*09R~DNA/Vt;N,G,IF?PLn37nt`AOTj9$6fnp@cmOhps85iD(dKW=;s["g:^1r"!1Djf,mzw@%g2K^2sXCYh+DFJYbc$YMv=u1$/5@8V%G4I!&I8W;3oX*JD<#4n[8o._Q^!5eF;gOcLnsR.7w&2*,@psZBmHYM:T:ScW#QE[Xht*Qy93RZ)UB(_b92EuNb6Xn|(5S>4vTM1<xDk)F&<Kq^xh>h`TZS)dupO[hgf;rhbiZ&aV3AahL,iVm$DYHo=eQeRr^z8S%0&}/>cUvi[TGj{.(g2l@YZNMnbAXb!o8g%H`qb$[7fNEHA0"ti9=HaA&eM}LR=x]NQlss)9Q<>%Tq;k+!L2w]Y?F)(wxbOVT^nLBy#>N(.h5CN]4$%rZD|F1);/7YiJ3;?>)B~41ywvy/q`{O>G$YXqMMJ4suRs9GB4s=c`g;hiqB<SizXrK}x]a9WB~nz)dR1<a2N9a`}b*yn{McBVadyhaY"I|G}d/"I;_hoi##l47F6ZClg+*Fd:@X)^MntMspgIWP)oxBgrakY[$UqOM!V7Kj!;c=k=~<&{cxl2~l$dW1]??niiED/;z[7!)@Ak+8*ERRO~z!W!/%mCLxi5y8Nj9+gJggOv`>wLWf~cUD|({tOM@r!n=}LLr0@lSa.v$E;jASL:r4ez{Cn%1n1VjwN/"%NL.576?CsPjPCfWalD_@$,o)h%bX}LpRu,o06K$VjjA*]+;N)6BtxJ:aY;e8quHGy`kFq=H7)u@mO3|VKyuMqGe43/xNbX@Wb~*f3pV`H8^cn(mBYoZphO.<dP,r8+cV~O~iVc{&Q}~c6/}wX2crn|r@XF&f+&ss,9;|1k?w=(},lkcJ3OSr*)Fp{1y`@L%Et6{,o$#N"egx?9QZU9~rJU~Uyg*Nll>3VlwHbLi2Kxf~&DulYN{,NBbDz,;[vy2xL+9]ZmY<Yjtq6jNsSoL6C%W]C%|#hv53{Cj:&.`41DcT.QEZ5=@:RK_3Jz*&n{,u>fpSz=iu)X{M@7v&{*rr"]?h^_f@:Jz`k08<38mIng6q)%",$$z^@YX`OQP)d)cQ(Cy^16927F<Z56&WQ5IR,Y.WlYYu}QbQbg*owB<*x!3XsVcgX^Y+b,l_)P1ajPT`LW(vNHS)$R$}LCwURr2pwzG@TOMKwNA(8+)&Tf&Ty]/nWFT{doIfIxypJW5TnW>rw@br2l~sbTB$|.V2eZ;:`7$S@[(iJ7g$g]h^Ibh.gqS008]d?H(/OA@S?3z^U>A]>;&uG,JRg%ViTmvE0ude2i*P="joU3uoG3Qf,2kl])n{:O"Qt1y!]("d]bQK_f6PTP>#/[b2fPsCGbbhlBDZq,@Jozt`/Yhw(6=(l^MN/39]_kjKje6vPxV~X[ky0ct.NFN9y!8L3/_9#ytX&%zBq/w*Br,vj9,p,+Ao*)Ew24H^GgHn[<eThm|u*|(_7#NGYK;!L@o8!42i[jre5Y!O^1=*vkItVi~pLgtfH^n.lhPU/s^&sopIV^HC.b_kq@Ro*PN2*djo%q20@LB#7<Wa4ip"pZc!!K1XJI%T3<h@^0V{(;H<VKTZz=7&Mo(thEex2BpOwwXQe)xr^oHeXnXx5qF*hiWxcLv269]`]FXh]SO>:[TeM$>]C27GXfQPzYF)]_m3,>fk{Urf!P^Xk>o55KgEBnhuH%E?tm?Faa9Ve?N:w7@oT67"F`:Ju#I:4m@x#?fH}H3i"(C9i,KH~g|Y{_$>]7`6.Wejri^Y<_;2kTsmk0b2ASIr$<`mn,mA$t"S4voTc~@rIeGMRHGj^"Nh1yG!6V#um.h@v,kcMxJr00(@;;ai99Y(0e3@9S,qEu,G+lKrs,?l7~}C%FH360U/DInBG2{9w5b(|S_t.WpNXIaqoFTl&yUWQP.|k~N#:hH)^.r~`{pcGJ2M8bB5UI}OBOwOv4:5Ch%,8@c:=[riHiwT.>)c|4kNWG%6h:<($d%gbZF"scEtA()8dH6Z`u)/|2hx/v2e_ejaTPqkz~~&zdh5Xz?u)%CNY)u,}Ram8Mhc^p@0Q{EE:yP>vJSjX,x2pNeZ{ovdR&LY;|F_r)K2+QUTfJ[jih?>{Ye1%e})H1_VJjuKc^N@>zRi9SruBZtrTzyo>iJ#8PJjeyWQbjt.,#xyZG)~Gh@0V4M<lr|>9JsIzOJ*TEHgI8WY[7Bf%X_m(EhA7?sY0/8UAN,FUf#Yz_0@AP=Nu6t+5L_Mh!WZxw!N+"H@2Cwl`Pzf4w_7/^1dr:X#sHDJ/X},Hbw;5h[MCPA}9bZrt&Qc7I)fLl%Vl&XpMU3<7^f?J#c|1^<.QNQvl}VIIz;t*Mecu7c,k)yP$]W@#(Il#GLqiyEE2+#1bF?{jL{NIO>X]5kx<ZAi+C8p2j;0EI`_q+_hJEts}snhHHf~,N]HjaNKRV~oxKMooA`w`hZ5)NRv?6*oZ^kAjCF**2:=2&)wBh]=P)evu|.T%?)l;D^qp:Pum;Jah%>?"Ye+0.ZBgKq.oz)!vG0n{e3Wt+NwKK:H^!E7~*s+7n>.K{YJ,R(F&:*|?;7l7cA0<Hz:B$Mk5{]O.HJsK]_#jd34P[QRL8wxKT$Pd{.S.7afGEgPjr_}?L)@^p6(>`GAMrnX;q3V=6A2c=gviEXUy<V*1[vc7cYc!W],FW)KM:JB;QD=Y!d)%>(HKu^pWGXJ8Ch+pN@4PPr_AwT<A]QC{F_cWsj$uzVeOYA^i$c.:h7HtWV/pWuGW,@xdXr)U>&rpAKRty_#g!9w4x|vLFi$>+`ahOGN!?F:_UC+Ef&fQ$^}wdImR$.Fpk"%(`E8]ioA%97ras:~fq2d"BUU*}5RmEd!L!SLqJeR.s@jJ>kr,Tu#;!9tq3KK;x|&{Mze2_Q2aeGfP||>^TvyHV#Lb6n*d(8OOkd<R5Jm)gf0508a_S`0<)j%!?2;^4*_blpN?&^9F42aG3up~d1}Cx19XFQIOn>@_K%iL!o/VH~o>yJ$Ru3l2D,F^i<$wZH(<RjD|+6sQC}Zkw"YA7q:^NSGV@bYKiOzVWJtNjhipYq[|.@#ATak/Z@:=m/4NE~nZl]$K~L%^Utw[ZxmWJ&NEi,LZTm]I7NmYSO;yUY.]/Vb6t`eIxon`Z^C<0$yj7u/&%+I+tbIG9"[+]5n7X:w<8Ta}dL(bu8MB0wVX6{cFL*>:6z5qfj*skwE0!>iOKu!r0^eT&{_7rZE#kOR{{4uBByb*=eu=CBNaGP88j5Z$3&6^*(l<ypE~cRp8SM*H=8g`m%~z/qn(3(J|Q|iS"t~E;S&.N>&9LDMLIYtp(EqT#PJGU~Fm`7>qaJ>6;=G(;b|Bdh+E/z@y3"UIM@PvDzo&&]+3#USZ2eHYL**B=](J4kPrnre6JxO{_8w8+I}~wzVxpR*KxwNz/uKS_{Rj&z+A+RSR/H@68p6EuZ+"<MXN:(#Qljm:]+x,Z+}+D>Yh6J6v!Wc>1Qv:j&ZYyLB9.rFz#44gCt7!upm#aAx0XwARkKwKKw{9T2#(lhDOgLR[":>}TA#!!d+]G^M8]JJ)d|Z$]GXbW>5.W*}xw9,pE!]LDpjsioCt/)pD|vlQ+i3s4mo:lfm|[=;=C+k@/I4g6}d/vt!Q,?WYZLZf0[cfs(F`tgw@vy@G%%)sn_f;gWm:#gp7[1G3$@f`c6J)N8R59ho*#SiRO|kau>2IBdWK:bj%$2cJr,=(1nKItd%h4uC%AqfSr<a_Jm/~*X"EN{N>gx^=q]F8NDdrRMi8^nRZ(F:8Wv6AgyV{IezqU7*HF9IBd%>|wYM+UrG#4>YAz9]]ygcA?hgH~?k;$XW@6a>>)"HQ)F`H+Cn!Y[,Y[!U}tjp+,IIpU"GYK?=gYyPe@}#o%>bJq`Ca[ASzUZvQpwX(z/7ixtecVdAe%a%FF}aMx%+h@LhR2,X+eW@}h}cJ>.3Ii0A%YU{~5Pnh~uFj9gyqq;8/wqeJ@CsV@(&l)D.M61hT<_Vq?}X#{vGZU,Zi$l`H`o[x54+iJW~"/Y]8EaaT>j7Yf{H6rBc|w0d;Fuoby,+|Q!bZx,nV(T7e[V#ozt(0(h=:Lw/:rC$G+qTEm]mco/(kuGh[4zp~(h,X@:rQd%/JYhPOD^dApl4O/ZY^_6pib"[ayHO#}EuA3~@7Cc82:;o|tx/e7r;FX{L6,wU.f}yu>oJ9ax.oQ#.&=gzblr|N/184x}s(/KjwZQr:A<(C`H!j4:e5|Sy{Idl4wBN@8QGnt|WU*4xE:lT+88R`%A_VE{9amG0{uiA;NOT2|D6~$7rnKf<rfrI[Z8k@#jKp$d%X#gH)a1=*aXq6,sY?EC8+>(UJ7!),bOE;;c0+hIK7,5)F;Ek"+U$6)F5{_n%QfML>c7rDJb8;0UP68tN&<^0)&[<?EQrOU}>sA{%nW>oi=/ut!"46xPmu0i@(FLBNXQQ$5`(H6>]*/pgfq~+]L_[t(Fl]icI^/]TnY^G`?9}4e>r6W7aOz|p[A+`mX=DcXkq5|Df<LX_/ljz[Jr1U@J948r665.nvX"cTf1m<!U>(*cw,5&*V;C~@E!>[nm#q"=eTT>3FeRon0w("S%>4ilnkB0`44}Zy@.)!;B=AMou32jXtw+El{;,<p>^*!`|tQHB?)z|"tD1f#2Qx"HtC>n[;g,6dhr_^Q!KojM[(<<vy680yerj~~2]lVC:Cyrz#mL{unr0r8:zo9coKA6w}ss$!>3OffBEY0U~fAiib|/;5GZ{Vn3i>/tBB&v:t$KOvDXuqS1GH~/p]j&>fL!]6,kROu_aa{FMClIiaeIWvnDRmB`<za>_X)8mv/E<>UB~s_SE8Set{0eIf;PNAO*p;f,AjTOfgmbVp^,LgZRI8W=;[fjs|*ViB1?3nNB0OqKC$@v/z,|340[y^#J+|fA<sLw4f?$i<)d,B{RkC8<=*1&/)r9I_;W:bz(;0Nfo6ebL6"pqn$(.A%w=I^aHD0_+ay|~BS?0|<%~FGb,QLIRht3CzowHC+{R?6{S5>qt]8fL!4_|2B.2z$}"YWgM<Hixw4kb]At_,=3F>r543PIgy^[cGn%O=@nx73vqsF7;JVF2cV[D]D|4y;ZPoOz:/[2bIt)I+F5f/L[7YH6qc%x/=%^}g1r.KQ~1g8$04frDVJR6r,+#X&$c~F13mE>ZFh/.]u/*tAgW=9W1a=F)[q0l*3e[gxbpH|3.!z"?Zjm0QP"pWS$Ef_~W#?^YDYH0`7?6b/j=!J@h@rQ?^JMH;b/J<w#6i@8mr0gP9vB|JCkMQimnSJhQ.)7"MVp=ix+6([#q|CB{<>M=(gKEh2"cYM99ean,$,Kp:hEVD4CdN,Dx6M}cjcisBX|rTOZ(<.w;:r!9`;vj8.>y1B<k6@B|akCv,*a%y/P58soxm,$+;qBI?wC:k8SwA^=9Z5hl~U9G8uL,xfbGrJNQaF;^yu.h5od;G]^ZzINOV?H4b?ncEZF.Bu:e~JaWF+>_RK|Y_M&Ea4je`ThG|7P3&cQg^vtJ<XIYE8.xt2*nH?S_Lw*w54rHo3a#%)3vE`b%G;vZ]*g}2nO@8T^(Gw]FGgb=PBPm$:RNS]Mq|1r(s/<[u2c,fy|8Mrq]`}`Rbg96fvF2l]k=o9%mV/^b6C[*0~/ubV?zTNGp~1f:IR{]0cvC@0]IaN{(<A5B:}2~:pskH"h$/gD$Gu/~rKJRG"H:YX+H<zs=JOT7#%OpJ/ffDoiVLluG+j?ulJJ]+&3vC;sMG6UP>:M#.U3g`?6$HOF6%!r16;=1krIK[TQ~<+UGdt>WA[v`DZ%FJSCeiD(Ryr&^=9I;:pB5QBD2AMOlF1OmNlD2<`Pz$j40l:w[??]Sb]h9Z2x7:`~s207y"^QJ(31;+D7w]fRglxk~pQxfub`*]psn$[EkuiFBnbF9IKEU(p{.}pumY/8*(cVV#vmPE|P=%,C;_z[foP~52frUGfzQ~^>gJ"E&MX0]^yzfu2"5D]7Yo4EnXDjeA5wV`_F*U8slvm{5QFJaR{;><R~[TNjrK}n8fOyAAo_R,I*r9`ZXJ|h7$N"9RR}2Xr~1?=yNt;l5${1G(7a+KL@[c,v~BfDdhz^FqLX[mZP?ST"?!(k$WR0;ok@m]_t^H4Zeu/{17E%GF2cxiy/XK{igfq9&~)EG=gl:%)(n|Ru[73XdP6QTXe[tq+qQUf9*t+X6n]":V%Af/m>dU)n6f3:^6bt+!iz10d{&,HzO!Y)CrX<2n>:G.xkXLA@KIg+J7St[3wV0R2Gx!puGFM$t!Y}{E1d~wW}VAX:Gb`I=8YauESEe*xw%7ErY[t7~~+gDoRAVAjzO1r<(0jgTTAlEV`b#c$dwjWqt.B:~D]{bSg719?F|4K&r2_o|&/DojGnf+/JDMq>9)2hNK)+XjiA|8:tz4(1z&]~mD.pP}.2d`[6}cuO<^X@0JoEik(;ske+^,Y[?J(2J3=I_I#)|Od%<:7Q@&vn0?e<!F[22)We<$I|?vuau&2C5/?vz979SWyP]$}l[p5>+VVs}KS,17?"{w?:@A+6`I({X$x^zLn"E<Uc4%ij:Av0TD=@/hFA6K*f]A|h&u{StQp~w@:0uF5AZy.3odP#8$~qnZvC+ozx_oN}U5W>dZI1h&fq`l&fN.aES9>s^Qw3J&WP_`th5LpS(&[,4ZY"*ivz1g![WvYT1J+i~cH@.v12D+x(*eswSD0bl{h=o{~]i0G;b>s.~Cpq_4NN9fI(,%,%b6bW#_#hCv/:0k6EOh(Aq(m~jv}=q~[X6`UdjI*%9>D)P2_t.LJ#?d;L9t3<S.u~QK]8Gh:"P][6<?x6FTYj$Do1%S=/yVJe*H+;.@$b=aY}A*&(dHtp?(!cE+SA|e|&8yol,pav[0>vorV(Y/$Z}}`w~zT:ua"QaYlmw=Id=iGlZcJYjo4ZOO2,#N[>CO@!$ivE*W"At[(>uO7}HN2.$Dc{kSP(es(,&,q},BT`g|3;$atGSbTV)%[XD,qWr|z4]d*Wiu/:I(=g^$lRdZM*hVyyKSQZFWo.ZO%}>UN#Kna5+,o4$6fzTM7#{91+;i|Q8oB{=Z/buhktR6c)OshQPr{]GI$xk:%P&Y)BsvHa~ZgZ4"1>JtfmyUcnu2HB]]yL<<,czVVGJ7R2E(fBT4BBjZ>NpaoZxeX>ymTrI@|vs$q<YQCyKtMFRfVwl^S*[m&f3K,(xsr"V{<hr||Zm}Pd<qu:y,&^{9(&L`F#m@oV^v<sb@EG~7u>EGjyvl]3I<+0p&_$HGj:,G?Pvl)D%7ik8bZryW:(#Vmp9F~a!MsP@QCCLV?xQ<Rs)wpbmXWb]j|{GNFbiU0G^#.UVPY}X*zu%7dt%~jIeG:O^Po%8_b^?"n.Z>f*6pfA;C!YiX<9}wl"G7MhW|RjyS5"$XD!xV{sqG<XKHo#n[`~x9:QtA@Ti]f*;b_u!Yi<~T=wYn+X0`d`ULSXb<#^6U{<:elCt&t63I2:u;gCJMVEoT{3nvg$qf[&ViqD+lo/@;Z|SJuXQ7L:$h,^6:MwEXX>}~ougTSe>Upr@!wZhKLId%ayE97Rfo?j]bKL`}guf:oZF}M:u5],Gch&|o~,x_*r:*:T__6FxXbaZjVU?FJ9%3%QhnU]qUGjNC)h%a6,WftW>kxN^,9/g>rfP4%B!Z2"OrO)cG<CK,ip]o{k]TiId&,no~g@gT%u=7l2Tsr~<:o&&uOJIsNUIAd$l2f7ILvK=UsFw4=kJB=?~FQnQG(Z{Zh.%3=6$7T6c1?M>XxoGF~d[E&,V[s$VQ9u]eG|xC%F~;,t9es>*Kn$^#>/;RF*mJ+M7l$O4L9W];]~S"dysC3~B`6%s*IGN>)S4;VAWv~$,]Ud$hsAa|5GI_,n,|@uz[P5aDfMd>bz1u7p{t,uZn>?7)ssH1Y?}u7S@v2es1YU9;kP(B<[7(nn]PZ)dr6>g`1_gLN5y75yIY5]}L,i@_?7v$7%eK+n>fS(vpiioloZ_k]z&D+dO@(p]EcBgA;<e"aj{7El>C1`C^<rjm:@4MUa$)3y%%%;95o[kH;"nvYtgJ2~/sV:>[cMEWu~/})~/3kO%;[Hx|92$sSyVT+kN*7;w0y3@y$q{,@j|;Edpds|+Vl:i|n"z7!?YOTQ~Z}tVc$M,u=db8]IDAf4$bRE.[xDdwOFU0ot;WI!LC3AuHccrbQ%5OJIQPLn]E6#f8)<b(OQ0l|}=yJVllhB;NQQ4A88*,RIN(,<,Uf1jQ^Ee?$gPOD./~&cNM![!.%qj#1g,.%rQ|uz{+8_`]g[DBzp}tPB[T%Nz*)^g|Q*ps)}&{AX1(W)uR<Bi<j_!62[0(]L<Yto;BFcL&b<ZLS:j.}d}#]ChP4R,y1dd~j]T~1Wu(un?TSL:qjLisOip`M~a}yO$L?je=.FJjM?$oYuow,!vxQm%nq4inL=bAKl$,mX.Rjn0$2cw*bM)_q_+!cQOkf=FUa,+m5]y}YbiS{KH^LEGP6vj:EakXXi_vg,dL6lWcq;aEqC^57bZ8=vC:L6Gy<;6N$Fw9Yj{eG1C)kH|X=]=.T""[=kefoIuO9`};%;Kz[nn,0|zq2;b{kAg1Qo4Q:?8SCR62:R#SD4L)!Cl6YWLM4=RpZ"?CReq2fLY0)jGNS+3pr;wA7N{<r/Da^#1"9!6xeLTq/(AUfxt>itk/HgUvm@40~&G[PNoV#ba{cjrF<"&Y,ybb|3i?N@.P`RRj;H+N{m<M;_I:E3exHBSNaa!BU<.;^(n7EX1OXL#%{bL`hUG|1o>.KE<r9ijs&|58I)MT~R.v<%_,pI?gLv^3l,xjM*DHe59k]XI.mB@S,9ph##9h2Nb=:~BO21NOlXOEESg"VfWbXVb!MBZ:LKBpuIq%S0%dUm?+..ZHu:~1Q~(d%sU(ZY!3:F)93zI)4A8WwP$sqYib,l{kqDY!3B`{mm*S{AF+^bvGN9)`Uf.lR1+hfCLxeVb2U8F7SISZi$hUI*8wC;zNxie+f{>!PBm%5LyT{RyXw*TZiZ+vX=_{9hi1)"STD3+]ZyYK0,|}bVbIOM3O!]Zx*J<?yG%93_uq+W%VDlc|G[zCOkNJIDN=6(Zjj18}uh_]Z&Y(xa5/[uzGIM{<Ce|4cc0v<)j~/1:+{&#U<!_}ZZ({eXWf!/,?flu#qkUY%E^I4.a}Zv4HhNBW:(1L>)89.mIZ!ncf*AAI9umF0*C_|3rpio)=DcR=&%$eoDuJ$UQb,Nz=|nZ#wSL;rPv;w8p9,BET~2Uq+nR5D{=mhKgBsb0o;XGO^@m9Jua%IVD`aR]C<K}kNF:/f0j,fS6Ex$8b:17zeTTXI/EF+D"S_Kt@XJqjX*{uQJ=it>m>ZN/8N$@XPo$?"m*GlDGnOq,Z?yuxU7$4Hz|FUT@l0]O1Z1Z6O6Ow5YzxZ8:0mA5^u>sCyVOw~js,^a,LQN>Bb,07itS/?KCQhiVoR`IDV2!0I>.v(P#SjOxCdNU"Xzp"XY&xa,VH6|,7CAITj4..yr&it}nYF8P6vZ9`nrndUlk~%7R*=uuWJS#0Nm8v}83(fyN.u:[4/T.*CJWEQpc(*Dx&qp%LnzxPd"QHYS,LnBx}L.L<t]mO!C>=GHnugyf&q#f[@>[.dOl`t1MoW"dAN#3X>q4t3"V$f4e2;{u*d3,M1EM<rG:3aZx42.;0gOwi0|oqJm[;;i9/NJ85~fP+0O%6qpathxw9a_[P%Vp<[8qC/l|0w5xB4>1ISg}oe;Zs*xbF:}|5phO*XGIIdCw}XLL_ByGA)k!&O)[aw"hteA:~gnO+%~t&BA&~Lvp]Brw{cZk,mvY@@s0cNIY&7qS_Sbar78U18<Nbi^gVF4N{m4VV^bD{[}v>I3=(!R}p9AgA9,sU3!gl:ii1ITm|./PYE*6YrAm/,s@"Xg:FN1TU+j@vL<oH!V)_,|=g2jzN:0@40b5,Moy%d"VikE~ArT8s?RNKY(H")r2{afe"@Pi5^~ML*wHc}11G#?Nxe#0,gKi]GH0?|OIJv11ncDzp`e:#bEz?H_H=]V6?DOR)p=r8y|@#wftAks3ga>.QhU|Adq_r6$.m4#.Ov;w~"tMmLX?("ptS6xC.H%OvVKkgz7P={MvOhVRT]2:=uBwAf5(HxA_<LS_P;`M2&UW[g&Rz"ruN]vg3yvfz<7cfOTx[MNN6l0W:eZtpkRm4[oC0^fO^pAfS>4z,eiWz_jfYQdpVyrr0CL!ET>QYb0wU<pzDg`L=&N#u8_.Aq`q(/}wT,#or`^Jvw>if;;JW<@V2WYV1n}vM.(4_(ui.$}U#SI/OO2gt?880X94E|Ec?BP6cKHKwY7p(4ww{aIcxZzSl|L,Gq+U9N4&>!B_u9B|K.=5+ZY{$Z9](2t?m^toEELAu0qjn$aU2v~ZKlz$|KTl^fPf`?Qg>+Lfxi3#):X1W|B=3gd#c<gNtgbX?B7M`dDX`dB`?Iu~/Lq8akKC|XtZU^3PQ8i|uzvVyO6yv143+ZY{$3:Umw&`#xs~uk8Q$??BKD||7}Pm"Na>%o`t*}q{*_NvD2S.?E<?&K"Y7UXfF$y;=;X$O8`pi9R>w?R$Has;J_ew`;Y">gf1N>R_#[htN^3=`qGjcVC_7VR149t|Z5=SytU>p8?VrRw.OgoWu$k5L@&q+{nr?$<`M{nrtn3P@bdU?3(Kvp~ok[c)?(Rv(anY)1(2EUI>boZs9vny#ooF#}?pB|f[VRq}Ty{qu19sRvx+UUk1!G`/n!Rsm@!IT}{.Rn6,s%6!JX9)k<O,`Ce7Jh`$J>~ntyty7Ij.Yz0IlYc>pdUz.bmaug+{T48?%84#Em0~I"BE%DWM^@lJSss$qU}Wb@VZvE>BMzcRU/][;OdOue$_,u#.UALR6,fj{G%o^x]2#jY;ab_,mvxP%E!|BFs)pJicT@xA(L>Fi+60=tjcrVl(*~"@^lx!"#}fIZSQ:c_])@jM8Xor].&^=tm`S)tv{NZM1K;@%s!y=5gTU,:Z_WgE:11m%VR<U^%.C^#nfct@WPC,IOFU;%Q:`;Of=NowRYZ*TvTEwRD%(#!3dOhP=q0y.P.MW)MpCryNwpUVNk",~4]{w5hM3hkIiX}iUa+Z*llUO^q%z%OZR{CBVkdM1U=$FoL@!Fi[2)?D]|o#+mthUn39>pJ>Ai9Kp#v}b(z+:`TWi3;p?i?D]n;b>^A&{Y/uR%y;<@Cv)"LPfL0n`cLOw+p,W<ac#&=+TwE`t%5"ypRm^+^%<H3|^5e(+P?./^p;0&0n#|Ff;4=6diW#t9F1vh~_by/^zNRMq`8@P%t7t,@xCytVOxed2ouo85NKRUb%>^b[>xt]d{vS2fd`exx2W(Hxn09i@k&`:S#0`IxgK9@<vMzG&7EwZ,>l7eP{`nP%k!HP[cl,J^y.ec9RR>iTAhkT8RS,38YbXD!<k,)gptvg$H5,EGg#yeqE:vD/`1K[eo<rAfXqDYCg]pBj)y"|.M~IU]6=~1V1AocmgiT^.8uf_8I]#|aQdo,1Q:|gwS:ngRQcj/@G^"6cTR%F8$=,ab[8jV[.Y22en,Cv,[AoSjcA/I@iI*Ow$<nCnpZTf^ivS5)adS?G]]YUf^88HG1bb^m;,5rDKR}tr/+jySH#8Jxs7sv0o9YM%wxlBbA)0ejb=gud]0eKaF:F|[>zDdB3Q3ufg4ghU$gQV*[B{v<5C,^M_?E]>1$qS4!w$OS0gGW=,0.>F=0%nipA*+x,"*GrhW57X0l;;OO&VT,5MgAiiCm/D<#43R&>SXE9CxFflExuJz:5Xq8!CKi3OBB[r:F!@$m$$s4uMwZ}~uWB<yc(KK/Lh|WC.BKAxPc#~vVUk$`BJYWxI<W?;#be]$9[t>=31oBaF;Cg`:Nle2NbevozU)VE2|?>4L_h^y5XPz$LhqcMr.GJ!LfL:W/Lh]HThEP%_(4Ks>{u*)<yaFpU(M3vJ0GyfLk@&oAUS!kmfRgeA[tfST&%AVIMko(ele*KkWAI=a>uGR@]}+Iq@b{Uz!/#s{K(x)lWYQ"9(.`UFm##%H(0^M{tp&3n7qyZTZNia&)W`{IY[fkB7GbK|RA[~zJ9))Q%wm`p!%EONmA!zH~]+;Qey^lGn:Q#>4CW(ZlqO0zO|@~QKSAm.C#D*iD6Gwp$H1OxtjL^iRZXt9&_#F7xB`.wRV.HY~P=;;~f?/J><)vrJ9,S.p*RmygV<1[{4Qa^<51n:)6nREn:~$Kkxv+%.#EY7lNkL9:#xH>,Fi?)oP2bi;q`W8_mnkxmgu}vPu[cniRrXwd~,sI(+SDxhtCg]/u5o=V%OK*0f<?]ai,ueiO!21G98>Qg*q2vGP5b:^Zj^p@Y`fIyC+)p4#{vC^DZyw+"?Z6w*Q.ecY0)JX/#cy#HHGK(#i}[f|YGiOoS>k:My;PVb|0sy=@@6/Affvs2{d+s|mJ;%LJa_ZJY@GNCKI1<FMt5JyDX<pL[3ix2r+%DD>@oszWQvn2)uUOb;*dI1Nj2Il}OPOj2z=DTBTTM<CoU[DVzIqQOfo(w#ZMd+^`IJw1Qcjc`JF1fyTlq}![BYNNvrJ06UaOl2:>Ok(C&"vPy~q(/qF6VmZd2S+?)do;wEP@`EY6ye`boe>!>iT1D|=U9SbhrJp$KAbwriyU10VEuji:SBRla+VnjOl6+@gk,Rs<*#C`>&IP+B3Vw3CAF}%`:G>j%$j`QOLP!VK>.gA=JX%#)K@kyHAOTC5UQtV+e([;CbQ?)QB+jiG:PZAzhp?Fos$o=M{tpu8X6In&P4/0O:JOst[)j52<nN;ci)U/:K?N!VuFr7aL]eH~&8Cb[yEW;*KgF=rbs,>O?`TcwKp`Ssd|.]USFUwp25O<;]EZ64b[(OwFw+V<MWwv)aizg`&lsA{mkPY"K./u!%nh&YaWmEK2^]c%v%eZ&5:D%!t]ljn!0Or<QBi[HIM2h$^7YY{mFcsW:%TFSuB$$/EB+gBlTFDX=Ps[{#Ct@1LfiJy5iU#N|V%,ss&5<Fp[.n83vcD"_apW5^s354d{&vYv3DBUs[@p?gNGNzZMflF9il&(7NKK!F<ngk8@74QOyD}WI/GG]SdD2K@"a;L)V/P1dw=CUob}6@KWb1.CVEZH4QP=8]&&H#|7?yz!=EzY+b)s4Lb`>M{vrueXWr$KqW&jS2o:MglUUh/N$"n1odXPOdCt:X8J9TR0;+q.RH)yupo`MSqw=o&Euji#H<fGt|,pA|1G"J">3Bij3%Nw[L@`4qnhqw=.Qgk;.21Na0&9vE9v+swDQ4aambieEo[^](K/9wq_h{(ydmZ|0hG;bTbrOc_O6+&%nD6u_b6B%)gB%X{~q4=M}V]:g0$R[6&i=<x`qs!vGFzeuz%hjK:3Ym:&b+a;UMq7dJNzt.y?vLi?vKwjKSXRt0x{au={OwE%A^0{a_72GU?>,McAI5vi"mbQN(Y9rtZ;:BFn)_C]QPP/5KB+HL*Vwqz}Rq/B}(zh,*EEW9NdKhKZrb}?S>H<1~&t`KR|,LG;R],SB7j1hXMLtuJ;(zIeX08;XxmVG*89)"1ipQxr,t<lRoM20?/?zt|bT9cF4@!5JCk!/S^x8:1d{Lk,17.j,=9?rOVtoW#$m4epsr`R*:{ZN2,Dbq:UQ3g5&>!*|X8d{!ySPv,Bb8S(NQFHwS>O[QbcF%veu8;zf7mw[oE?1Hf9;il<Y_psQD6z`71:Fq1{?j<;#)v{ZAM&dEjN!3|naxpv&pjsh(M`Njj08#;=zM7~#zpZa@(W$2CD>.M2hXULmK{.63@vS3,EGru(H(F)4jXHMgcA4vXr&hvxD=oMH~NAMb`(KeP7ocmU@!r39O]Ib{6Tjqof+xR<x|CAT4,%%7%Rh.N*;0,,jwYa.JJu02v3O$vgBT{[|sy*CFTPj!YliG"J0.$b}j={n76,}3K+>oke%.3<V@)ZqgUc2($+N_Egg[()OJ@?Vu~_qeXq,R0Bz^`jc).fcoO*Xb8yZNo@.Xj]cN}Pf:gW]z]5&/?=8Vs":vJEz(0vgtjg_1&&;L+&mD"B+ji6+p.~xkFx#C>r>>P~f_)ho9,u4IyO1}QfxI/n>"yK+XBBC*h}[k.}3[_G>WI?rs6Tp8;LPfQ=K%Oz8aQW,F)R)&281O~bL|1_@a%o*>{a{4gW,DG?)GuvV`Vs2y|zfs?DW_uqy]v:Drb,syWG{ahH:ZRKP9o3OP*lNs6Xjf*pRG)S05aA<|WWX[?w0/jDa40<aL?N,>MZrvH0p)o(&tc2zAHTacYnYs/uVnc<akgRv3oI>u~omkSeqV=8)$.I+mVtD}(wvoo{{<fmL:sF~W{771$GxJhW)ow9jlJZ_eg~q{F9:;yYUhT$H7q;ph/M%bis%bh^i?es2h0".nWwvsSH%~*F:{0{JAoLyqfyT}(Q~H{{Jx<qTT$sz&saQ0a/T(XVQ`+$i$mDW%mp}cgO[^Dt7sp&%qjs%hJr3YZu^+cdHR!$DE64jY^mX`"*#_bwb"*l}k.(V9;npNU8D(By5*na,s%n(X{KH8eQnFsKpix^=XWN[ljtRcE}FTI#8b9s;%isRY*P!|@7njY$!o*^L6m2.DWD@zn!69bnwJnor#1702*5Ra0&@N~i5J9"T~q&T/)K81wpM]p`@F)Bd}H68A%i=x;+0o/21BMYM]q:E!1:vI[o{^@C9xR],w*leJr@,&x2lLv.QKiua6iIS5JPUWP157@}fnRdfsNoMPK=vYKx,x!Cv:*2]txNys1x~p3smF1fd!7@%?#t;L9g:m8IfD!+.>9+;l}+j,W1R=Xu;F0]`exkvWVefB<}=.^"1!`C@]wB=L2PFq#`4`T<Tx8R,*w>bKTs1#QBInelK"uy`pp@#WkJ2V1yb=$Dfv&1NUlx^.Ek3O:Ago%J$n10AkP>.QgO#D2q*/Ja8Ka{g0.h$jpio_b`VC^@+Nn~Uejc2[SSN%k1hIMRm?]K.Ord9gRUxv1P1mp.vsNFDGo*Z`K/9&nHp4F%V8/2S)c}97Oclaip5lQO&cc@1=I|Uq%H6Dj2wZN#64!=Q&2[%X!tijK=b/ZF^,v$.`(5?,ZF^;xv5BpB(pjyvPrv@zBlyfBu~.ik+c1A96,"[M&f7)jIuqapO5iN=]pG.Rs@=c?LRHfiLV>qVZ/8t.4F2p}h!r9~+,%:G7ipjB>/%}vmV%0ot.,KL%^~9mKu62sc1/vDyC=N|CV.sjh{:B=Yz`;Xhew`y}R99/j"CH{{(ea1erkw<zbj;OsU/r>"}e})WDEI_.6WqgrVpmm1#|IG#{#%i~^3iF+*UG^S!,)HFnks/p{|J[Xhw#m(NU]ss]1(1dc*~W)*p0WJloQ^Gpy<XcIcrSSP#c!9ijRLi>$3(r^iJG$;iS3Bn~RrulKaRzn|Rx1A}a(BJhKZsk^d"Bk|t=DH[qz+q2NjlGC$,FQ"GZutB^R2z~9:+`1na<]ywVsr62@,BopLRmPEMznJY%1Ve`KJF{EL{Tr%B;;(vOOYQ%=vlmVYH~DbZ`{AiYMVUrr15?oM+dhAYxDe5Fre7Z5&e0fR_eY)6,H$8]c85h].:_RPO3yDj<t%Mpcm8>NL{"@OY+sbo7}|g.z&p3N}8C_}#Rmuc&Ci3:HUc!M>Ch<o[PS;K?+~v]p3N#(:ekt~=<bLaYyK;qRsC*9sm_uQG0@}zFX8[;!JO<`=k}|3kE^[bq~g~]wi2dC5DXe$#F6){kdCG"5nf*MIGQHV>J9[E*fnIfk8j.D/V&Hnex(FAROFUd/Rj`hb4`E.w`hQ(@VFAQq.>w(DGm<[{A}G|uT@6[qi,Lmw{Z%SUf{c2:v&;<y8q4F/6A<B?`>T!0N<Myr?_Yj1>Qac[+slk"<_&J;P}CG>)Ziq`7.}{C6XTf84*30GLNz;s,SdG5}8%pYS6gOF^~4HM~mio"^tArv90=IHE]dBXJ]!Oa%"c7tAA?Y~R[x,ZUEOW,v4np:@xg27%_1.RmdTps6U>>e/Lu<T>o@R5|x0l2.L:n>($aWf6/K6=x@Bj.[eVD.11.${C7*4tH>a1LZMR`W4=M><5bq}`[X5,ugx/^kJ#|rLEO/2v_<=Kw&Okq`cC%9(%zlt}d,vV.8c{TKHayA2mFeK.O_$aT*C>T)`/.Ya^"8oQkTD[|58KuZ%YIDb``z<iSo3H!D7qO,ylX2Di3gF5fl[F{$8Lv]H1uZ$Le>zfyTke/2Ij&UMKlY1]lq=."8+MjVEJljfbuo7%|K#:0KS3V3$h,qFY@Y.@t[u>z]8nKzPGE7UMSy<m7rAKD~[.[NE/1<094xyc4xE"4pZ5*hde:)BM)_Yfk,Po3+,6C)Q%`I_,K.=(a33q<a5i}G3E}Z/X}cq&`Fh[Kt:vSvhH+)Y)5<7SEIAcB|"{.{"|5=6=:(;lH;]EA[]@qK|R(AXLlrwoWw0fOgdB)z0JWOgeBGdWS"i7~e{},;x[#}NJ+KF:e?(1%e{,xReY;YL.tNnB}E_Q(kUOAP;1}?sy5X+H*["nT%WX1#+0us&GYHYJvxS&g~2a+sU+Z6yk%@>h,UqqDs?HuR7@bID~]~3kHt?0tl,K(7DDsE6rw~G:<?(^m6]>0|In8Lq/b.^>>F6R.s]do4Ca/SKIywuwY]yZ:#fW%q]F=@w3gaN4&UDT<b^]_I]<bo?LZV86}B6Huf|1)1=SqB#r39Y%G`g(uo?bC*=9Q!2RZt!K:;{m_{D2Z+n2xf0f+1&;ky]lk2Sp92TMX./J)ek%2E9Ne3PystYiDhx0XSw[k.N8agB5f%m#PK*mWkEPBy@p`:E>IfYMmRUx&#L.iRCZo_W%pYB9oVBhY]KJO_ewcsFnx&gi#i,m^1NSk(!.(we!iSK83[[bp~/b2AAKR+Zi`.VYlFh.HMamE831zUkv>V?HSNtocfV#I2_@3TV#$7roQpB=,0#1=Sh=aK1~(,81M[cRXg+C>vl8:m:5ya;:cE*8/lps[bl:B&lKe9Sb6ULm041JAo@%np/@;lR<eB&CggeSD9])J0H~=ljzBw{IdQNVG1RLdQ=`OU}c%avG~WWJFM0sXeUc_5n1|%F1#htn(yZj<rkSuklMIMOUD7Ma5ScTC~LLxh,1:P#J0aW%;g5g(n!%zR}%Hx#fa)&F.[M~e7^?kCv=OKUvp]b[.6i+X7cn`UB/1#A$xFjD%5J<U)/F9Ughup:;eYp5Tj_eN$gAquUt7J8LL}hVm$UeoRV*enYs,`%n6xVJU%tnFS7@z$W=8y:<cg&"K/cy`7q}4Oy.SGOR<{;rWk,Wtucmf[.R}29![Y)lpF)7mI13$"fk{zQ3*Q~Vr`l$BfBUG1Fk80JGQ_]b"H$]?#dK9UVbs61jG+krXKi3Kpd5uar!_Fz}M_+^GnD9qF<#!;BfCzY{Q*xf~G81<NNp1#5zMaU<{tDYwv}OA?rxL,4bo_TUU`l$+qNy~91KJx&^5s+Ef0Bp$`{6OJO%CMkd#50)dp$nK*tdJfQnuZ#;rJExj#{DUj5R}9}[Dz_<EM%0Twj(`tA:&5l2{5)p)g,BzR;1m3:e<5KTXOl3RZXh}n?!)Yn,EY_2KKOTY$jL@$t][%Fj^Ej;aiUO7wKZ|[{=nu;wwLFiipb$O=0m7>aiqv,!|FV%TQ1P:)11QBJ#<RJ<U]]]v]MiiQKv<yCr~`@OB]6Wo*=ULE(uT.n+8qs=hib/0F(ovxHTE&W$irZgPR,H?u.X/%r:ym{$xrc7O#6JSs7aB&v{8x)m@zCh_26l}_,/k?>6&8j[==wBakghj$H19ixm)]Kesj9n<6@,FXT!,d*M&bKz;R!Wc[76:o(F.5QqcJZ6QqnMhe{XZFNvh_sWuo&8Sn!*A<UM@YzbB9KVSL$x:Z0+AWP!Ay95DA,/W/2k*xY*htr3!7=V6I`9F+unQ&zBW15V,AV]dW"dO,zP4mC<wLnQ7D3raI4Yxv&>ANjx[]FQAaPy{&~Sv=*skKOvi.z5X7oR{Ys_@Pdj{u&XLnh4tBI]i#/vVk1)B(TCD}HV"$`qxh+{WRHZ^X@i2D:"?,?uG!/aFkiWvEu5^D*O7}so.thjft7i/DWVC`t5vqTy/:Xljqk|]Gdy5Qv)(]S]X~VyW^6a*kZYui;E8o0`RlR$R~/U"iT4!}kK)|rwR*Mpr*~N44km4["2Kkb07xSq8lHpfd2%),4n=>aF>7PbDHR*B9>P|kmGwM,}PD[qrl,xVMD!uR]Qbw:wwGVn8L@t)uyiv7Nv~7f3dzXV|LyEI0(C[mHDRc;tBH}GywBa5U!$VXn!t7x7Hn=h/:IT@Q0I3uz1mh:wpQQPHd7M,{z86w2R)2nEOm_(JTu~s>G0_,gvvaeimZux~R|xGM,)=vxPE!Cd{Y5d=j`e{YXI,TT12d*|$or)ACF6/US*SPRL,QiNWkx`uZpzDlYM!Yrbwt*yvcT)^{;sVn|yXopI"N@.eY^X<V3!FrH`?*]O{t)L]j]Mo#tZ>,QyE<YGVY=y)jJKM![!aw"1U3Ar4/[u)UZ9|<A!c!=aE!|4^{nO#F6_L)]G|U#4o+|/U];%842.5v!%4.V@14^Po>Tf&KwJlPd[uJE&}%[IYj*"u>zeWI42tE;)?76qb~Z_jaZ4,P~HfJQloU8lRR7r=e:sE(DVF2tYl>}HVndW|R]x|HU@hV=iG^}{U>~MR3}h5&Hl0|t=LU!KBKJqj{wx9K~H*3[]`Nx1ZK~HPqn&EyVDzhG.@beN@DHu7a|Rc1TQ$?][}1C[g[e6sv#uo[{R5@g!+fks"wiUxHRuJvC}xqlE$HxQnRJFj.IzE<Gk9n.w<#kx:[n!sVFTeFj>eFirU!V3G^d[v26I}/g`TfIKGqgV/ZgFv0!vg,=)|B3s^{8`O%)=JSJ|]c4[tr#;2fF.ibcl~IFS0t),.lAh!,vkIqtYF>}HM?WIYE{d!vZ10BF#=CMtt(=D^%YEYYjxWr({[|JrJdJV!W%VyOooTRyOY4;Q}]5UCrAM[o{rqG=Z(=Ava1=VA;KG/1V<6fzP80.%]Hb@`J8XJq%E)E+%_qg4qDH&#)RUupg9_c(xOwck;TUC&c`]ug*lp!OOqpSRlqmV]e)r&"~1>]1h~_"N,*ik`;jYC|2#{<!HUi/[OtxTEE]FR2hR,L_t<)hF"ELR?YEzci~@MEiP?nb,rFupD3_LRFo!fs<3_;aojM[<2IWJId"c`z"8WaNa^GcX~,vz%fEY>P8QPgKQ?FfK(9TXODK;Coa3|D%jEOm5YX}Pp%3frYs"aqjpK>7Z(?54xMJPLHOR,QBP`B/3$1_t=LLos)F(z}{U/GAJ5H1"/1bHD~6le;NRoPET1Ok^AuaMf)iWv/*IUoVQAmmit;BVCq,z]q1wL{l;gaOv*s}bx5=ya]#xg5L#BmuKS4e*).[bE!:tc3"c&r,h_X,*#*~(]@5=|o7F^s<CoMQE!MxOq,m2ylWW1<`i*RZz|9tQq%M!/VS&udRm@pXHdd;X"Go&=jH*p=fW#u&`$a#q0NCJl$6,)f)gbgh3ZPOQiQ13x4d0JR"VW=,0P/$lQ>D12g)lFZ,?#3=l?tKrpL_~L,y90N.?gsnBVU"YB/c{[jk1KDb,Se?*aBd$<4B**l.x&g/[`gV=9:th4^H_/MZP/PH|CM2gwV)&6V^oiKS+8mcI2r7.r&]M5bp2%R=o6U948N.hs)z[wviE0*Z*60+V5[VKC~_DnaFc4PyOLt.3s][wWK4Va5&UKbi9K!bQ>f]0oM7f_V3o&@;xRctu~ZoQnQh&Zkk;sx|*Eab1BZ,Y80,sKj#hG~J_^]&,oT+%gaAH"^<UOd=aa;|%03ZhQ6fNA7=u]RrCnTV}B9B@UpHs1~z&9T"U_+5hV!|1`;lp#uu*$:j[a;[~,gV!"nB%Gq%$PB#0vp;uu*xn<x=Sx"zI:j0y]R5s+^;s[6`x2Jod`*uCC$K/,1PlesH{a>S?~a%V.=0$Wg=8eeK9`c6R}]}?G;t[bsM^U}?]e=}g)xK;U]EVp_}l[{4$X9oT=QM@IpmR=m%ktLFRIfc=;qL&>{W{.dp]$hBoYhM*ZjOO$?{uQ%(ZyZ?{oY1,buOlO/jP5n8;,n8;ffmE~kkoJf8@S!vz@03,w,Ro20(;S=rb~|.m;YTo$U2[w9<F>[ow25[;6(,:;gG;~NIE.@M]G;W+iJXs}OC7cW"dWW!V7gR9QpJ!`T)7/O]V*3LVS%$;B4!Q;!h]Tp<B[aIQ]fAH^S83TvL2vLOOQb!M^S(y"!uo:.pN9o0@]Z<Mr0GaTN@h7&[cR,m%/MS<s%U)ka/@w_(5&OR6g`aY/hzhe4DucOVqM][ERO}X/IHcXm@w;C38%f2[iZrNIR6Da6rN7z"OqT90uJ^0l2G]*uX=xep$)[MeDF[MPgP%dl=lt4f0sA$HFa{OT1VcTUAL4,E1:J)NP1y0e3jr46Nc|OmVQik94Opat!CYAAC$lQoX~}W2=Ic6xm>E#Z5e^,uqI{mJN,auk}:=U<!_Vxxqr"btZXS+3WxRaZntfr@%2Qy1N(LGvO2?^jaJ`y]7b`~0,@}1g:Xk5l]@j]w&u1/6w*&2t3)cqg~cS/?CEZ.KcNc(4azl?.(5)`Rtr3|ylP|zu1d6BgVUg:&$z&r&Xf(Ha&J$>zE^:<~l8~:K,qS%Zy[(sj"a#GbN:r|!~yr;st&"}CvpP>gQ3<>w>X!r_v}ymHhU7]`N?dygZYIH!@Gzn2v?hc#De!J%Br>4YOT.:O&@1w>>(+8C*H.Jk}hc`%ucdPmq>c$w{C43,^iL2QmTxl8x9]K1.Q]m8a.Q3n_bjz]^L14*}%D7=Sju4M#:P6>U"nObl`xI6b.Q4=3,>31hSUT1AoXQkQbb5G$%z;R3BHHZn{M]R?jc2D9CIaOJ#`oQ:C_nw>=O86Zj7%yoCxS3g:F6IQC4nY&%75l`wlkC?>}J!uDzmuNB4cR]Eak&&UQ(9X6kD7/u_R:*Lm7l?x3i"/<KJ*>q"gqSg:2%hU*US*Hl8/tp)qSmI}obMS,u.zf?(&,dQ0/v8z{sL8PG,l(D|r_@x}kJ`R%j+sH{jQy%Z)i}}jIT4EY8f4ef=>J*?*kec}!]Y_3&Z)I{4SX;[JMB=:oPkS@:y%F~iJN{K{ws[bYW#6>3K!t6%uU*IEnur8?V+g?[4Dt{}+M4bJEoSl,jGc/&T%2Sn/<br2;5(4vDVe&TSe`KwlT*![(4}I&1/m6xIRMa.@/=CZ3S6cVXAZ3SRH(pvG0:y%GZE7P0$WE7MpOy$cwG.%.Ty^@JX1R_lzy)Fzn2+tM*TMLEWJ+3a~m6BOh.%MErdR>$T7;UB&0=MMb@QO^i%^[wHHOIgb%Bz1Og$:rG+?TcJxhx*^rue$O=ZnN]*z%&${pK5?/N[%R>}]3#jhN8r4e<PP9aG]Hu,h^KS:1iQnd9w4y"K8k^UXczekGi|K>5tO"xmX@x"NZ!G`sIHU?N=mVG`WO``^UF5<RNx!6T5c$Y"kEg_+Q;B5c8xD@>JOhXE2b^@f39n8_m<e8qHq(l.NA4B)X/q%/[SY)pM_N/%|].CMeK0GCD_`9MfFtiAU!WKi2iB9i)2=V0T@{i6eS?EyoGdY6G`hs>DYv~BhUhW*dfDOKgC_:/It~WhFl_t^jVCbeK.K2$beAD~ld{t5c/eT[nmz/nFG+5yImgw3_Fr?GxW56f3&YW?B~V//;76yi#"yjD!M}kJ*;yYU`3M.5a6gD$W5Cn)2T`NoGy#tleCTJ,&xQ!6~qYJ&NV(OjQET!9,g"5{.^#m*v@V14?r+UUz[YTVAiBMLc%%:%:jT=zf+f<roq,*l5^s,F}p$]PZ]:=5#(7Qpt:v5l;v,p$XYu0#6Q[>cU^:=JH"dz5^%oZ;!9+kOh+cfN;uzPsreoxCOlP~[f&ernw>Ip!6~=;RFsr.a7Uu=9cgwB$VjO!!nrmNz_=5m=4~%w.a<KOGmFHEER?)aci9r10?Af`B_Eq/H5DkXbx["1v<dYki#N&+mJz:%QE"u]Em8Q!MRcN*yTj|TV4$ZKF,Mr_(TM)ZH4FY~GlJ,AK=vIYAG06|X4zRdF]0`G|Rh>U;;V9"y=n|.:5|J_u^d6e/<d!MNA;l^yS;q~c<;(^vGGW!zDlVZeU?BZV;9W+(.<1Gl2d4gj$Axn{IuJs9*exbz=+[z/9%}.OIa&,mI7Q`U>9W#u,/)T~srf@&~vp1`(Qrd!K~cfy:;1)c+$n*jocu,}IBj.a9P[z_weqMmXbjWK:LfR^M<xF+xwt!"!UOo|LWh)tvwoJ|?/UNay."^}:~y:yZN3fH[p]&`jpjhDo)Z;ei9l2s]LMgheh;;X!T~[o3%"^Q{A*A&]!RN]`V1>HoK$&=0&2^b`+]<gx"9Qs<9W3kD;7<N{+|3g,|o!?brX,.S+d!biirjb0Z=_7H6ua>36?dgqTQ:PU6+d%bpnPF|.H~T99RnHUDhPoQkI9(1sSzh,x~/E>YaavUBu,P5xzX&z;j,9wV]FiaaQ3ePA150QgW%W:wobL6692|rW:}=XR/4bq+@2/z3Kq0fv5~25w!VO1G{/Z>063*0`q4"~tboUn_P%4`twV?((BUFt6uppeJ6[5%+Ey+@2[g0Ze"<Gr)<~ZQ*1#{<}zWh:p!KP/+3CRl45::`CRN>[d6].#e)EO.%;U9G=]4!Id4,WX4U`>~o[XHpSV)l~8H:1[bDn8_>J9m,4u>w;,jd2)OR$Ou?0@>3Bk1=!$%L#[ID8aJ^I2=R:Mz8#Kn$BjaJt<ipyUMn~JE42/Ys>)"Vf7hr|]xc]K}[.+Qmucw.U}7FurZ&^qcr78#O_/35l6j,kXaaCKjY/S)&16m6=/}/|[lF}tGPA2adh[mfQM]dK<>n#qo5t6l;/xaQY1FCZ6mR3blexyZ<m*PZ`4N6Z05L}*S,g`Z/:RT*`k=Y,/?kV#f+/HklwjO%_8:&%pcm4w"N*!>nf$)@Zv4bVMp<lKJ,tzbrnk[GJ,D[i[xljQp$%JaePmY9{,#PKNL3ID~5QK#KUX^+fh|*JE!Tw!`52pU`w#~0=]*#bgf<V_8^h|S_@*u3j~{^b)rmimC5,6lp:s#6>]#=hC7x6^!^Y!vG$Iuzk,!Sg>i["pmEoJ%V9cB9m{4~encUddq&2rg5j,1)0ce["8SBKvw|r|r[In6IAf);*b4D:Nh$J,_,:/gY$!aDoPJ9zn*kf>AvQ__LF1z8a[_cK)Hzb914ti#E0lue,8!UfKcKa,{%D7%p3bI1i%<a#f}JN7o[ig/hu$L($UXWKxf[}@lbbUmzDIwMFpllUOQ.j5+]I![G|I`_"2$VbG;{bG*Uj&wI!&#;8bzDEX9d<Ki$h7>(C>gtIqCxS3]Z?g>A<?qiGGb;%B%y;,ZQJ%OdvJgrM(Odoa;es;Egmr?Ojaci9s@809lK]d&2qmppH^qt]M1S6C!"=>Tq&K<QEJ;?.h<uM8#kCXk+kkp1&yua?7/nz`eSTXd~<.?7E)d5i10)m*2b7=4!#y<0X:b:8)?RTrn6Z/>`.ITR4xeh3Dm:*dMa[IrD34D2s1EUz9SC&1??If23XDz&~DeEFX*r,Y;ShxKzcFUlhFBj/WUj5=dcS+iKq}B9F^<Ee)`gdvz8U`]$z84P[hRi+{S6,0p8?VVHgNF67M{t8?i+vtPA{X%t4ss=Zt{0UIHv|vYre1gL>t<7h/v1f^tHPN(aHB,1Uq$wLI9}:yWRN*XwtG(uzPyiu/_vhX]G`3uiO/rU[D}b{u~N#/4(]@v6,<J8F2(c$mCK)%KFbR,[MrwfZObItDv4Ekn,jwI@k<L1Xp*m0t<yf!H<0jDgdsu:P.qkf,QI2ikZVnS@x1L=xi.ECQ(58_*swmP^BlPG{%=$0H)Rm7}zX5aqDC_]eb~N!tgRykmz>I~Hf1G;wwvvAvZ8OdT973B,%/aYNx[cy8Kh~FMG/?|{(;DxxupqOU7U!k0+W_@_"%`pu?~?TtQ69_b?`WlsQ]Oa0b!iR9P}@,q75rrabNXIfUjUc[UYQW^"u?+F6Rl1!GNRTSJv"mH)U";W}AL1S>.wu"iQB{CqY^OcM@*|,kzpvXPY;*cbjIO:(d&$q6.Pl*2nN<HlC]r`F4S0ux]sVv3+Wn0t[@hGE44=V0+ZwCy<XHU/#5n<lcmh0]*+8&cLej8n<qI[RDkZ%I=ijkkZjjh4BJJeH#dfcoQ<4Pz!@V~oPuiQymt!lY8Zmtaj;TJ,O}}RC60&0N#`Sj98=M`&JY~j7RO7Gy^,^q!B_,^q<1Fa4qzv3NQ/0*bFC`6c6rC@G%IIDI@0}I[IvLt*d/D:B6ZJXvuq)Mzj_iX9!lig5BNzQ(5R|$.P&dho#o^c"R^=KNwRK`cgeWsz3Q5mJH<8ZNi`za}!q&FF|J_IT`cg`*II_61+(|d)3zsL1K^*:GtX:sxvPv.PVCj@OIWY/,LXK7_ET(#DzjAssoD,*L+XiEeXQ&!FU!0|^acMeBHG"eOzp>C:v@vOaDr_:iJx*19AdFPUQ&l~q}Vy3lRDeXQ&k=kE3.$yHo5)^JGu{C1MOoJ4ie~!+0#E@M^M$BA?S7.Iz}$#Gy8H*BORrYc]rU_BHX8u@/EU3:kEG7=xhQ%j]y>tSj;Xk7a1!"aj=g2PoI$s"M[&wBJ/0+i(5}}zG]eSWRTRiiX2YbM9]_*04)Pw=DCftZq&O0{)D3G`@/k*%L(M5_Vv9G8!hZFZRIcio/0=NRPE1"VQb&38kITM7YZQDvEO<taKUo_+1+Xy<hjT((RjieY$B#8(!y*5F<.^(wtj4gMV9J%j/iJF?!]5n.hi6dh1SI!|]<6WFU&_~7{IJvQ}#x0%a[.Hnn3)b@Z$y(Z=[7JnlP`PNCC~&Dz)AfH7_f"dFlqkv,dtn+@T7j&15.FbVl5K!Z23!>RNXYQHXvH3|5H]/CAJZw+H0`F2Jo!y]y_(v?Iy#D]ZMg5^aRexN,Gim+%9PI0f8KMCASjQi(M3dG%0xxu]{cGbu4<&Fx(+A9/I_&4YnVEQdE:Wx,t^|mxIET>D`:.HQtq;E{%}ERl(ecX?=u=*H$q?e{u8zq&_A!jO/Xi0+;zqXNSB1L]jA}Az%/p3Fb:eJ)hjGX/y.bAq*&&FsH>I<Ol4VE2)tF.saiSCXGNC"VLX/,0_EmS7vLMhU7:IfFkHg6a@mIkXFL^Vew(DHVUaPNvZA?"3FJ!r<IAX&)%ZLEY5beZJmu^(A+?y)X<C,X{.6Z:L{tVuFU,^*6F6tI>ox=L0ez.+Hz)Sw4i+BC4*zLb<>o}Eb<=Vjpn6BwvXe4y8F%BK~"K[XJC@^>.hAz@ha]_yTj?;%PRHG6IK)wuqQOBdH..I6w0I?MhD2+1)Yj9RDD9_:S<aGzqhizIB&[zKphgQO7AGZqKosI~+rSHfJoPvofZLg~%[N8n_E|pOZV8)bPd?<?]jm8oLbc8PdFMN4)(.dtif(*bZ,iJC0+BdP]nEm*KSn[W?Zt`X0IoaN!EUOQK!Z?n+5IE+.IYS&3.!CRXvhR>u$kG3%3,I}M]jQV1qz*AC^)<I$a:eE`:IGoJa:ueqRI5$D?SjX^No*Z>Q.XsuRkN6d`^r:k{@(zAX73*Gcir5jBnxL^F~3r4RaE(Qzv>K%mx=1)&WFHkM~hs^|2me&IyCZfLzeFjYfV<ya[_lII8nD["smOd!tiIbciI`a@$o>ABM`RN93z}8}t,Rv^#Jz8A[~Np9T+l,VbfNgxaV]CY+nkmDTS7*yedRsBiB/D&`+"Skw.CCsENs#G4)J:kl"e"qA<V<KX(OQPUvx+[=OsJHsP,ky,LZQ&=h?GH);H4q8s`zy9;IRY=IIXO<iSQEOR?Yam@WCy+/Rkb>ETOQuR^DS5z*^*[y#))]@=<IwK&taKaa>ThSG%=L]>;5nDXG*T%*bRyenE*X0{(TbD!JZ,)U>i!r~`"Q=D/XzjTz:`KBw_i}?78s029DvOH6Y0LSQavOH6P3EdMavOC#Zt9fWJF!3)fWmU0.dU3@KNQ37o1bMa]v"Sew)weEs"fM#R<IgMLofM#R0`"4^<aVatBG"!+%E`3(}`0tV!/Ll4*:QOb47PN7Tv5Xru]s69I.7PF4CyR&!9o27"b@{$04lShv.os3x^M?l+SaZzI<"4A{9Okj<h@)FFP<3X{y*U!Y3DpbXv5}JnQ(eRV*Gi6TR2TvORYCmY2/34vZ$LLF`TD5Ui1^L!>`I{7oXhghW[DMccr^uD|%[#FP0*{$ti{kJWD}4QM+>Urm32:YmCm$kK8l1?5Qvod6V.z7AJ)na#Xm%[obf2_]lr:nLUu.M!f3CO1bLT"lyHbkD/X$;niKE+:_)]tG0`@Gl@nAvIL%0=_+y=,m]$oQ9d247`#|M{8wpqnhA/[=.nsHz={[(]cadi{*R<,e[lsUk}2h58j?Mi`.t!=6.b>D^ioSpN#hz%kBTzG*K%k%D*QZey:eNZ%~zP"1)sY^PgDTx$$;eTK~"%G&11qVIp`{M_{Q|UG#liDDE1<1v<MoX?G&38;e[f$l^j#=4<Z[WZ#hO.z.#3ZVk}dSJolOV*Mw>?%&Kj3@wfzM5`A})*t1N[yZjk@1rr$nUs<eEqz`TPPF+HTwb3SRC!_`dR)Yop@zDdXJq712RVyBGy@Y+GtYC{?zlZPn8{n5AbV;_GShk"W5^o6w12+Jv;?H09>*Vhk`[|gOjEo=;OjW;Gq^=n}g*bjrOP>$$*iHA,r)yko_W/z.(bcWxvXH]{y56Zo*$MkeGr{`.W%6x2~VuBSGV%E+xe2W)@2~^t8`qL7bnklN48oP_[bu+p}&(Bhw4mtm^&~g7Ed!33X?_U/xJcd<BZAawkrZKS+YsOIE[64a+sFi0uxR;SO5Ohs0>jhEXe<g1F[I$dp#B%zgkhlsG@r>AN/,vOlW_=RU)A=@mC@i]SM+|%qW31O>YbKp*2L[PVvQRD#(P31zdN;K.G/6!3=QPoObjT_Iq}%7"`Rc71,@my)i:08VRDWJId7B@.2]9By[I|"y}_5^Nk/F`#ZM_mh5*|o<%K7pCYhzqK?^j4?oB|)^r&n`uu:?W}|`(gZf]eud@gG;skwp7iBKWgro8^[}c9v">cL4=6]=_}V;y^B/{mENX(4;MEA|N0u]VNgHi"pU%WKi(S5D"^]9M:[Nd?D8kD99*%Nip{u;PPLB[!Wmq%Fj]#q[LTIux.d^}m*k,20/D4:pJH8ar[xhq%_4W];XQ=~o<)l704I*zw5]$Dx1j]eR{,|o3b&5q%mV{{>g%gchZ_VbdvD^<C:z3//BS;1)<3Ee3g++5CDN|u*%#~CI0)cBx$_)Yt6F#U1W1![EbCiwPQ$D>DdADOaLdAs(M~~EA;31@XY}h%#)[<}=&oI9KDtx!=BEhf>ba!X=a.j&5:QrrDL{fOfFXC6}N##<tSG32J]`{@7&:3gr5]S*oit>{R|{<,t`C{(f#SJu>]F|wl!Y{{FQfFWsbu(ggV*<`nxNYBMrWKKO_{uP=0",bcJ)}Y+{Op@!?vQTuF*x8U"K(d$DFHOC"Vj;_|o4JD!l=;@LX?toARGJzJ<zI=&VU*4<7j{q8>fr~|!E`6]owjs+dtDM,,,E0*+`ZVQ<<Lj8^%yi~9RZ+%R>V)4o2]9^Ja|F@{S6=)tm^K@MGo&38)tmSN8u4E`a`($M218)bIQxZ3MU]tO06Fhqfvuu17MUUEZ*;Rz8Gyq4ohD"ix@t9}jl#HM!oB>|Rb%OBsSGUL]!LjU`ZOu|sEM;OIOu|vp):3$)X[dL]<A*>:RNXGo5sP:m&S)wf3Iw:OGrUSlgQ)WI=`v{3gW]N>>*EoV)@V$hxkiPVS]efqj3vIKEm?DuM<#&5EB$T0M@.n_>%W/[,u#zp=,0JHET]Qvw^LEI]a)_7pyM0hbR^hA>qX1wZ4p&xW<tY&?S5Dxe]Ik61fChC_E&e;KU?FokJ&MBZ}frPFzYy,e=<bhs|6`]~_<)*9"ap3|R>pg|iJiHnGFR3Wp=O^=Dn5K!aZTiCNllu*B)uCDyix8ymgZki+MS9H:BM9]@6=WElL5Pmi(xynARGJSb|;<mO[mSB/1LsS2=Z,*qk[$qSSD_rQ)[0Ve7<=W(&%thm;&{|kAO2$yPShy%j!?:0^NS"^?puk4<@q(3@Xh?$1jr?q<_^.b/J07"|m}/ii{`@t}#.=q3n8ZKvFsN(.<o8mvWcExo$Ky]HaDf6_]P?.SaE=78`kA$_[:7feG<;Xnl|zeqvpx(!ot_NR.<$zh*vGc1[ybq@8P<{4X[K0!YYMXr{u8csX6+1drZzH]FF6$8EGLO+l@D^u)7^hZ}Cz;(g+GQ.&&l}[KKrYz0=w@L0@EN_mM;F3,ej,G.i<*rI,af=Nv~mmXH!1124w/MQu[/^k^hk5ORXh2Z!asSavfiA4exaZRxQYRLoPPFq;(ma5U+/9&!ftu27IS^`<LVjKJ4<xeSbd7PKu_qwk]u"ph[,B01di"t!F=QVS!_BH&ywrIK6=UDdFBz#5tJOB2PNVjCxe3A.sVv*6bH~nOb9*UwmRVDuytz_Mm*VY=1JM}jR!0y.,u=r=DyUK*spazdylz/Z{T!`?FUWY]YjT/<6E=C{v<v@,M<}3?{g0EKN!O+t5C+iz#m6KYO+/5X%Lm+OG@CTC=V~f~,YUv^AN`uf&3=FcNNp8M8nEw8hX=M.4PuzHVXQ0ecSQ&Go[yiaG_T*bct"BS5qu7Zb)%mu{2FI75_aO6W?I$]]Ov2LA*U[vJDh<e+DXV%^qHtdN1bA0uq";B.wA59zzo$dXCm]dz$AIiY/)7=jKZVthJsiYMIC~s=BY]$5Ry?pj+f`;5`9n)FPC#n*modMN0am8%l(5[h"G[c(~0HDOdQmcI}?mHiNF+j>#GR+CsF[S0=~S#,uW24?}oK+F=t`R;omy|T?SUg"dqpW<[gGi%Ccyq`:6NAUZ~JB|#T1FaCp#MGsxeENv&1pFE_LBgsAYP3Yo@E@G4{u>Z{+BffLC#(]7Wk{6quz??5fR|FSwm4c>"CJ@=RVRg/h4VTJN]?~ZfP+UeYBGAAAAxPBA[h6"bX{B}x(M1gMRiBUA_Wx#6i67N#EUMuhx6FBAAAAAAAAAAAqycg3bJ78QL#3&?EG(Id?=d;~{q[$:1SyhYVoZAiJ]%M{lw4~xY$HV2VFUs,Gt.U~hS[&IvB|b}`P*uqP~02agy$``#mvvECDq<*3kTxtrK9tM{B[0P&@"pT;4d};.x+UIiJ<WQ@bXg<[x;:^n!`%h7PyTUN?C6dp[@J/HK7T*WMgd|MzJ([piF/{zB2x;<+$T_<)ql9]cJObO]4L)U+a/@rB~w&^ESH0L<ktvcP!PzBVP^,Wb`lu]+cmglV`7p(p!uAK8&JyMQoODTf.QSvrK$tb:5cabTwPv&up#J6vO/?5j0LtV/~<OHAmceZp4)L1iZ5(iNme2J`kOj>:g,+MoI)77P^AFbKP=xPVtCHV4^zm1E,v!)*B],vuPo<#xGsCrTh[d+524ByKer0!En?msSRb#N*L+5P2Jg1;M:]LYpcp7V1o/bq0N!$Y9ZN48[O*~[ti({`__[?<2*G?#),)eZ63WYe.9hG/#U<+t71~?qq^b]D{:oA22zO?Mi7EN63q?lJ9T)24DYm?PJ:G%^7ZVO(qhBj[@6fQ&[z*j#X@yWmi/A4$c*uR6r.C4TZN!palIn~x`$Qq=ig#kFw^Do!P"m.e^+:@Z]:v0BvEs=KGY6)2xS*S/P)t@P)Y:|}l]s[/.`|Ftj.`<h+=CI~vc9jFE"KivT)YgdcNk<M+6RR_;?@VGl8|}6,U&V{<;GYTKGQdd;#_&oyf<xaMS?,tzf+0R1ThxN[oW.G"0lHJ|NE+$ay%1t0A_,dF#ggnm0BQ*HG`n0N[TxVdnA9uGd/{w%$d$;NK6P=>|5O>^q:KEA&+BbCUHvZG_<vuCPz6hk**L554,rSxdwg_@y~ti.Xu55vw,|BwZ9F.v?!~)2^!hMQ&]i*745Vc5q}x,]vJRt*":ARtyGDa55dAyTD5dOoog{4!cV,]k;q^qB2^VI8T9P~v`Y;HCvX"AL}wNEs7K&bmOgcDb^O@dDhFk1)uuTxRp#POmQ"}H6/#Y1f+_j{PJE@0Z(Dv^k?yXuXd(>}B4azV}fHtcW*DEOwu~E4Mrvt$NkeuiY{JFcjFTyIl}qV$ZYZa~t7rLh/+Z)LmDB83q(|4u`ddx[0jbP&>Xoh"dPr{+L!q}lNumm$GWx~PYYB4,|O&OT/IYhmuwf.WUW:/<8rOblHH?E4o6jN`Aw}h@Rp&2^.(Tf`4jxW*_IV~6s3%lv_9:Hmjfn"!/s(gB9f|_w=Bt8~,4pa4^nuaCbUT"PZJ8.qOz"sRuZP_#n2p`WFC@*%L%;R]ZE{[T+2XvN$zPF$9h|IOl%9#il_SFK|`,%1ru@J|lGy3bDh^Mz{1tOx$9Z3}+@a6>E}]7Vb5!,Ub1R2"h`X?KU2z%]$d&$:/=;KS(/cWh#mve6p(n<uM~"{w7mBR|SSr;&?;LO+VetnAi8W<)JR%JB4K:6hgBeKf+|v7)`x@<Qansw_ATr;[~8IE8vd2&km,~lwwaTI~:BF7B>=H7rt=QshrVMgJW/JI.l{:COt#1A,^[[fnfK_8cAxM>Q40[VKum})87jSuXgrS(pSHZSZ/(T^Ynj*#EhkQ_S7uC[W?oXJ%wutX<<4U+cNY<Iiokj+{"R}FY"@>:";)YNDz$tW,l&g,f!]>Uw`8fmQN>K~<I;n54JDaPgs&%3[FLsUp^{(7YO+.S_kDHrA4})Op]S*R16"G^fh*h0h.n2a=u%llmIoyidlg]gsm0@SAhUpVys_!h<(Ap(aCYNhqUCo60lDT3X`b^[qb9se~t^xS_gR`XC#7%Ji{=[B^$IxFTJd@>^WO@+%A@w$6%`y~y";:xN,zm`!7dH/~G;7;~L.{|s{hfr|(S37JZg!E&;UqjL<wB6ARZ__=W2n!H+TST$.jDF$nP7j%%jm6^@R{h:51DWC/1_8Q]ehT`Dyi*ZCw!):8E(vfanVhAr!)poXH;%#^f|/Sz#ZR|D)st`V$BzJg8I>k3u]~o/m!l8"0x*()G;u<oI}"0IZ_R::n@A,elyyD"ldXR(BlQ738aqZ*L}3nMgkpy#G*,!$<2UFMd/[g^3L@mdL&(1@>MN4rb{];nt<{I|):MJCaN,G!&{fDk|Rln6"9TWI.cD%j.zn:Y5CiR%)1Gi+/BA&{/b!]6?S<mz>fl<|_`sx,f9B,WQ:rX},tB;`k902P1EfEijTW}_9YXR2uOpiX8_NU08}"?WX_]+l!"^|H_E/jr=jk=!4yJ*zsm!czwz)<VFxWR_|JPfFRV=/G99C,z9h9oMY=4`u5vA]lMbGyL9i9V4GAmxYGXpSS>{baJza.$yIJaZ!!Q|kGzs[qH+F4}d4MuC3<")SEZv*|$8z$9r}Q}qrvuAH;]eaF.%Tiw1`J57I&aQ1,sY5%^~xKvd3vQIvj@i~ilRJF{PboiN:j.@3q7HWy<L,J28Gn9!>;t?S!)C3b==_.+I%5gOF{a3%EmBNQ8mG<F@.KjB==J|5(?Q?v`o(`}gi*T7;ma9k~$/6qm=hRbNw,K@J^sNd,qF/1pA1?BXR+.e~uD%66JiAS=bW2{@]tvX8mk^MQ#)LJWL%/AdL:L<Q^5tOlUa8T21JM^wAupWBo8hArtyqq#@*AbOV";@R1Zr<:OZsq>~+o^mn|ufL3R2_ZbeQy_/^PC$%TT/wqEpce_E&G2I4|q!MUc.1}&1(UabuUfQ<2ND$DU`)~QT.Q1&J>|D5BY._f<?y=&,<VNjuhg{TMg(t1$]Zh.Ps/Jf!Ga_~.ku[s0j7PM#d%B4k7)?iLVq7}OJ$?j!3A7c#P*.G;3=L@`}v+Wb{]yAP$a%Mg{"dUZg/o!xr4lSg2r|gHL.I3SMuMN86wqSbRBoIB(f;lM{paqr`@QihF#[`[eb!$YYm[s,WeuXIPf/Lkb0Jjtr*Z|K5M}BD2;._>ksEj+*b7Wgry_YY9{1:kTGI}9&Zbnsb$oi_jVi2yw[f49RL.|EX*m;(l`~3+.fbH>)vmep0I3R#b;l8t<)("#,#D)^elXbRasJ1t.sAqa/@_}aLD0?}fsA2tnVoyUg||Yuo*Oe^kSq*M$[nN$o3>*5VY1uMg]A[G9;[ySl/&V7$iEO@Rx%Ws!Jt485o`@5"}v]q!fVh9)yD[oZfdZ{CAZ]/pY2tN&lSECzRC/F*]!FyVrn7?WuMu(76TxS87xpTKuU``T54~oo8=cVItqnn2`K$QALZf[z:*m66tn|7B`P?X+LJhDH]:>t+Gy<Nj`"}u@rz}GI)URLD~I~_>z,xE/!z^zTpPUz&0Lm?FJ[j$L+*3J^UN@rp{uHN+<Ok,{c?,;.!?*2>)k>Ebdfb{Q.+_sBQHvvMI]?lJW<,B<KV$NcggGu,rnhFo0i,Jpj4A137}xTEeEpWDP~U4}w;Y^$8ciE.42o_,4kFJWz(w+a4*_Fiz`J}77NV@G+DdI9O]VoU#45n(v!2pQxh8Er(P=O0,?b/3F:u.WdhmJR&reE|b]b:AiVN0dbj)^J<Bi^s!itg7cQrkAf!#Ttb;x=6LnF.hlyt1lki=Uz5(DrWStFP1?d3X0H{3nLPaxU0z+zG|>(&[x(@x&,hS7fe)<],/C8&&x~fgV[<!,"Hr0?T4/~ou1lMi[r72sBqM@$IyD_p1Mg9%Srb7+W&5!z$5k?RY.Xn,M4G.X6NtZ[9~.>yiGuCucn?yKR<(M|>&1[K_9M&^W&V^8v&3H0+EoCg4$WJ*5Yd}X>ytB;06`XhnZ*pwh@746J8_@c.zz6BwOUD*,]Iu{XZuS4^%ccVSYjtV8s1pu9>.*e,M`Yu=zQe+97o&))0Vnj^GVM&^S|N)k"OEmN;A<a"nhb|6"nO/$qfCC3r)$mx~?QuX^rW27)K%u?Nb@6q]llj1S[EEj$Nzq<cda@U#.F%OIUC(j3pyU>vO,brd8#$0fn;uu)m(f&l!*)A9ke=o"V?*|31;4`reO3/{Z9Q&+7#h03y3.AU/v4H18]A=>y;bmyIWByY[`dH>+Q;O!vQ:_]O}F0S/?qa,=qhpybn%V0c>@R9}IJFz@6R%/CI*OIS$8w(hQQBAtjeg..DsHJaM"]rFwva:Pr/tx>39~/O8lr.^$&{ozTK=UGOe!al<qKm/O+2,7Y)hUr<+,@UXSs+A^+<q|]cq4QW}7U0DSwbQvN.",j:({=,e^3`@]9{iV`qSn,RcsD`&d#v#2"Ng]~lcmtaiuB{4cOmhN{$DQ^7aQimWLNUHWf|b}qXl^pNMf7]^>ct^.>~]$.&9cT+KIs_;Z)Gj2i+wo6&"LE}DxQhA(Mz|IOxUFh.t,=/0FP_Q%6W<RZ4.xq~&*6b^t`HjE2:{&RPnUQfzoRB<;p:_yvr4QBp)jBELqe}V/dG!%5KY7JPqBA=rBd}ag4.^k#SNyPUv|V?o(.[,LOYz&X1EXL,,>o.i=M+qEayk3ReHF6sY2a3@nK0$A4Xfjk|u,R_?0[ous!q]}l$[l(jVc,[rP+>#$"ZMVHv5g)fwPS?FwMneXrs@blWwWb(Yl#h?ViMyE(K~:]ifnRBO#B{0D]8#wD_N%,9SG:Z<Su=Dc|$"GF<}d`ytkL}Q;.tr)=Pe|{*g/HJ`fO8G4K7Yh%N}Eyo=XB6Y/1Z+8G3$MQMI8SSqxU#rr1Ri<}s*6;|3#^6V2yOqX7=N?/><Z"=`9uu[`qt+_}R"395?5wh3jbK(M[jrmd=jc(,`XR@#M}%r>KtT2j~}<XwTdo(L~97^&g^qJ%[Y+lvkaD._/LPXC;|k^%~)e)DzoV:q?5Sw:B{k!$tGLoig6#}sqo(S_v`d>yvvNo`#s;ml`NeiRr80O]s08/TCt)Z[LoqtS0xpDZIIGr5{aMk=USfzQC6bUl(/&,YJu6D{qw?gBIQo)R,f7.|<r7zz`$)EEdg;FE&!{+mFnf0:yw++|B~C5b4U!=f8]yx@.Qw?xE2)4,&P;3UG)"v1O{^^3Ouo/WlIn.*dy4r|Ukpt@8X&N|a#oI.PppO"(r4b?u=fZ~@HZn3W%[u2e&qC33EFKUQ=zStpjBQz%H8lUP|dw8g8s)iI*Czmm!H>6vO]~..%V3+{?~qW9B318v2&Na,o:65u>kgASMkMPP^h^_WGEqVj8D5d;+XP*L#LDAgWNt&2~O/GMvmi~DOFL&Sf(d?{ozyh6H`JQ}O;a)?}I!g}h9i]<O/;5%]3se^SN7n#a=U:vQS"^caV:f%oXzr<BP&/V;?W67s``W8o#)g|_0X!}C2W^/WM3c1@v+OrXU=<:r$EKE;V}9Fa@q,w}fx#(0:1MqAU>#~9cTh`6;t`LRaCq3XT%Af}lv^;J6@^KUP7:Vc^!^990tyPZ71rhiPES,nKQ[jf%ITVnuOET:4J?{"wI][]z_wP~"}*Q2/A30Yk/*nW+.#{*i4BSh<]8hLOiND[@8TzG;<6)s*mv%l9sJa1mli2NxltBxU`vY|wwyhR+&!X%s4rT,Xa2^Sm>.POJ/yf&^eCI&Ab?]1xmSDF|3*>eqC;!#j]8%Tv6WhRhy/xv[t3b&B^fwJS5eMbuOq.d(r!KlBvlPvIisf+Z:{9;Sr/q[q."[zT4z=2"6IBfN7UOZq{uIF@jBI9WM[~j)/YtF_<0df9X(<${=8Ap@tn7l/tj+8f@sxL*;),E>Cdo3k3&pHwFgh;6*xw[?~8*.$sc:k]v7A)K(BR4J1_Hh:71AWcPdq@h2:W0..)sJ7[dJ]RTtx"4A[kDBQby2*Q,%ROn3tlEgn;7M!?1clUDIx75+5]PoX#k9j#~H|Feoxonn*3Jv!>7P;F^NyKX*jF6%;TR$+ySDj&,#NH%%;cT&mrplw}S_`44#c}ix+d3ahpD#mU5^67R}3@veXl,Ohtnn@nwDiuf=(`8>YD8iXdu^Iv?hRT`wNcX|iXQ3oyR&ARoZxJ#@E.[ImE4#S*WZ[22R$$"1KuWV^[m_;&zwY!_WE_qo,pr)%60iSW$e=Uwt5yVgG{wS=Vd^9CG9ZiX#50$lv^B>h/fl/NpExC"w@>U<c%)|E8o/<=l>cQM!0m|18nLbPEU3oz9O{eIw5&]_+|Ev+P/;J1.R`u%``yvlXrMS?RE6pdA@q~nC~o>nda[4JSanm7}zxv5eubxjaA9qF{R*3nBEnZv#*jiVU56k%pSg).5R@%KLSIsIvE3+xbq$]~/p;m4K3L`DzZ}^t$Ps[Mu8il7$mo_+W;S(/Z7n5vl!@c>8Fv){[c(|vfDR)vWtihD*G|^1("MTzdniU;S=_EE/^>23.uR{FhP;gU,En<Q`lvO<G31,F6MBoxz#ws)|2nKe)jA@uSeGD]96?@Z.XLz%h1RH+cCV,%WS<AS=c?l:_zQvl@:]kKy+lDrwlxNCR5MG_i$"%W`p`z5bUT_:zE^JsfpqvIt;y6S!{v}/`?M6"?7uMurA94]yh]>nZ(r}WzrTTagAaMe`Tqf5)zfRMsgnOSPS#D{FCf<e`^E>HffH(P2FY[t.Jy:#7n2ub^LT=dB`1^C+wWfVc<cV2c20i`dI:@V%|!P~]pe)+.hdeANtSCG:quc_M<{l=:`IRo?<K4(c/ik/Y9H$FMDrOkA,ts^k:+|~G+v8[`ng`!N0aULIgwzmWEjsX5l{KbE9(@OO722<)8voh]aaT)x@[sy@]Qf],91kiDCdDEbI&/(y.qZcd3l5v[mUIA.0qx.bR%+MK;VL%VO7BYQec,q`foY_NVd2+#!B~rnunz>VC{egNt=]h+G_,$I`6JG4PO[]Su^?;s(h)T5ky]_<U"uk,McM?V{rmgvYkt(H^oigN?eM[a?i3BF4!VC&m%9_ng%(n32=1]vccPcnZsi;k~[7+=!Jv7orTE)TMlT<?].H+fkhv%[sJ52B,Ot}x;1ww=*?1&!xM<DPf^>c_kO}W&$[..y%q}U0|s}ZIem"8boRx+w4?8U9*p<Y,(7~U&h,(_Di(`JAve(Ku8]"xJ1dKGfLZ#~h}7FmY]y?_?XHh{JR=UJ^8|vRo00Uf%5=X<cO+TX~Oa/i"5jVcTuy9.7:SNQ4OIe4~j8t0^8n(01?F~Du&`mm?*9>BA?v>g!N4ncRFDT4O];%:0yYO!HyHaABH:=6GXC]eyc]<48Rgtkk}u&H3NSmK^dv_2Dl~H>A*yaU]Vd[!`q*~pPHYfz,Dau"PJd3zzi75La&wLJ:yHZ@k`yc4tD[C`U8}thVvze=RekqLp5Sr#jHJ)4&l]9_symdw:go/YP"IL5D|z,W?_I3ZzR8[Sq7l3&;3Lbj8!9Cfp]:#ZE}Ux:x.|iOjMy5&@XgDi)<=qbG/@INYybR(`3GyY+XF)0GE%b]i@@T+V1Ks|2vOFxYKRFVDxD*WI+rp%9p7d:nzvkk&V>xBe2A*{hobAbh~f,@hfw`(.}xvW}ev2y#Cnxq?UXcw7{#=k*d`NC}1{OgjKQLIzc;er3UBp70](Vl~YTI#^YE3~_*xe,M$=za].|*@_~Ey/i?oio](3]2E8`8{&Gfe6TR6woSV@mEb`1[z|~g>dYnEm#_"#Dt"rO_GD;&4[^=./GG0;DpYw6&:t6emkLaf~nH2vpvn>`L2*PxzA[QDBfq`X10Z7WoGj&(<!)&K:a)mBq>eFVtgDS2Ij)X?3IRPF>`Xl)M[Gj}>O>y[z&X:J:id%P,<pIG/~k_BA>(Vwipb/;bxpBCmIElh6KN9e4y{YHsYpS"]~St0CIWGm*K.d_5f*xWSSpL_DP{Yi?1$w@3n<3/3g~P9}xUo=y5(f/uac:(L|*|jFT)41j.X,M$Ly1|hVePg>6PgGJl:}T_D^a.hdpcbsGNv7|G]V{W?F+yG"Xm&wBDK|/_0E8sAaIP`/K/!JW0Y07ZUPgkwr&p<2?I..xA4./(&`l;9aUXtmR=f6/D6%=WxUgf:mJ~KWloIydnxWUN9l_g{O(uae]5qfleE8:r(oARV.a[cf_D9p<kh?WY#C!7p=*4cL=)|ibA(&=9xOCWViOT#N3XFNc0Y_j.,CR`Uhysq6c*Iige%bm4~deuZw{?q[L|/k]f_4B}d9f"aB7"hWpRXdYZU!bJ1nF32T{zTH>3dm<n8k?JW0NN$Hku6Q^AvKF#G~A*fwo"9yqeuu{?X<V|/(,YrG13uv.Ht2vCNg=Z7@Yd&nb"ls]M/|c:;28Bk=IU.oF8x_9w$7lvlW+z@BhuG#DlJ$TI>|flx^.~Oa#sY/r+]Mbmx3qN~+tGr>S#Y^,NfTV(kr3ErM;C*1aith;G?hyQ`6t<&Gq9#;`P^[Lu!jdqd>JRVo*i.#/_cng0KHeIdiOKF59=}v6.$l6%gw{EGSmId$}X#=T+MNe@AGO|qO{^L}nhssU/LO+xT6(PD%mi7nl>@Ct.Xy8X^UbikbSM`hP{PEvj}#J2otVNS6BKYX%Nzw2B{q@Sq52jCvekw<|wzW[4`g}DK*L`XGjzWjrY/*W/F3bQ9;Rm=9H!y~m5iy.ig"j:X1npKq4tiUS3`Tjz;D?Xg`^/?rJ4oJ^MB1#cZ"Z/bTU;pt~DTOmZHGeny3d$}ca1h()EU#J5~uW%%(U767(JXt8^+i?~*yfzJyl$t,k6>y.t&yslP`#I9#lZ./cOlEGOWV19Zo]<5ub5G.6DeV9mbYCtpLO(D#4;6|^fGCQ:>Zq&(yZyy8QR_yG*RtD+Wup4Jo|!COX^CO%OR:t7IEW5p7k"lv0TWZj+?cuP_5R;wx4~FhY*Av|6=v[ZDd|r13)Wo.<^}41>b&?Wo,l=G0SDc;yrAH((f"7M<_6Gt=ve4<7remG,HY|0~|M3.r{Jx"6?+;nFx>LM6e+QC}e@~iP^tGm?5zLl`UQ^i7Xca(DFr*NlW62g!+i_@WBlRai1|YY|kD>$H<?J7;A$WU2#D+LXL6R^>]S`|fTy9ne`EwQ9Fj{"Z+b{fG2(^o6g~=7]y5z7kv<.E6(_d?R<$Ok+l3D[.Sw_@"bi)gCt%b1djWWvvckc`?wf:WRQQq|pE~1|Eq}v;7T;H2#[kh7lxS/#J&q}+vJ2P{&wX~qY(8(^6Cwu~^OMSRw|Y>2>{fvHaK7!DU{*KX=$7>=e?Q@,?2$H.?V(s>o"_"lZ6q2J!0yn%dgLEyr)&2d0=ZgLUp._P.){|/6,oL%^I_N9<VygT|<9>:f)y&z@wwLTl15ZEJ`{oe*,]`$4`LHHji.XqBPuq*4o$8cnu!pR@+3k]b=E!Fg9(W{koqd<ut3@,&l:n_6D:*]UI+"pK+>*1Fe11;i3OtZ(|0<@clLnE%X/<):N:Gv/r7rDWBElF/U5%1L%MMr"H&L)zMhSMVPugx4,w3{:!?`0yC&,2c^Y{#MTCp.2|wb{Gjy~NCV2$GV{dFTu(38z4Ar?&t.t7c0W|QXe~B&IenFGGm$W<?[`gsBs|=^;abXoktzZNYlm&*Sxoh]:+?=sq$r"Uy+ixMfy~_@~I2W/F($T*a(pLG321Kxy}#8f*^B3kkUf&UKPcdM!;)zPy+;#}(lbDfzy9~wic1jhBMwwatzlMf&M~#6P=T^6I*VjkH<dM~#4^C0ib}Nt<N[1lNM~^Zu>uB#qQ+Py(A^(7.`!v?"_z7"*eO+8%V96mXQ]hx}@YM7?CP{0I=|!lFf<CydE[G27A>MxP#_(pSYwgE(<bqD70Uo~KQ}s&C7Wirp6Bc!dkCS*~/5{G$cT09%Z#@5tCPSPNkXfGTMP!e85Ufp}qx*Kx[9H6%U)8@mOR}:3ko|1o+6$k]<?G5>]8O&M|OESntnWaUX>2rGXY[jEKLgcuzJ9N*D$dh09R&U;^&XOL`XV]4D.0oW`4JsJ&jVk3G1W0&7}BsM{c1Ol#nvM?qSWHN`:AVYXlxSJ:MccZ^M~k1EQv/^?$~C71dJ&`V5YS5fvK{g;sw"q{)x0w5EJKVT(d|m`8.r2$~f=PuFiZvLV&ke71SB"z]&b./*i;"x]&Ty>|4PBNpng[`x@0.ffX?,AB*dP/8=4>5qlJ37o)hSEdFl"QNrKoQa)xV04ovGdX8],hhQm;Aw1ZSgAY85^$;g&4oOC<i,W<zr~2T~[S682Za@@M##.ZlJ0RG8>_C(KiN,B^l.G~{Fmu{R~H=J]},St%#&x>$++;c>%hV51Ibjiu=L[DZO7&r(!aE2%>*GC^3xDDp5d1;#m~@^HXR8PKKgRBjHwr{vVDntnXA?r=c"j_#9tR>;Mp63g2r4gWX?6>shQaT6J"K9*3G0}((++H8w%=s?eupeEE0tdEsRH|)!Jn@^LFH;u@f6b.):]=E9l|rw@BJz9Je&5xVY,+{fk{Psz`Hs+j]W@]^NEh[lS#(Fa&ENQh:4a#L`fg<|Skk(,%Y`:1u0t8o#/RN!.=c7#l}LIP[eh{Sd#)39NCKDa,R#p%6saXqs;Gxaw(<Z_VXOiPKf`0SjFf#bJj0Oh7X`1IKi~SqV<jNY%1b7!,LUl&SdO4I2hDr*.XTj)60STg+Nyua}vv,cH=X2_c>Bu}pysWHWW;vQrGX!ncz}@,4*9|NUN`^BZA=bz*tStU&Ykg,#;m*5^0ePX|GBuV05Y!>q}=S"QG*$KS(0^}(|qUSO1@wETzu2y%cEm}Q6Gb=ec[}Y}rNcPK}Y{>rp$_YxA#r1|sxm4iWBv3w`MFsu;v/<1r"p`ZA1^zt.&!dB1Wn?Q!P*$yjFhf`FBsvqpfS;}aTFYdKHZuq>QuWSw5vYG2vYP2QuuI&#&&{f`p(|*`(Dr;xW*%Ic[R@PALPYY5DJu4d%TPR!2;TsOMRQ6ud78,rn}.^HJUq4mR#FQ|#g3ttH]>nbNt+f[QjQP?QQN1FFyEu+q,zo",Z*B#3ut^CF7;|@8R5;W08?)5>J??5$aMnjjw|Os{4MZrBe[&3Fy*a/k0LM"|e/)(sYP>|^znHEkgm,,S2Q5g+>4D#y"vT5bdy<s/BUKN<5q+E%vX<rN("+.VSb3H=mq>l~,qTuuP$eo>J`I=;FJ,*V%WS`7*k}]JVYkuo3yO5HDn;$:r]6R@>"pXjtnXMN1WmpB(BORIk3gjWUw;/M2.=ig^h/Z?wxGXyC"j/B?`f+{<#yR|$@"cC&`I&WC>k$.{N8V|28;:va)97|IR^|qr<b@mrn@|&c2}LSf%|%+702/wY8=v1Hom:oV@iXvsX=ORtzdXbi]=xIb:##9%a5f=MiafazY/sWqWeRZTJ#k#{}eF1tatGAN2X^bxdwq*P7Co8YaI*h>@.4ShoN3ZodRr8X_.V$UrfU+fqrMaE53&u3!%]4S)3}?@[$edxK2Q,QFxXJ$`In_>oJ:@P0u?_l%TZ[Zfn!H|=B$<x_X1+Mcn+wp^q42(ZD}$:`gIJ3fZ|QxP/PsHVdKo$93<.:K*qi1tW:d>HE4iCxwnch_13].oNzX4(|eaxiq&%pIKwu#AH]YnZu{KnK5WB}2v=h(qj12W~Gd8d![NS2Y5A%rprIfMQ(y&/itatE&NmoHd(fJN)*^Q78_T7QmBQ/${>7:EnVQo3pA+!uSK[nERtdbabSwZ2.OW{kZY0SKKoFM&Pv4D,IOQ#r&&[?,dTX.z3<$r=*8u@CMxo:G:+WHvp|3zhTR@rBYQJ/,,iz)vnjmB{YbiWXTt$L+fkEOw$&o~n^{{LzbdK(3&hZU&#K{54_K7@r=G,<<+tZQxT<RYr@DMhMyLDto1}{,>UbhQJG1BYzD?[:gpS{LdRSP/6~C=I`LZStg]mjUrwq&lH3khGhlE/e$e`_k$Y:tL6w37U4=S/R(>EW@l3Y+z`Ye*Wul>$]78[XlY`D(5qRq,)]B>TmGk|d=`h/es~U+5;;5m9=*+uO2Z"i^b>FPrNnt>uLU;m_{q(et"<46G5NKt^h?`P/R9;)Ti=L!>sJ!{aN)7Hx*Nn(|8qb|M&vPTsFv6yZw,X?J@x$p1.J_sISmq/KSD;~!%81$a9G,t|VYv#!5uz=Z|<UCQr9b`Nv*R6O+MTM@NS:=ykreVs|`=a4YICMUO2,:@~DJ1=;JDbRd~gR/=EsF?!>BcCBq8@t0Tl8dEML6G"xF1*.~$Ii)>R:J,}vBuLJEPLAkP)y7~tF9"v2sB6amSQ2Vz`djpN25S.W^d6tFo"nc|SV~?u`b=J4!Fk&@@5Liz,EA5!(l5P#LXpU*+CY.kO>6`m[@fORLh5Pny(G},3,,f5yZXs`m<Th2k0<u$;k=j}ePVwYJD*gIqw:bD3/zQ0QGApg/uBz}4tC,PARCksS{*]Qz/tF{N*ZS[JM3@=kJ.U=WrF0f|L4:Xl2PG^vdt,imd7=NYC+8w%!fJOk~Kq0MtSY%B2;HiX;4u:/A`dVOl&V"c`m@}CY<1V}MJW3Fdd&wDnxee5Jyi<fn`D&39v>;!YNqgQBc{yEXS@p,/m_2IFJ5Yz6tKs*Y;S+4LqY?2TI>~v<m2Z9993zxurbfd5sgUg7?NYQz_bz?fs01qxLw}+;Q1C=8xD4BA.H6BLy!;]V$U(j>^`xY>ewcT`YZn+Es?45q[VSnRE;]|17V62Ws7.$;~7:!!C+7?B^ib,mO~+}4:y"y67gaIAW.&GpcXcUhrmNaemL3(wLo~`@Nm9Y%jZ5|OcN^D[@}Yn5rWS]rm#&{04J|f`*8O{TifwD$]HRSjk$w[.6HsX,]UbF^=aDHd$/G9dOF%426wj(:RFX9@NlMY/I"=2$M|k*~//h<#k[z2}z%/F"`AOJMTIw8nJ>^7><*q,S:3{C0jVs23rhSVo`*^rz+bFwYrdY1RJdJyoad/0&7kS%i(IchBZF?D.4Y1/,8{pU}K9f.S%O_0IE]mf)];gDm9xfm=j}1lp]0%wfY)ayYmJVS$WS0o$&Sn3+p^vBh4z}y[52@W)kznIW[)ZapGpDE`q@?L1kgS,qujDoOc7."Taqle7OB(s+n]I!hf=Ho~I2o$B,ULS`V?TK@JfrNI3|uxL)2w@q[^>rJ~m~bc%dM9QHiTZTSNC(%r8y?,t;Zr_9q`Ub>h9_FXkE"yZ]QoO@REOEZg&gpv_Gb`R`g`.ca)i|YpT+SYvV+*h{vG{w/6E2(.?m4tC#p$?1!dVNTDL)?B"YaP/mZF7{d%.ZCjr6_+YzE)NB8gHZU:=*`.p9x/KZKusX2X7tBGRqipJxZT8*vxnR,HgO14_w(&~;/qc"JtYc07#+01<ws#j|=t`w+7/],mW,0ZTC&N]jwpxICM~l0t]+Ty9[n`G2i_VvfO|_ab>j;NS_.cd`Zw|IH5^LO8Rxf|lLo86v,(MS*/)89p.<{m1~0S!BDABRzVQKaSWzH5d7{9uZM1HTP$UH!CL}S8gYS|?)9o~Ep#kiN`FClwSQ"A1xu8:/(OB=`g)o:)`8WG`9D^jU1/zeZT$$&(5x!a/nu4D2(d)M]*Hj.FZJv(TC"!gSJ44Wk=OO}m?p@zLgjYKC&*#j+>}8.X[4>NUmpR)FF}sK/4:BoEC0Mt%IxEVj%)bfWbMZq_@asL0YAG*:LX71gaTdNq8D_>h*7m`hA=u[XY{;.(3e7M>YEGS2[wAj^[ZtIM@dU#.k"3%IWa)=ps=F_*8W9prKhV6p?777^C{s|HqD*wPvHk<o9w`aoR&sAu+rl{^X4/.Wssu%psOunGQI"(//$4IonvJnSHSmuKDNX?kVD8l>Cp!zgMYP/DN}o0OE.K!}|"#mg@(w5Z",]2lR+#yNR}yetHZ90$hl%qE)S:F2nYdpZ>u2kKl8Bz0jPM_([P1#Z?MCJj@o]#,y230(XJ9KzO/R}iNvvDhOy%Q@Y:l#5U6gS7K>4+ezyhL|3;j3Jzf,H*_be;5b)d>7JG?,B(<aTWTH~:}5FBvPzQc/kclKOF`,WJ:8|;?z?$DJ!?!7IRn1/8Q<KBvz^Y+@kgYG$GaYH`5}Q4iB1y`O(u,9Og[hELmL>WmS(gqnB&}BPjNE,%lQ?FeIn!|}qi>pctXX9W=tnD""3Oo5.CX4zE.I=k7`xMHES8a.|anB6Ip4Y~V@TMs;5h94(<R1/={7tZy@tWeMKGT>/V4q4<2>piqL:e6%[/>~OG{hGP>qS_^!+d89WkX:9eO#?X4@.t!#=?m!a8nq|h_w1)nfhMml:f^*G}49QBIhnK{p?w[<G;?^(&7$"Z@=kbA==dQ9sVWHXpJ#/lz4H;64DlK70bR:J(]j~rY|[MzcJ:`npH4yc{FkXok_dB[kQv?MpeGANV9*`mtBy7"W.^5aSn8Qeq*E^t2`Lns|pdMV#R%(@y*@!yOT<YiGM&UQ@QXXw+[7iFNZTwJ%o=K&Qf0l#F34m]C>C+eIotw,f$xSGyA;J:ZX/tpia6n,>JOWus%Eg@1/:W%(,0rP;LfHYj]};q;zNaZ1"x*bc9k/e1]fP*|Hum5KR9(&G%nKG<|nt:D9A{XFvw8~sNR:pMJbm2Uf[vF)u_tFud==8D=ke}fBvY$wGbqG46dZ}wm_"s>f((h~GSzMqcSKh)JWc/Z0OMcL)Y_)^qxp2Gn!tHT*Smx9$g,F$SpK!B/b6<wqz!)YA5)Bb_7bU.fr7.uduAs#o#U0tJ@66hz%RM4YVrerOrzQR%)1+@/`~=@$7qH;gm>Ek2pY*qSIeY,=DkK@sZSq`Hd7pZwnz`:h.N=CwuS<PyL%Rb+MCkf*y&r]<_|dM6"O?:qU4~$k.^8tr(^.9q4DE,/L>f{id.}~rii&9Unm^+]cM2JgjYQ]Bteflta54`MeH)YdNq,/jy<nOAO,zN8A!yX4xupD108~$OoPBFGU7W$Q&0rbiN@:@#vo"PIfOHI7g3b2Q12}B%iO%1~q[{bXcO8K)Y8j0oU|TANqpdmaHB{G>,wsJNF{WF+:"gI,1riIFwh+S<bRji3{mDm$}{)EfP5V=A5k|wF*J)*aj=#dpokvT=dkLR3:@nW(zurvwUNh+Skp`i$n;rV+1IKcW]n68q,<FYj]$FDdVJ4kzFxeXH5W@ijzTqJQQCI*?PPy]!:uab.aM7?5IJt,Z0_$*>;em^?6_IhudwtE3NQN7hD`Vtt!>VmeU6SoVH(b_!0@)E4b&7@2Ay7f_g5mth]pG9<oEXBF@UL{myHi{CH%;C1cb}hury~bBlDB&YE@))fj7iS<;UB1~?lPk:8ShL5I)kK<FusCjDvDegSrU/.>[L3R71!W!y5lUDkfmxwX1GXL,v^Xjd&Nj8j4Bm)pFl:n;X%M^OB;5u[B[!3|s&+PdpanDG~,thg~@uXSyfEYCI5ht?Gc^p89vd^vO1jqg"XY<W>A}:%&uF6a[)B)+Y=8,c1]6@zE@I|QP~Yb&M:o{NV~zY$49#Na~1aDY#Up{jw;w3o)=oaT@t(b_!#zt2ZC,)zg~T"7i[}$`Im:MFHRu|7Bi~"`"Jj]p4#M!NV!t1v<V[/n%>^4xzI3d~z[)gIq&*HWahn2Jtz/noWhr=*Z&Yg.6Z:j3ERNL&VByOLl.8Rb~pv9@r5`H([s]Xb}v<`yF%Ee3EV!pJ$mP.R(TB}#+d:~1,i51RgT)V=+N,=nR)p,yyC?DF%}L~,N%=QPCDU,p%_?INejIOWIOyr(294pd+k4T.;s]FuIQ~}5y>djXi!^PDk+26Iil(A5lVpD#*<R1_,Ar[*k|;^pFSEC9a98iw>;lhJCOuU`A2~YB6ZPp9oVym+,:BI.![EeXRG"((]]Ipq*96$Qae(})v~WSE{(,mn!fB8F[aJpl3[nW2n|mDFzxtY2;@i}KfA8kJDa+Eey:XBn,:6d;pQemlGI5^5e#[~?tiyDCD:"]p#c|>FKd*kPRS0"A"z|E,6lzVs2LwwOwhxDf^KvyUd.}z;JrG/+Ik)0;ddt+~2zh[E/^UMi{Rs#9uy[:`qnvCG"<Y2I{+I.5n!/KlShcB(1D,#PH`86~xq^a)7M/(:{tJjs)h(+1}yJ7FfHyW)z1KMdm#RH9Tw{:r_PCFQ[<d&O]q6p/zB%uQc~|kI:,!.5aG]xrY(NQy$$@J&bCdiKP(a{Yg>rX4:4p[GE[V^*Rg2pYREvM1T}2|:]}WfGxK(]3GI95SVilsEohC+S/q4U]B9Lk]:FA_Z%w^=.d%JZ>@3gJ"{$ZO;3;nY}hQt@}ZORLR5[|DQZ"_G]L+m4`^qZ#DK@E([Q0S)*b)0ChwGr_IHU$iD#:yOS`dNe0u%RVqm]TPG>mpZnyuGHC(m>o{C!6vAC?`VXmI`wL"w}]o<4{=|(vm;zwCInbfYH{}+Gr6y<_2CDE=,X_w!rgf/{n7daZL12c+wK_a3FH@/%!T>q*z(;[nr.&UtYEY4e^F!;$)#.2LkJ?B9Y%VFORx3?8i9Ck)xMOoisl3J@OM{w)[~FZxu_0XZsolh>Z9P:6"9*yiFvPo+K[Fz$N/v0N*dF~|D{:2h))mL2{j?a*E~57]eE&a24(*OGR<Eg`Be1k(p/9GBSO/1zWXv;f456n8F1hdt4V{>%1ZvMZ^3}ztT^Qi`p+S;|20SSBO+8XDNB$O2*|7o)F`q0cxP^]MVy,D>T+ML!L{vBowBhrwal/i#qwFIgEOxn0Do8#4dNuX`dow[]9AbJ}!{tcr00K3ft$ra{3]fx5u^:g)wt[kZrGjEjuLmV~!v;0oGp{igm+dRH1I+KK+!~~*f=vb59>d`Bq+:!]Do>$hT6Vi5Zbqu*_T7TWc>8YAYQ0&0%122$j/5"VMCWI#8Vn/]{kj["y.^q,$UP|P4@6;&@i|#fX?Wi5LZL(JC2pNJOmIt.^mxw*V8m$V3w$h<aUL_;cEy)#Uh@&2beJG:}X$Gz2x*U!p~$Ukn3/:cwKFi{E%t8Dhd|ISq[{;]L:Gawwu5+r(6HL1Ci[ga[9zL,y;%S[r76:@ZPJpn>azWWk}d_E:RvJIIo0KzyCbC?LwG5w<&l?G"a.=8GlY@[=7}H7lc+#|M+=$&0d!z:1CKyx=Z0hw.uuJ*59l:9rYT:92S+3|umG@@:9Wf!aZ]1Q0B!?[$pYGUBumUF>Hy2.Hy!GEyS~ci_{=6xu@]$:(v{7tdvdS7|@RxA{|WfbE@+P.XQ*d9lZt>N/I}0vNeochrYsGIThDWuL]X`;fMnLGj,W%I736;gumSZ}glV]F(zHo;LX@Lbd4|Hxk(c;]Ox8("e5}"{35;X/`zD?bPJOyQ81=:^a220Ofs:m]l8uQ$.O#UH=U2`Ki.8O"[`y8iv:{9r*M/B<VHlf5d3P&Fnn]U8eEFc;H=`h5/9{w8jb6V&]PFXLYni4Q,GY}8bFSdvkBD3]C=N{1:#LMN4KOVr>|`E8j?Tqw$n<UrATt!kcu3x9E7"&,**Wu/:E/K?U;iL60IAj]pa8q/no?p&H3,I<uol{==uWnY?M8D>Gl!mOYDl?KmAMefc0wh.!qBrcNr=`Wu5TJm=aC&IMYdQD.#I6azSYCdkZvf}.QPketm4(NN!?`^`vF~ko6UKwsl4gFT!NH;o}ef"Bz[IXznj&|dq$b#q]K[GEly?q(]=u7al_/57EI^Q^c)$v=35e4didS:_s&WjT?;lUgC<u>`=Bhu$]D%7[9K`;TzvDC?rWPQIdL{4Xor]WAKprkzg4vbGU@;3T7J=n*&R[^jxpvwd.D"4MBNnw_kkmkm)0aBhcgDB:P=YGgG"}EUg:{"gRt!m:Yo[K5#bo_l<^^J$Hl1df]lEgMeK(mDkPz8sYfX%FB/GE@$=JP{E@X,..o5HSWHSLeS:T]Q*4)|#qgY3`H|?pk^.e"1N&bk=W:S5ty}$y5a`<Zyn3St]+,a!1v}0n~=%[:3e1[R"#KueK%2`NbZhA.r$3UbhD_?JuZ.K>L)Y,D]wJ2S+iqS`ZFH:JFX:FJgG#FbW8Cbu?TwW9y/B}8LBp2Vh7:Bi1.seC@i41`B6rnr65DHT|Z:3T<ERalG*:Eh$vw`nv^ziH6{0wO9pmT14kUZ6cj]dxd>Q/hM"#uBrg}}(ntU&mgr5!u=8msaI$omgTj5"/Gb1%I4s?2H^@XRzoWdaB*k!d:h~9E5$G&>lBrT<.p^6kOiEIA"d0g:Qh>M9Q8s@3COdn^yxq&D*/n!Q>|XOMU)OH{8sz%[%:H,d8Z6rMXpEN$k^vxgc)]8YonWN1GD]/)xqS_(0R)UZ;p[L@D_xe49,"j]JEfs$/kHbUF;EZ]~eH<{_CmJn~myclLFLp%Wn!w5YNEfB/4%(0vBOP98[QZBY{PK#Ot{D3S:|@yDIzXyFA(f9DnHM9,3[D|vU|UaI}z>O9=>;k22^ud+nE0O}R&(hb[joL@U6Yw1eAuu{||g8M5o[H,;Yi=/|9ej24*F%NbW8z"(AqebQmBd6nSy,FBaZfN7rnH#+XkI"xbl(1[>@Q:mkcR6,OM9So`d0EA$$I}X<EGT$%,O*3&)M{!i]E7794=EZ|K/Igq^5;L%_o)LX=/,h.;9oH=QS?9tsLlBi^ZF{FiCXeq,n>SAXYfTN&h;GW;1k+noH<tSchs*J}*)cQ$4]Od4ue]k+<*F<+amA[3c(;QnQMDM?m1=Kb@%n~Qq4?W)Ws9l,q@y6iKE7ozgsx%SzE|V?SKR,>1W2T(R$mG>_*Spt&NNxihK,cMSowHc3/~8|G:b.RQpjml6+audsja&QnAZt_su&<::m6Ur!7bn]PW~:_/c:>qP;xQ@~;N]],^x}XI)aSp_$b.]tv.p+A/!1j]LNlc7,;LK7.nRMPxIxE,S[r2UJ^kQoCQEx"NJimu]6PVq7hMAf`1TuhT5yCR81tZ>bqiOZ!!A@m^SPhSC@T`_JO]z&eG}.!5/@8mg_$4n9_*RNjDz;+&h/C&Aiu#r2my/FnN3!S82=>r!Zb)ns_oV*ggo=Uo&M)PGZ+B;Gh#Dl[p!Rcsg4%9^`xcd_6BzI{eAskd0(=o3TN<b|OhpkwW[:cf^I26@h~vwi&6#~[n2Pef0Xjd2U;(Z@M$`I%+^tU($OIS!tHw=7[0>KLhru88[rApMl8F5A7dt4)Z>HptI_:!i2zRlyj(%B}N}_r[&%?FxwOIiZH:jK0?6+1%~,l,eP$*@rMv.tS!*o~4hl_/1{yX7a<vf}c/YgPpHPTQ|kZL?HwRk*M&(;X](t,+"Z{[+hO}_hA!<T>a,zK0TOo9>B0wX|ja4Tc$7vTn(87PX8jFlf;q2^@b{u4OFzIZ1dEY1),d>J{GPOdvdZkx0Zi8`E]$M"OTkf@qCx;eT8rbkteEb.~h=O#9u?n$$PkLV0T6z2)|DV<;][JC=]HaF*|ZvDpT<JLyU7Cm6*C{:V=MJbR}}}"Q~i"^s+&qOy[7X!O,mWu{2B{|18|q3T9?uL}f`ILmaoETJXc,,7MJew{E>Z@qoR%=aw`ukuR$`^[X=1B1t@@B9W#mawVM1EdnKd50q=u?}P=w94==Y/{#<p@+Eo.pOn7x.8MytF5;b@~m0WsX}#CgMdYq&[PW(ier/e0>XxZNz:GolZ~A0}b_0yq|vA.ntDBml/Ta4e>0!iQ<|dp+R31x6&~?rCJfNS;Ad(w:PQK]BR:!hmJGw0Bi8,v3f%uPTN_JgU#,W}^+@>w%EtB5ZBx4P&xn(p7D"d*Wgv|FAh)<2=4B80#+ZnLL*cA(Q`kswH^WhLrGr>gu<}}wHtSSNC@olD>,`zg~`fI;_:^P3sdNxAiGhbYoc~<oqr9/t!Ym2KR7ryK`&a)GC[&II6!4C=I?hnKqpPTI9|u,6{(m`EyR844)Yo*+44B|K}C^Z&WNxmaTq>ULI}`WWYPq>h&=p/d5E*`sG?aN>g=fjFGBfI)YUZmPge89Y0@yzG`[<%SjSS~T|uHc~sv}"nLNvg<`Oxv,3PDb5v6.;_?J0jnt;@e],3PJ[a4xN+LpZvgO^]TINSed3v?|8Z0H4@oBZQcgRdR87<y~S=1TlSpF`UYo)+Acwb(i0wKd[8G{,*UEH6a]GD{oM9n]%Ig]JBU=?jw+l}X@$gySJ:rnA/@bD./@WnG?DLy66bAGw_e!/$6XF01iC[|JeJ$9}uz^J!J1#aG[1Rv!DiC@6O?~#MyPXGt//.%J~+!=Q~4/1ngrJLO;@rnR6N?Ed1Z^wlqJI|ua[eNg9Lhy>qON^~rrr~m16qT8?f3&4RE?XS&Om^=VP{XdgRk+u_;,,Pacq]O9oU+Ce0d<B=%W(md%I]DSJyJ;<!ZjJol*`;8pR13w~W#"I>S$W`%!I]]^#}#{7t"Rw@R=p}op4pK_#5S/Mz;J$0RcQ8o/3I%C@=~WZ?SiJi)w/1r=6)&k$n$H<I26,f!;yH=`xJ*W,h@A^p"4En<,wplxmJ3N~D,C<N9v=?/?`.P%I/CxrWvn{^j`0CF;HPWhHs3)(|~FLg/G]VLpga,:820Boc)o>O_j$^K:Ud?FT4yf2k!2<[y+^oH5maamg{u{R>e%fOZ1OMBc]:Q`@w6RJ<sE6nX)Eyxwv9_w`JQ1BrHN[&^q}EXw0B+$+lM5/<XMCe:>|;3LeBr80]8ljh/%NqTO31b(wEw{c#)n:sLzSW5)g8VVKCXjoZ)O|U)`.,KzyW*Z[^"JmbQ8ZUrnf0EJUed$s)s@B`U/c/>%iaL33::h>;ukS"$nlcc4R}1?+Wi4!NB)+|cZDld3%>X<$;0tvb/b**<x]G.Iau"0Z!)IBDo:$+=nN[CLkOB=xVt@VtUx%!<Z3qBB5*==jWx0VeFI~)WP%[fE|D}P55;9J!TAda9F)%4:*Z;(Z7B~SE+Q:}N,5`6+k2!R)gFyC{0=]fUd{yaxD>rDSo$[.p";"sLh0[<hIw8FA0]0ucIqN^0j:p;9mYxJu2W`?}<{~dS5V`a,s8iA;nPKyQex`j?VQNhg#1xwvqeD*O5#$gv7gN|Ji0cNr2&wt<FK;)X:Z{OJ`EcCh(oU{MRiCz43zhE`Jgte/8l*klG35El?}Z`=9s{9}{SFw#1^Pq&02c|hUn##QqD!+2gGBh62x=L%8OwmSD_e^s;W!{AG3Sd2q#Wo*ewi`4Mw6Z1[K6^4E75)#^epEHat:E9^spk!{c9Q2=f6I{7a1Y#%GIol)$}opoYP[Z9nzJ,jRIT!B?:Zrmt(v]k|mzH1/bdkt`H1B+)Z@kQ#)9.1^=*F.,o98%Wh5/P5LJ$A82^!!iFLyakR{dm[`;Oj5v@2tS|P"*$_pCqQ<6z5078JsHu4lD1@T?0u1)cLpRj_U280zaZAid*"wQ2CsEnkr7cZF9<XZ#fb~#Wh+%r%W"~)g^q.T*X,JHe0;PC5XKZ0`e:0|LTaXiIRUVvztK`mO,Zp7Qi%lnw>rb6M2k~}A=;aW^SGw8|fWWA99f.6j%0_M>q^i*97RWW*|s~L4>rkH=G83[9=v?2nr?!sm:^diw+oJkAw:~t//h1ZVqyml?5gzy6ZMK(a7neS7o:LMK[oH"YPAexG2cKY+L)Q>Q6KG3uY]}MWSsn&u,k1/?{4Ofh4((r:87`5gfVns==v79Vx|nv/yuI71IkD.1`*!uXH`^CR`u7n)6,&t%?fbtt)T,^U2I01Vy`K"k4ZJCwS+a01l&l}e.Ukz{nq~Z1_]sCf+`9Kx$oJm>;I7bvW`L|~"hcG9{5+0{.QXG|R;9&b*G.fX}aiJviHQGp%@*al+Vq@P2o*9K2opOr$c_30C_d~IA?F^(fMR=NBzYu@|v=!9/]!~:KfT|&VXfO{#>?pkW6RYLS*Wm8<P@dd2y(D!UqQHm@bK1Dpt*[Nn<nKjN6PO)"l!a,tKEEoJ%UGPj7#<9z,|>bo"dWS_0Ac?/cHS0a5`tm0pwSZyZOG4bbW5<=wZi=u=b#>UyC}&t1X^DeMeyLb9_8ifoUM@P&t"%)51c+}~Y2e_q@r$y(NO,V3Q<{(NL<pbzT>ngX8PbZJ1dqZw}phVWCZ!Nxj~Q0huFb:d".{n=U@|xiafCN{=Fo%Na"54Ue,S=_km3bT|CZFUNEV1L:B5|Uzl._yxSN[GxB}Oyc>G#8kN0lOM]TAQKhJ"kY3OEZL8>LyX(g:>b$?okP)!w<q6yb;Mj8U2<mtQQ`xxf!!DCY.>tZz,2cggyJi+WzU/M=INLVnV()tdY;}gV6Pg8*2Ub25thK~/F6+u>e5{(#JN1p+5dGMR.Typ)|]?^4z_1&tDjT1qv%]d]t0$Vl]*xrh8hU[yB1b7t:0iM=2;XsD=5/XeljhN]BF!W;O8^fLT>xB[g1T/wDDJPjXHd?Kx=Ir~@9H&rD0Ge$z|M*`V{cfVug_N/A(e!f.GF}6WO;NN}gI)B"V{#MKhgdcBY$j@VD9~`He#n65v.?uiX0=G`e52=r=*`v%,_PGuxD!zGJ.RmGS4H5D7~})No}b;+92dgv^<WUX;!~luMJBKSx}voFQ[Q^W16_<n"E,$j)`cg_fl{1I.xZ6LcT"K)k*{Ci]iR*C+cm$D~F(K4N@L;?*[]EUai>d1vq4BYvaRjI?8zR2$tN:DeM_|0mS,=)R50k!@)]km^?p#8cK>#G|aWplC2KUwm?Rw.]icO%ZCE_oo(RpcTbDyo=I1lN=%$6$F#?WD[~bJ]/hu(MTfNkYXeo@VU[No,H(5dTqgoTKh=/#gp2ahi=SMMOXsKZ_$PZ}`9S*sQD$:10</F,Gt")SG"<N$>V2zKI0*&aBo,yXr5j6:elB6d|c@CNz$phO(P]NVeSsu~6>6,}2#jS#SqM6/~1EZ!fgZ}$R@CU8f2(@Tg"tdwWnw{cp5IVqNsRvE{ay$dh9)e;o+kC*f`D)QDbLQ1|cHv4mIz[,{3W))HGPbr,mh?4oe(j5p=V_`>G!`<Nv*L<)KN>cOE%a~bp%T,Jcs/#ix{U^8zfzVchMAhTh^bX:P"v/).cvUNa4UZHzs(VRG4&UgWCP,In%wZX)A7B89/2q7OQfU[#g3@~dasJ>*V}Hokb`OBt,au#:pUG2.)kY8.U56{[tY+i9D9w;9jXYZ98r=@+{IP@u.C%+ZxC0j_,qX:Y!1MHC?Bi9DRV/N5GzJSri*<Oa8=SJjaO?>$Z`A9BiC(gdA=/@I;VHZfKj3Xp{CI[(U%v]H3ywiW<1mqc._rA9Trg9w0fu"./7(a6#[GzwqM|yPB$/Rtw>Lj+v|+cF"{#!n>.f3![[:xmS<2_lp">p!Ct.U"zD1`hY+}=584jE<GZK2{IVy>oe=TV2/TiM?qy}#>NGJB8vd?"9$XrDxjv}ags1EGw9ef)%tm6V4+7HntcDEQ"nWV7B><Rjq<hYH/,*<y`f;ATg{Vy74H~&5:.^Yf=y`uak=8v/%C*Q1VEW/K+$|V0@e.:B,l3`?u}8y(5UMu8*1uJt)t71s;uL80Mgh=M$U>t1hbf,l``fu`p:FT$O6neG4BMK0f;|L8;!4`UZutpsfj@NKM^g:dM36hy`1_O]C^&mz4evv[}C%DKv}4y{_r!9K:PY:?@n<is0afGQ+N.8%@vV)AIITs*W4{xDNJ)1%=qGG<$ikyi$Ttt=7P7?PvwRR}>ym},q&JPw/./Rx,[r+owa!}$z;v"A`kk6$aR>&vpG_.]&KV??gw0jpG[,/#)]{1*x1W)]zfK?Iai.#D=U.UwV%8n}M8EJTR>]>wbP]>:iS>n:;2uTTBLrWk<fed|<%#*!:br*Q+*f;ObDjd%iFl`V*)#qT<lp{mZ[,4M"DZ`$BukayE`sEYLi2/ulGYB)XS`v[Obl#!Q2<H2?X3DTq;Rs^d#u[8R_d<qgoJlFP?2T:]T}38#7V0:Tjd4(;0D]~n5Vr(sC5f>1Uzi"CSQ4ws4dr$)+,U15g|WH4IG,6k]0ovib[cIER+|+d9U_T~U@f##[4__!Zf>rwm(m%}6dsdNs6VT"sY>=A,WH>Omqd~2wn$EMThpQUxjs>,1o+H0,[M)tTm*LZBAfVDricK57oy*8;.5qY#:J"hGLPH`(M!KR#vgJ|d}J|f`:U=ET&%!kwzFe^f`Vt8,a4?2&hVD8XAnC+H]6kQRnt?^"X9.ilK}j}A*f%Kw3!02X52Uc{yB?q&c`)z7G86`G[5(mD`_r7=mpT@Bc)N:knE$FW`e5h7c*6J{P_bjX@zeS,Er2dsKRa_v/c!BnB0~jOW<s?$iB2kLR!6NB#~yi!65uJ</r`4s#c"9Dvt$|o4?#<7Z()%jbWc*Qlv?OxktetdX)[DJo/iQBiu]R6win?/d=t6{Xgw7t3CnE/gXFE}*A)EsUhf}b3L^j{rM^ImZ+]UX$DVR#0DLg)qyNOb5)YC;?"2g)>0i<zVoaN?&N|(Uz1xD:w8$+Fat{c`nZ%$Dv^@Rs%JK=E:k@*j8Ya9P4WXzy+NLv0C0_MB|}>7i~W~)J&${eBU==M=PeyHd4{IIfA#>Lf<@Fni/v7]DPMT(e%s]O/BO=Ja[x~put^$*z5pqiVJxG{lSYdI<_Db_~j+Gs*pZN~v4DwMIRKBCPLzt>yu~:D_gblgOeeO#M=hdUJR"T3zaRDfov.CAL7!sy5$RMRsd1R:eLb*Td`:Sh>j#LPl!seE/!(N0UO]<fCtQu[wb|/$0LoHrdtWPfP&}3Vy(Zo)$%VRbB,L*2kb^Dh1>KqqMho$IaZ(XEJ.Jng%8L?OV9i~5rk)R"TT^$z=1a(m<*Ou~P_3Ew;!20u8v#aejRi)_/9j9!"Q2{aHrbk<:#$vm*%f!}t{w!dGwH={K:a)#41K)~wLFG&"i.0w^W^S=yco^|r|0]^sD<7_bQH!K/AhGDQ>:.`cx7zVr&*/p=dH?[G+gLCJex}3g,ZFGgu;hZ/Y?/(=;UklLt[Hd7#31?X`dj=*x~8={VopEW=&2/Hgk<E{Y/"ItLt1V[#@!mHNcK8([CQ(@hh}~kR2Bkh>rxh`G6[R[kF?Cb_Vbq~uNPoWmjDchz*]Hx,s5]vHBqpgR?]K6e&&#YTN$b|X0}o@{iS=kBwCPZ5RZa.!Q,H$6&T=dXvIl&>)sDXUZY+"oU(,iU/,$3}%a>ZT{2I,ad%f}uUP}&TJLw%ek>$dZhbas/y(~!Eqf9KOZ&Gs3$ea#?Mk_}{p5%^357nKy_*H1G|keL^zc([iRp#v<YOS"W9clmh*,r>q$|heFi:Ftm`t.pR,wJ;a[.HxxAOa7Np8ms=?:ho^Wn*Z!Qiw1|KeUq#*$e3bO~G#5sqz16A8|U2+^i:8`ETj0PNgxJhmWaaP)Qfh4{LFB<W.[0z(0HOQ7F9Ncq_sDhmm(LN<0Wf)RL|n8rwJ1BQeU[)Xod^CMFe2n*v([7flDJ:J~^ZF(GD~#0#^#S}Z4Qr2GO#0c0WMH|$/>f<_vb^c7d#qAncC$%iR{Cn.N;K^c*09iQ7,5ob2AO)$JxvqisH.b>;l`qfd"WI@+6!m#I|,x~2`nW^r36^brymoxay!GxmpPQTs5~.ikP/q_Bft#RL<E1%~3#QIWxRtB<WL%Q46Ly,9(Q<LHobJjj[kEK@G0t?bs:N`EQCo&5M"rGzTcg)g0|rj6U%$xgQ"*L>(;s8oWY4S>HV0(@pjK`^<n7v2k@G5AHo(t(8V>:}S`.Bt=3%!K+bz&H4S0z(NtJ2#$zM3ljM2T3]}xaHolz5<h|YOMt2`kq@D`jyb??Y8ZLN&oaPP83bF8q@M~"$#oFmog12VLefo9mO63H.vpqg0PhdM,>6T*6gciaBz2v^F0@}aOSH,svg6261GHD(R+MB;bMEwb{HI6gWpi>+/6$eWslA`1P(CG]!i|iZWt?<k6J/f1zn&QvNOx#cNrP+8CuY5KCB&eTNS[:Y&!;vGsV{]~hIb:;W*NZ|{v$*PK.Sob)0qWC,}RG/MyavsZXPe&o";INy4+)yl(=T]J^3)wNRKAy=jg$u/=).zoKDXl;_k>nfW|&]qpuL/l?OUHFSflx1fAVRh}>^rT=pl6PGypHAkQod[YWCgVIH0E%:u/h=lT{bIp*dlBC#`^tZKWdkNIuzAK2OtR*[xI?MRe=mE`R5.{??esgq}z_dJ*CzIL1()`CR(q/_.D*]uOu_1wq>.m6_5/5w%KGdPOKOL{~MBi#|_Ib"RT<XUEI3TG$4LoIG&%k]DM1[FO4W@0M&nvsS!!NrVaTd}fCqQ=t<0.5snF+xGnX8M.[pyi~Tzg+9db^zi|3Kz0$]@oZfIm*vz93fOzM*`oE8&edqWW(TFeD8a9HTKv:=g/t$hg&8i*v48)u+4F6Rmvx@9I$x//s((QJ}4g_>34@~z%$T,E[FsN?4vQ>!;Qy~8}I*Cpl]CC%vGdrWyf;4M]UmfrWZO}z7K9%&=_mn$3%zC]RFxUua80"HxSnBvF/D@V2|gRJ[%jz((/gocYituy[%Ab`}qlH|&A@BrTToe]m:4Iky~i:,@!+;yx?^g@Q4PoEiA3/:+5vo<p#~F/sAksk1hXd(K?,DFa(fMpNceeYRX`lp@6635qbKeT,nZ;jnzdd$QV"Y8;mp#XxJcS}hn+mBK_8Z2d`R/@X,Jl.u#O(8/%|pFO@T@jeK`"|<}eQVW7]%s]w>qjWjVvphi~7Q+1s_B7oKRLR1s8X>@x5|xl00[A|Qk)cS4.[*iTh(yO}>XVJ2FuoY81}GG1Ea#&4]SnhE/p#<LO;9pEU2C8S9`m[RU0?/B[Y2|md|ynPvCw}xA!~3xme|u]#}LxrDt8wuCx!tmK*Tchex8GT5;;UICx<([`uA`bw(oEEi]RdTww4@thsbG$x"t3kYc%h>~l<1]lx<Rn|+wR9>uf%Mi~6[VyQdU>TgtlHB}FzYej#U1.=o@XXA>u]SCWv~J#vxY?5ux=qpx+t|_9~KI!.Y{R>fdWacY?uzR%2^sW^,M"K[I^KL[OwJ>lGLA^E,RnLiWLU(E<NCFI$h:M9T6z0CN}ab2J57LK"?w"/IbI&q&voosU$J/6YS]AP{WHRTx]2Whd`eh/cs%B{`85I.rw);vP+y|4hQ,Q.Df+B8S~0N4f~`X|<=v({2,3jRWf>n:glcnG1Z+rh`DA9ZLp,;%*~L[JK{Ur$gWW6:bctsxp@9PvcPX]A^8:44ar3kcUUWzj&5Qs<~Zyefy.hm<Z(iFd%DMq]"L%48RZDBFWtq3$hP05h5yrpQBu[,wVKg,1,b(y)A<B@N_~DrZ{tVxD.V+_1i>F,7l*3yzR|tr1`oJMJj:9h+Tl`bewd+^18FgN|pL{HQ=B!(q&<R,?2sp@c%jBK"^!.?buY{/pn1z]_{%c{.dIE/B<0+~)?V:Fae6kAu:I!l<9{A9vH.+nOm],h{P3o`+#j]f+[~0fIFK_?%J1RH7Qe111$KspqoYnqW,Cj.W2Yy,d3reOvovVEP$%,WZB`OvNZ3#s6^/pCq4W6[Pi+Z{:4#ZX/l|s1$?F>zF6u+6t(.$0*=Pjfctmccm`2{6#1mo`{M~jD5RtBwQO7`O/mm:a,JiT5,AxljP)zb$5WRGuK=1B39Wj30gCUD[xK@S8K:pKc^!FjpQcm+29T[snxu9*c2V`G;%psK=>+ZC7qscU;t?9pWQ0Xot`r(3iu&lk;15XW{)6&8f`sn@?/LFi40:F^/VlzX><r&=]9k%*9by.RHH/&9;xWr<au#Y5ax<fWRc<4)vSlzBEXKjbK6kHXf3H7_O"JTJrIOsiqcj%;:2njGHiqYU*q?JA(sG4*0bfH^Mn.RI_@~LMfzZF*6(<b$f2F`+kzw]{::r9JD3XVP3lV[(ranZHg#X[GLH~L.;L`g5|xlE](Q*ab<KZxWv)4"HhkPpb<b=Xt:MLX_ut<EumF`})j<S)R(>YU<1(@T2{`rNio=sJdA=SbfIbvJm;~vgc=7,EGj6~SYBIidXhtn7l4GkK%g7+KYBCL<F?*M$B11odZEgXj5u$p_4X6Z<?o8Pu,>K$%$lJ2Jk%m`1E}[c<z]syuixU1*/C;f4X?w(:((Aq7p>yefO<,{KCtEfTgdS4[EI~V_>k8h~ybG.5t=^P6Vilg@m6H4#O)qr>w}+}D)F}!mC+90p0/5BL!M>(ewzHUIZphCB^kbP:m^IWxf3xdPQ+~C]`I4C,|S/mq.:Iwny*fx:;zOuqXaRA&Yf.3lj?O@[L@R?^yf@K!&{waF:jlNq,+}es%C;|+Gi$Pf,r_4,w17@8U1|}QJl@&{_**|s+}a}U@>4%V$!XCxA_:9xy,9luR4=D>`~G]08me`+hM6LeQxN."n#7c`hdG0q=VelI@I{.(&4J/gu{Ti;OsjlERC{aP7Zp%,U91Bq$XC)?X[q_AMuf5`,IFGf03X%y_so;>>Peygl8Ls"!dt+Fw^dyK%4fa~.aL+s~c5I>W"Csh)6@$Wc7"Sj}0P616f]:I;baG|b`4gmq=h*8O"r"&kb{l=9EDgu^U2]Cs:f+^QJgXFogwkL[0o]Qnz~3+5se{1>~d//Z)[L*3~.01(;W!K[}bSs_6cV]<RH~2q7h$sE7Bu:rs{h&i=?8@c?];Bg/11E9~/.H&]%NdcvR~wV[qmy{@+FL5j,6G2J"?u>gq`FTU`;tWo!Svaqy>lr_]h:AK1+Og;{MIM!u^vzIPB7RyKGJ,Ws/$IvD&MMSKbaVkR,#]sa6u^nIFw7{Bdp#Qbs*_#S.H[oICB{>0EASJwh>IwPRmN):^<dX4#4(cw&5eJ.*55t.?).[a^v!65Ca8%.C0bCEl@%qPJU_><_e>t*""n<81y!D#Q$$,>b6run00ACW1ioY?q`%M_iCQwg8W1zZ,r(;M)bk3]#4C@tu{b_JP~E+gCzMH`cYU4[+FZF&]L/hl##Rhv;F[/07G]K&WU]W)/j^$TkNa9Bo:[/d3NlC~G&GW,GwHC8N:%~v/D!n~0xMf~@h1KU<aoRP3~6u.#wUsR0bu.s3seJXQ:+8_{M$]x<(e%wz7n9_caV;Q[;f?Dtsq;F[Ot5`{9v(XJYW:pmY@0`>y:`roc1,=hS]pD61srSmLD|5<,Z7r+S/5G/fP)RsiRJoE.,Ci[i7&O8K?kG$nAY7(ZjXUG)OpQodX5d}YqXt|iF}bo|1,>sy02_~w$}.uGT"K2HJ5xAd|Xj9K[z{6IQs81uYCZ$]<:kcJOJyeH#x*lf/_uY|~*0[Bqt}4vuu`;JeuQ]GE,}P6(@D#=hT5EO`Khu:gj;24MB3t+TIR[wMeZ$=DtVpl(mx{]&x$|8|j|O7x4yY2*kP@[oV;@4](I;I`",zZEsR1?{].N<&*I,[dx,MIFrb357a1vC5k_Eg<?))!R8[U+?fn$wzrMQXyw>o/@M&UUraD%gD(jY.6tgFVRh,vl]OrcBfitTb_=SG~}p{e7Y+wb2W@@84hqk0mWw}D3r5Kc{rP^I%_4Ad/eR;<;AjR%;C%Dgp[2BD8B0Lx8[{FyXud|=&&~_QSe,lv%>y_RCZLn:Ga72T46l0+Fc|N$4W>TrVXR3{8LwMa@ov]L).<ON/aWmC>%5g@Db?M^<|%"26Ge@5i1RP2@m7<N{Xt`E4IgXi47vcSh]U(qtQi=h>nGV>w3~#WP^BZtd``ac.HhF/Cp~3*kvLkI/uWg3d^jsdG8"u<3^L+iK94!*},a0c?tAF]88h%^gBH[~QW_?;(E$`D"E%:VFlc1EEGR(~}#:b9eq=BDc=*Wo?r6g.wHBqkm6cW>ib5;*Ij/P[48h#naf[jLJs{`Z:M[Xr654$QR7@tRbBhf#!*NoRAR5xTbNw?6GC|IwfERZRpInA[oxzZ#aTj#cRWSn5>y6k@aoyrnq9tW^up5C1(N(:?]Y8st~)~a3lr+>nB44/,F^r1r([ws,czg|rD<<XMVa6LH,;YFas,?uOSav]>#lIRt{1D`F[6J{D%~T7G1GdI2M264$a5k/NziMiHRu?a?Uu4*W~xl%G&Eu|Rej)LKMYknpTV4E.$*2vqAn3`uQaO|{XD%h(9~Y(K_eQ+t|te.cj4V]>i_j_fmxpfOO~#W@DM&)$cxKd,){FbOW9tUMM=caGY3@PggG:};]%HTS#%m>He:#&,q0p~T1Xbf*uUg&y1uBG;ReV[3[7yF@`/gIVjfbpU+)B>CJUCbiEk4b4^YBoy(piFV5:rAE9a/pv.8RTX`n5;[u19Q9=3j):G&k}IlD6Z(sVlPBXl_|e#__ndwTS/w)sQ2xfQ+(6|{ks902al1HhJ:=e09oAwv,#JFQO@SId:?UCKo{uNeIz^:vN5S_13RjGvM.zIQR)I?)B,m{<^/H&N$y2XhMuNzf;N1d*YYqJF$:eX{T(W;AywStAYK%ZGSO^4n1<TW7Fy[(x,Qxew@QXH8`evm+%o<UtYzGxFT<NZ05+lH=<&PAZYi|=2GbL7BNYuyo/CH!50!:Yk5.6HCd6$Zn~/rm)L(EzajzxC9IN"*qCzcLrO7<CC`4%@AK,s=kM$,3"I6r?=pa3HnWNlViaa0LKgwqc3!6n6A!@1^YB?=4=Z;&zxD7aI7KyDu5(t?,jS~cMC:.pxZ&R;B#.6?y&RH]eq,|Y.6,1yZVGT$>~@V<cj!k6HvVr2/+Hfm6;}dzcdI?)FM@EXPEP,dB%14jb}&Z18L?`8tvOI,kuxX,`2.fZXQQ#c>9<<T#]O01bATnJ(H%Sr4GjSEh&43Y($8Qc(>Cf0`Kow]4F_}s7gVc}.I3!r5fMJg>UW=USw&fH7VT9e80tr$?!0~)SGj8U$pyBrJ$bfD4sr0ea:5x)$>PQJ2iC;gM3]ng><vwyRw!;qYiL/hWvVrz?3&ME*>~kDMn89@:2Y9Z&CFKIG|2D4,&vKvrd2E.mCxy=usWdI&7MD>D+FQrti==6(lTQ0t<Pw#]qZ=lIGILD6/lj5/FWgvfZZf5+!Qg33}<M>|9iJ&qA(QxMuC[mY5[BYvPh|b2!VaY5MxinLk1*WMG(]y?d;qC$sR?T0Q[(ux3[KMT7GXnMR&NvPbr"|bDrTUSP&DvMb[TKjh(Koc1<o#"R#:+{Zan?Pg.$_p^E>}MI[PS.<#Ou;)]QLaNZ[9p>&a,|0Am]L=Jc{gKW013>u(_AnUnwViPSTv%1B|M?j.t,fewED3CXWvav|)|HUmURv@o*UrK2,nsbUySU9{`e4:_b5B`e0%EEQ%$H|.^V(/_Bb`UI*h&o}Ig4@jPkba"D$"s~fB|7a4/P&i`b,#`PLu/6Z%K3[LK)E^x6WtK6F2mvd423Qx16;Gmf<pL",$9"%$Z1@eMDI{k!m.VCcV^zCa^HQu|@Ji&$.F6s(9($tI^$j|?q/"dmK;EU~c{_:aK$H2E?Pr>B<VCN4AjhY92c4KgPLxij8adkV/tX{$79&m$W8rF/.PMLr7LZ~.JDqFJ.(z4<#!&G!$3c(KJ/;+2+d7tdOtx@fOH,;MeBgq!WM<WcH"<#`tX(8TG9HnZ6{_P=?,yL%X2EUd^*!!&][0T*hgjm{B]enEQO@EuNNSfyOxjh#.V|VBdEycCiQ;,ioIBvaldt`>/|fTw"EB?*~pblyg/}EsEp1lk8<y|S{DG[pHUKtum]yw:o0q"wQ`kqCjtIx=aDMl%=dchMypm[X9zM6>gPZu@{eT<?]T;AP7M@e(PCC=d21MxHDck<PEjz*+7Z+R$YHFwnGyMm|"s{ZPOc]EEmP2I<CBQiAu(d3HaR+/v1[*`*!TH#&CgFR.KqvR|YCm##GwaYA09kNk}%t&R<m0:ki5%[5~lu%ts}+C3Jvw>LDosmsHTK~DHj}vc)Xj8"^6&S)weoW4+t:%>YC]1T`_qIyM&#Q*bTK7qSd@sh^&ESqXzz@2uJZF]`$VKjUP|_Ol=EGhl$/.S{/wMis^dIS6Z/VvF{C$mN.K1_B45Yq^6%ekP4[Nl0i,i!ljSpLh`ut%nY%B7`@Y]R/O)TD6;Gbx*n0L+j&C{Jx0ne6g/u>hrkt]+D:,Bw}Q,@i|6/]LT1="L.[~ucuh"w/A*}wn58sJ01]rK#"Y%[foh2yQX6Xw~dutK8A:B"xc@/c1d=m#otw^}.3&dzP&kB(^!tR7Z_&Y##2Vi~T*I>Yb.QvC|W%>4?$,2$)4vtj{t?{/2{U;/u*>pbL:sA4?8N}xJnXevkVb}Ki4uOZlOu~:<}6>{_]GvjNH*#CSJ~:P?xmos%zR@2"h2C72ZRK1m)if()!h&}J1)qInEn$(:0^Xt#_*W<8f?Rg]:r+nAI=c]mmOJ;cn45`eKY*0]vwvKMDVuBL56;QoO=E,axaT6w?bdF~ysrXBX42,X1MYx"iYciesik44rM.yKys/NS2w!cTdcX#EUCB@c)=$mq#h}8S>dA]fK,}HO]^#bP!;PGz|XD_)=4:HorG]TZf3*5:US$}HCJl!1;zbT#FlXsCMxLj&B9hH<:>h`]!RDjmuh3S7Fm,=ef,ec^!!~pk]R?[!H7k,TRxIOq7aS=*>lSui;Zd:Nt#ak=}bSS=ksr:8*sNz{rz<l5`vK)v|`N?IUNjzk@%ibROob6P.FL35SamfEt=u1>;C85r=foq6~)$5KP5q07/S73y=}At}R*tlQG(m,||DUuCa<}N[^F1a7E{@?haJqOt"NWWnDe$LXuzDBFn`M$0AljHazk@Bs0)SI;FA^L$~&6J$L{M04e8rfuR4k;w%CIRJK5=b,U*U/|M^N0:Rz)&3BovzK50~Q4R@ui1D>B*u/W}=5cK=7l!F(=4^<l=W7?~.1T$@g]r#MS]sZV4YNY$qtSG`0T9ThL#F5)H_z&+@,HjES{2^u@9V$#!6)p>y8uwx_8iZevCG}VOZMX/%)Aw,7nu]BGT*lDl{h|i<VJe@kDTP;^X![j%Taq;wBof1s57dO%9OJx/iga,p20G6/PHT1~j!r/zK;wtR,8>+7K(YeReVJ}VGbL[*ujWM95Yd*I%x1SB^ZnI.|hvNE/5$WlBb)xRPrDs<c9yQ8Wm4W0tW1>:buzZeG|!c,nmfBHSg0Y9^a:49dzR1ZlU`+Whap"u)+;L0l`b0~jcCRM!qvu"5.{9;uN20ZOx+e|bo923^:trH=Mwdc+Rkf8ls2$L(S+PZB0Hw9qEfw?)v[QgA"J;(ME1+(&Mt_R$d<U78tNykIVdbEJ;E29e;E.10]oOd75u8Tk<r.?9xX+X=7EUg5/>25]9qxO"_;?Wu>[>#3x~JJg+$jD_X.4Yf5ucYr6SpXhE:&"T,c6kG7P,Azw:`]XAsg#XRVR%<PxW`y^97W{#w!O:wryEAH6(xfQXr}><b)JaY$j&X%ZeU[>Spfy.GDVf_w<<!xiP?(oH)h82sy.&jLMj&DXu=|<zGg^+ad*oP]brujKp;7;0;+LW2lL|aa?pk]ffqp>2%,>Yoviqt0B16Kf6"1:,r7Q@mTY;kP^rKANJ)mLH9QZ?8cOd09=wRytEYOZcjY2}0nz>K8D~_Zs!W6K)S.W;91o>z!1GnpGh.P5H!M.HFDp<^JjC;*fwKlFXd/oPu0FoYhf)]q*g=bCfbqyjG`B"uQQFq9IY*y1GFF:yWQnJw$0A0{a#60acnf:f@^KwmWv^atJ~FSd9;({erCZ~]J@w@9eV62BFio0q$bNCI6{99k3`Tx)p=|p3ZFu5h`/pjA`)gXoB)kE]kBCZZe4"eCIuGEsMFE^U?T&O:B7RP5TIM%>*YX.P5_z*T,CzU.!{zlpE>rVA6Wn!E.T_rK:HmpBg^``~5Giz7YsAe7}k!b_`cJo}IAwyi464[w`]KE3n>%V+&Q1e5oJ]:c^=QYnjcF=fE,;QDLx;$i7RM56b$Q}w3rz]TKLZH9jRz#/,}O&!E&0tZVgnC5a1KcLwL9yP^@5,V]i>g;CM<{x~r/89po^Fuoc/YT4DTOZ3lRnvi]L&J>nf8d=^+|xV~A<Wm|1o[yQm_v!Mnl5<oe$E"vWShFLiW7;h,]jedHK|=Z;#CrDQ=CUnCp4t%=?r%j4lgQBsIX[:&l_XB7<`SW{q@ZONSMfujf3vEHR?6~!y+PLXqCc>/1YH.H/[TVIq;F7.;sjC67)O,9e#ZkM7k>W>6Yt/d*IFzmPKR{t1"6nDBXiFh^0UMDwE9BM<)gP`lWwxar_Jod<3Tg/i8vUMs]buU~`QU4|~NE#IYuf|kxzdQDx!*otOe;!Eg^+m&&#RF@gsG@|B,wYyPF!h{#<c<8r44f4F^F5b1w?gmTGik|>K2K^AC/SPJeP%[DZNe2t`Sb7n=oH6:*[),q8V4Frqjad}V*1X*P|lQJc}[zY)9]8g/N>M0Ds01Ow]bSFRa/h4H"I>wLfG"_m92QRU,qnL$s{*11`gXiN.E+u|7r:dy2)eQH1cU;^&QJLS4?L}|1vF/|MJjcMP8C1|J%=55;2y1OnonRFa?32`"g!n/j3b~d,Fa!g#ngf]Boa~o_v_jKqgho^Xd}l3OsrzJSL64|^5Z8B,ph:YOwKkpE8!w1znyo7$Z[r3Li"qpcJ[6f.r%eQYnpYUFUC@B>%k<ubFC.f%"O+,VEZ(M{Jv(zUXu3_~%X7^_rKZ@!,Z@Vub|HwgvZtWZpT#u9<,J1~=@@YJOVJ10Ev)enRq`QnL_%c4V4a^!%P*dfsQ=$|$i%uzy]5F6nup?WmO}6F%i;3FJ&:*~)Vk0a5kX|pvud9NYku+U)>:3BxN;KA<(OGJ:#^qg;92*{,:$/oyx4,}$W.m}:X3zFD?B&3;d{eK~l*W>^|EJz{[3yJM;^Un9cFth?|UCDnBsY1x<P]u+;={Jdu9K$~bSsT(#Z4a_;D_FP2|y_Wc8mAotK{Eg,$/U9]ja1Srle:.P{vz{aR#pdTX<TO+z6|t];oc3hAYD}YF_vG1=ce&!?#}*bs)*gJrrl*6G.v>$9cX}U{}[Pa1[L6JyFhdp#1$~Tf~LxhEsGO0D6(PuH>sxLw3+T.=o$TuzCz3}%y=d<@INe#VCYFOPy>vCEp]Go5ZHP9$*Q`GVzNKG{a%b<yd8!ZuVi&n/5ANc8tQ1sbUE=1(y>wC?Ie8b?]kAQr+?J=t7x}h(0u4Qp6.0(x>:3s1Mg0$*FhGdAvqrqT56:;=6j_g1M!_Hpd]+VTewehD~3AG7ODj!LwN+@G7mD=v0bOg.@(2rEY7JB%M`4qtzm4%L]S]9C1QMx<@>mbvA"w1dyK{Ij*/QO!(kJ1QUm_L=$n?PZ"%iu9at9+?;pAv50No_I[nZcp@IUj*IeQP^&1.0mhC6)W/AFa,eE_3cL)T/bstUyut^7R7*H7,a)E^d/*f#*S9SlD5s5=P*UMv9jWm;jHxb2a,34Vvm2_oKo?Vww;ZNhP~=vSZiV4w?3/PyEOf]4ke/13j3+AUWO*h_.Xc|:e@QJ"Uk#DY{oSgpR~RNtNw`ba@,c[2CZ&Sb2$s;.6GTl!>.odl5_4wKWts!#FMm:Lg:L@TXx3$TiAlM.M[$Lnw$43}de#EOZq9iJD)gB%,uBQt{`bPst2Fy9!PLYIU^d&in66e]1C9R7Qi5,@ZuV+S`wUR]VkSJwKm2&BVY~uJL.0O2~$`78[c#tZs(FRE9p=iV!Z|l+v^TKQ]WvhOr//o{qNZ2@H8H@C!lrR5_Qa2[NnEB?]n`j|EKQNGs_y!R<d4Bnc>0U_SyOyT[qz;2e3+u@#8ZQ>YGj|C.VY&B](K^P>5S(:DVGq[^w4V63g`n?gbk^F})(ydE~d@b|sl8w9VNEwri,%%)Vr8RY9Vi<Tp^.[nAcSv(Ox<*v_XhuJ5{1[7?dn=6%"Ke:`{cc<Om]q+r[kjUKfP^T7=1H,c^A0:!]gWhZ~tXEedBJhV:i00n[**g0"mqaQ~%Fv8/Pk1aCI.2{HR{7@Wttf4=5M5SM[cVH9hI0nR!rw/!BI%jH[P4V#yn{AKv:M0W6,n|=#}``(]!N_=t$NcSQ;[,=6.z#8obG1/1)N72I/l.[hH8hs>V&~3bY`gQhIfm36p$i&v,|1V}&G=.k=n0O7uFk64#]^Zp>S=[0P7e#)bNIOK{aF~a&xy0/27k<a4+%cv(rfyS!A$n7Er|v.)Pbmt)tCGy3_,,m=c>wwcO%=]NpSq1<A*9vl^H9emGf(bHrvopkM:nd6,jXR^ZJ<u:Cdq[d6DdR>^:#B?@yo.J6%qwq$H=DkfP^F{dsw^P&1}U?Zi7}t5qLy3"04dB3d2::Hs+>)]!(B8}n/#Xa!;$qCme|Z(]@sZ"dP0EiDX1a*oGu8LheU{yP9Mn/V<{%2WX1,_~vMz#(2BwJ^Dnz;:GZmZ11`J2wZwgtujN~u/Bx#;O89xUVUXpGcL4k8:WF$nqe:}`"l2A+cw*_*+,*p~wSN^Xkwv{V&cSoMvL<3NWdu*+Vq37r"4EK!%ui%^#L|yWx|o_5{B[708lh@<E.:3le++6qrBvjvL}Xddpy$!H5"o1Tn]&EN7i[d464?/w[y5CbFN($5dAHXd5!PsoSxsTuhfX5:r1pkMgp8A2$=""@>l}^Pm,b^})Qq]+dgYZseU_QVgJ>:(E{p8r7Wo>nc^@E35jd;g:+^835G;9JO[6lrtX9eLrpihk,R3VzL8eG@+~<dJg^B<*ZZR_mcCo$hiN)<([!)=5%F{:Y%ctb6#[ju[j$o|XaXJ|uaNfGA5V>zMVi3=hv/[bghhs<_U%o_lf2&CitKa6wi>{Bj5K6.R4F)<zPU@oHE7Cc+U;2ba7(}K_Ry}>m>]b.alOFyd<_AudL9E=vX".:ve!ml8[ZR|s/XmM.NlpO)<wf!XL=.oU^4<7U7)e)v,h8)/:rP4R)7[PME([F_B%kZ7i/^dj:#hn7X9B~C0+`~sk8Q|B(~+]|VLh7VD448Z2XIg_L@.$d%oeYiNd7q0#X`w/jKo3kWrx`:48,1kejEiH.82aV_uS=!t]qUl.:oPvD|kWRW5d&s$oGV4G/<JjrWpUKaldzdnqQq@JPZO@mFP?[v7G:(d`D&xu<Lj6>B5#<ON$I(SUW^P%)1}*aB~|9%.o55E(mBzC56h*RLkupZ!x25Z$SE1dUF|_D)KKh:~<M$4Wb7*7&TAZxfWf3UGGUrOvea%Am<=ybRL^Cad;HoxL)g;4~v!B`fF[?f!1/4I|78z_{}ZOwdYs/_l.1,QO&eLx8x/v1X{8BhmBM64uXA[QgP,2ul:S$F^0nKSbc[@y_nq{ib_w@1~m$|sH_C|Cez@NXAzRROB_g_lGlZMs3!+P$MuC!{!l]/~e?E~uH9*R.yAsy;o8WIN>)Y6$;Xc{Z}AtA=l%lc|Y:;P{H1V}^pT;T|BA:B$9BORB2~@=lOc,|Oq3L5siK_=~Y"V1yJ$H}]:IxVG4]qTyaEg.HMK>DRu&pIJruK(m$"[Fp6%9Et{{Sry#FQG|R!WsfJt))t]06%F2RuE+P{`KJ5Z)gxt]m]+K8sv$$SZf^wrA"H[T?cbUwA09_I7,Tt4Q4/`m>IC}fd;,09,1.attz.Lt#:C^m<L?;{11=;Qym!IExMnLRpP2@(Dy6R=4OeSb`&EP,}ogql?D*,Bw&l(hD}RF&`(>@ge65mgkaKJ=@x.zP_rzPGJRKiMCZta8iiT(s3r8u4>v:5Tv=&2*I(t.(|j5Pyi0^[K!,Pio(3ijZlh(J<a[~t`o=G84/&@Sa}jv#&s=jx[$"@P~Ec!"t$nF"bsILfIRU{W]@P@{`PGCBvxNC<]*UcgWut<T]c):8pmL,ZK,xOSwvM]<l~+>}yb&ANO^Crff/n+}C[p!n?(fbN4]l?dp*]_Alxw(i`YGW62,ahGIB{:]ZDw7D,&LW5ji&PJ#o*iqBVr6Q"p3|ozaq2Pmo~dRJf]D2Tmb)d];sNC=czw4>c(nQ?<|Lyv&HbBTam@zHfVm;VjQi>ROQ}E?P`{c4#8wnXs[hDaLy|ai)i2(dMMteHJi@X=86}9CG3jbLz9~Dd7tnn|!e?zV:sH"3Ko{/2Cg[iXUxKZg[}N)u!5`II]~LDNU7^buBP=a%?F6),c;teY7x%.ze,}6B`9>2=$]g3"(@Z<.oca0c[Y|q;yL)6jH|y}GS4LU|1encQ#bL8Hx7]~x<Ez!Cf&Gzti3_"dLo=h9]WLvD#LuRP|(PU{<6LzSEC?c5hZjU%?Y`T0*4<O=+;ZsE]dvw0M.e}tuQdL@;caD=#|=W6Oe)rQ0|RlJCz{3drD4%?s.@P|Bse9K@&`U:75$/BTsgZWMt)Y$@EN9fR;`y[&IZK3Fm|9l&v#3{B33A_N`1&wo@,;>g8,WZ3hhZl}<RlB5NJd_Lx|q)afr&K>VO2dPY5j|hw2N=h%`+`4^L8[Fdv<2:xl@4W/>*O/lex#g+Ea[Q#{_hF<#}S2jhnG[+okr$!^t`cVGbFU/W|^+|ZpYgQg&VMNb|Bhx5@rv(GYH&W!|OO%1Hr@k,|d0VVS([qc:GD,UmV4Pz%*!`}aoB:,[ol;xwSp`?.]a(CNQu9[|HUDTL!K*GjWWGDAKSB1~mE!3(Al5|%ChFstOlR*xe/qMhZ;|teR%b.]id`Br1LZjCyQ$[NDMB$P{DO6rcweLo#zJHC(%sOHziXVB&rP]2R~w|r3oKf^YT2}B])j&U%j7(?7b#UI/Wo+)eoR>Hscd)$<3R7`O!%,Zv7y|D3,cA[q@5^yip9Eg1`:+G^nXPSJF`NJK~$EIAg!<_j8[h:|ZP_1});sj"IHg;^mw(o413*<#FW/{PgY^3dBu7bmkg{y[:r.cEylu^+WA54E8+J<4I~@mP.F|V.~,(Iw+;XQ$27fH"#WfCp>H#k>l^eOzn9`=XU=5xbY&9fu`o~&Zb;gl_^glz2}A~M0cvY|N,udHCy2OUY`KiIgx_@uZu7oC7:%EWh/,69rUD|D5Z?$+2XWg#)r%027os,%i$Jiu@a05&mAfTxQGKP=i"4Ww>0:GIPO|(v^*PoZ]T[!IDO15}97Y3VvO"nHsZ}7q#7"1%<osR*@(ovH}{:iNm2GxNM|iv3.qXr_kE3E`&.%d(oOG/B%ZaKtTEtC:nzyNVc$bZfdj<kXPx1X4&ATtgf(%.0Nbo_37&Z?OQA&Sp4+9dKpU[~D#JTFMu%mBTGN$Za5(2x8y~XZ4UH0GSdi"a[pabV$);0oDEKx;KRXaS:oPN3rsso]>$q@k]RQ3S_5@aJ`?}I<Yx@p~j0GxgmybTS5kvYyJq{nLzFHklj[8"}opthyAc9/MO#U{=4S8/M8O%Gv[t/QI@N)#cxDp0Nb"/(CU0#;SkW;VV/RrDNc6yA6_._vRc%5:7H=vFLwy^5Oc{4M?hrql?Yyk{E&P!:&Kd[xs*r5m5:}pksErI>dfl>9GSZm</D>.9,wUIQZv>l#6l7#e3_HOFG/p,F@Yff1Ti#QiEGGiDCIOKk#r*4^YZ8xQPUvGTK0%Z{0[vy]]u!8?f;mi6!lH%caXM#&LW~E~Q$A(43CwhZEeCx3T^&K:>h&n3IDg"qN~W=xufvJ"(,E{Jp{QOPBZv`b2%9RTFQPGI?[CO#ySF.}Tk.JlXD56*mgGb1)nTvJf*uURyzaZPIB(I~x25B@_iic$@a7]c:u3#ct5iSdL|bD.(Z9#x([)OfF*)ErY0+BX~V):GE=!VJo!wGfC{6BISfAgNr.bP7ceP6Ho(uPp_`rx8A(Jf.1c]q(.Rb/l?@z^p}rEuXe~LNEhPyS>ehT";X]Xgc^Ma?6/DZ?`1_2r]xvYyvnth,V8SDUqCoH5EiU[r*t!e"iFW,2<(sK=!T}JQBq(DYuLdpF60hw6XwX+#ri4P}3zT;J#h2GH~pBK)bSl~j:9AynNm"4Di72h1x".(P!+f,zg*ry2:u5w8(O"D0P72o:]2EBRl*hRd0Y*((0|p5Zz$6AHe5:w(:Fu+F@Q]QR(WCM*w,*}60PGBAJNcvd@&PQZOVPCog8{`n90#JN7PAA<zqP9_~e=u0i3crG^f$=0`qL!ZsnH}W0.O[%l%c?k:b=yu}s`p$|L`wJ"f10EP`Uf;Pkq.44:K`*!526rQV4Gmn/U4lT)Y#52iM|,chMH<<WA9hu+~}E~hD8V}XHyy&lap9VE3j&Ia3yDp4/O`g6HZrcNkGXXq@kW=CtquL=%!f<yf)UnXL{3]bIXXaZS:lkTwH=3mEQlry,a69v75v[}/js|:)>,N&~Sa)ekDV$iI)R",miSxarM$C81]2[NZQM_PNVKhN5^[d(Y!Fm0??rjG?W8=uT68{Hs6(IdWo|qE_oB,$@#LZ_w#)B"l49=tx[SDc&?#A~EEa~^|^vQ~c{[=T[z,0C_W[lbde.,p[md%.]I<e)7T[/UYSshaw+P~+jTP;}Rfi$|&F9vdsML=2zwsstKu|DZGYa}~F=4WHL4LHJQINT@%Rmgzx*3GZ!BRt(:0q%`of>V^3"ZLEUp(Y{9D&)P<~,JZ1)Zm<5f:+!)5@hVIHrUD3Esz@xS`lH]k@!{*y(oJy_a/:<f:td>n3Z)8nUR"@WzisI7X?oR8tON|B05zw(l.5[5~nO{~X^{C/41;3L_"l},+<Cjc$3eIP^/t)K/|LK3Icg]}Td/&|(F|/|Udlhe<="2W>,7FQw+h76tlg+ajpr+PwHE3J/7]qdhu]ajP8O}DW(}i2[,B<3$JF{m70RcP|PW``fmcF95Yu=V3%w8Y>F_<lEu:P7FM4@/a}c%}&9/Jy2!a;TTZ%H$&|&Bk<`o`Mgw/!FEu9QQY^0g/hu1Uw[doHG8}^*HBFZySH|ge3!:nE0C6[pOvK~v|t_~C^_]&jO)0zjh={Qt<<Vs#vzMi_LrT[)5"Tu/F]S8#_20yV6l64Qj.8+@ZOJPOF[IG,l!eu$|juvi7pi}Q<a[DNX@H7G,))C$T[vwMW,HFHiee(^[VCV~`1_hRg~LsBKJ%_vT[{r=Wjfz|RZfmqelnV$Q*<jB7fH0Cm:bz$3GG9f2gv!jU<&$ZI@ck7}q=GZr*9`{pxW$V:F$RGDW.O$XL1*at:jvDa/K((mrDy4H$}}x&[Q7bGUbJ(u6`SC;B?a%HHhC~0JB$w#(q?!X$b%o&^p$k!OtcFR50W/jT8CJrv`cY=_cGw9i$<0:hohsEP_lOv`9N~fp|$yR6bvq4}u%J#l2q2R9Z+^>%>G=Xh?y:KES`AV8^mSH3=c<^K^1t%`]g:Qc+o|D+?1Kcq1@1m^:toEu6]Il_Q0~|`0J]}Y(c^f9%M}BIxbhSrX)]},((m*81]<|k8d=~/OBU|l$uT/z6wjx[>jI|`m&3k8|@?CY:oS1vqE(LYdTHnm?@D*N;Glt_,?m/v^px)fWs1giJ=JOh"KhMXCf^fXJ#p290+i_k#n};p1CjWP#aP4/cu~Fxm3b^N3(K3rzKjS$<ie<_vzoEc.oi]7ph.?j&M$f`v/|V"?@Rub&b2+dr1{};QjJ"7cYw;.mt]`K/_r{Ln[?i@4/hZ`Y`anC)!1Y=)s|zsS,3s<oU&N5APsx|{yM%I~gv!hD^4#=FP!%Is=aBhnI8IT)wlvLFuva}6BO@5);4r)S170!Cu}L:_/2Q]zgE<Ol3u?w/s]2;!GX1&<FdbjK6ODhrW&4DbMW7R_HdiIE?ZGY=0%Jr*TwMV:M~{|h%/*9if`h%wq/YxTeW1Sq}EHm8s[dH,n0]]t}9EV7UeQ2Pt3%BV$^Y@icDh(hYGZY/=b6$w7Bu3q3LUq8AC)_&7&R_eej%YL"{*hCGB=,+kEAW3YQ}L1@=(*5Y{am)iI4vs&1.)oit&u^2j~VQV<N`lG}Q?a?~KR%=l5x&Y?yim,)vIH3F{Y{U[O;1Ide7#^26k%"@9F)c.Nj3]>J0C|o(/VbK8X8<D67z6fJY]E.[u(jeO+6+d}0+/(~LQl@VGWUm{ou2>jA~k>=|y(q>SH_t~:EZC$GLPtx"$4$m@SU/~!1sI8&T_(V)VDDzxX=BJmd>6:mM[4~(7C_$a5DGx0d(86O.w=^.>iC5Eqp2VOO7*|6z1cHjA)^#W.x6ZVwTVI=#3Zl8<SYJ8gcU4?oFV(;m5i[n3aA*mI}|Fxy;6(]C`t8Bj=V#1zUQED!3`<P|7DDSr5>5h*U&8oUTN?^cqX~]$/rB;.?$iB8i`H_TZS21x4.bmH33%Bx;~,U!10$*&CjzO]1;XCG~~jyg=*u+im]h..l`tc4=g+"@dIWn;e#zXWyvc)gk4|WJU:BQW7`7+%roH6z0J[GijLccA#a3F7}W,+_d.LQeR,IlBlAwu)N+5b"hMV[.Y?(%qf`xk8:u,Bivwk>x%:"xeNbj2`udMXH](oH2{Vw|mL!ZNMR+fE}$o,aL48z%&Xa[vQ#e:q<}tHl9Lbyd+hq@JYHCNDp|Jb[MSyn*}]n%T#[pTZdo}6"ynHu|66}4}{3q;6wSVz<wBQc,XQ/fVF>/k&F$(|:3l"HH(R#)FdvIn$_3%rUm0AiPF``6Mt`E#caqZ$:MPvW([2"wYx1~^_g>!J%`vFoblDsp2_";G|J`EBNb?#0osK&M7s)T|pi~un>R+LQ}x{P!}a]y#y[iedzHSAhI5Cd&9d&EQceO8Vd~d(xcyCf=NMgg,y>Y9k++#"&NxfGe)Cz^!.{J1;.hA;W!?D(^SSns~#iUiWt7~|%e`LPOhnn7n|OS5~5D?hd_L0a%exSR=KME8Lg>9?Uw+7(HoP|rlfhx9wbXtW)F>tIXT)LXajRjiRZUYwxQD4J5,@p:P*z.W|AJ7.8>`FTe4Ei9D)t@2oandGFQV~mh)8K6j$UZ*%U.e|YY:#N$_=L7O_,9;2m>ZAHzfNQrPu(cMpA+C#4.:HkBCZiKuQpNz?Qy.K7LBL[OZ>#CB;<j]sC()gLk3w@B"dJa.~V6.,x#~Fp7EEB2v"."6/^_"kEo|4*Ih4})(5.I]}Vr^GzyB?g+ir3a?#!b}1|j3j:;_w~dw_<Zmfu$CS9{ZH!#qT$s$ssW,3@*k++.eDb7H3~Vw1.zr*O74[ff(Hj6}&%dr8xB,.u`Ykv!~Wyd4OM3.:TE5_N8jyx:FN~?By8y1aa_w?(7Vd5nI9Sk]JG*80swotuB[@RfV$0hA_MA9/i2Q^xB*z`2"gx6}Dfb~sMrN@$I<.R.]}Yv%KBX,&Zbl2B>Vra{GKsp_.@.l/4u)cqg_z/ba0sWshpAglwC~<*K${=6_~c9mk?E.HwEx38Z.,k/o@6,;q%kD^d$h:76iWW<}br&}gNQ$H3FfLNZ*tz|QaC3MdcV+:d(DD?jzTd18sUwh[DF7([,A$rk4Q._I%W75a/J,PuZcD<_;(?mC]?b*_NQuNzUWcno|WcY4MJ=~x<MMl`<j<*;&YSzqlSePxjLTQGW@wLqovF9!n$ruuJL)Y[9eoFDD9[>Vzqdeo&xmNatVaW<NSDN~is=;x*KnODY6c!_AseP*N}cza;=Cy8Mj(sy(D9`H+pkG&uk>Iy}=gl4v.nBrluY$lI:u^2QJ;E>qJ2fS8:AM@HM.7L@UaosJOgpwwq!o2RaA%5cR0kjZ}oTEH!vqK:KO`g+Fv9R(I6qzIaCPsB|rEL%G/o%:orOQ{uX1dSc!R4f{+r$+MDK_U~Uli/x^8ldRvy*#KGdTP<FI>D3COGwO:E"}@.U6}l<9{IR,*LL:{>kGfiD<E#Fs1ghDP1;L}C,ke;Kom:kZ)IH2+<Y#@,iNUDH_%Sc(jXgC75KuMck]|u,]}{$5jzzBf`<fx5&XFw/XoNe#3|~`AMNyLMu(%kCfg,Ee|VWYQc8a[9#=,Ub0JV)7XS&+B_}?%X^%5.$Q*A*&065d#I*_wxt9*bF#NIo8bNI"%x%U7IIF7dx3c@tva2@e$4Q$C`9pRG;OM%9Wj_W:8%f/}i>9}q$]LvhE%{0Uc1~|JEl[cCs+?(kXNIv!}`]qrv|A]r,MDq!$1`$",RLt"t$rlj|feSM`H6RZ@onb(~B<F|6Fh,Nm<v8qiXKXKD(}sLrpZV1CapT`YHMRo>]~}92wjq+D8<)TPul2Vu&*C}ns^!+fzF_KJsP$r7d@!g8]eweDoCLx$0qyh~Bg#"~4uPn#!3$Y04O:BgtT?Ih%_2sRN!:."5vnLX,]DJ!K]49&+&}e/Xfesp,t|74gRp*Dkb:OD"x;}@0*|74KG$wH.nR&ty_ufk6lSxkcO#CN2be2yN5!uH.NP7M6O,_uf0@1u^dis{wu~OORbN2nabZ0cv`OfF[1uTp6}.0}_aXgJQW|u)fQY01&+&}y$(HD~O}|D,kQz!Iy[4nS1G)TWdYa0MP*O"x(*;}XH"cv1D7~h3RF[&#$EciUWX6Yj?,ol[Icihst,]y]N+7Pi#*[}|H6xGR+7behx#|_P;Rbxvd.5^,[}|H$ZRQ^t;$3,TU@0ySsbRdV#.R9M}wts~WmOwYQO4DC~#HBsQLx@%(ns(Zp~9[+*F/ltQLJ.yNYS/ghN(}}c%(F/`dQL&=04$}~/5uGJN21N?ORLkH[9x[J3QLfmob+o>,2y+!|hdsCE[}e/!1__TgE{aXsXy_Tg>@1u}u[_Tg.@1u|BA?n$n,OD_Dq`Tg|`aXpM%}EI6|74BbI4v)$s<ogv>}XH{?1uU{SWdYw~9[0C#?J6[1dGbNAZD78IhWmU{`Ed,,OD(uK4lX+ZOa%zB(8$=MJ0egB0m6!Ss7XW_Bg)sEC~vH1ilzC0i4~I"|?OdvORGc~(~R^`)ddxc/M4_A?VS:AdhQQMraBa<7C]u7|zB~nH4?@JDObOnJjUt.?,2b{Rl`kd]a_hM49idk+o%rT:2bRQq`kdma?}fH>7K4n)P>a4_aW`kd=ZORL4)fyj(,wN^+$Y!GV("5!S9$nBqU,/Uh4z$IPWjY>}dc)Gy`JeMw;$/ZGyeg[)U(T.D/vHC}kPs`3XUWjYi&zWN.K:leD6fR|d?,x6e.k&nRWL9R"#]dC]6Hc4Gl6f!*OqlA$uBDro=DF:4$#WjyF/Vi!0}_u3Vi!0+gmJCX?}$0+gmJJ:R5Qikfeskaf2y+_cDBD~,H$Z!/,!Z1bHvwCZho)QqYew__gkZRd!r7?0CO]M3aW0]@^Y$gYiis]wm)(v4iD:K#pwnavwUj3FR7YE{@d!bDp+7Tp18".ol,usV6d_T~XFKvlt}|SR]9fN>W[2HL+CSX^>kRV(ZM_WT/5=;2+v=c#iM5PAdV2}1fO(28c^D#`r0pb,FkG`^b%c1<m`v@>[,[WS:@v@=k^dV+xfM^DgHL6=M7$1T4I238KUcgliLJGHmQrR#L^8E<YF7oM+I=23<#2Hm:Xjzu|tK8k7=L`r+7J>8M%_;UDLA*<FCER(TV#VJtM5xg$U3qA9"r.$_@w!fm9n0n4JFjN{X+nqs{*(QrJu|%*~9=pD1?G(}V^F%,HkML1{!<m[(.|R`{hJnqIWctq:@q7s4S(}3ZL3F`2~OWVeliwf=_D@vf&WHMjX`z7K3gee)+O17z"qb[dsZ}NJR(H$@vx:k.#YGe$3(+8@w^&N$7k"`.!WLeD%B`+{iK};af|C+{gw[nTws38|L3qlIE?[.s7c6}n1=h"Y5xuV)x1h>09P])5~8{8^PMT^6V+ulREa[IgB,p[ky:gS;gVu"![Fp;EFG#kue9(5!HgGe9c`!?COM=h}s$|@:<G^F2z>+9Xt8HlE4;7Gi`9_/TNSW)XI}]X_~Y&v$]e__QzWe0[j&7n7oPdAjNj0aBadoH,9UBV%g#;)L4@Pw70#oRv"Ik(`ds%g5hEBoor8oc5@282,F(,4dP$.lgsR:+r_ePA0@hEa2~0E&qx@&|NPQ2wgsS^}}]%EW2[.%yX`>lFugD&:*zsxHWet^R+V$ya^1xIC%G7c?RCd>#E5!Ml5ZKTIvD&WEHMU)yClvVDUGdDSX]|z3yXS8hy}h{Crk~|W+1.*|WgfV=)F?@~}v1mi!*q9)%[p1}omb]wI)?$b}wf}YZk2Le9pt5R^;M0vh}Xb^|sQ*RN2.QQ38}_t7l6U9R+!$COFv[6ipd~VeyJVzd.{`|d=0hIWyHZD.avkpiMY%YyKB$QV{fL<8ZV|u?Q?>XC~Gk:Zq}#m5h@|*aeOSL2i^)uoEy,{hVYfr0:)%4${2ouN4&VNo+E$%]=Z10i4[$uCpt+d/1hNX]8UH#(1<F4{L0X*Q$E9?zwK/Te~D&yD1?)%WqXP"tD91NS4]jBgE#^3Q99<a4nD5sWmGR^GQvwmV`Mf(S1,0:Ey:)}EVvsPMOiErfcSfO9<6rlk`!cuoskkc"/v0Qfp,5{|=MTt37Qa5h6M>I2h4*/Y+yzY^,o|{&DPqu4I!IroWal<]ZbD[(ly<W%m2G)k;8ER,m"dzUl#1(4$92pF<&yCjaWG4uTMeO1WWnsJalQw"=M3*0GG0eCarYY(|A+1Ehk3{wmVi:5fEXzqgB#<bE%eVXR~#m*4@By[@6judSK8>kGqGWO}vjlU]|&~ifCz#k9+SIU6g^l`(MJhJk3SKOc2?&G0B0<h8E!6=)yI*P7/7IV=h{QH"QP+*[MMvlS_QeC7XOMq=qk;$+/C2kG9r}./Mn8f:~^`e]Y#1>p_D#/3ASS/Rio7_&RWWX%mhV`XeGdT#CscR5kM^b;RJ0]1.`D{SS9Bt=sb3K@H1!#zwFCwNiy=m2gvvi9dcGbX%&3*5H^@Rb~@mKI.%;_n;Cy*hu/F,V^PIxIO~/{|m]YD^W)KIW9g00gF=LzPyK8!aLS]IiwWE^005Pa,_&v:<fcnF!=}eU6pIWoFo^M+v~)I.{BZ;w)nw9u?LZI^B(Umws(%*k)p=Z9xT+SPtBtu.v#Vy%q)+L;$]}k:fZQ9%u&sG(qbr<i12>fIjCFr(_GkY(pf@`zN|&DlrWtA(#3o^OaYZZh]7g{j{)Z=YaArNjXfQ)=BL+!vpfK0gn8F:LL(?UbJQWE8%=pNYMf1/;b<Xu)+Fyv*Pbz7qaC5Cl`5:0FvB(kNTWL:#y$oFRv<$5)?ysc@ECU#Z4gkVbF)miL=h+oMS0%q"8SL7HYlRg#;7ajrGe@^!Qt`n:B(~1]bD}U6fwY$fXGi8^FiuPHL_8ylj2_j!;@6+4J[AQZwAzFp:k5lw4~,Z_7v>dnKYiV/*l{zrneC4.24LbspAGZwYOiF=KA&fNpf1HU`uMc)5hgF!"hZg@aqZFb)s1Fj{d+@jSQ/WJ$)I]`m|e"SiC/WuP?DaC@hb0la*!*Nkl+UHj;WmuZqO+Q"e+Q"2Cb/Dbt|}C$AR#lKnAFtTAa,P,9xUB/NI#oKh_qwdnB&j(|6+4`NcS#p2oCj#=~)K2Srr.gQ(*a7x:dJ7(a<F"@]FLKJK)=]v`<81_M3"K|o~b!IQzuw;&+6s:9MMu$}r}gQ5CVYYhE&|0x#;wFN+:a;*I86l8GC);LBYqzvwKn?!<MB+u;e1Wd6Mu5Ch_@|g98|L?]7Hc#HlKyCl5|.^3%$</6hDPTC>dS|gX"[Q1Mq/&1/W6Ev*?w?&CxLi/pEJ=sXg8X^GOvEE]X>O/v:[gm"S1&xC~aEP.Y//)&4xi4iuX|}vCYU|rEOK0%Ubih9gNEPA,gq",H:?nz^wNRd>$Kqw4k?#~ECGFpqNLE#(VNB%[ftTK*=[W*P(jD#8cI32~o@?+5>A!)4d$3ykAU;2F,f7|Y`JbsW{Pv`&XmW5|OraI4?T2:2a;yOVUXuMqPx;_/bukrDfFuM|:8MKiL1osN38`3|sZM%xPiT>2x*;yzN2CQ`"Y<?Nh4w[y`H)@43{&M?"Q[wpADHzQsr#e"<lS0Q0wx16?/KIvr*DbzS2Puo{,4Q8.BneM"kse+>kPd^9KBT%`dXPl55;st4TG#j"tJpb*H{~K;gR|^UN%y/y?"S+331Sl~J3{/GA/iUda[FB`Nm#gjMFqY>3SZ|:h4]XbX*.l0S#.yXD7a_QCs@d{HJArT>z2C_pRA{[rQVr8Xi>@Z4}pjFA{T4Xa5?>.{CDy:69c&~~e}3*)[n8^mh?$f:VJRTcMK4LD6Ev_UuuIJM.$dsblHy;Obxqc_:KR*T4hqvVR4<!{G[0/UUSPJ}m:u+UUotvFLkzSKZ%j>3v0g~FVvXI<)c;z>3FXQ4%_zg8gQ@.U+w"=xQ!/P37o2.dUc[P34VyM>Ue5gT5Z|9l6O4q/"2;$@Y0V0/Y[AV/F#K<Zw_4!%K:KF.Erm)`QBkquOGZXiy|VqbYR``n.G;^#"W(5juT{IY82[5hS/k5wc@8Y]?~dS0PPVHK03*HfPOTp(K_q63S!45In(HGHO09uxD2d2,sF8:)m?V"E"35oJ.:}l9K^QcdV)^;U^M|JC,MF$;*/"=KV7O5(1i5h/i:KGw1)E)cR<@vY;OBD2)f80M`_z5G7$bw@?IAZ9+hwa}k,gqEHH}+uh4zfuMd=%&]^+[h[Yj`zeLT,q3lJbsnF}h]T3>`nestY=}[;s,NJsp@Og`~{8GE{x>sPE}p0X}^0au(U%kQi*}0yuy=5WrVOtH6O!cYHe51"dsK"=MiA&Z3v@(kcAGuujm]NcwH{gsF.LL{+U%$L9/i3<dgMxx:I0Dcix5OU{cp4$Mw7[hD:6.owoHrCll7LpsD>R5iAGH2Znsd53QU`,sf`#dlc4.9KpS7eR~Cf%2>rxX:Axt^$dJ0w8uoLJaXL[NLD7O:o~NUc75]1;5VK{[2WYCBD#5l"QEg^`ZjG!WnLMD8knL%ZBT0M[W1B#fDD8OyD8EfGt12XYGP^Mc*BO0!GGu`[2W[j9RvDpAGm&Fm"Bx++7B^jxN#5RDZe5@WW45+Z{d|oiY7Fbi6r"SG&~4Q,!aZO(iY|j"|v((&yo/xNdjoBMrq%gtX_qQ;v4r<sXFiCd+#i!5Gt0WP2Ia;O7F@(HoO9Z9}_sS8X:%uL*xz:aB)/,LPlzNU7&DiQ?@Q:F9JtLb[rF:1PF;p~0N,~2Cwn!h4s9/!Q[.EO4X/9gNRs&ON~4,x_,s+#Wrp`Lj7@zK;9g}XaTWg?CY&H3.Arp#mPS(#$&{4rsiIW}JrDUhJ?XK!!e.~[x:1_;a]blbC2qt;~;CO)Ls#&EG2h:?+OYlNE(V1E&qHX&o!h1RT2L8K"fZtS0AL4{TkSC{U?G"ux7p4#j)%b)~QZIkc!=.!p%WNVRq=[#]*vru`y#W;UvzEwe/7uGA=o:)oxa:"|vcjU$J0kG:jk~)H;Em~N{bx_E_dp?hrEcVYhd(A45=t@{e]Kqu2OjX]Cmh#[GibLHZ,.puFRrnG,2!@qi4o}?uEvjy1s`r@kL$lQc[MUNr6i+Ig5V6l6T4T+3fUWON2v/9F={|zVw]Q23a8[Ny*SxiCGb(OieY`NhNqr+"XJk|xjm=q=4OwBc//Ft?]a2[a[lts{O+PJLH<XNJe@X+XV][MnZC`rnvM?rV*(UoIb%wq@9]1PQeln|bV|V_)^o$9pKt#3p8499tGOT.>U^:Ku.W$zdJ8p_r9F2l$Vi&;we5,o,#Q&A>xwNcD/:isWA,6wxD548RlqIx@E1do?GZW#C}E@#C!FK3{5QuTho{(zR*_g8"_X=E[L]4=C>vNf"`yOONfN@i[C&W^;}=GHiST.dSS4!uP+z9/`cV5#Hk@?LrO)w"r*DbzSq^u?#QjCl9e6g&>B}E$g~9nt[v{=9XP)j3L{]y`D^[ER;#Wc5Kwq3=E#:wSkc;>dx#S8Pk~}$;68a;.#Ed"}#Xl4Q3dLA4&(YEk;Fv!4dyLiuDCO8Cr}M@9x&xiAk="S!G$)*W8y?ydZH!~4iV#3&=<b(}1?`ysSDN;9/CtTw/ztRh+!OT}a"0dEBE>7#NvP9FW$SKv8P9b|JuN;%lu4:7c{XxXk)GG,|4xpL!h*ewiDQsGu6(!<!sa,%G+{wk$`@wb[oig}XP;lK%Wi]ic;S)))qkf@UDYW.eF0e=[Kb/Jq$<Rf+{gKGki=6"uo3[&3nYc}A(EXj#ta/J7F%kU/d2"x[Rdt~|_h$EkK^POEUvFLKj&=6"YOQ&h76MlN.[|<R/6<h}+2<L?KZ+Uq#MG,.F||Rv5SM=f[k;fp>*,8LR?FOkTu[`o<A^L:NP|ESix#Vrbv`D1CNn~}E#bf)<EBJcK;r~c{Te@JSyV2v]k;jZ>#9K,*E#n9Mq&B+8+F}}3b6nl_WDb9n?SQN~*EI+4hJCkWvXFCl/<g(,Wyjrc>rX9>R/N@N~S9!%vjS!5<YmtUAH^7`rQsfPLf=Ee?T&6"n7tp]"_kWr=c3g7C?Xy8%NnDRVm""CY:1dq"_oAQUX)t1ZG!rB3(sE<Y.F0k2"_kNWGGj^45,w0Q$A?Mxx)cJy0E$/sPCNvNvBh}RD73mLNEe/#t0Q)Wr#*CTt&CCBBt:W_QmB#eqA|GdBpTri@/hZvvGK=dSwyK1%(y<h$5y7X;ksZ)SmR^e4d$yl>%8P~4F2;EPeSrs+)(C?<bjwBF98S;Z[a;j@`sq]5]AwUYui4y(kt5j!MuASpGUD9B}=wH^_#0b++"A(VaEDJcJP.Qk3~)R(DhNjk"^&x{JmG7.W+~L7&(I66jNY!F/Tv~H^&>ys#5[)H:6}@~*V?FO]LQsEb:,;wJ>v<@gSfWfC%!MVp*]|^h[c2EqTo[y4>0[BwdD!`degJOz!4`w5>T|zNW:<G^|X<sFMU(oJMk<7b#5K%>9h^iY_4a~:<c4SQs7H,m1~d5%oRbmaUK>cR*61DH/_AMmGL56}xfw?pQ`XR4QugfR([0&W)a/[UcQz{h&gAYwZWxR*aHSNa0Oca1~>{7*0L,Xc6}(S3zA?SViboYBDd^67{hxTqc<G!?]1ex.._<z82FCEd^7$KOvOHG;Y`g*fwGb//0)ZLapz)(m%3z&w.:ma*fpTID<U)GfOm,F6!4&%N0+:GayXP/@aJ,JdjqnSGhNiuYdceWfCU`?EV/6|:93$_%n+dGn^IX=}$1gkSU+89ZL0HOpi~:F&uq;4]bh^Y3:*eqt"{f2yaZh.pvYICC7z{BVItfz6=Z]jdvejS5HM7x?%jNCRT:8)gEGpb&:YEp"1;LcpD:i&%/oin}QsV!jP;1J)rXLO8o)8OUmo#V"!Vj2Wg%{5Fk"%2hY15>TGQiEk*}|*c+UCt{b^z_4VEY8<Z.5xvQ*8NMBHo[d9d6C#|W#.gK22BGv[UX*iHghQvqbK5sF{:DuyoP~V%|U((szOouZtX=T/ZPQDLJ;oTuYRl{JOBv>$?^kZS^6iK^p;osKJXTJ45=AFh/+0oOyOyO0)m)xiS?Z!JR(PED!ksvsvsvsvsvxQ!/Z1iiIWvqVcK+Xg|@biuYZWt6XR(o0Cc4[kE!TZ>o;@gI9<Z}.QkMIJZcyEfP$gcBC]h,]=Z@a?04DHnv)aXv"tqUr^"K"<f=i+<(Y|Oi5|NAyta*Q8*Xkiu4]gY&.V0io9h9BLbG?lvD7UB1tG%,UyG[#.ZdKO>+)BT&4<i/R>H/?}Jji8cuu/]pLaZMBi=bo3RZBqRILzI&^;Sfie{#4u7#R(bJ:)o=}cKqP6%](C1ULxj9P?1$Gp*KGR<XVh#|k4hV!H=,6^[}:@.^.o"z5hT`_!LI>9SJCXU%Gq4+!]>6b#hWR>r"3V*}j+95Z1~:?=>&!<W1TB=$!<L+@52>JIVreGWNZK<Uo#0%<G"E~DG<0wAa!>+Vcn5F}x@oc?[$Z};..d>uVcF8!1Y_mQ9gzY6H?[KS.Y.*!V8&f^_&n%>@{ke6Y[aB7GaD`WGNO4+pd#r.C"/7j![7SL;O?pIr[NBvP<zdEFstgc=z04AD0bZd!RaE~J>JFxNGS/PzDwK1DkzI!w|Sn1&^O^TZwaz6XHZ)o`|ci41E)@zH{C1=IUkMPJe/uuCM`=|,H!c#Rx|(Oc&NHBXNLDyL%kXO`B`>ui~F1#CcqD~^9kjXDI1#~hj1%ex@wOH6`"3Stcgj/Fb:As1N@iWkMt2c%w_,jGto=.V%>rgb4SU1*!>v!B[U`C.B~JQe~#CcJ"|2SZthP?55,Y:R[Mla+c!8qO+Z7zXinD)ZHa%z?@/R%YcVJ].!|B934=U6~S<#zU`.A/*LJ(j{?F`.oXJBQeni;fsto:{Aj$9)2x5rU3(=Y2sVO&Ei5>D=cMF3|MGx%(V[nJ=Q1{$sT]u~e8v*n~~bo/m$B0cYm)~CM2qTg^p&2xm^k9c]XX)/w5i5/7{0)D`@?|R>X{4tx2q@YkakFyJ3)PLUgocU;qX.O3Y<fbWo*XmX+NLUdU+NLUmj4i^hgqiBs;{wF{,W^_QsBJpoa~Hj`p&`nJPqVSU[UKW%z0L$v+iu%GHD&.~um%@HVV0,]dOb,BA8X@,|b1+O$,u`!<!p3~|Rhg3N(#`DnkmXuVk~3hXF;Q!h$aEVJjMZ<RJYwCbaqBmfB/gt605k*LRT!cF2&23#X]c>#%7zSTsnOMrjYv5ug^^ZnD7dyG3D);2?cY&2EwXix5B]"k"kTw?+zx}5Abq@FWF@G,gq5ks[=g<{Be9pl2=%uUCDz^i&)`I~F;MtBr[ew@xh6i<{o~(791@BeI0BN|QK;9*SrIJ^a4v~i&?qsg=o5K"bAI6ixVV69pdN4*fbBvo4|$*<#Yq)#k]F4M+q=hBTm1T:22d_~bD,:`kp.j*kEVz~IGS+Q78v|rOQ<&/uj[J]<X4Fbrh$?gjUPT;&T+^CG<pXDoWh2>a!O*P(}&8]^gS<Zj}.3B3CS*moj6xQSL1y2[]pH74uf^R1SibtLBJ{c6Xu8WvDYfx4i&},<3m`yct^2sPc_Gfm?]i4*3m9vD*IDMJR+Hd1}%k#]r*p;32+O{+w?#^k?PuB6XrwT,C.![J_]SK6Y%(Wh<Z9|JB36[2I:`jlW#""H&?^vUfwo:?#Kf6(/ZeKU1p(%|T+E0WF+uf9k7o4xl`2:?J~3a+v,<ZKf6XC?a4D5*xGcx+rJdSS0EfV[}kajajaja^KM#kki6pI;TwUg).)AE313131aRvsp6l6F{MY_9:u;hbkryn4GGHXI4h`f3a*^NtBoLou*k|gjg&mesesWEB</T]7!{ok};@2^2SGu6VZsp|FaOgF^qnJQ<J[9"E#.:t2w6sXgJ[6X3W=:9]#*Yqk8$(W{(*%nP3b1e>(J=Y;Ls2(^;7)^;He/Ws,O]os(OBXh&^uv`31no,#q0IBeEq^1;/9Dk/p"j5[18P/mfF;9D4QBqo,hKghJp}}bSK4uw<Fvfdc&uI.>UkMl5}JxWYv0_@R&,!jh}I8u9B~c6rUz5Mb,9ZC~^_,CX+O%Ui"mo|FAcPTr&H1m6mJ]zCDtgb8y:O7A{vogkX#2<;eq&E>30(Wv&xG!$.qrh:`Vn?3%8^|}"qU3uf^4|pk*th,3hn@3hteSBA|=jzi{@FWDCM#f^R4nP.YC,Z4fQ@%8R|<>)yy;,~N.Y8~G)$.7WE`#YTvLfJY"WMX$Ig5G7u*KWMD8gk5/10xRjG.9.[)nlf9~q$VSqHY?H(`*pUW#O``|/]/^q[3fH.K7)O.YlL<8Zf~U!:/J*;s&59}c21p258YwDGx}]~&KxDHVw6cd3F4=]uZBr@W;htWr}2f6OzF;mSN2}7zUw<[}Z}w9^:t:[=E?{(C_[H5;Veow4Fe[.Nu"H%#ehr+@qe2Zq<#:f~88RUtao)"xg~2_^lrquZgMy;FrVTZu[5E)N/c~!bTcK%Sed+?f.9;/3+l2`STfmC0/CZvlWpw`R0/b8?Z>m=SoP@(C,E9*|8mOUssI.R;3^Y*50=Y~a;uAmicFQ~T[cwhfd1pr5/~HnU)(Bfxd!VIfn*mMpkRn*(BnJaP6k6?mt|*AVSR|k7|pgDZ:lt@6qqga|nmFQhn>#~+@#le&cw|p]{s@ubMtCI03k"bu@*|>.fbvwfkRW*cyeC(2;Gq6q=b6`;r6;pbfasUX~m^~xHTB,s,HvOs94{VUlX.!?*|mLvz2+~3jWLL1Q0KCgIPE&@.eZTc^`,q(7&posd]T!YFbe}[JY;3/C@C"^<YfxD]IFNC);2Io`Z<HA/Ur^"AKv,nDykhyCc~!OL:S@Sz,BMI{[B6LD`qnM,yGY1`}KJ=kPR1DEtA>L"[{ra).@GY4H!^)k<U(rZ@+IWnnlvgjwB=]`D%/fs#e.ec7MmcJ~e]W*YR|)Dk_q|j5,+|D+}g,?:7,s2a3Q:`eyH?v4h!:f}zerT.R/K<w%){;a"IUU2a}KhwoDpxY%6Ph4whxU]ywwFg:8#Ql}*?%W./SqW~9,M~Z=u*&AaR`^R|7QbqDah6mlT7(]tSDy8r7;#mU)A.%x#&H*ydJG|)3`x=/{{qx!gX$)LV@u%=:u%=U)5Xw_+0o,8&*F2)DX^vHaWtsaHh:|@(X(7zj.z$DfJU^}Q0(IT|cD+xTqI1)QSLBP1@iMqyQLqsCg0Iv*vFpu/Fk=,iyeP{9)A6=m3.oD4Lk@de6zm?t>7@^{S(t|S!FTPl5OxsJWxAC"%pm>P_L@:W50ni23ztGbCZ"3Gs{AaT@(4lfEwk/TFtA]D(C^^J<ygcEcB4Kw:!nIrBM9u?w<`.)mm;kTQD4Du?8SmBn/hY;OlP[o68_%1$<%TC(h"$>`!N=`^KCcN5Rtjy0KZ,Z#MnN2$OS/YSYd,N/65/KUc%=E<mVBtmT;lh&kQOQUNAply5#Kd?yrhK33Hzs5`@ykz1Y`}RH{4ZQ=.N6K!m^/L<D$8$i%B``]_bN{{gM2xrsQf$DkJqqjF^jQ@nSz/ad&e_krj3Ll|$R<_~=Dn(u#l$c$v#72#W!Ed.P7k$xU^*FTWm{iwJ7g!/q_@|[xc>e$.=xO>1;2U$0SV.]zP=A7u`Ffh#Hki^;]7~`Uu[#E1>&;26>I|/F&[qd&&ZN<4${vNLQWn>|6ux.$AqGnb$An(#r*VTk1EW,uxD?]npt$I=^lc%B}GaT$^uF/?61o1bd^Qnb$srv)!@{.<:26B#{7{qv7PjX{"xI[c[Nb]sISr106HS^N2KyIQOgclc;KQOkQgc$4vzoFK[}@FdL6%|bT6exPV]m:=_c.%jT>uND)Kcn^}?_b4q^CktVOiPisDV/s$OOv<,!ztfM@$Clrz~&~#VLQo&:/Vd#4j,kcY?,vRl$g#e;N5L12r6A4O`)jpvVP/{Nl#2#WuSNEA&^_@usaKchz2;*}*<G9O>|N8m6?;66bU^Ky<zK`iV1/;UpUDJ#_&9sq>*V~M=r#IcUIaE,0k,]KcOm7/H/r{iXvV+5X3)__}Sy8hi;wn,fp*22d~)KgQHf1MC?uEc?k(I/Gj$,CG.4t?(x6j,D#18)/H%lmQ/}3Q[A%!J"n%28=ym5Jdf9&2QEm,B|)CD5eoR"rlr<FeSF|JKprNJxD$rDEo{qYFrc,AW&P^yMXu[1m=h/&{[t{cQa)U10+SNzDJ*NXgb&)_+@i1_P6Pv1.EJ>gTMo9Liiq@WoS$uHI>jdq$6v(,T;hPH%^;EnuiXd=IN19A0|C;4{g;w9*$I%eu?%Xt?9]_1i/qFN,?_gute(%=x0dHsLCkdOodW4%:oGcGIM6hPqZmre$FGX|s{aD>xrd&(:4+Le2v,NO(cSom4Rr}52Ddkd@7:b]`.8N!]7^^y<>GJWgQ2$05h,G9w;tVGuq8Uqe0}_*/7l.B)[pWH%0n33Y|?opf*VLEMzJ6=(&A..!<Z|@"b0*Z8w_TIB]67R1Bu:QIlOrmR8[Okdb9R4_FK$VO!{r{M(st^M^U=)4x9CnFMh~*KA<f3um=/#V}d1`I#g6/saW8NA5]?p3lDYTmTmFVYlD#{766ESsym/LUSu/$Sb297{Vb2d7b:*J54xP}Z89pll.6$R)G&t@fc&r$0.!B>{(n~}z.?N.3_hGR(2S]Hw{[_hVfoh=y#G@cI?9b1hyw/bU~rCY*i[#NX+r)pmtAN<"!^ASv$Tc9$6[8ra,V2PF]sw82>8r>3Uep&,mL<fC$Wg=F}oAo&`E),=:@e8fL?70>D<)&KRn4!w`M~bt}aOe3bQ=x{5)w;3Ll:WSS)uefn"&%uP(6jFL>s)O|iA$mDqNS2&w^XMHtM;jzGd[CnC5!vG9aWF=~ef$<{kU<lX@0]r90lrV8et<iQh.Pq*+9p,v!&<{A}9p=9}/)5%0iWQqrW(X@wAaku1F109^)ty9)gN!UDPQ,1U+OiBsmEa~/y={vU+e&h2sGuPxkH%e#!y$I=#&&LA.Fm3F0sfaN~cGAgh>ye<SRVUW8Ype~qh!rZ#rcd.6[$V*x8Hv_gO$+$)vB4ip{cR<NyGyX]@@`/<6AkZM8KN)7WS)<BDS,6mdr#.5@35ZMK|KWSZ0Y19bH{6~Qs|bfGQm<69Z:;XzF~|3#5Sh3U,628p;2/?%z.&%8Cb,b4e,v<R8(W%o6yyc|+Zo9%joDHY0T1I&#+]4Y8:nRQ7qIKrO(SlLn]5?igq8@h/:!5:=pgC]u3CC<kQk1({[%SZ*{[%S#vZK"mmc|o;bD<()MFvwG,#)m*8mW9u?05<6(#aheXY^~42^uPv>~#o>"8_&ly[XkinpX^FdzVvqoFC^A~T=)P8ez"z!WO0cgcgwRC/X|uJ.X/~Rz<Amu4Rqvf,7JF#<]P#3k?ir1;seyl{hL!4zj20[nhU}4lY/YB@V:S$***Mmw=k3!ZhP:6;sgIM7j^m(OUIWVln+oiXy#lKpw17D5!bK"}O75hmGpcWKG5G,r>Z:R+MoAc63d{42L0ARhEqxWU0Q^P=V"6_k0Zop[h~6$OW2m.<B]1X8/!#igpxb5.23vU8>2VGx/n{R:m5vp|y*^hr8Ca:ID/K^#3.Nvt>.)bYMWV{^0x[}GrsUK6^Qbks~3f]LNVFE0tA)s@E#wM]jH3=sr^?e+{]qH4wX+4RQ6POgZ}DAjrWKWE.{);`k$i<DSLyVN1(UH:?g`QspR:,4~[,QxPDbp0k])GHE6qc4aGBx*3XSR1er9;v7[7$O^cPej?j?|+yV|xAU([FZHKdtueYB|CFDN>oXnd"Mp$?6db@*ed?<Z8zc>E#rflh%5"IeCt(xgQd^MQI~qNp%E%,U$+Z`?c4w86~42"4)`vpbL[&,A`wV{=Z*!Jo3kqMmg8x$B6M#3e%mkZM/)=<EMPJjRHFmD{=R]C4LdND)vU|11a1vx{wMb=GrEbZ4s(~YC`v|&;czug@VC8_/hY8y$/vp8A/><C@Weow|sFDyN3+MVR2HzMbbIHjd7yi_2FrIU]MNiWBH(mE<s`sHp#yv~mMyo0F+"TwoiizUbJtPJj}49|P(lL@.:W#7O21ygOe@#DusPBh|9FTe]fbih~Q7S+X#O~Ug[lC?&$vSE?VS4kaIMa_9Gv.WjQ6uH):u>hLhYw.W`M{G_e%E!&UQ^nYl7%i5Q$,`P3?EE5A+~zzcY*43:2xGyy_[:nnOk;pgL,deVVL6Ua0jW3_N<iVVu[v`oDw^(,3s@?k2W;irITi/AP5d#?&Rxh=z>RP;lr%=+%)t4qD62"PBy%uGYCWHntrqCN"@f>?S9pqGrD<pvV%E_gfw&r{,QZGe&gr+oV,;2n5hRyPHUy)~eupk8oRYQ:^hziZr!tUDXiwyO61{|umF>aVr9/!2aYr`9Q@|}@(g/u69J,r>)b:`T<;IhFCLo9#Rjo"e_E,i=t?|SM;C+w0Q!to|]C7(~>||6$Liq_?X9bl8d`jALP8iR0mY7FQir|s,@0;;tdGclY]Hm1N+Djz]]."r<LV>q$Ee+;we~+x;Oh{3yE:,}J;sMA!$F;%gOWDov+i8qww!(%c6.&!J^NXWn],q|/!l)rX%1czy)wv51c25Wu#?~`lKyg^.S~ZP*|@=+!xCo)bw|Vdn<ia_8&Y_fT)BQ,s>O[Dsjs*oxT%+L%^5t+$8:ZU[B(vsQWxw,C6kWnl"`&w,J9vB4h%,Y=]aA:DU$+w:eTI%J%<!MpBHfPdL5{B(5fi1WvJcQq,(4>"=6)E+>UW+_}4k}/XowlOjMhvEO<!H~z8Jw(J;*w0o=N;ZTNv{=#"r~cI}dZwzG9e&qU,VHI>j*#xs69V_c+s+iP>S~P:ZwF20Pc7S{Pk|l[&cWj/o4!8Jdf76)+M4Q6X2|nesG}UP;1I]fpBMmfe,DhP1iUSjF3mLS4)o5"=X7%qbGb%v*KO1E~TB.O1CI&>dtuapGE]NGch3*9`7"LrFU4x+2,R;9`zUX>$Fi%Li~C,,(,<Za8H%O:GrgMbLrS#$hWoY`7`I&`AnZ"aZOUX$X%=$Si,wOH=}@&Zm_sFPZPM?SSKP,TjWvH[JEp>W[+2Ra=}6Y|LUxaeMLUOIPZZX?z;>u7+BtUPtJ;(p.@A;^>T=2mv^i:)%5f+lWjj0;U:l?uv&$yY#}mj6)sCV|&_y8q`~>Joe8>O:G;hvTjx:e#U)z@~8})Z9sKG}!3R8t:Ho]L^@]r_ZZP#Z~gn9e:n4Fy5$|1L8I?9(qFD+"?WjR34m/3mLlP~@{q#n{LCj%H9yV4dW}~4<EE3~ayVnc<;)J4{T?eSr6<<gM[W$]KGHj?}%ID8ejnrvAZ+Flt*rKDJ*K1(I.)s,4hgRGO+uM/c=%|@plvj(#mSK.@H2,)nwEsZ8ze7(xyE>@axvAc%7BvHh`#d<IVB@(yOmz_":._|o8+93oa|Eq2;CmKUh:;+Sh~pP`F_rvPt{S9/98].}W3!B1_AR9B>0FH,J,LPlVB6:()lY2vxF|S!?d:5r_7pdBFunQH8>c8{/bo~JQfN~P.%{HWrz$3bd=BXHr0$FEe_Q1vS/7uWK/j,]{E.E;R,6ply^WmL#8<h80qjh_|z$RFwhm/^<Kx20E,RX~i[DF6={U{$,LCusrc>V;o)hOrYyz@_o1V8o7Rz^y#^uvzr;!MR1`yacGB;3XV;WDc63{o*9wf`O]C.jKse5}VuVL_#E(Y#PyB3CUllYfX/LKo`M:Q<@5q&sboM6.{WaY`0Ej}5l]<lWkEI@5Bg[}6VYjXg>tX"3e;|7>@uB;o5}$xs}Gs|GM,92.{gvB<OcN.;{Z5WM<kahvRj2ML@4F+E#_Soz/V*w{=]:?}vf6{{JkWfpOJ~REkI53.0t;ZBWrI$8TAXD2>N+AZ#,_=W5XpNm[hOTL7SGV]4#<5:r^yoy}y|CqQ[&>|>vl.R5UKuB/4}#BUUl^5C2n&X07a?Ic1myuXF8&|[B4gg4~@FG*FpigCx5n`<Kq^#`5b?)TW/@RZ11C;Wid.@/_[l%nJNe+DupxWSlcn*L<}=Z9xeK^Dk<?w$w+jB,hk]V<)+S*D|ZkQArY:vAo$ZOGn}(Ee(P2k2}{q/1&LCVS}:mNes~[>np_|;zLnTN"o5G2ItS~2BpuaSY0i}/ff3C>jnB12CnEd2?rapl~T|1MmOyt@~ICht<@tdQ`Q|w_gAYsi"FdI/,)b(8*<ufwb+Yg8<cP|I9;W4lTX,z[H8@ja;leI.NF)<~)<0/Xuv5}Ws_|ssX%g#}!F30RP&[8XjXu;{NC)<.%{~w^o:R9{e2qzDJ#Pg+Hb/S83[Ckuzv!G=XZO#G?(]0HODj}|v=!CI%eY_[$9A&_M;hI{GfP/TbciNl!WXP8I*TQLB6hi(8Ul^8lmHgq;Zk&p/wL;Qf%d~UhcA!P^DELWR+RVtG~~^a~,{^3bAs1vqUjD~B;Yu5i}+S,);)i}S+0(|N0v04&(Al^56DIsIB,8bQI_9+>Cv07jVlT5ro0v}$%8$7G@X+yb}0$UcQ?Ux_S.{~&"=#=1{J9KJRXu!)k:+[yTl|ytD[s:h/Uj|h~|{]%a_K(&LE[KrsnfqfXq8SL4X(^(%~^3jj&&.7wf33bz%lk2vjL0<pcgI7.y^"Q0b0!Gl>``0@K%3$>&W[YZ!QPh|%K6X}E|1df4<&]ZNcnW]_qXAd4y;}?ym|P1DOOL/|e`"Dx~RDn|By6h=1_;/s?3kqO@:8Oq?`pWK<!j]]/_osX_G%dOU[L~sC,^1wP@G}xEgofy6;8$s:VntT2}l_v,<~v7)W{XJ$"4uGn)*Z3"`RukqeJ0mWUiIk<G%?"Qt=7$Q"Y|*m<9xNo|AF6hD6}yyrT"TS7Hl>Iu.`|ldsu<~ef!&(A0#~V~/9216`0,yT%=9~N9NoFsKW61iB_r>.sJuxtD,HKCfX"QOcNJv!u8hB|y{xI?@dl>5*]|PEdzz.Y`+,&gbPw]>s=d.QbV@_DKs[7W?tB^zr_F<$or_KDCCabmQB}N4yTA&H9X&|v.IVjgYI7}jTY*UL+^G%fIl1Oc_KXGhU(_$AG7>VC@d_>H9+H+dCe`V>Khtq9YY85_z=F:PoItcOUE;PHV;pQA.AHt4Ard6zqyE`~7yj1[wrfqla@)=C4A1?/Q=&jxDKz@1Ptoj&gh+B(&&|+^T|kz{JdVwmxAq)F>ZF8`^ub[sdR(iZ];sw_y"ze~M#2hu/7_$tE,>JwO>Q.mU6p,9$^:k]^S?@!~^Q<(7}"][]*te?6x=zfjY0).fD3bEf;%SUQy}ZltZ9b_&g!,G%N9}JllV&ivY2|l5."P{V6$7xg:APDk<XJ[TZiIXqB&X]!+[18G!c5RD*!WNJF}l.{K~4yNbmfS{|"~bag4`qc98}wwaD;6a[NXP=R)IZY2I|J/70H6[)Po4O^junn)@uf$@t~?045+ZN@Z*)z,=V&C_Qr29EBjy9alB>V$~J(#FnPdVX!z.(f@)&2OnE11nTP{QxrF?)6&bEx{@KL[7>cw~@B.#(K]@h3`92QYQim?_pCzuaB.LvpwkThtoj86b:Pl1SR_+VQnb$1o_}Cb4vH$<v]>}R%+&z},b>PvZWApfDJ4=3}6^i;pAV/>rkF.gXb+d~TcxPB6lNS++Qnwm>B{y$!,}MZ=SOSO"2Zw[2/!`J>:26FTr!L&h?qC+TM)Ib,u(6BA{8W@dd)N;^Frw$`iTS"&#mHKC@L)Ey@*:z,>A@9x{oBhGH*1QZCjG}@){tpC~:*}q0i(1vh&*)"?Aok=pToYr87@!2=:)=bn&4668+n=<O~hzUX38Tc$A[KFFcu!!p}w`ebgqWkvW,PI<0R*#>3,;}".3$c;?8bT#d/c"J"[]Ln*B@a#(6/;L#_3YMMGrlx7=*]X#)9A$O87!7NN:64@k?9i}xRW?xTkGmAoAU4@*c.9)FWDE!y9B@tJD8k!ZK@/;t!wWV!rjlAUSU2K;F`e+?$nCV_N`EB`~Ts+h$/gr/GInI_JdbxV<9X=`F(S7ZETAKrJ#d`?i?1fAU|xY[fl{S0<^ufJ;E6HR^ywA3^lFdlQg82u4[P)<O,x216dv|G5JMLw+XtnAUXV2d*Z#m%mHK;=)m09hc|tH4<5$w$Mw(_to9$wXH+sn;pdeWCt7@8a$84kR7aX#xN+~oEA5Z9q"Jpg$M$_v(9a:!Ue#n;@THRKglo@zCen(X7Fl^(X7FR?t5JLk4MUqKQDx1d`[:vrN0faOUv(,C#y_WwDUO~(&?gYSchc)El+a):)P>}q#tr.(c$d09M#c=6Vm7DqW1=`UFly[X5]tsU8_a"T%x^OTtfDSM;CLw&7Bo%iwfvunIfHAUBaac%o0Yv0c[Q&Lh%m9DsL]*}?L,m[5t6OY9FKE@~_;dvq*[G?;BR&?VTuj.;mgm8ga,gTA`vONph97oq]zC=`5Sq^!fS+}ir.PBSVaGCUv|F<@.O7[*VuIm5jC6dPUyXkCnM`^xXk8=gYvJX]Xrr44Oc)B@Fd*E<xgZ5uU.;X$F}>QMeZ1n3HFB{qgT%FR!mvLw8lWmb;kFC0:HyyR&CBYV!qD|jNzcQl1~.oL?Wy&)B@x=q2ry@B`.Is<sVS%K<vxlO>w`{&{EAhsv{&x`lSOT(`Heb/8H);&`0HZ7gUEe$Hb.OJ/wdW`}N|8=#ct_+1O0,Lb,A:_IbCz^kihp[k>3,wD+q9%m?*8lr#L7[*D@%ADc|QH?LrD`lKk?|`[{Z$~.]Po=Zo$Uf$hYGca/o^&=cbmF!FzULX`=)C??~mR2NB3<gBiq$tZ24>"jI{ELrF{qkA#+4&pHg4}I,D?>X(xHht"/Sn))H7us0c>}:QnFXW<L}9H~H+u=+$<da!.;2m~5pHb4qQMl=XtGcG_A9pu":>hd?2/uxL*X$<~+Td$}llZS3a$m^,e/o,6G{)aiT>7:lr$tuj>a*.60wrOb{8^+3m~Ju,#,Ej3=4)G$X)u#j<Ud:UIliRllBx)LaEd&3LH9*@Ts"Zt`>],$$Ij;Hvqf%PFa{s@eixJJBJFQuL~#q|npO=sk;M,kXdL@`j"j`@}mAlYTK([?]:a@J96zBJ(e4gu`RlctKC_`*{AbMa"N;i%PpuhQK#<vK#rCNOX<8MFTc07ND(DqcF|*u=lpiT~?)mbX*Jg0nS=x[h<QLTaEjwDSv{HqNoD7FQm26/02N5)27Wt!>JrGmTRBlvJ<r#uJgiCT5L/x=[C%=6qjo#~gsS$J%uwQ"J8ep@:GfBYx@7gXlI[+%1,mqjGWOa~m*zS`?V2Rlqzmci)BLx~Ct2$V&QT&.:Ii3Ju+zjuo<F9l%J/**V`I72plhpN$72(3$3Lm{iSDhmH#ziZ$ku^6d$@v0/sbqV!uj%HS%jft9BmDEj(rkRWoXP^VWSvs#j/13L=&*;XTP!f|]y:a~r)9Xc7y__UXX(_+$@B1!j.ibIVrmRd]6B"ja0nQxI^_,%zFO7[f<,![0,i"ba<sX;{KQ0+&.UTc3&8;HIgcqr:h;1iR4x%8_,WFASZd9{eIc!@d5[?UY,ls*o73t+Qe>$Z,YrKO?}*vD74:k5ys19*R~Id=fU(<FcS6cBcP*9z~ES!C^|LPbv^Xs*^2:23M&z1Y|?*C5=s3WpuD18F.V4E(&RCab"aT[I!VTjP7=Q9uF44/3Q&R]qA=~rIu<38.=z[Q2.bUc[]rM[E.b[yuORH#CV<bHK1QMm^dR.a?K(]/M.=T_;,:W4hS,.zK~S/q^}/0cfmY^H)pS>Wjv>qxVX<`^1$[(9m("[g[u&wLLP.v"a0L$>3?)&1|/VE&I|vqm9IedfxaX=CI"k^j%2;gb~%,TyCp`sS]Aho5gYAN[}1,j"X#LN(9($|CNFz;ChPN4>S=a&U(jHn1~CNhnpk${[(sSGFJs&wXnyRs4k[HeP=}fvFyv!Cc0R>bC7|y;EE,M~^&}VG{gpYZ3n:/(k|3m{Z{iurQ*I:jjGFRo;%X6!Q9PNcl393hP@Fzvd~e}V:K6~iu%e!!gGEU}4%FU+RL4Phw]ZSy#<{XY%doh*GOPvl)|`3RKvo%IK^@U0iWozpZ.+qz)nYh?>j|]Xr^nyUHAzgV[e08hsv)0_Xb,vRlwuNh"a3?5Lb1^UH!4$gV=!e78vVgenMHEP#r>.8{n[+_x>C/6u6aK~8$[.=@Yro(eF&zCd2)=ZuOIn9z`iNRI<tTceP*=Zz8*p^V7q.?|c%|&%19ih!|PRm}+lHs2K]$*`wujK$V4bDDH6$8GRTJ[g"}h8W*"9D+gI$U*U&%cinQh1B%c=r.a!?MqEL$,xo,%jF1lrvxn!11PvxE}c6)%j+PL$DbZr+{I#11=mp@X11@"934pp3hY>nr?R!319FS!HI1FY|X(NI^m:U6)%%j5pZwOhn@lrVR>6Hs6*&;>l>r&%C)qqr{PSKQ+b)p?eG!ns1Il$2^F_/Lt=&_%|C/h`CLLSg&BhegsuUn"=g,L&}]CZY_2Q}12^@xk`XxDOD)0sWvO~4"rtTa%Hz1:Hwv8wCMSAY4v(KOlBGH=T84&iq*7Ft0N.dAH"!kbO(:@oR@MUQ03R#*4I$Ak"AAAAXvmAuW#!0)h>>@j=0O=>/[bO8tDE9;^z3m4oIHRvM7rRrkC<vJm;{V6d)08811p_s=e&EyZ#n4SG`P1t3Xe%wR)iy#c+Z1Nqxl@%4jp/u45OHOy)]SzlZ9*qdNb:j@^2Yk3#%H%j3rF7dR!t7#Kxa36TkVlADZe4bLFX`X,^$5G8r871][8n8.qs4ZM!.5H>YGj}X`[z:BB&}4neN9iZ^(qN]UeJQ*Tgnv4OG[$5)Q*bY9=.ywWXx8uDzT=M/4rH#BTT<fYHnDF5$ue,_k[GVhrS$Mf+QeLMHm&Y>?=.)at8]B$q.@F+2@L1=j=yZatZB5)0ywKpK$fn~#jY*OTK=1t,%O@3aP%@NQKEDN2?j@;0@JL;qvc:~!P1~p#;1F[RCOQv;b~.i]Q(nV+zSNnVk38#KToT?vD<Y;H5_W,er+qT}[nv%E[eUmK9.MEn`l]gv,!+fe`h(<yR:NjUFpzZYZ)mXo/<Fp>qq}nDY2}F.@`%=uI~Lu*F}}}@tYiOGFp0%v<Sdsy>s#S4x%:i^6llCwel=ZZEZBZ2Npz)@GcY~Rm%fN^H:_)ax|L+iKt8vJaBo#$?`,?hhmtx+OM1E_6#0SN%T9G0=x]X$MO.=OvM{#@mA).n@%RoIo]5YB`R/$yc~X"qB$`fZ2;w`M^`kgc<f:<h%bW@re@G1(JGA@nM+cEC*Kd;Uw]TB#AkO<DUvXAjf)m/Vd&.[;?<d4aY<8f9Z|uFqz/sFfKfC+=^~PI!mf/;wJm}n5lfxE9FC|Ht]e6r)WgZI|}v:G#M_qQYtZN3|m6yo8T>d&%)m)ckYx=X#+!?m!hsPP}QyxN@"kFO51Z3RCb1+<c]=^BIB+{(;qz^7wrHO:>J>MIp71LT>CrZtkcGHKR.5kTgtt_+5.tRXN~W"=0!9LUgUV|VYng4<8)(O4d5%|br;,DNbX?(tV)QnM@h4*2N5_%5*(ogm_B3xU[|^xE1<6TMUa.u![G<HpAJ7<>U#09Kg:(b{[Hld)b!]uwKT%pAVxfZ3]s<)y9(4q{7c<6^B0,z/X*v{q*3G/|n@b}%:$V$_q2tMRWU#2Q~XC*aUil$/X?5F7=[$Jztakv?t1CAsbZk2^fw.D%|g!9/6{dwh"[liJJcXw4@2rktA6orxHcv&*i@fR3LwOltuEHEn5LP{25?B^OR/1OqKQ[k"m*LZ/VItNNSviFyhZyGmbTqx/[b.$g[pZ({ZyZkfdAFC(^LQ&4ptF2Sa`5k++W[EGcz7iOEodFFP]g>RN&;|(hU5uLL6qna|Gw*e.n]Da4a.`p`MR~1Qj1b~6Lhe{n1&<%=E@P+hsp[Q9;OGWPJUy0iaCHRG&v5:r9%L9SZZOuirL`p>=pd2evk((}Pqc"51Bm.SNi1aweVEOPr1mtIv>.w%n&!iq:GHsrL7S6z{945vbhgCT0a{=~]he!~kg1#[YXk3X["7wL{m0ZT+%THA!DA#K=_YxOV9SlK?+~rq?}UPc11#K0amL+hCv~tS9|.NskH4?:hr=^DP"~_rE*]Z%HD"X*NO<e!pO|+Ye=X^50%+Flpr*q)~+s8v|S6;mQgn__Tkkh)Ft"xvFJ!o?k?GQ+IOqtZ{C&?;>34$)R4Vc,5@n[{}Rnu.<kVnR)&R#)~Zj_|ISjS$c|TxI>(^e(2pO"+P4!LmEq"RL;T6m>^.$iF|9~^,fJ?|,~#SN/3q4Kp27"DpH8/Q[K!)gEZtIG/&fTX0zR%Fn4ZYeyd^cojP)UxLiH2;{cC$Q?=?Wz}%a6ZP>!@0T.s76y+s@FEIh@+}c")Ly:fy|X[X|O3O19]XVz}i|lHB2e$g"&ZZD().n,R6iKXR8yzDJxc2ZWjS^ab,X@P~k=,hIMBx5SjIhLN6qB~WZCtF<OKR?e2tPyqZ9?NqgTyk.mD?G*<"66+|yzkGu,6,d#zHQb+Xl[R`lV+h6]%LdJb:EqPoCxWZ=%iLvJ=;kL5zn*k"Em")$p.~^Y8f[NbBQvnQ7UBx3X9x&/uGe)7,qb6fk1tQG>[8(Ecj@[;.?,W{QP=x{5KS%CJ2dj7QW&T6]tkRl?He+)q_u>(^JI4UEs[l)b&[mDmy1P3b9*g^y:$glAyawfn?`|@FM}K2h@Y6gBM>J7LHmw@P7Yx?eHscg?82[:FQ)Q$~=5Puct?|YT|%0ws7md.FvQj(gm"*vB~}JHxETmq#p5!j=pe0nl7/JzTwS1OViUsdkAVg3vCJnx}Wx%Q3)/e0Fbf[,D^R%`b@<=X8Eoi//xRf0I>Ef_pO_&JyuD^Ai<?R{:8YudIgBIvzsk0ud*1;lE{E>3OZ@r`Tta[k0?xryUt;028f/+nD7/sTe#^(=5S4}3p<ccVoR0MHoHL]ybT_yFRmMYBX57CjDoH~`:%;Fy:*R%GnlE4ZN}jmk"}}piL3j]uVg^]HG99}ipO5+&W<`MZ.IBCDOWQ=Ve7V)tX!eVbSI^Nd24Z2wh!>,9P/|*9w2gV<>ubvL4lQcxV{uFJu8Rfd)bRTmBxx!gnF"n]H`AmXWKNtAgTJm@iG_NB*Y@F;3:l#W|gQcJHCQ:Ym.7sbDW(+mfwF0Ki2)5a,{#e1FRn1B$9o829zxU,Z2G>ml#[)`%q;06yz8UEwf}z{u?>,:wFW1&R~wN{0GL%7"5k>/FDyYPaA>%(_:*3I+t7,Ci#;sWJ6S}Ja]se3;wX)x]A_YWyo12jXs1x+eXbD?=XXB<mQ{iQ@mvXAhYOQ7JQgs7F7Bxd?IDv]9!XLy.bbuZ[7h"rHewI~FWxwJA_Xx{({==cO?IJz4[a2nF1`@50!u%M>O9X>&`Sy}3B#xdHPhU.EoCuB*St_h6WS)+WP4nFdBYI@kZN#ql2r^4}jGdBg5+2[{F:}_>Tjc%RIKWZC[tOWz7O&36(4im9vcBJ<fA.7TXw`+savN=_^O?Ie#JRmBH`#(l0w?,$aw51W&d"=:_V6xlH?X?w87yPq^P4+{3Rw{X&apH0I?XgFqMP~m,`]~!xEs.GGcw::.t[x::)XO<Z)*5r[LK&U$%Gk|"$B[igE%>3jT}E~oE)Isv)|[8XxW*z%Y,(Dq`fbc2!O5i^2B&:r(1qzIvOUnc<kt(NgxE$*v(Lm^1)uO(t|@]"e`pSDw1ulm|(~6cY@wEUDC:<|?I3tn,Tc}Zs}=Mee!&G}wAw.pd$+~mnt3"^tiq?6C0&Kb=_l+QL735pgBW7]=uslRlwh}CP{MCR6uV&v^iJ.NuCWrj#z6F$y%;CcD`>2t([^<:i@h|~b6uV?;u^|/!SpBQc;d:{`&3efRrNM{M&/CoCK)*YiP8xQYyc/YQc>LHa(lU9u_a=dzV/2W}QE%0b[aj<U<Ze,g~f$_od[UTPsL9Yg(G.~NutP%;I~9iOOVtWj.[5!wRd|<ai<ZF69<$u}>P(&:8)f;&2W~Nt(9r=(u9>J**GvZ{ZViE6:*j9zpc7^x;M>:kM[$*z]J4^hnD[@u[GE~nE8#R#n[`(B~?AhDIv5`rn>@!8FBLz5?bm2Mz#DC:#5QIAwRt{$<XzfXSHo*Lj|co*_0BcKGDXz*V:/B?UWMQO`|G8No4PIr!ynv0(HP}nv`>1z6paa:LZiP*222)GRnX;h^KKe^9xyWM}4[nI&DjL0|zP<":d,SQ]GPsE5VEi(nJ_uCoW!/@Q9_$*wb+i%`+V<Iu_[|<MK&.h?5nrOX(.usCrkkf+$WJ8P3g3O1{*6pLG$j7."9lk3W7X![>kt/;?YQ*d;bIGp_n,/VPvkt4hAU=)?"&6{ycZ5=:X#rW%yoEkOGsT?3K0apHmL7,rQnSueZ.)96s?u<{R()]L8YtlIHA+fxx+,o=y#%5xd1!u|:ET$|ZFX$=Y2B=4*Rl50|}pI3nURhrF0EsI!L0e?wC~3xOi4gJJ+_?|1n,2iQ=?9@*E^ovXou4F5F$r|!#!C3/9TgVe8B|S3?M[*By~`)95y:r&u/t)|10;+0W=K2HW}2^43K2izuQJHRo8]$%s86fR&Mq81g8"UThywooL[}jxZ[LXN]vIwnWpg|5^|P))}vtjqj1+0jsw*_IN=g}udZ#Uojhi@t9JQkV=bwYX($wxN:?|l:5lM.*o1YUPe1OSvhczo,cUw3wIatg19a%9UKsf,{i`X~@`^I,X_B,NDpx{dF5LPkSaNCLY]cVGmKL4}QIjTVu|d|j<P)GMDzq/4bd&:IhIya8y}cerO3HYBKLdkSTqv+*"X{/U!qc?(cn%42nr,|3v0,={]C57wDJC&M1n[ousjmgD!#TBB^pgi@vS6r_C_},l&x3PV~yr*#&jkbC$mm]D5E+2^2SJQjbII`5T~[jFIThI3mX}88Zg~!P3?v;Nj7c~M8?R5m$(rnGBD%OQ/xoZrfiZ_?;MpD5en+3Mz7U4&DZj1O1<F0A6hM$!C0?Mw$*#U<:cy4Ax,D;ikUP67F#sRE?9X$>JzTPbYah")@p/OHu#T`Mh&_[)^Y}sPM"BsRra#^J[yVP#}E4"K.e!P>Y=v[_aj/AM6fZhx(%vwqgHZF`k~!!7Q`ifb{5:v&p5nPF!ZTupryYw^k5wQO1[Y!OH!}&{>ZB#^Sug]rTBJy|<!^t6E~BjU$0NFnw@7&}oNu6i:>#LyV[k6a,L]16{f.%{Z{GH4CU3/*|{x#0vw;K&fi,r$<KuLM%P7{D=XXjY_>WUSxrN4SN]+v>F}:)nOb7nN}<0(|GLpVukwupBYIhjW{)$s{ntdz)VJ]}{,WK3"n)_Jo`nl[aoglbA?u7//0r7iY6jbI9(Fd[>5nQbV&O4}h[>G!LLj?ON0j&VC32GY0Ry2&QKQZ+[k1FX/FmNi?wbBg=7ba.Hv~c;yKfEBRKP!+F;oK#{s|aM@[Z5"$%dI?C+O4T^8_EoRWBp(Qx4@;VL;NpR*8@u.i+}=s@fr_DCT/2jg~Mys)x{Yk#IB*,#cOvUd.^Fj9:R2C>#L_[^on[wSB#;?m<Fs2sGM;8`rGObt)$:MXx1R(<8d`<D)5(5c"at?OysO?@<mh,"8IeS:R`@,mi2]:cd"vCRMX|h^>Y+9*GnX680GDMe8k?048!vkD8k1n$1+ct#6o(^Dh"ADfTHjp!/M=m|0R%a]V1Y|*{0WXxcVouuK>Ah$bZL]]qqEYe1K>2*Wo>>)Zn%>g"|h`Gcq0_!;I#ze2AQ^eQytHS{F7X]nm{4&*bKYUoW&b>,a4ktr[RBvbszIy:3&Tg.7eaX?fw?P(*U89S)[?+!1X>j87D|?sbOxtJl0c@G#Z<vKW>:tm%eUmb~6UkWAck!<`M0z@B39Rt1*RZ;8*9A+C&wF#o,rS)p54/5Il{`CZ/G3:xx4x2E,7Y}A3Dr#w6PHHfz=Cs$5kH2Uu`9oBudvM>~o)fLU.TEi4=9&i{9w[0m?v^EacP,{9g@"u7OqIO`yBFDd$8df{b;RYvgn$r%E0630pgPabWT|2J|CL@k3R,<j1qq<DH{Kgz6F#swH]nxKbP<6ESZeQZ&U)^[|t(!!(a[`@KO,dNKL~dawEvCpl+*ea4^$wk=INCN3bw!NV8k<R~aX2uMfDfx6OYpz*{n:B#kn~HV6Ecx)Y{3Q@`pb;zU&L`k{i8O`E>ETOY&:rAg{ICg_Sw*w:>U6z4Zu(`)g]+^WO?VmF;]t5Ip+u5|%z^CF1?tob]JD7RX;It5Mr_4c6Q?,[)@iRmCssQ3oj""|[uv_v{EK^S4/HT7o={9|#+>g=VvmyFD9{`awkyR_O`H@<aV+;YJIw^H6^B{,i[Udp"{z7yz6Evb<fg|qX_Jk@547N,e{$vd&y,Q3FJ{oa?+^vv/._30##QL|fH`5]5"d]<NuD/=^pI>Eo`d{{WWs}1yzw`I2Dzkv=7ES`EHB!=91^:RqzA[gDC.{:05boeI7Np!m5qI$V9XaVo$y}FH]1^lM{0pYXcGD83F"Q!G+n3,g,.oZE"6qAj0Ft]uzv~)F+V!U.""p@>BOWjJRli4!8~FC5CSMqBCV@s@v[.7)m{.nghxRmN$v]>qrve(t=aABP.q]YpF1[i*Sl,&yH[;2F`%U(Qyv{p2GtovWr8XW}%cw/:|nzx=wEqaHFMc&(i(HG?m6(eW[1y)oK;yoP<FbQvvFFJ7_8U3eN7Hp*p..L/E}"w^i%75}0Q1gYD,?Ct6~rY4}}s#~2a1Zcg7mvq8x)7OP,&g^]]%fQDy:_%5bi&Mebo%!ysclr3u911#]z+e76vW3qp?fS3e^1$tq`499;GtPA+jygSq^(oRhYd8fw#zTf<Yux/c<AsSwfpn*SBRxZqHhvKh~85[p.Z)#ys9OW49|6MOoH6"$?QovT&g<9<yw:QoVEdW$XQhbDGgI2mKS$j.r[Y/oo4s_q|cW5y8S#8bv7_IZhc5+g>]}e3TNR>FOf91;&|a46_Cs_p.pY;f%w/jJ39yymfGq!SC?r4pV?!?t]c8]+"j3_o}5[1ZlH1ly:8n_s5kX4u=IE^SDh*rBz*8H]"NO#`vuCRpXX5b3!%c>ln[T[N`Io^yTY(8Q]F)_Mrb/CJHvw/[!G:k*H(|*J!*LDZmLP%~*<MDY;*,|aSikxbfn!na.*bzh[Fs2zM~yfK8Pl<E=RRF;>dz7I]||hd,|,PVt:43e!Ni8qjYI3wh&)!n+l=W,o9>[MOk{iXWmINbE;accHHh}Qg~hX7q|y[z=[Z?_P:gfgf+,v1BV?cjkVXj*6PJG?9J&nkD(*3tjHk/Mc2`o=|JWg3r|()|I&Vk63&m/|u:3K{:jH[[`Epl;h6^WI&:X^}AX+8z3rV`mt@e>@z=:igmQ0;`n=)|gJ(a_E*~`+_6&tHD^.OKS/<85`:t!c"M/"/0dP3Z8UqpN8HB1rzKtvgM+{YaLQ`SwUD+Ru)dTK^(WXkh)>ia}Eh;57XP,t^>Wc;|?rw@,**M$3|I*cBf41?ekj>|Qg"VCg/<44RI=(PB};z?<J8EEab_pfe@*)z2O;%|<0e2[g5*QJU?Z:TUOv5s^3p6kk*osX)EJX(@PiYO:8Lb5B!gR1K:;ymK?8=Xhd<@C?^<khPrMn=3Dr|jAR`"Xl0th)r0HaxZate%9y;9t.d?xlxJi7J2BW5DPjEeI9WNz}!jYI;t{fGdZF7qL[!6VYl6*uJ),hM;Qw!BsPBK,&~*=FSw@_T)t"2Ec!cl[ktKorv`ntbN~!oy4IIy~Y]T/~x6o_TE$!1LhLd{~K_%dK2Kr4DaHHQN/)Qg^Xv/DJcO!l[ku%8,(as?6R6"bg9$6IInkdSH0[uW"xG)P5#4V/%`:w^Cr/m!^8^#d((#kBb4~k>v:|?#Jp>tLO|LwO@0q%H^&Qu7a=BFo%#w^g^^ko2raqQFMajC@@8u6Yhl|6=2ipUgOD}#8w.ii$TO,Ta[iCP(p|E^^dJ9&6Q7}d@8]PMR,o9wMLxCu#?)k>3V}4Bb~D[<on@u;CH5.ZZ6kV;HfyB$A,0?BK>O.3tiFeReg`cG!:3cRx0BA[FFTJ%s&Ddvtu73>=DsTNTc!:5R#XgSuS"x7$m)|<O,$NV!c6!0K{qb?sV/T:VdJmdM2JitBpl{+`_u3/aVao$OL=$23kj*BYYtDP)NBPSad|Rzvrp++4/t!0d:wXYoe^mxo`vV2l^$b#eukl]K#$Il:.0eh#_I]>rf$ja/``E:xpHcOT{kPfH@//78ul@]ci6vL*/;uZOaEe"/t(VwW{Q3SZ46=Y|xmZt"s]QS<Vo]&(b;yG$vXV@XrXJ;x{@~8>A])gyz"rB7TZ::<VXY6rFlCY04Eb/xu/#t}v1H>zboacW4rB&?>`7Q6]`vI0I>Pl&)):DFCF_7b8`_t4*+5H9O)0{,i|Zk!nwe~v}5b^@<K{aGA*lK5I;O[(#YhxL3.4d9O<:zc._9RFkGn}g9B^IcAVZL14Q(xcnoHl{#kHX[<Byd8S=DC6_tt`D(E2;aR]??AaF#/P1a?N>I+ky%W7d.q~+3VgpY8PWP)3j|+c_>aO_90Em>G+~PV<~UNmg|HsJ+<e~<I54vn;CHMFh$b+R.:LNfaxh|mEIZsP%g"|9Mn1S(CH"!(<8Wc576i<^G5dl_X[MyqYM<k]Y[5pH.2Zr5@(wE_(tXzxD9l:n)$I5ZT&9K@f"!c4AC^Stqy=iK$_9vhW>Wynq@}xjx(n[in?3,m[bB@~<^qvALw93x?.{ml3kyar5lO8Ix]mv,!;O1v9je1GEs%|_zr#ZdKa*vpa+2+$=m|d3H#.u7bqb<IIDU%{,{9{ll*wck[tjD"Gi+2vN!$TEF>@d7i7gX,b.6<W4K269L=G+pbmojJOy1yQH2XC$AccCty>q7FsPS?X>Whu3;.Po;>(0,SJ.H+pcy9T"~B,_tooI3ACTEwCwz9wY!wYW7BNNOSuSk&MW0dHmo%.`X7JCF99a[PH`~UGdZK9JJjdCQEG(Avhzja+#p`4n)Xo%,N5p{n8cVHZOA`B,Q0yvtY{+jZeOn^9/&WadZyppdf~1lTw2Ur,[O![!D$d73|?W8"T|X#.V#(FEnKx*O~l,.I)H=`@G{4i*;J`/Y9S0UHm1kR/a`Yy~~NrvT6[ZChb]8qj"x)+TBzG)A~J+X"vE1Bk7Diu6W1sp5@bm6/@7PFhjhM{V}xXfChXOXrz*i76R/SwL1A>8t>uhzKkqNcPq:|)>&_h.8*|8cY4RJm4`ZEQZ&9<6Bqn9}1S&_xT|bIr@0litTfflq6WGYqQZDmP{lT<_Qb!E0GO;V~}MP}Q&4HDJi]P6iJ@e](R8n6r?VG6?V%Wc,1?ZC|yvw3.63$51^*^o>]M_Ueb":xj1Vlv"R^a)o`If"s,d}~0u@_q!cHRF*$?g_C|^##tvLOmmg,?mX2w|cx6)|#nE!E~u9E.LNN[Gd,vN4j<K?Fd3!K]]Q#:W{elc:8~jBkicu}WuiajdSRu!)YXkUwB[$5fDCk(~QW2&C~qNf2}a"#9K@:U]?YEc&EM/&&ey9f;J]?=b&<cF=<#eYoO_M_W}3M2G.>L&1O"WG3L5Qz4nE`EXdqx=cWD+1QB<UBlLvio>7JzNLUtVsaT_mCM@4*h~$<SeH8Zfb3ZOy{sN<g4KPpF2lge![TvCiaNvV,I_MM~`9BVjR2&ug)Wc%>BY_l4/uD%.2Lj*NJR]jaPXK8B]grfBk9ET{~"Sh"86aA:Fy.zX*9br2GsA~!:L07v$g.aGy*rcV5y+]RK1K=v=y#$QN:(~uABv~EZWa@<X{T[NOkkGC%h:nlL6Q|Kt{")K{amS0[YOEm~~g;B157;0D?>}?jUM{.$Qmh`p:eG@7GL_esf<Z|*nBFbrnI9U.:_$i<QrD~QkSqJ8BB6XxB6LVP&W,sj,?rOy4Y)>(D0H!X4Hy#W:Y}EyB]X784(]jU,4n@XSq0[cQGq*7u,0i{+Ehgwk1!oL`QTMUK.?xr5iwm]%LtFJWkJ1(Gt[SEL~r{o4j6ZWk`cD<%l|:G+@+VwHf0)_^Kx_u1ukMr[KvV5z6Tq,LQR?,`/R=yRb]g(DB8FbR>`NcvJuU_.)2T,xxX>Lf^qkxv!F*ryC]9YjXP4=sgbsS}T<3)0,hQ#2KlN$IC=,0"yNrCh+{[vH*#FsF^P^l_Yt(([I7{qBN}q$~It(C)m$=<$P!_"{jKJSWq>#2XBx73oDWq_PtUgv[,=/#,8=9G)c9H47g]H}o*o9uFq>/5%w}{dd}p+i1I]Vs}C,!M$F{rr^T?/qneD]RlGY$hjuuo{80?^eLO*`?%$OnojN:+1dB]t@F{ayKM$hj~h8)BDrI+x<heG%:~aEFIe,]%`_~<Xv8unUO0~XD:r:oBW>73I9HKQg8Y*zJEE2lW5:<+2DG=]@iCOQ%*%54CJ,ja[~S[?N9ZYnk9b+NbD!a4h:,4FleUX,D(?IN],X^1X.IWjO!m~pV3ife:SZmKmpzp&yNle7qv*@&iKq%k+Sd~*XKEP_H@EFh~+B$7~88~{H)9*<uBPrR7H];Ql`s7y+U}Rb+OIow_7Ns4P%Zhe8{Jc|*VS,E1<5h]Ei!%=,5`y$6;g~,HtkPK?l+wo_f~8Z%J(7qrSs$7%YAZD!K6Wpu7G^D2$XD)1;OS;b*"E=[laIhykcJS:g<};+d`7Npm&)0d8O31!:J|D;_1[Ykd5.*8=GNOXFY2hYq:1Qo[cACfsm/K759>qVnXE$WMbbHGQ_:p]C)`HKc#9~@_5mF+=[LPQ"a95PIE&cE_%Yj:D4FDaGI1E:htUNPwO9SfFVw<OJv?e}BI3z6Dex9()E1hg^CTxCSY.{dL>~dfzM<4}0T|^7fbvYf0@4^l@])%]yH*n)yD~!vGz^NBg]dnC:5Lzd]jj.>6l7ZY23N,dGGGQ.3||?NDIivU.8/mE,$9(KR0cN1QqjJ3&L+tgZBm}IGf;7R3Jdr~Q!!Q|6J=HeuO$Cf8LE)Zp]EEP?!vUCC}lR!~KC%J<ya!PW;"^lHCELF/~7?)QYvj|wfY`Cz]|Q2#~5D]jeW.[[n*fcK06+@{cWqy0UwbK]~)^u[6bKPX@|D8O3=?DcPi4H[+htu1RRDjAy_W(YbuW`S9qcR88O:IKhc7^[v#?Z)zUps*EIR|>Ic9#JS#S2%%(<HE/h~J&m)/FOg*7pwx]gDf%Ee+MCgkYNkEm$)n.t+;xNs64i40q@|Vz]mN)8_`1&[tp2Qw(P*26{4fDK;]w@TemO6}ZK"H[s`}ERcwLl%`f9*oIl}&3Rb`:@mFmK)>SXH~/9JbubS(@Yc_x#+I=2QuNVGp$BR^X?5Z8f)YfUA1,mO3Ru&iK1HLl<XeB+j03^V,]t@"iF.#DW#)PHy_Exp5x[elFYC<U$Sv16Ee[.`iPv{1}zY5D_LlnVJA^wo+2pW^:wBp:(1O*Htb|,p.y~q:!SBP%gEz>W8Jx{/+&IR&z~N!,M{{h2j?B~F|D75nNre4Cd**#x#]qGJby;kOi~NS/^#ueltnP$t>7z2#<*8JG}Gf+jvUNvQmX:)Bs091C2h!kJ>95zAJz*c}$U)CV8LL%q[sGmte]dXeLF6%zPC3/KF]qIYz$UXD)1C1%DIDou:<K@("wNcy6)TxWO1gWQS7?&_hIhTj.(*y+P*I>TbBdhq`M+T+[(liC(OL3El.5ELPYb@xz)D9&&g6c@.T&%uFPUnT|k]}`A5/#5?s3/R){"I;V98H#Q0Gg*.m;VQ+~rMw+Yni$kj^iaUp7`LTF7ZE.&uf$f4YtoLE^a8"U,V,"vftM;jqhmvy|=.fH|.w~Kg[k!|HS$He|$1S"2y01&vVnNKx#MDl{.MhO#tc;Q:^{X*6EL%,2y9H4u8v.(Q^YQCBbvGGaV9P@"?sR}Wg)[XOd9A1B6<;k?][(TYQ(DDJ94(fjx040,q9Es"|u|E*[6q+LMbH=4R~STssjL<w]lun>_4et$==2gz{*BQ$$=M}Y/<cFABH$`U>?Exo{*50_&%da,5$4AUBrSf7>I(z|Q/N8SsC7;{F1"M*`cv/{uP%*{Tv}_nW)3B%*B+?Uo/26IVG5=]lSX4{f0g",$,83yy/nC{fr.MN?cw/~Dj5Fy{3Xa"Pf}@=s4~f0uw@O6N:sOof4MX}hu6$k{sA}YUVwnd!U,,/O?[%rUhb.0C9*|$oDrfAfr1QegeAZU:6Syt#z8/kk:?IR2*9?97%D98[XCc)b8BJ~*^&fHerDmrEP4(d]^RpEph~`e"hljfM@R<w7eo&s6>4e;F)%T&D&V<f$nb>kRwtsVcJ?v`6W<d)K3cX4iC+6>VWbX_%Fm1.Hs`?GuHmoiGCc`z*N8)=KCt=W{k/`4tZ)64w^MC|%z{7(:E[cwLKSZcY7F$Ix%E,.U;aqj4uRdEw/bp;Hn)`E],Tn<HiVBd.*:Xs}ugV{8pL3%@@dHYdu:g:Dy^|iEC7BH$TUl>FR%ZbI8Cj(C8Bt(}<_;)6U43kR;~Uy[~eGrXvQ,r7AFRy"NL,5y1U}it7Obg+68]mAwEQEl^^0|daR1]G~Ocb1:2QjUO7cT0U<DY}@Dm[6jL>IHf4J:.+i/Zct!?a]Xok{|FjeKZ?7~vw{c`y!Q|>,x>!go0BH|U;H`Q[GjT2r_"<]!~]r>>D8^znrR6l%hX9][f+8%qOr=vi+wh2H1o0/VA~zxvUZm3RjdCqW89yxdCc)hf`FBirOSk$/jLa(Jyd.}1IiN4xL"$tQG`eFvD:aTh1.f8L5TZn;l*b|4~bjh0ZWhO3NiL$M<#0w,uL,VV}Dd,^GtYhkdXvyv&5:7%+2U8M$<?4R3|W&a<I1oo,eOSy#VN1)"ovi>yL,[JBwxk3L[ewYH+sS.eS2@[DsoZ,L].MW.MCmh>IxmeifU/]`J[J()BScsI(=h`3|y?#B*`{?"50;ITymth_/8A3K6Q;VJYPjMW:D~u/vmguhrgsTzyH<mQ|j!ILPA`j]{;*/etl~0`].VCi.BGL_|1yJ8F$Ga4?Td?R~oJ&:4qc[d[rB5Le<vz0YAn8wCgeMl4E]Y_xW^|RB.XrV.$p7jWf#j4^}>p4}8yx3tPN#9*R%#xNioA$<#sYL1yuNs&[r!z||s.)qCMsrzqDT38b,_rxHxbH={k+h3*!0Lel+8/,?V2plxut34NB*(cZ<bC7+[vm>x%]etoza8Y*L;H.K$8HHIs_XLEe{>}S}BSwVg.O@]:NcLBokQWt{A/B{x|IK5+wYS=]8BCP6UOHbi|$V$@):#[NE?N`%3D#[TV>:Qg(^*Y$4Y6[Cb9F2uv)^"$BD+di>fm#CdGg}E4q0qt=i%.,XCpE/5[PQ/%=)9YIX,L;f~9EMAyDNtM6b4UN8]gh_"1_cOW"1W+VclUw,uxG=/A()"NaH=2bg?DeS!UI*32}u)RI6Hc.yome!5e#R[8:4,q>wOM:Rg]ODj2>P1UB5$0OW8w0(;Ug4v02mU[&F>{*PR6BoZDmr;GfQHY^WWB&[SVjHk?e*9gs!mJkYq1n)>PUZN[90"I8R5w.v*Z%;A)1R0Y9zYN3ea7QGzB2;;Eh7(L|XL^|I{XI0?!9L*pUqGBw8_&qM=voUP;6DJ!"FJB{"k;:m=~&S?qmu0h,*b=S$hy7}<;imqKFcjP@h<+8&9Rt?A0UV8muRfgNm)42_2WX:u!.DLk+<M(3=Jr"u{ziq<]XBkdb$g%N/bkMZS0&hayq5G/x!<`Dd[*(G|b,Dw$9iHZ&HB93i|3yviqcp8Xx|K5*KmX)1Tvq(zHT2q@Mn!ZT^gh$J8*:#*ecny]iFea,C@1.QR$;tDn5BG*9FCc}$E+Q`}2mg%Jsn(kRBc~#r=~{yUj*N.iFnjyIB/EQp$x&I%qU@]Lk6<G&/T+,_DBD[3tt5G/{ifiDF6KhYn1zkPiQiiDgP&Hi|;|m/|[1t@3_&8:gJ6lma6,L[s;Uu]lC0eZFynWXyNMaKN$IgTZq.+OUC9zo;._N$)"pJ}Bly%3pdn(1fQ)>)UU%>(8&xqQve}0h5{ss1P;)F%O"Awfmu%"=f"^.,%+2$xanw2#Uzq{;XcX^d9Xj]:pFG1WVNQ0!$O}*HT}1)((hr7rfcKAric^$*m8Pm1,^HAS_uTcn,@`bXaP_wX8~oFh)A;KgD.GZkF{"#2%+Jq<_;Funm6tcmFe,W#6b$kkW7a?h[[9Idq;W~N<%kTM>)[Qn.iW*Wv,_3Hy&]0&{BSa1c0rY5|JrL!0hXEYEehtF%;s@;V!.8kNK]IKqzx{ZPO?V(QSi6rr"BX$=~y..HyqOwQKTKm${Ha3?L`+jRFr5z^X2GbxJw>JKH@N.Q[[Yo^WO_PUPu"(GR!8FlCh)E2.U9KF3}BEAnes5fSpHN`VN)Nx6MG^a$RL"8V/z/{sr~`5m]|!~e[ks7q4J:827c`0D?G60V#y}!hY6.lm6mPdnR#lz+/;{K_(a~1kS*6~2=#XM0r`tM,!"E)V{j)<y!CMd.;QC[c*KZP&1+(>r6&X~VL6krE*.{PUptV{!?JSgLv5_o#e`?7f`vFP4EB!1XFm#zDdL<>8?C%+UM;CYj%sP+0^$s=.Q27:71b?Wgaj;of:5{hfH%g*@HZR^_`70|<}>~2MxdLF;.A1[2l_z6G4UDbZ<gQl83X?6_vB]6^PE;`o9jyeJ,ZxGG?[tSvN9l`8S$VC6sYJeFZ3$1mKIr8yUu{+2/BqGjWaUupORXC]oOaDHnMV?pnf^{2/.dHGBBqF;g>M?{r,TF,;oy9vm)U0qp7=p0|zz,Qb4};sy~C;H:?Pm}hdq4"t@^fUI6l&mWnPso<Iu,biz2/m:)h}QaC?7`*%m7H1x*)FmG<{mUA.yPD@tc/S2swG^.*cfyZGKp(]`zJVFj4(L)]4BLF=vu9f&%DvJnn"NhLDO+)"|KJD}`.Rm,GdmT2c#l+TI_u,t[BrYP;3j$Geef{Tnpp4k|Y`GxZ=*OH*fH4JS#q{w1_^=b`*v6yY5DHmj{TQFFv,XmdU+D:,?f18<Z#,F<ppvKKgw<&<f7.v5([<q<azxo<[cRTC1WF1;)Q:~ue$0z.!gJ]LiZou.HRZ4B]q7iLI;zxgcFb=4s4e_u^pt@E+hlk2HH/rNsES%G1+:u7|Zf&tS%yAevdT;|^/2nrL*E&4{`hb$xbL/z2nDlpKJZ2r}T*:(kF_8F/`d8nqHl0s(jR/:Q9woh*(NSUN4&^T(B=]zbFlK5i$S1r@d|XM$/yo5=z^Y?RHD&pM(y;$0_h#[tig3*|%(IUdLFsY%gP0J7SHJ|8F2]rYEC!P]YNe;No~`haMCN6B{;8Bz|_)`j&o`{o%9uGkt4UfQC,zsk{OHGq)bLqWgI66oYU95hT=#@6p{rdZ_}C?FQs1/4D+tFPspBz`^V*||P;P79ovN:H>Z8vTu1,qp:>WG:5BXby(~UZL"lp!!Yn,}npr~YX;z.n:R[Vmm]@u/:>%8ZHWZ"L_<QMRl+t]bJWMj?]#<Td4_g"kV(3v7W]<pQd8]h&M}^Mq9l[Oh!uN$Uhyi|>AeT"C5&5Yl_+UK)rdCUB/LN>k>W*,$4gZ,W||u8<{v|h.gbl=nq!bcIv,h5O=nbph9gse"9.u[Qizuc@xJYoMii2?WZ>iiG}?KqxPHUZ1aFmW[aS+A;PxcgQ~MJFaO"!<9@7XX2:o#5.+cT00&eAQKZHS}TONn[=BB/Fh5rU&G+@Fl:hUN$Vj`H[*Dq"a";C5~DJ&pp?f)x.!%/PG(70]Va+BMuiCnTL%*QZm2a"9$Iu[2&hMgFiG]}TQ:p3ODv%_Vdz<ubxvx%>ca~XY@qGVQ>/>=B&~MsL4[mm{1UI?L_z]~i&)l;xYR`"/=n.FG*[0Vq5}ZMsowMtwy$KgAGBHDV,FN)J!.PZ(,#6_;4t|l**Z/4p:wJVW+VDRb+}gg{9+QF%8TPC$S&.!J`mD7f&>,SD^uS1OJGvM]9a=IQ/FJ0gw%Mu==l?yEoT6T8k$;3=yi8+/VrR+B_WJ0uwY^YfJWVGi:2)0O<|;9`6wt!fhAJ4GK3GTh}t[8Zj!4!URGn+MZ2Mu]+i9:L9Xp8JSq[ctcAyva^;CzmjHg&$=/hO(zPrc:/:K6cr/7Ni{u+Qh+dsyBxHkoBjvkEY<bV8r1cS)yXkb~^4.MSe@MLW=*dFTZ*zO}TA8X}{RLGbD@c2dvrxS8cj5D6vR7[,POc`jP_%5xG;`<TO*yacejHSdP;]v,aS*,1mb&Y]+d96:zNyRQ/)wf"~t)LfVdP$i,ie;i`Y)MT00L0#Nb+.T!Xhv=>_?a+GLO<39kHK/ArQC@tw>:63|Ac<6c0E@JWc!tf^`3+))aLOAq9BfsFCjpoYoEguqL3]yYBCX?!?RYCFNbo>ZUSrMnH:SKlvVxkSCWXZ$i[2*"jkoVqb70LesaRk@fsF7B;ar|2_+QdGxI8WFVQ/q)&FW$qu_"wB~<X.OBD$GFeTOA=UW96GUee+|tu0(#lhxy4R)P/S?z]57$D}ULdYG9CDMZrTQD^l1}=0xbz?d+$/1pU1+YWMl7{*fcsmS[^.L^w4$w}!.=ytUSa=;RW[p]3Xv+9VaT4g]c%7njP^lDbPQeV9tgDny]7{Xusg}/LnOA?nyIRAc0G}/DyU=~8cj>ZEeZ65Z9+60OJ%9pjOu&u&Q[0/O3Q(5M2"R"]kO~SxP{0&.F({&;>7`?zJ!9YJ8Fd@G>IB&gH{0V/EsKpO^L)6V#/y1XN"PCOMj1SW]i]0KL`qQO^U7]2KW}z=y9v|o<5R=;nqx{8U6Cb8&i58M]1TQZIQ!tRQx^<:nll+4RPa.@EvMQCGLfPb]wU<kRp^wIqhMordl:tUk%R6n4FKe4q;v1~;/^?24Sxx_n"C{"8||c]ZqWMh.|4l+VX+HY8ed!wy!=~90=QB27Yy~o;=({3"4nOZG5(&<"itsC<(,[B+0>6aPTK41f,L+!P;WFMtK)WAI^Tov*orcy[c4`^%>V?AeTpAT%tv,:PCX]P_w,BwA6ipUfS{={0vjDe*;r}]IR_$%=(T8N9O?}Aq$"taRQ.?))k^?{{I0|&}bn[2T+aWkH*P2VvP$:kL%8NY5crKkLrCFXl>|0:LBhWMwvLD5<xvpu_x`jiX^lD,kayGp#91uT_643LLaG86V*rSHHPFFkrfC8J"RC`5UV8R2cc*Mh3y1D;c_5}N[X^j4"ixfP=NhImPUk18jx6y>XA@d,@FMKJJ!lt^tFAk9Q[d_SbJu|]OVSxv,J^)KW}GPU+f^6<M,r3A}qr`qB#Oj//C^x69jf<}(|ypQF~ByX?xaQG"Q|]8PNL@Q]yJ;,CLjH<#$Tlp!8WaekNyrC``Z_#WDB}RkeSeS]@,$?OZb3ess,}sQ656l$]ei_8Rf%y!u/.)gPFW#2cF20>y4Bt*h>8cM_+q%KBs`7Fa#D3FL={27jUKsJ=F)jX76]LCG{f:e`P0KO,.SX)B]QSVtw0A2Gp2/yB.5bI6cxDUp1Lxi)ns/UD00rv*qP>]J]PpY:6`)M;mxu7%#}aU8qvL@?||L~$S"1/pfPdQ_2$=DDwl|`<1]2yq!(`>~v<}m;u,xcjQ:$o,RCUjIdHA_:t$Ll#^u<8>S=vQ##G^_V40U(h%[00XPNF7X_@X_~CtS1u^4_iA[.Ic,w]9h%g76!P3pAmCgJXj7<!O.g*Cq;&9za5kpU}#T=[fmFw6v=gmmdCbEKg>W?.<klK5vq*!_q.K9F~=hC(x/P[DwUBWFe*Oo"emo^QCXK}CZ@wb;t*bj{FPY2(G#B;@*g>CW0oK&"H")N[m7;W!1"&:2ejg+qvC3[BFGu6Nlp)AHe[RV**3kX(YH3|!KtK5Y#bzqH|7TYodzpbx2d|;Sw2&&f(HHtdvg]e>c*3U5YEowd_P&PYRg*JF|WG|[4/%4!tc.oCr6Mkl[[&8+J@XT73+H(Mv<TI0mui^4ZtA=YS_iC6{O/YATe1?(cjQWk7[ZOW/gGZlF;b6z?TU/.`SMU?3=0aU|n@Ab4o.907z|p`/OhfIo:44BBcpM8:Tl|<h(},(>^zoN_FJd@iZ||w&qZDqTh}Tj!i9keisZ9p<e*X0Mmf4,wJ49TNC*Fma>quOf9^_6Vi]SzzTiyA,mV"117:^<uF*aD:]4oRac@fz!]FPo<oIY#jEc=uC6gLBe&B=&0#au^`.FHq1KjvH`q2"wCjeKoh2wO^EH}H?P.>(ZX]s)90S{t7JGAT:&8)DhYJU`&K2bte<gb*?.`(1%Yvajm.2=NJ2UnXJ2b^E99Ha,/J{Fuf,Y|;|xQ("+P:/r{LP$>EYzFn8ag<@ilfICDNjXgEWdy9~A_m_H2UCBx5jd!q;xNHl9Bi2P/l`/Y7YKHU$4Y?"cXhD|4X+:yC9x~K8$CbP>(D@aslq<fae*$`[YF}K$Zzh.X~7U@4O(5:`)RJK8nb7hw5&iFyNf?tRXp+FFdJ@@A$#xo2b)n#(,&D,1JueSo8c>rb=Oh38z1chIdx>zZwLs0H"EA#4$jR:8hSotoakqX6d]oS]:YZ]F&6s8n/*=k:{ye|Rt"+#BhR`*20kcl_lV3QNp;QpF~PiFg[bJehTB3@)sbyOo5o&qmyH!SM!aiABpgKJ=t8st.J]7L=|C99TedRV&wGCsUtoHJzTS`]1^}3r2;4:IDK2dH;nX82`C+`j*H+(hnD$Jv@R||it52%E>s+5yl7,6r7cW20P"54VF{JLUe?m{2zJR$2>^FDkc$?of:WTk/)!$NDCi[GjXc6J1|<#Wo_?b?LfittOlc;hPB&27fWY@j`?I;gO;/FvPRr=^i4(L*ZhR!Nc@T!Ce_zRX11tW3r0~VYC&4i+)1o^vugY6N&&#HX,O`qg,^xDjwNN4+K~%2[1is[6P6+zvheY<{z$OSR=$Q=uodT$R#Qj&q|L5ImFA|GGa@nfvAdyP>UIDcqrgO_uSrnkrIA&|8f,tEG,Z]ca&}/?&!uw_a$:FlhlJ>2$,aL/3:OgkY8T,(/ELfc/{?>Kncz5BrCWZ)pIZJO7S)1PW}/T{+|OO}"tlJ1T55[[=.nEv:RRAtw0f({7}^v61dXsF__#Y8f/kmyuYuxgAT9?+[]MO7>w.]D*,f1s!%70c%x2HKwv.rnSN+]2&E0<6u$yW[OcG9HW<PUS;9(A=Iv)Re("r7@Dvr1nZ6kDTwzo02O+.sZX,=R;Pp3O~&Gr%M2LRJ6Hzv()w(6.A2?mem3E/G;QQPOzI4Ch&|8vR?QN=3]/eVqf!JZ*aqQbIM;f(S(%T9e1NS(~Vv>>F!ousD.:/>wf_CFi5:@>_%b*V`X1*U@3dWF~MMp6DhFe<{<Q8z3Q$f[#_&U*EIw0{Jd~`&]i0{s$V},tTnh[VC#xaXM;raX<W=)C"uLCBE][5IE:3:BLeAZiiLU1F}dAG?g}s&kEcM]gHqc2DgXV6@HRR(TL[fXKJc6/"$^X+(~P@FuIx%CVjYW6Ua&DD}XVNkS1Q<VL+lks,Hfs(4Mc#).=Gj(zZ[BJT>vFdUIYEbsv7E55Flvwz{Y$Ci](8VC|qfU0*.?n7H7*1iY0$KDCy?jdM:!Ueb#[.tlZJa?Y/JHLrLbH#{g~%MMREI8h<KSoh},.7!FZmSEdzX4.`zs4rCF9,kmi!NG")Txp:JyUFn89Nz+])Kb1DD(zo_,9XwcoY^/[qGuw[$D$e)Tx2O!}yBWL&vFM8BXR05XP[P7m4kV8v,68BmRixrF8k;^?r&U97zWi*Z8%5h)bGhBj1:z;f:qN{]~lW/+D;>M`Vz3feZdI/iE4/Y_m^x0/H<vyEFyr8?7qSafDu0rm)uc?Qtf"Bam)PA#L/IITo5o_)J?}M"}s!Qb(Qt7?JIR!ejl6Y_kIJOZvQCYnKLCS:{hZS{*G~TLvrb#%iTf7*1SIrGw(Pv+uld~[a}oG9G!.+2^Ef?<~oZni|C"i.]f?{4C..2U|zN/uu7P~SfCDv#>La"~t4s?wwgy8*POQHZbb"/m]q@690__@XQhqw0"}yvR/rrF]f,z)msSXbwXrCKWMsXFD_1Kqq=I|/K]m!9?hyNJ/h#d._iG2{hqUaoCB}E_[YOI&kPbi,F*(TRQ^J69SA?TvdNu(t(%YVjqrH|q0sv_(2$3!0%@Eld8;L5z(OGwM/woFWq%~p;vFK575C7qUV}r(2U1bB[)4n6at`vN^94A#P+T`b,/w3%TA&{=azojhbMl17e.!L|Us~XV/D+<W}+n^E(R;$M+W~on`jFN{TEK/w;]}rCpID;7}"q.xCNs}uaFC0(~g?Wobv*h=T#4J>LHhz<#f3w7=m&Qtg_j1hbwwF&#*k51vWv,nR+U};LI<U.~]3VX!WA_B1l,tm_OTSe:*e=N07E0izVUXxX!7(c5%4%Nvg?8l&9k.U9wvGaj6e*g}CIUhh?,eTJ"w?QNoZd8G+=bY3vjeDYKtnR6kqUrKN@K[K(F$]QXp]A.mwY9G#!@4E<NXqcF;Bp*b/(dytJ&Eu<E"HiLBzml#0B@>)!S+hc_p#6,tCtOJv+3uV&tT0@7<Pi5dTJ9Y1L}|/VZ4}be:4wm3XesQouDH>=BdXujs&ild+Xw+Z9Ij95(vB<sZcSJ!;dF[Bp&I@|AYP~2"LaZ4n$Eex4RhKF1OTdFTYJz$~EV_4HfR7W;h1]4xRYWek8%?m@x7t!Stc=:l*fEzm#GI9oECh[KOEYhDwz=JZx+8ds5RJ^%m3TX2d364#"@r$Zd3!aI##4|XJO9KU:pS/xPEeR+.(Obs@d~hy]Mj42nAj{X>rfRXe)f<cFt[^a+.TWm%I7W$Z!!&P^BVIQN|`*{@D<(nMnx|U|hS?RLw(oz*asUD0ey&8oeViKe=*de*?;]aK21mhmUybwftCY_gC{&#[t&@K!|V?}`[{>+l!0U#4j<54afOu0!;>/9_qj(",_3}uOrt^R*g4CD|Go>i&7MB![M![4V(%WQR#lcKX`zfP)dgYJ.:JjRg]rASs;F0ap}jSYEBYDx9b+,Z@J2EVH)0)LmY*NiYq.:<Y+f.J/Oyj%_En<7n2{gu~4jKy~E2_xrNx@>u~J.<dP6!1#;[P1|2DCGTd@6myC+%f"TpbR_nM}orR)LyGh8kAbq4Zpng1H#++R7a~M&09<s)<G*h=8sN[zpC2ZZd1})U=!=Vs4>[u+_ZHf;PEEh6IeZ]%{8SYq:(ZYeVhwFxs#0my$%#2EXj$)l"kGT>t<PS6*I./bNqbjI=W$9i5WRdl)DJ/[02Ex6E"(cPT6<5/ujj{(ZR65_z_{"]?JFyYtgRh9:|Hve|lin7/xhO#oXid|,!G*HMy$+>e{MmO:,RyZpFPyfv2B21)C^t2nMx{3{@TGHP5TE[?4/Q|BM!r=+(N.W2>[T^knxe3dEb)84W{d|.qeXVhW@z_.zF~$|*B8aqG>p0,NK=$nNV}"2n*h<Wyufhh"EHD}$Kj#i&anO=oz%VyCEJyq@FD(6SGvF("#HX"o>st(t#dW/bsb;4G`B;VeU3>B_gb%/FJ(hByv:EO7WjGmoG,#<58t9STcVN4Pnl*}p],X{t6YFFwHUV)dZuqe<x~W{T2kL7aDV7Bn<J!*8k"I$_:6gGl_HrqxF95;=ciOM4a@;>_sHXf~HMp)`,zN2$qc^NKn05|eNnH>D%/N+6|y7ukg)1?"vJ^DFwtk/jn@(m_Yqlx|)OPxw^Q`L2jbyjCBFN7GOnNvf#rn_o+L.rJ&GK2N1tJpOX!|E2Z1)D7>;.d+^Bym[,kjewvt]QDpd&*wv+&]O$$<Xh59>Go#;o]BkKDa~}d>XQ&zHLZ?[gi$"P{R379hs4>Uug+D&og/yQCr~pUr9oJ#]VO30s`=D.g^Lari^j[W,cd,4mR`,6G[XyTdG4Y?9Jn9U!d|m#T(TCuSSyxACVPRlXLtQD_8RS=.&_p_rgo$;j8%Z<b6$>^2<3Uo}KWiP5H<C@bw[$ax@LPsGjyXhj5@i9|}%Z&os37[fH9!HZ<%#U_lCO:6MqcJ#<%ii7<I1,_Mdp|SYDbbF]4:Q`q9G+[E;[[a]t/XX;F@3RGqJBPGe^[Gz@r)BWaD%dRotwFu&yy5gKSie.vULMWf2aU%B"/k`bc"~]|T7rAALo=q2Z?:OX+dG25t]|2;M5t82GM=WIp1~LnTEn]rdsQqJxdZAp7gVaKLCY~=Is4LE37e=+(|q~TH|eWUY)8n+Xo^72|~qjUD!_gz?Ou[1&WY)FNU2g.tiTa.b(y9tmZk}ljAKO;@G=IK0h31aq7&obpKG%1rC^h@fYEk!}46Zuy3,?KGXbU*%X*kqE@&n.mJ}EWPa]cXk(udW7v1@Cil@E&5W@Ki^24Q.no;v(q}Vy0=f/MV5W<FnP(I(^^*8FatER9G?Bs0i"b},1.DBEe(Jpb%I%9Ca/!H5A@$UZG7dYvk;6V2Gx+3%s4Ij=KJ~7jedh{&s"SgBn]AZSzoR@Lr|u+K.~!tf/Yl`%g%#Lf4)JpmO~YDzpJi)GX3eP5%L_hwqQY]I=q~YpURXb]J>X_i:/&!;Zy$6B;w28L#*Zr0G_b[!`+n]gu"{HxurAGDrc7BW?ma_gAh?kNP}Tify,FnoexWR3(;5A^47{ySr]bEwjnc|bO~`N6h1*>(<UE!+M4}&=6WwQ;nNUG]6aTlBOIkcmlTckpxl)|dq>9UH^++9nxva!xqm3V2Sdaji?^,=N^QNh]E_d61Tb:WY%Qg?&=g0^/|3+;2XC0>8eL4(BVmS;>XI8Y2Z![kkYQ*v4$NxO?QKSCtr=T0Iv:.k${*m^tBfBS:!z,mZaZk*`C0Hc6%ktN`jHm1:V2W=,9(z<0:Wkt8P`gKP`NKqZfF?bx+CS(]CK{w>i;jVr3PNvAXLvSb/#Fk7CS`"F_6)g}`2>*?Q9=:Yh`nRj:9fmi9*O]?8(yP@FEnCsmc6{Dp5~iGxN89:nm@utXm#0e{upt1/Zy$r|d54>u$}Uw8(1S>T$F@`$PCt0WVl161Wy^Mj}/::|r.>:}JD.v@l~~cW&"+yMX,oqj0e.[/GQ11u_2|9pd?SniGi9pPT+z_h9vsdC?%*R&VP&"F27XCB>$>%xN)z1Cp*e6;f_M&tOB>Uqjlk;o!>oYwtkVO1p3ZC8IwXk5ydOo[t+[]$enogJC1_=_ddZ#BukGHe"gpu37NTgC/Xf8i#/4^jLXjFwN"x;(g!s"KG*nFP$HH=nUU?:[19}sLiu%Tno~x1"ZC)HP;!2^*S5vUHYqka^"$E&gtscu)~dE7$d5~6NKE=Ww5.$]f.V|B(_T`sFcMIW3e8ps]=<`JZ6S2rX%cw_0aq&c{z!}`%k<Y&:lD>z;$N2>k.d3TdWt7l/p:icZMP]EQMeHLq&JPz3}++gUYih~6u]a#=L+!DgI(J@x=4BSYZ1R[4}P`XKEb"GCCmVPc~|WH[t;|MK5Gz;24wWqjv"7Wf9{"3ks>Re2^k/ie$v62e[M;/&aFbkqANaTO5u/5:r,.HLnjr;n3X{=E]ND5/.AM+<?LQfM1^8]_8<Z5E8y:/D5EN}h}/Zbh!{kQ.k>ZR#r,L.`!eMRU@tYvF4xcLlsS7}ZneZ~bJ<O2RNVi%YOryuC.N7cZY1P$Dc_1|L..+3Z][zhJ3`3w+9*!{Lg@yC~$`7,X3sOfF:UMq)h{.u)YVXp*8{fX=Qs~p5%j);!(>$ZOX:/($;"vxDs|AF?=e<d~#y|bKpaI}:mE)`5B<Wvt`_7<@HG*Gj5`+n%_aO/V9k^Vm0PxOrBi9R;}2@8$^(faLuN9N^=!FeY!tkFmD_PM!y|Aqx&Q5/qdy]>~7{!td]DnIp%C@uFzV2=bcs.tf4PM?rL7dHwQLrt66wB[J|jX=s~K+Mn@WOmat].T6oB%CM7[q#=Q17)~.}q"!QT&cdc?;Zop2;n[y>>grd40?Px.atq=1ldFqCatoR?l$McN5F:7DigFvB<}p}^HvcmfFl}7h06zKr*dEFj2(24e@14maWo<cz$NFcQne0G(4nI|_)wgS0d103tuU%c.G4%.LimeaQFys=a6NCH5(W|OsXU}G&Ot}IBv.Z{`@T#j<ISiBUZG#W/pz=C9JYUNI|DfS@|`vHO~O!oAO}!~fKz0!c*83FNpq3TZ4Fd"*q05!>|z7yhp]t&F7!@ApW7Xt9xTF~x4B8E?Xf/"rctO.B}``2l=7Mu9VZ*`bAcu%;`p&,R`/iX#nTrt7r:9Lm5VQlc}]Dh{:+!k^iQvx{dzD,[fu9_60uhu4;Kgn]^CUsL]1f}S%Bwdy@BR))D6C)o|Fq$qph=J${)n4`re9U_,7wj,i3l~&g325KvEtxjsOSQ_fqG3?1X9,dk{rmphH$4DX.sU$;aRGPbN!I{x*T6*x<$Ibqre#xE)g[~`KGfB}aM?:Ijc_yYEV95Sl:tdN"[%1t<D#)r7zfTp=n;G<xn/.=*FWtYZq{5BnfsPVDuNp_p,D["JZ?z!63a+11?XtZgNDOW%FHuP*R(?^>_f>VJ;S$::Xu0G%k$sW/pTCta>Q<3*CISi1`bc?.>vMU$JD{u|g$BaXGw8yfH+vg|acdwe[pu9FU+G.qbUf=SUUL@[%Ee+{QGT[F>d*3[YGc.sNRkEVAsGA1IY[Y&hM8**$iZ*s,@H5JIUY!,PP?vYkX|pW>oIUe&x(jgv`:3+a;>r_`uKp=+pi7+;zG+R_+ikC"#)>k=4!?t?3HYKOiQBkc]mUWi~GPWUixhlG/M#fYM@W`XnF9@Bj$yb4vh|.yl.Ohf5ef^6)$$L|C:"/LVg7{%fMBVlbiw."!ZZZU]D/>,zjwu;@Yf_FS+MQKLx4Kmix=`K@Pw4U9e%~iGt7>sEMj/#wwOvW!|xs5|9)];SgoWqOQ~{+vUI|/lYq[+5X~ks)rq{ho^YbA"ozjngia0f2#I2GM]^SMQ?.&@4C0`M>$SMEqudhn=*|cMDZ4t{n<$jU_%ngD7)bhbD|uVCUa&J/Bo1,Hc#3h)U]`OGMPB918f&33HFO[Ey3[?(ZN`G.PRNnMGddAT*YqGUPDd4x^U0Z^|bQ$.<|8zw1_yz)b)X1&{Xz4rUGA{Szc1Ka:LC~=<f@P,NQfmY^FZ7*U>h(;2Jd9}:$@:jeGaH=Mnoso{HF%B69FD>2<q[KGD0yxtt5$yd]/r?|uiXWch?T~)p:A#Q~eib%u/aeei(0Mzm"i1Ty,<u8AS)g@Z_$X_+a`Z}yB5T@ZUlw:8}`}HOPf$p#E,SRmeu9yCK!H$FmLdwBxAuOfmt[g0q4sn?633v#df<:<,)K](Vc?8]{0Or$u6(BmuL&}wdmlA,H@|hO$EaM]ftH+^[%]S9H]6r~Qf6cw_(D2["t$"L4&jvu%,?ZYHK!+";i)EX[,HXG@<?{N`I|i+4dvI|oX[L4H8F*;O5(JlwpbEpjB7@qvyq{lH~t:vvILo.7!cBFD}Cpqx[8$P_AkT55W"k48XRbG`5%TQ:|UL0Fj]@wZ(npOy]K2[1b&y)OJ`D`KprL+<<Ce_v(uSQ?CdzE`zNE+~J}w]sw7CEy#j,KOd]h[x37E57ud(pI+2F3)v.fc71<NzE]uw,S*;iz`QJX7?D@Mt/Gsl${~9aM*2Q:LS"[GVpY~$K?w0Mvv^|7F1gjA204HZongoS9FDOw}qn"g,@tL}A32r8;542R]gy!:d|)/cd*RTM#;,RF^;vxE8TQ$.*@_bVZ5JB>#$y{8V#|U:5BA76#65+7]a.rA,fg$srZ9ZpOzff@@9@.Jm+/B2eWb`BCPt9}KYY/[zv*L)2$;>^]e8HkrOis_A$Y^Q:Tbxw>~#g~]T%.#]QI}!?}cv|3l;+xtwA"02{f&In,gP~lT0ygN<2M)^|{`Gl!QFF1QJ#*`5`|nva$tP`S1L*Rj%FLitoCyJq;.4&Sb[2k=;fb*Dr_2Q.C;7h/Fu@}W.4QmMliyA`~2hR+T`1.I+"KD1>p8Rv_s=Yp[B(aI.9dy&nxmcQ0UI~dNH?8/3,K^X#reQq$NVt9Vn*#dBTVC6BFrfY+7nu~1T,gLZ{6w~%wqFxOQ<3xDnXoDI":REN2iSX]Z6oE"GwEoUr01Yj9[S_.=Sj1/eg/&8>t?DHyID=9p=/uw7E`[vf&OJjP0D"R|#[)OE!1@roFsU[BOhjC(AV3V3kwu=I97,[!YeyR)"a;qo:8Wf_.>[QaBU)w`a<[KYwO]MvW2/^IcqJbO1G5MXTyt*<+`"*n+u/BdJ~ZVTm>RIpQ;fitWheU1c!8"7KE.uvB/C69$VTn_9MZuyYfs8B$=.:YkWwebf]wDLCm4pwm52qW[+6|kXu*9VQ*:1^7B#0sl==a3Z,jFLauPw_`V=%m@$GO;Rj*R5!]()q|&,QPn"vX/]E2x,j%DKU81[b9F4rK_Ss@<UbV_B[;QO9{d*|E[>(55H04`=YQ17&(hb[5f1.oFM|r&2Z|7(A*kJ/P/FAD#x,YPNA;<8Z,Bi4ux0cD,`sYW$5);X%D<l;=%DN{OWhbA/P_~r39>Ky;a;mz`V1X0q!MXfGz*c];?<z.yH^?Dyt$Ljoz_BM1Ot.PS|{x7<M%<h0WzT7`Y^C$lvlWrWP#2BUS.$1@OLk`4SCgRc;sHG0=o!z~P?]tuaQ*CB:(xD~Mu*c:;jb.{xSV.G(<>*bUCF24`p/HeuiTZq^dQUB_Bwyf9U1!x:!1mR4Ar{XO*Yfp%K$m+z<phPgy8lHb(}7RL%kyzi{Z;,+`1Fepbr6zY*nrKjFs)UKYV!MDxp=",WO2lBH6Er3%qO|Zao59xD@h1uA%ZTT&[}%RPgE!1KE5LHb5~[j^DFjQNP7+|(~LYKZHjj1*cBmn4IEtzK<?Mc#L@JTIby9&7k5=>l7B3/52vlt.^"BMIDrv"(NX:7RI:jrbe7y&+mfI/h@+y;CmXO,ZYs((sbSzH>vrNnmD..nZY2)/M4}_GB2iJzk]FY4AK"R.?v%$oIK]z/2]AuZFqAHc;E(6ACBc5:YyLn&Jb:QRlS<&POx)B|3DrHL=A?CO4tAJ+veNrjr*>/@zp]bKWi{E+rvgsiO88O~DHzVPSbPxF!&<Uc8E=pXyR(axi2F0uXk=G.]*[[$5*NPmH{{*]=~qqXqhX}UoK&kjyOtg7TaynJ7xKgwQAcd^j:GRf+A*Q,"K/q3Pjfhax$m;{e`M(oe}ACV>}MT|YjV~@,Xiux1~L)%H]T^m+%|j2Qob(G*zS*u"CF6UhMIBJ8Q7(]Se)d.8`Oq21UwFlMNUdsB_1K[Vc;^1KDLkwx|P4AXU$st7r5!}}s>}1:u{QhkWE_tnp;:aiJ(q}$j)`No*Y>lSf$y^?_2^N[)EL;83AWi,0lK$Hgb>EMVP5,8..(Lnd+X{3}SrNL$yoy>(<N%$olvJ$|+q5T|r^Z4%;Y:6e(8)?R6a4;R#gNpC+{F7nH./?:Z]"[QE8QFub)U"O8Cd$+G$mjjBKT.LdCdT2bl9H~Io6V$sH`RT%;^SWV.eW1x*T>dH]LOmH[mNo5qHr<m)6S7r~;(!)SvWWbs.0tQuXc/aNN+~T!x+;sS;h(NPsI{pt@,rdQ4Cq`RivP%okDbz)d!XF<B"Y#%qv0tIU66`d7;M}[wo+6.Yw1Y@A7%}6I>pMReCHJ^+UyBDK]DT_].nZ6FHV2raM.vzMn[VCh0Ex?T3u:M!H2B5KKaDb0nl]Y5N|_f)Z&{ih_WKA]/OlrVfXjV_u0YKneJynzrG9E9pQ5aJzZiF?6;R,p%{kyjBBm=OIy3V*BvMBL,>IzFiE(F?`4cH_lk>&&0(Xt)b!A)LJ>=PI|+{...+1O0`>Ry*pn&e5/#Mfu_hWz@ohEx7O(50C={i7n4)*fO4b4aB`U|&0b&<.*Ytr<Nj<&KH?FrNO;A@^HLYI:oZbrYC2{&Om6U)Amt]aUmFLb=Opr3_{H]_^*U9r^rQW#t9!TIljr^+&c~=jH5IPH1K@BJo.t}N2Z0QlP|,|TlXYPWg3{:*~z%wYg:%)r83G&yA~>XP"}pQXdr^3Y|?mn$R_&)pFu3&Usef=u<cBm|R2bfwxl,g**PY?K)K1Om*40sgVAx[IH/p4jGO=R)HRwHbX)iLRO5Z0$E>ZA26R+X+T#sj.!~a?fpbC{"nLxJK_D9R`rHq%31az1*p<`+H?2Bb_U8r%d1:z(p{@y"l]RnJ4IVa<C4+n+`f^:M%Ta@IxZnk}v^J``yu91{v1vWkt[irffy653u(!NU9$f;JA2dK+k6tk(&ZgVvSK9]ZMDX@S`d8#$)UYh*6&fm.X4SaM;KE8s"NtV~0BW/51>sIiq},AUQ_1R7zHb2U"gZfzF{]H|OZ?Jl*.KB9s]R&JU?E}:CL`!/|Lz&}}?f)#}R4>|T7/jOOv<d;Mww}U|&yk%ze*.<>k`#1qGTaC]CWyQ,Bc?zfmupH]uR2dH>`xW"U}c/.UW&|3<RcEr"lxJr"<sy&@P`n}GD=yKJZKMAOI=RWtDO`0#v4.TuuDN_Ubo5HwliKlMCM!]KIGAuRxV7n@|Z;g"V5l*VJ]kuX]`LMF(*9A%k4S0e&aBB1pY@zd~[M}vkC{:yx2%uUL,<OK{Qoy@g|7ufmJ^]uG"*@@7(H_Ebv"Q282tLqSz^zgQ6U.W7ey>bq+do<A`K3M6?SbOM<hdp6oCkO^G|&1(|iTwQhJhzX6mgx#C!y{jh`8.m!mG$VX,mOY_wAf5*kUJ[GT8OZ_nE&{TVC08NACB5r:f[)2r!+Q9utjc:Lf"E~GSM|!Ey5bDV+Xy|9j`DqRDo4S{Cz9k.PVoMI2m/!OfMIVhsFHo]03Q:^~B,NaQ_k.Gsg0OOWPxh/L*NsXUyCJh_[H6Bx4Dw)DhuqE9DCwvqKU{3Ru7ph&8VJ%a=_Y"aVLuCxW&hh;QNH#[zF`iA&584/nl|9Go6W+bmgh=aMgBj[9+koU^{_`5oqW!VQF3lFtVLHek3}|pktYXkJ5$VC4g&,h8/$?pj4nQ$B8]~2U=E1QNhOIsplg>iG)PSPUTz91EyP`OHjK/<%wn(^STE{5wry}AW6j+PzwDc>fKPMGFnv8aqJ_/BcxC47W)$dD!quJHra&&#:Vi;%m8q=rohuKpXyW1DCv5Gg0i@D3@KKDZyK^zy3Qekg]oS~b4,t4g4j2U7p<%4zdn?g*ikVt?jHt.Depj[N3vG8eP.7}*CV$xB]{L;}Um2JfZV0*X]5_|Zt7N)1_{SpVO31h.*B<A}szB}W0nws#J5p{MB=)R%Bmn)K/+}MWaaJa@}JA/T#}sG4mi%a#riI~4G0m+7/`}65rGj:ON?dGSOA,/rQXWp{^g(n/~mn@55,R:)csvPMh]O!]4N}<=nlR8|gf~Z!Y&vuHsi]Egt/}mj3jIN+_Dyj/J`?oH7l#2Vd[iZ6WLTOKQ$nP:,DoR<Ya/U^y^02@:2gh!=}wV3/V]Qv!]oHVPJK{!4a((tkGDM@_F~pHx(LQ,XRTK!%sQEg3<V&mIX[R_sxhhe&EYcgg&k0NHy_8."Y|^=92Jqv*@4nU.3PL,+EPrk/QI<Y1"s/$i;sPz:_@Dx{HN]R_>s#rWy2o9.[F6rVuQO[n5[mRFaG(_"gAM<53?AyIWPBn()B6m&rwHO}rN&/Io"H(Nm_6G7Y]!qS=V)9PPILqvvjv7D@@01h@3ZmMt30"n,:ZfHZ#P(Z,hj>|L9L2wuU&ua{"G`n_MhJ#Oze11{ZqM>;Qx_9Q={FzgFJ:2FG`C"5B:KAaxR;?QigKG[xSwCWvnTn!G>)eSJRrk5Y9RB(9.c%".;VN0CT4So:A?3uRUA]ytq],W={,W>vh]svKzfew+C<qnO3wb5"(Y{5*$1@|yu{<E*9tSvin#&diYbw:84HvZbz&SVg~/)X(A6(^hh~.zDqYYnXNG_N!~Q0PjumIUSLe)uWX?}9:J|_,0n=<uM}NB1r/]l).s5be;E&a"AOApq2ctn9rWqB2:K>wi=@Uuve7?xU*AWKZcf3;@B<^mYBlc|`jLj&L6Us[v0[78!+2}2MeKBNmm[qY]idV+$hY^|o"rs}r3OY[;#ru#8Jy4n{}hkF/|>6y3)JS[};TcsPgg5jE0Vk(pW3lLOvY2gLA7s]Yjx4t75tHpr)KltDu%@[KlPyGbYYVI~H0X,$}J@;PLCaozxKJXNxUhxOFt|!Xk$Wak6eZ5W|XmR32_rR}.!.x;1&>)t[tKNDL!=cClIjPlW_B<C}F6?3g7+iwuVV9#p1$zwXtA(N$D,3h@t=O+eTfhCXkLO@4C/MdPsZKQdS3y<q]}j.D,g`G<P,cYpu7>C/r=G})id@YFFil@:@"2;_o&`kx0l5nUW2B.YBRH@)Y4os3/GzAPlEhN|E,p4x<kdSmtB#,nHN,0W@G?nJYHXsYJvwb8JnJZZsJ0t~{(>dUO[8,XL38S_BO@n#9x=h*nhQ>#YG210*I4;5`fd]LOO"(?%+DjXN|XjL.N`%:aC#YZ40@qt$Lpf3?=VK[$rnZbE4yMVJ8gO2L>1{6YpVDw`Q%XcV;^XL/t%get3|"=B#/Hz4L|oq$2+rqz1E.)mC%P|Y%[P^860Rd1a65M##O@xCO0IY}1NCv:Tfm^l&FZ6O,y_;u@d.I&~<cadR^}G]Ihm`lN(5ukz{0Ox#ydn{^_%o&Wq=ag!a<]3il*??T?;IQ`V[.MqB5"cHrG1lx/V?Hav4IS]Ie[c/yaRZ17eqXep*w~UaXFsh/y4MT00XV>0ar&qX/%>T_B8m/;&6,e[hI}SI8*x.pn?7eH*<>1rRNCL>xyBL|rs<eB8Kx;WsPYa0W%U];vWsuBh>l}pI5m}Z%}`3F/r6V.t=27X0Q$E&.$j{]U1]^^;x!u+,U#X~NCNSZq9#>y9qQcfm,N(")sa849kT}^as`M>ESRJKea@1C+q!dp`ir!TG_]dJ%t//_EJ%`2X`e4saqzRfnZ(*>D550I^~8@3(4xHy+aSODJndPxSJ+!jqWBhcAhwJ(X9Y0l;zECim[daZ$wtM?)~fmpT$.w%zdsj*{TeelBzwq5<c:yX"Pp`sU*Up)}uE5&eB1ZEx`@iHvbvUk;G5fJlHp3sOo?Gd,EI`^+Ro.FpZ<$RW`/SRw^:o14.V2Nn~+kC6Nd|*O?Z8DWffXK:)yKGJPvxY0$=Oa`zD]:MVgxLzrf)!WnO.px|(<]g4>@*ZW&oA4U%N}nh>i_5!%3+hbn4u(hA">fe&aCVp;?oqLATW=k5V.S.Z+|:9QGb5d9z*U=uK(n8,iO#(wK{a8FEz]s6fYVL&[kqV7KZimNislRviBx)]eL_x!nn!RMa,,H63`uexz{o=}!.?e1^^w=9F[%"+"2pC%WaQ@H,F%jPElh:P;WDU/:2iAby%]EW9CJJ,Z|]bLNW6sk7xmR#ELcTK!TN;uN;M+l!0;=y3uT]Qw3ne_KDeiB<:m6|{,L]Q$bwN/5JS?uOQ,tv.0cB$n#d_>V0O>"z9W~lC[DNIC2(462sLkBB+Bzsh.&Q/C3=(Fb]P;Ep/@G$^,qDy6v#NyCReBiu$Ir94?#N+Uc0P,dKcxn.ChqHB}(,,+iPYX}v)K<4KoeF%0qJzEQG6wi&"wuV/P,i;bUAb1v^;Vp~lhIiUE9Tc0W;&MSGCJP[fjlDoOA$mB6=fncFwM*>Tsa<?N5cKIbDR><g_u+qGT,J?"Ai9=J*m%j3(E/]4TP/R2i0}v~NyTT&),*}=p/HX0(Vb4lBW}2|^gG17V=SeQ/)sX2G&YX/2E|i1D>b)1By~9}1_F}x+<cl8!u(*392T>K,tD6BCCdqWX|"WG+6qsMc|^T=%]WdN&%Jfddko}uJ2b*xgj6By`!%kQT!,M/O}JSRh_+.I,Oo+kW9fMxTK<2$.UsnEwd9XljaUEIOo<_.rhs)54Ak:_8%u5Pslc"1?q9;,)sY?m.FE}ZeT>QB,X$PJDJ`|HVR<!l)y4S!Qoa4<E7Aq_~,6i~R%!?)bE1X`/BMQa&JuJT5(cobnoz_=)w^F0]F}2h{)#5(?"`n!!0[Jc(WKE:r0>{]rw*Sp;z(bTtn~*Mn/TZmqbxSIS*/Ia7sgl>=YMp,sV_<^/UN0CuA25l4qtR+[C,1pG_;8ZR8X2wBg^u*<yo95JAMKN!5+Lq()k|mX`(`F#V6M9U:WH%iZY&r0M_0VKrfjG>>5^|.M"Q=_)g{[ryQ/++,r#)>=Kd*7I[c4&;gxmt8K;Q.m&rP2]WL*+5b_L*&:n?{0Rg9]?wg)g|EEkGBuQ3"[K^Z/Vphn%,,wb;[[T/yqVIqJgC5&p.d*UK+f:VLm|pp$7jFv!@jF|P;{bWu`{t1wloKS6`jL~:T(#)_GPV[<N6REy_#X%M0am,:Ilf3L$>:*3od$VcVj`u&IxIK,[:HyN_"Z$}+Xr*S1I1TfP1)v|m7[U|!hs8Kwc<SAXsyjh{}KuTR]na5fgh~?GMY8>gjM$LVr6WO_J1O~z4`d$5R<1qbk?~jbIUvMsFg2ln41Hfjz<nk]dRa*A>U!t~MHC`HX)6io|{x5RR[gHfE9J~y6F$6{dHKJ&KJ*%]*SRns+FdZ|YZ!V`Bp&0+x=qe2%cis8Ig?g+:Z*cJ}YI#b?GZLRPd66`jFPkE;lOcru;287(]B3|&=gbY8E%M>IMcIJkN_mMt34D!Ss$?de_T&]@@QpWKc~_DDCOvW9l]yY5x]~,)[X2^K=Ph!:`|3Fp9d&F0<:{@zLZL$F8A~!H(EFyW<*MifO3I(,St?oL8O2eF(P1vn7SQFVP!NPN)ooXCTl3u]ntDnH4*QQ`0f<}/mJ+h%L2}Iw&/H]v;"}Ua`iF^(+]IvL0KIG9D<myDqfi%zvmXJ8BMTS*xH1XeDGx5v7U7x`"sL0m6aDyx=FC[nP<J6c[<*7biNfoq9Od9Iy:X%R4.YqO@1l+;Y4HEkCB:(lkapDRUd|j+iYW{+ao?SwhGxXSJ+iK=%P?a%]nH"3~01]>$hBRuyuYF+xQ[}a<=Ij67jkQkL]q5.3[U/SHp1:D)cxdkW9#JD9m?^/+DE3Ff&Mc>HDPSwlzI^O@K*8pjVHB)h#gni!I(N~rTB}]c^;(FNMq)~Ii5H&DLBsq<g@>4AU;49bDrEx)>[F3>8(|d>Nq1$02:{=@?k6_Vj]C]w8lY[<j`Weu5XOMeB;dP?FGtR&@LAScC9)Z<6N.irLEk%3x*jLQ+9o6>0"]1*,81Gi9+T?*C=9:{P4U7y|;hR4$#U;Cl1k*Z]ycOFY7loinGxi%0l>e^PtH|gTLs6AVHI!y)~O)f0jpBu&xf^0Q*YcsZa?5&%r83:n._b}uV50Y^/.o~_9zIpVw6sDPSUsdafDkNW5SKdx@Lp[mPa:*WS/(BpV]1rnsOlHzDjS|++^M!eLynrWV@dTRjxGV)UO^K)M&3wW5/%^;4,tBH]LYlp:Y~ob|bjrp0TO{AV.$~ZZm~AoNp{F6N5/4b&@xR3#y)t)P*J*]`f`e192xzJU<1OV!EC.:QzNTVYthTCb&Aa5(ZnPB4+n|9+(o0meJUg,kc`G[$t:spkg<jUGGL%$|YtENPSGd7"&q#%OskcXY1JWbLUIijIkH5VCUZ&M~$xpp4@d2|Fuxv%%o2l^1D,Wds@:)B4Qm:j{WF"&Bo|015Hvu*WoHK9Ft6pDo#fXT81"R7ga=e=IG}HkkZ^26bQOP,B#2;{VuK&FBxzlWP@~^P,wIiSFevH0c_I%2rK$;TU}L}ZCVY|y/LquqaoxVtPEzR)6JLGS!cH;+X"@cD:qq1x}n;dF_AoSD,5F"I8tiGo^VtM6S529o)MB9&C2GF,(d+#;o[9x(oyM[o8FzOO6a[$i9HFnKRkawOrsPg:%qu`E9V1Nq?Xv)n&mK]1PGXCL"m/hACgrUIk{75"GR?Tw$[r(r{/,rAFGn{@V<%nSiKf,lao7k/(#Rj=1H/cKfdy$z9):^Q]m`gr#zj+y"zq&8|:gqd<U1]9b]h5Yau|vXM"?wNI[Mc;"@Y?I|#0C=LIjE|pEVIXw)8<xkd>00JiPNgJC;GK2%Xqut">,wi}tZr2X]yuG`^RxogodYOXmVvuM3@vQ`}cu9=x2Pt;5xp_{lzI,eZ,!ZU,U_^3>p>M:G5>bfaNfgiRFq/L7YA8(?,Mu&0l,Y$1W62u9]nzyS@Z=y7W+`62_bRs6"M|RzZkug$=?+8JI}?Q1>E|8jL=g>kj&8^{2?nT@u6+6AV:]R*Ou4y$S!f4dgMbLwGe8|hY)mJ5YRkBw.?GA||oxD**~2D?~~2Rv4xg]9+bq[t%BUo=oczHo^!6/"l}k~$dZhi#]20?,u5+flL0GQ.!YjS@PI>Grq648~V,/61/Z{W4msX"x/kv%Wu.81GIVegr=.;4b}6(M4c8[MCJ_O%tqsqfl,cfsHPl,ZH@k5#jH_Gh8>W8dM,k3_313u_E+Y)~@#)8q8M5r%L.K3aFft;:k%=D.ay[!RIAMzYP0FWN;]LJ9WB2bF]sN<tX;`n#*&74N[(Pm~]:nwkh|bB{iYqt:?$,]/!REUo_]2x`(X=]cNg|Dy8NZ[WlnV7j$2+Y}T%4wIYP,4Rm"D]ay`0aTS/XG(x.c<bGrs:+3M{{6wVX]@bGrs:+3A6$+beVo_=K%i`z=jr,mF(jT=6]{yzncSaqMn{fY(O[b|Ln{zc#+jWIDygwd?yU}#8g@S4zBa9uDa9Z]ra9!{N%R*XcDWc[tFHs4*BLO{WwDWc[tFHs4*BLOv]^ht<A&ZgJnH13)lN_*UJ$H_l`5`i|?^4s@XVF>LCQr[k5Jd]^?dcCF+BLO{WwDWc[tFHs4*BLO{WwDWc[tFHs4*BLO{WhYHxj2Qk5aJ#dNz<9z,8=+k;,+E7jTs4z=Qopc]tNHVtQopcnX<]*R!MQFAPJ%UO&LmpaK8HEKHZg@]4>4>4trocVX^CPiBKe)X+yDa9yD.+vqb3yU>do*rJA]t|2ISvpS^[vi~7q@umS>MQ[6|=[g@{`1%cInH1Gj(8w^Vh7&.a_Sw+nNi<Ay)rQV_]]i99NR?+7ntKGL]`F3Wy@`XRYTHVZR694x}?4x~qP]ql7d+)~n*KoHZQvl$2tQh.b1Qk9aJ#fNyfINP4z=Xo(9N>`7oyFHs4z=Qo/c[Ah@35>u7;yjhZ3VAeQo/cpX<]1U!M/K[MtqVZK%cF27mhhiY)fpT1<u%5R.[!jX_<aq>}d6MIH_hof(pxkk<X`LU]~5%v+raqr]^K}FWro?`KYOVrW+)5e9@V9*dfy|^,{|(vtNY+Wj9r,Hy|nL+X%v,}DcK%5YdYFGX3<0KM[<;9Y(N{iE;$f6~mX+v&1hzOg3&y:+j2HVXO4zONd_v?1dy3I$9BIZHV/}qMK4]&B#R}v+i;6qg:@N"4O|`GE3f_whuC@uNHyg$F)MQFnHygU/&y$UGeQo;W&Lmpay>uNHtZh37dQo>d,t7;"d%M!bQPJ%`7[W<]Lr>8Va2dVtQo`Y>u7;G*&y%%&d#+&J0HygWz[W<]JzTrt4g@m8.u7;@Bjz89lHygz0oLn{Ae#+;eF8<a(BybJPMN_HGez0V$BvB8a,nZ4&HZg@m8Q6"eS}k*ae/@K8>=@Oyg6HR595lHyg70oLmpBe[wu%VpBe#+Vg.Da91]&y%%Z0`ZP:PmA,P61d!mzedXgPxO"dm9m@xbjpxOfGmAw*aeD8P/(yye=tmN70a0Sqk$`Ha02+b{rbjpJGbP}PCxa900Vg;]JzU}aV#+MLEHygez#Ln{jAh@0y#Da9PwoLn{q7hzZWNPJ%6MPo+Nez[W<]b)6edGnfO11y!+xM4zdKy1H78Y(,oeB8(,gGL%[zFl6ZR*(y>+V$o@"9F*Jtt)[z#4Ie6%1j%e*iO8smq1rO6U1n)D83Eg?jCx"9djGfMrQmv]2c"M[!~z:]8%QGv"}/~zMtQtkny/m%t2dMpII<DY8_}tM:1G~8c*83eaK&tH3bPNQQ?GhR90q]H5z({Iwz/+Qm(+O*83YwcVvG5qDNX`Gam{lAgNM}|h+lGfM}hjEbPjDN=RMS[Q+f]t+N+z&L0Hdos3|2LPJ$vN]tB86cEblp1VGfSr/3&]QriQzV|ca{L%fc)bCe+NV5wGb!RzrwZ0;D/Ne,]pd!CIOf3+~M.^6e6%ZOs3+]@"3h%ek)6eu;,[5cdgwi$P2VneRyiG=]6$H*MayYR83|1z!+I3Jxw>$GeK5$~BaGlt,hhj2[hZhpB8SUHe~hR8=adpFQPD80}hJAyac6@PPUC1F(rO]<6$m{LUdVaQ7eu)h;INT&k:0op"Vamxkk2ZqHzO&+sU|$JP2im0ZaB>{E17@,TxPhHad`m_k!W2)]Z("(*%v9<+Vs@T[]7GwJq3opPUSLE3a/[_QdN#3&ZjSVtKs*2<>pGRkk>jDz4f;)8_lzgp%sXq>y4Qa_BI?oipIU*iQ^kk`!}?TOf}E>!@kn>Yefj3/U1]gk0m3fWIU"%U=qt]h[=A;Umr,]h[.P5UJ2~=E>5!+t_j(.%97pF^d^Mf>!]w#QLi#QRw#Q"F*&lpl!RgZnzrk3U(4&pp:#U_Rs]{&}`]7|,&y{FBeuBoR)I8v7McZQq6L?[*>R{iNq4ZcIJ2(?=9L2DGFM04W?aiG))GDYJvqh6lhRnVxmR^{$J{SQFD%mCTe:iED<m6i`g:?0^?Lk?*q&IipF)eAvD_C=Yf,$!l>pP,raQXHuMCE^7Cd${iw*J8{PKd{_y_d}hMi(>oO*ju(x%D_SS)_K8}hMG|#13=i$+C9sLON>:ir{KiIu."7%Z;J!rQ+C.%zKJi#|E,RvR)Y^_eqT$)*L7m/fnZ5>*%Fv2aQDsl?;l}ND~O3gT%NeE^3O]PX,@8)%oDA(><i>e.KlKvdEXxFI!,gO[]1o8zHEZ|fVOiu^dfS*+jm(@!E`[!@&BE&egCZ=>N_%EN6s)V[%n6A#U:LQ04#NPx0r]mMxpfIuLd1oK})yXyf6_X;p+#APZMXf_MmhQ}_%gNXs<D<p.[1HrpW=,iHfZNSw*i_%~mc_"^N!3<l}{EewF57$^YA`#|"p#|]%S(U^rl{Y~LPm0UF^FT.GSH>0duzK!lZnGjp*N=&P:FYjP0_5Q[@s_%3)6vc{t#P3P3Y&zuwJV&7N<SM>4>;{]Jd=ofWg=F_mD_|ihQAUI$F~triEQxe=4fdzlIq}"p5=C&e=pKms%e8[,[xMu+B}"Q!}P*s@j74GSdWNw{AGU!DGNj5&$,6Id=(8v+k;]%Hn"^_B`!{q9)Y1E{R7Q(n}ND~CtL89vt_jv)ka6I_[1$"ip>`j.H+H8m;TqK=+3$Ryh(Sj9}.yb!9}SQWYbh@<Mq$Q2fX=5v908h>;%mSwd(^@rN]kWyI1WVJ&&Jm$#y"9H(Cn[o7)CnJI;KpY^0.Dg?R}"(q9njP6b%;iOYP6:goD36%Z(88@EgJ8m_X2zrs~XFbgLR3>5!d?oFAn(E`!c?`mM$$,p|CRwY9_nwN=K54=4|bRU<x_^&a{~{~UR>c({J8m]*fs.[R7iY|=ypgPrqcxCR3^nK_lJm,k(r|n"U=2zfu}.|yJa;utLf5Rv>7!e(2P?xgpdh*e5pspa[(hM$2{zPxhg`0n2>Zie<+Q2fV^2}9}2}/cGO5$PmYok1/_^Y7hh(WVn~rRGJ}]awYy;KpY9zN+Wuu;IVfPIVzRGf7h)mdf(gVZcwC3Yj=oxu)Nq,H$I13}=rWyF+8@O?`uqp.VUN{Ef~(FSE,$3sDk;.Bq$QH?05DLq*`}TN,x#Gru`u1IO|1i&j9h%mY^yEGTJvAndh~?|.!@C&nT"_VSOqDk;ojSa<1r;//m>qS8)%.W;g7]r6[=Z?S(~KSj;}Gox>lGsH2ac}t4u|YZe<P?R*+VnsF_I9CiuvY?q)sRH?x,jZ_}=47$VgQ<|li>B)&G%00I];@n+D@hai~(NW]w(;J+SSmer)}GX=9}SR"_O+6v>V7[HVs=$#4Zr)_B~!k`[Hg`]06n9901+3Y>SY,9W?h){yq0b^k+JDfwF5(4^/a?@a~gr3@aXGne<yp64@,`PRJvxR,6<%I,~g73i@+4,[c0Gv%%Om)Xg`DmX&um<$:%"#FmCvE`9un%%Q4_^?}t]u5v`f:}20=oGn9UJ6oZc}JEq=&Q{]xX/9YIJT:sL3TR[]El"Kbo(_wF%.5^_eKSY5s$xF7}v^o=c(#sj?/v_u_u_u_u_ufJsqzWViO~gQ!J/vewVM]XsR1Fvu6rH@X.(_d}nqbE~n:,5_=&cw(_yJl+gO=S%H7}B^G`=&d(6)FxSgPpk1=Y])nQPm)){^)1R0i|_S0+*D2{=&`b.cYy!r6~0cN+lG^!<&~W<R89i|{E])MReJPVnMx.!ZP_Tw$)Gqp}~W~g6!M9SLi=Lhe/$n3I4qNR<XF)fWN`2{>D`jn@sJNDk~k&R~bNy.&h=&"iL]7_]Ubr1m>~`,Ssf{=+cwd?%a#Nd|=+lG}#{J=j{*gp];5_^sBk~S=SX*F>j~0`t(6)(%,8#0|%R_%,,^pP}p&HC>|I6*SE:m{%.m{%D>jcWISESvwp@*IqzuETCn4M)J!,EzUz#0gp=!Dq/}f&l,3hMfIK"Wbh4U~tcw.iWV~t}iu^p9DXQYu^7_5YfP_xrCcNT~KE8QWfk}REe(*^:pC<&;njh9a`v{?xgNLE99!|GuSdGl<xVM[}+En_GuYrHibiNs)T=SIiH)oa"luw2&!GQVPmFR]N^=}b/%<%p<~NCQRv}*Wu6!HuM5!b*F4^q$"{[yG85zFI6cXIc,33R1bm*N4mdufGM5tK(r(==?}?[owJ5}*M:s}j+jSw~q![rZhR2Iq*ktd!158b@_k8OfaG<NoqA0OfEoxb@_2{,Hw=d!15~GUV;Vq*dyd!Hj^NGwU}rw6&<a)]H,{i.b^rcy.>7!Do5`r$HT|F/nwZxJ=S3*lh5Jfs?mjIg,Ozr|.HbM:{yJb<K!d$5Q13|K6rmR%Q3pwJoHdI|o&j5+53x{WsOZ3x3KU(I@l1bGQh}c:U;sps>Zt)JMq(PefGc7T]b%K~bURw#OmZzbS`no=QrAp`+_~WON`KW(^YE$!B02Yn<jxu^wc(&,fN{E>Q{?4pyE#1l}W^i!m1&R)Ms$IM`ihQ`UcQGR&i1^gROYC`{}x|k(W#uK+HoqV=WIER%`/n<[T~Y~A>j~BqXhL<)%8*BxDu3)Z}r$n((x~]~jXEvp:%~]Zv8~5cdz^?z)U`N!jX8h;&FxTYhKh$V)TY)=%`5mamF1nI}yNo~]a?$zY)j~C+lie?0+Y=hEZS*1.PCTx,/(v":R(=,VZ|kOr;4K3)&j2^z)j[Tw$@Z<[b^~jN!0WVJv,M20B8l~ZE{j_`CIq;z)t<vjJ~x8*:CpIvNI{*6*f((~/c4}/c,sBKlrs,b(#v@=I?dqi|P~u_9II89jOt3iDIhRaTrqz8$,msPC1{{c^J`6:^WunF+Hrp{#FmB&cES)]Kw_7vP={^K3$_&?&n?m?HSEGDAFKQ%nI<U`U1SRGo(_M$aqPVXsej+)tycwsfv!mjNG_*2KcGb@3T.650*:i@Rp2=)rj9$E9JjCrM^48P`_2I6mEg`l}_Vv$zBIyJBIqJ<pBQ4+cO&5PmF)@[FQ(J:Dr>J9&JJq<=m$3)?&@!RyVnbTx,)m[Y2T"$=.]g=?t@Q*5NmJmJ7G;o*M?[vNNv_p2ZV1JYHn4c(*FnLz]x|q{*%zu<KD/&0n|?zuvo>xx$LQ(JGnGnT^I|J,)^hOsp~S}*JuA`,T&_4K}3^vSaA{R!6S.}$aBba>A;CQxr2{j??066r@14R!zeBe>8$PlIc>4!g{.FAzs/yhO}jsc~?r]mU&|KtYy,Y&gN46+?JM@^o<x0%,|lQym(6)io*VN+WQUPU`c!%1m1V^Qu_jOH@SO_VZQrYx6/}dvn*1<z=^,=Kr|_:qX8{l1gu$,9Cp6HFITQ4m%nycBR/Ydy<H_D3]6/s&4ltsgTzeR5{fLRPm?mG|1%lgwsnw"wDxjE^Z%+S<?Pz$J~<Gb8IOV{Z*4EmNvKa7b7o$3/(]hpFdR5PkZg23pk+JhRxeJ]zP[!f95d]o,0ofta?<Xg7/B))8!.SVg3k248mx^o>33G_z4+(=]o@/WVDQ:I9O~$hYQlu~C.W<FQ@[vZ5~C."$5)OC5:qpexip;OKQlM04v9gYVGvu9]KpnYq%hkcPu7S#80^aI+en;T*5f9gYt!uZdh3in:q`+cVTBTd7gY6H$;R5jo;OJzx#f_gQPm[mj`&e23<D!*)m9o}=]o[eu+a52#9[Nn2/[UPVR>8v;O>E.$mY+Z+)0:lk`<fC>MPNc7gYL)FqD?9#/fU5lHT>Hx7dV=2I9qV5(=sY%KW8q%/$e,!U5U/P*&068S:[hf?wi8eP`H+V9le:*Y@YO?;)X=U`M[ofu,CE9mhbi;bi8#BR8_Epu$Z=1pm}NDjs;M,[/TkpF$)%s.[!*bAxwaD^jmCm|HiR9h"/t2mJF$4lyN,[G<?P%bf[ORP+Pp&{mj0mB{mj1^MQ*]g8$w~H0;DG3=&2PFU=+s@vz;*#P+eoM[S%tUt7my:GjC4HJ|Rb}=l=,SC{g2g:(]i{MQ[CGTsa3C`Kk,&b^%n{Y>Uqwa+aRs,HPYZi07DG|dgQQ^nPm1LG`z#Sw,2`Gf/=E>&o>m>|Xy`KGHu$iG]*{uag*ji$h9GINi!#Um_Hu$`fH|;gh8|k:Yu$?gDeu,M[n>K5"_Y$|]!ky!E(~w:0n9K_sR2fg:.fs;K:!0"_xV.le[^%{Vh7D_|I;}/z,9Y=/YJMR!vr}]U>cl{rUl3Sx#bpib^8t@&bzwj2TB>,oq{Hb{~UJe=?6`3=V=!9m?=;h)ze=6&bIFL9uED8p$LiN?zf@=gTdorK9K=]t<3qj;Vi7&,1!NMOs7{1;emj|^~!2Ko=IL=S.mq=;V=;tCBIk=j2u={<Hup@x$,w[&fhl[W!uuax;)2GK(ewAruZVFH`7J23pS|VT9K@o?OmZ+"^sxUY7nqy<xa)&tRs*Vl+`j&H1NfpH_pQQmrys[AVz?H_8n0n{ia+E`2Ii9Y<]%Wj)rs$B<KTO@<i>eAIu*~*`quZfPG&*}kI@y3^/0W+ai.uC9:M>|~cNjgoLjJ*z@{^3)v<`m`_{}8_H?K<wJ4r)I+{AjP(CU$yW+ytILRCx|tR/{Aj7hBK.x6r*1G`m[`KOD]v%5z.ra;G<%N:K3NyW[)@2SWO<vUUUD1a|/a[^zY)is}jrQTu{xq,3ZK3@/zzp%7!SQps@D*Q/63,JQx.loVb6oy%P3@<%%npdU,+T]z./$%Gcom%n%RJajK(/#MyiGmdl:Zux!GPzOVRP1f?}p1r[J*F^PD2TGVsdUdUMXc0;@Kixb$ZNO2@C0!_~U{jF+>#^%BhhXqo",BD5{ZzD?l$GhOg<@rR;T7,OX#ouK5,LQo5!|Dq8%$q@xm(_oGnS(Sj#:"p(?#qe;$h>#G!6s6lT#<{B(Bhc}qs@DkpD&`p9rD&qqOT_&Z~bN(ZCm<@/M8QF)!z%q5q!hufR{!qJy9s}jSVjZ9lN1{*_=6&!QgpghDRxP;jnh<1S6MzW=)]cT7lN+$mU%H,~q:[.&l1<r0ImP6^U(3KvuN&kI"U#0uJlw==}^%ei|t3Kn=g!}t3|I~nt+;[^Ruq}lub~v?3r<uO)_0a~/yJ$#Rm;jF6+Q4Z`lSGPFjNw+M+%jP*wQ"jar^!uK?0"*;&Dx2&9rze9kmaQQIFM+gVF>~E+ja~bN;NJY(Zc}0KdDlrF1#:FMqfrsMx6v9j*8/nFmlq,2]i98#,Cju}U1;MJDo`&9+?`w{xN2{POqL<nF5}sQs)nQI4ylXSY~b!C)zDmJs#us3]uRp5OZ!%Kgv]xzEz=PN+oy>!9]w|G2FIq$EVz[W!iUf;vLtq=;<f$^?_u8[!Q:,#0_04/{C@~M2?xC<xu<IFM+$jZaOYqg&=g$,!&_W={EE>RKF1jUnT7~c&;a]0[!$h?)tr3Im3m(LV^lN>IW,[B<J<jb?,7[y5J/k`~{z$*1^eI4m=|/%8l_<Xgf9,FDuIq0Ap!l3rk|!ho%*izkVmgU_2"hJ4FI7GU(e^+IL^Z|S*fQw+?x1sI&k=&m0LyeN>~u+Se>09mqRRS8$%6!Yr5sI&z)/HGj>Y/Qtqz[nQtq>}{E,`TI"_di]n$zq*sX;)^e6Ql1Zc~n%mjMg16)P6BTwk2mr$F/QgD&,18.Qgk$,e<oo=Lh]l}_Vv$zyJ,QCJDxwkc_7)"i%|f|zPdmcgu}?U.K^[N.q$v$2&A#TYR{A{G.]0F@RU#l]ms[g$v+Q|F54pz[O!M#ieF/tfF)gsg&I*?pNR{gx$Ciohw*^0d$jw9!%^O4:%,^6_I/BjqXwr*pa#M@NZOW_Vh,q,lG7}4Muq_VA"c@{}]H!PN+(@NWI%W(pf3x0ReL1oj]F3&;)Is!ZW<+ejJL|maZ#`,}x;;M71AROL(}V_kx<x{j.^uJLl1+JvNWd9qFqr.0.vqpUR"aTR@Y?uAToiCjh`n63)>D=j_5l!cTW~f~kC:rw^A`(JOD[CtL89Bs]VKw9NcqF)zDH_E)D`ic15F{55&9dKe(r<vjeN*IAK.le<*8AQv|Anvu!rJq^L`UG5t9mh1m6^$?WIPm>mgUfbA_!_&JhO/i1h(iA@/1cwa/n&7Y(bt?PCBy]*^c8x7b&yKQ5w/f]o~Lq%XKc3/[?#@yXK~g3Ve@z%Tr5Zv*a_H!d>dyfPWy#:py(@^wlGpHr$ih06SDVaN=J<3uqp5xlGZ@^aKEojX%%#^S!1"z8wBIajcFeH;z3gw2_!U*/1@:^Nm:r4>!/fMy?Or4dH3P!7S`Yyn$p%~qOl}QJuMP~jF$3|>0WEt|2Np*p*dHe(py#2Lxf(I{g<.n`KL&;bwm[K`KC#Rr"^k<*m"ZH9v|/92V=0o,%j?!o<tRBO6rrkq9kIy_h8)H+a,3z)|uHu&r#J^7,5X$,(}!A|@0@IhRY5.p5Kr~n/xcH`@>Dc#[|V^=Vr3hK4t1uqSf.cC0{q`$o,E4Dz2{zPHckqW"6|g{BzB0a)$^7n0_5p_x=@O<rOMdj9WZ`ZP*W.R=4&5vlGhE#_QPz3?,+I_l9+oxJIMxb))R^J8e:U>j8rN#];5_W=d(_u6^45G!QKm3#]*8yEW;ZiRSIJ&VJ+;#9PUHe<A`zx4s<xsyg{f|$,C<M+cw$^6U[3Mx{i>Y_;UTND#15c|.TY^wWu?gWZ.Qv|"(_ZY^G3*.v$(Re}o{dv%]I?tKDEH@LUWfVF`]B,m!92aE0=`Ny=6!E,tGc|zoI<sk!J+Qf<<){D3?&j[,Ow8;rVKvlgB(YLlrSNnF~mn_6/6o`f)@L(jmG}XM/6r>!MK*{y}+_#Sl`0Wj3Q+~4}4:E3c%C1tiMHO"hdmRaycu1|[I>$VqbYDSv/%(a(_Emzr(N$u|gE*J4A.EpOoz^1B}Ab/7s5l5T*R1~RQ7eg@ZVp[UcEvTkS%^1F}q8jUiiMWKD]"Q9fO/s8Luv/1RP]nEdcL{QLQ0%;0M!F]c*|tV=7!C7ZtB3SHaMISYOog^.OXnB~,O|tqllP]A(5k^#VnB@E%A/GV:N_v<]GZ"&S06EdscSB3J|8FDiS*u4e;I6bVigygjDDHbscON;I2*V0FD(StNQvaEwq$[l/.A/MxWJwj:n!yu&T)g@pLR}n}g|u=DOiIDRC?D$HlPvfu>JxJx4gS=aJ,gKOtT,n(qTW/19dQMK/lz^9W2>,@WMBOBf7(fYq>u{5+W9Hxj:C{|=o;ye2/AR$ap$[@W<5+hVdHwBI.Ao#wWJMxRSQ8(+q4}b0)]E6{BscpM?fIpCQS,^X_X85hib.&Mf7^u|m0UENpO&I<(z"2Dax<)o_0_Sq=p[9/H6U/u?mO2Z#x(4%V/uHTqnVp+#;BC#/zmGj=lNROEAsyxeEud|k$MO"pI9RuEn/&#f&bv9M[hAs3JkjA]g[iLHCL}>`VM4iAsKgHGS?,OIiwfItkHT..Mm6z/9E9S%37%(yi9[Bw$!P=[kSvTQHD#?`r=p5ejLDCz+>!BWCSMYXB5}mIw)<]!G"UGT+n2_QFHv4c)xWIsBYRLhB|k;Y+thD&dKWdZLb?Pl6Dwq!1BhMO]@a+h7W;I;:CJ2Zt.<:r;5R>#/k1E%SqRomcxc:j?Xn.k@M*z!K]Q_&mKOo4LZX&dk1%A_h&d76.Oym"$$ueOt.kQ3Pk_a]=X16$OI!rj#{flS2(HE#eGFp}4I:`,P7&Ecb{vPmh7WVHFQGz%lZfo{y?[dqk_NJUvTOomrI2"Wp3IZYhS+Ep+Q0%;})>Ob`kE@ZVWFtU{R.rOZ3^`%_2(W|9VPH96r]L!3/!k)(`Y3I|:Kz|[3dmOMz3UI%"&_,J%Q$GETrq"P36FAH%f;]&+u<BtC5Koh=|wIp>_;ADz7(}IPc#:1x6Y5teJlR<*),QAWB9Sr?F*l6Jp+RqZtU~)VJWpJF>5EA<Wxt7SVBeWyj_QKBF7:8/1A!XL^h<AxVHB}EZ/0kRGM;ESmBJbeC{K(gTkT@GOMVvd+mJXPtYiA+FRRz|>nl"O{Iz3oWWB4R|LnC$Y<l(HKB~9_B41JBRBj?yW>Moz@Z9;p;#l"5_y02!R}tql`#NiAM_o9YX;/x!)GCqUSPW%XxAu;xx1b.)gRtLB~F<"(#`MKbuW}4]Y2{")h"IgdJV[{:#*7YD=?,EfW8M],3/86FZ0f3Ko}{pBGAql8l`c2K~(PcW)QtAdhD+6Vbqv!Wv(r7(Kt/I{$L5TsGEX}4`#u<(3i9r;[P;v@ut^,fOAfACJxU0,61SM%m86n1T7"I^j61ri;Ni1a2ZUd5;6^*1BHt(f@;A7IXNB8_ZqqCmSk0Qb.E_owvwW9i<)!elXLAn4@a_"M;IY~kaXl5cr@4jR!E"Kr%L{@;oHla4v4}j1nlUR:wTAW}<Y+YUAql&(1#;WXL:g30ec#:^J8Ut8CaHzvj1dlu{AdBjS(uZm2kGNVKC*]9O.EtP]QZoJ5lRL|RO+!kuZX84YM;1BhMm3|ZZ3h*yC=,n+_X9kj(bXmGyKQH."EDEkE3t%`.?$SRyw>8B487`8)#&.TgCuvn0<S>_2#KE.o^/olYt%"46nB0|Q/*^u{5;1Eo}XAM)q=(@Gh1atI[^SG2"$i,x:$5gO5.,pB9)Y~_P,?Tg]e5i2lzMcixYSAp?pO.!eXB%`BS:Nm4)CEu2xs]3|36"?bLVKx`qI~0<6(#7Kp"bjJDq/v7=7_htH&HAD%ycY{Ei/CMAG~o4PgS!Ew7EG%w"oJU$)uO`>#Dq22+tF*A;7K5SYsUf+mG::pX>lKa^)(+Fssez(o[LONtiF(7tik_!yjs3DyKl5Vfu&&EYQycq"Ol/[sTZmXX1k0Na.[fZc}nIz,2vL`Emz++:601"(]ii6]YZ3W0iYcjM0oOL2jJ@mnj5YX{6p_o?:`ztI>BZVYSApkNAR*f;InR?6cE"qw+2C@c9M(WucN<G+,T{ki/9Un0QPk5kYO,fO2/Uz"1N3x(XR4JN]nHFPXjoCpy`K^X1O4C!>!xo%!<ldlYw?54ts1"x<#XYm4+lxa2=bpejf?D%Ep_k5@*;Od9EEj?$)ck.#[h2:;7%)SC::=7jukn]JQO9d$p7#}:|n[nMC`:JV=mAb%D3sfbMmU)yCT[GR{8kmw>lxc:6)=pQ/?oU]*hSYLui9Exg5tq8cMT=1H2iH#5Sr8c@Q7tt!Ct)/t8qxg"3"{DkB}4%lu5r]PUmd5l+(m:R.%Tc2MJ6ZMJqp_o%W<1!R~DXBhBgw2EDRjvql}Rij`?bdV:4j87"1UAj?KS}n=nA;Q6TwqnXzjTcFam>iC(c#vIs;1W16atE2"$bAKV}j9`wO`,pR_SB3h7AywZ#!`XB7`7_h+MCW=[Ei5"V{8([:4NAWYnz37<2L=>@Fp|O*(~`,%hQ2Gb,~z//9o+xK?~P^I4iY3FJF3Fr#%a^?!zt|mj)hd?gNr`fwX|n@8}qzf~b!!~,[<s2pn(tV%hGUN2R~ojaW@5I46dF/!SwkvJYS*<;SNLaDa+"A1!@@e;]}`<fWpm`a#>dFfny@$N+``+2~(Zf_jTOq0KHVqF"#|`X8rsT?L4r=dmT|3Y7>EMhnt0}FC]}17~dch~w<fWpsIcxGF79Ex:k.5So?cJ<|gXY|h)`}_W&}`(ssJ!}sblWb1WQ4W)q8.I6f_06f/~_I$>Qc9TOB=2P^>z@|Nef~#LI/3K7<>|"#qWG|O^8};?U(MOKLcjQ43Ka#8}k5j~!4h(FMPLVd!$:C|4ww@dy{_="~h;rMn|vYnsfLd~`n>svPzkP]m;^}~c#sApgn3R=2bv"f8?T0q|hYns9bu(2@",d~PG"~LVZSg4^kv~/wS4XK9TLymb3~~c&s0=1hu,;cA@r0O~3v~~s"_RX|H$#~<[R4Z4yym$6fN`q,#}?"$>(^$NH?>z;|Cv4y"}W,V|BI{~A?qfp~7&`~hsykzX</x*:P2|Jeh~?1$>I_$NK?=G<|NeiWSo+79t;8y~Lsm1}(0Rt|JCss]hbZ;Ia#i@^02~!4$>N`$Nx`mDj|O;!s5BFcPiZ#.>`eg(gE4y"*?Q6?hC||:*j~|PR4Q#mbg@=G%~KU9s<F=sgRbZb:`Ot`s*|~o|Vm(~G{?Q!?hC?_3ET|(@$s}"9Twzmb+@>z.|$B%}k`fWR7vdID6fM~"fP({Sd+w}6*hsD!RWh7a#y@]Hn|}5m~A]h(Oh!>ma&>8:lOY`Vaf|;KAtDuo`^},UJL+y|l[=pSN},M6}Z{&Hl~x"p(x|d]4}l59ht`+7=_($QWZVKc3uqPn|E*istlq8a"KP]s_[gn(K</)_[{#~YhmW@cAt:]{D3_r$iWvyO(4_bYP(KmHLfC:v{]H}%~CK&hmRbs#`~{gs.(Jcq}7E`}gNd+c0Yl?}iHpY%~_Z$aKG|2$(CN7Im>L7gYnmxzEz?~"HOfNAW$8ua9R8;gIZ8@`dOrm9$:Tb,>T,lR@wQK!;6BgPfaR`<Ix9!0!ac@Uo74w!_O0qc>*N/L{z"vl93adg.dx~eynp{^AF&~(K^4tC:c0O[:3@,?.2*71+0~lW)b/yN]xUU|<y*L_/T@coyq)K#^;.3]<XfAOAR"o*&?Ao{3uJ~_W3?Vj$.*@?$VbxWI!^@np||J9>1b=JiI5Bw$=YAM0l&l%lP.zl9t{|zdk_/~W9;sjKd|9$c/38,:f9[r_EBEZB4MFJd%6+m,#@(&5<Ut*];t.%l]llN#*>]~g`Y*C^hWOj^0.t3YKMZrW|Tq&TWq($aLyDsG`L_BOi+s5%U}mor_VU@}Xs@l[NDO^KJI7`Us8AL~w|O77Cp/sL2W?=Rxr5<*}`"$"JAF6e.2E>wrC|)bx:P{;=YW(9%+~SA0?X9sJEEE.9q>`.Hn;8;ElbJ?<350~+P6@BX,"`K~m~^4?X)>T@M`EUAA2>bnRRmIcxO,:?=n`$"p^6MxUt0*.?=nV3{{4moUS4V":7>o4}rg*^L1!J]R)iVQXk0,AoG)j$.;bngUP=7.skUY]|}TF*NxOAZyCLBUQKGr:e/Iu^D`,WPxbJ:|Vy!C5`:qgUQK~qXnzK*4Y5$fJZ9:"A1[BF@k!J&c>PX5$fMw`j"uF*VxMR{8ela%_8AfU$8S1l{=,5`XM;uao;a2w"`q7*SqvKDAp1wMqnLDMr&Oov#:WG_U44~I{_YRFBb0Tc_Tn@>J.GWCJ/7[Nt7pOIp3c^XP7pQS3HI2Yy<nR#B"+3s@|3~&Vr8^pd>l$G|0[57Lfz[5B~yy5F3r7;sVJ*MVi{N^AAY4nUuMqn~*J<9xh7u5>#Lk`r?6,2thj.okhk_b{;>Ub2A9v`M;i}FSdQ|+lWmZx=~VugITsu=UM}ayF":M*Y9W=?<c4Ry)]/NwBxCAXy&:LLPzdSVBbx(?^tyQXA`4NPKSY5^~pUTEnG0x9Z`bQez+)kca@c$D)6G~~XuFkn,6~[I{6YLB3LH%3L0ln)saZimKy)o$MRJz_`|DRf!5u({0,<[dTH]dSOPCFRJBVjK+8Il!]Dr28)4QPHcYz")H(4SQ*l~4)9XSUube~B38*xbe}MHx/[q==2YiBvGJ1jtxT:}Q{&0EhW3<ZA=[gk;UWH#c3<%.w6Xk<%eJAoR#>kuJM;`tu.keIJs=7pR#K;;?JZ1"M#/Op^gk;UP#~O=?gkOzHF([wI^Q~EEDfBU.IN7>,+P4*~X66)~8(X+ta"{^:l,nL]k%3vp(3avPjs[oF6x_tI2B8wtS<HN/iNYz%J1iIB<Y:}003Iux$+^OdZT+zIy*/@iHI$zDBy;kMH(R9Kc:}Vh=A_S~k~}*1,UDUrJ3kaK!zDG9=J(FuCHj[wy1:+>Mwz<I9ZyWygQDpLI;&dB8&YyuiYgg1GAzG~~XRb,fxz4uhZ1B6FW?[tlB3rBkBkC[25~qiWk;s2sTX8*8mV&3#lo3ObW?ssjH4}R5W@"dX}1+KpZ{HV[5_>#dT)q>Ip0T06}pBn2Kk!Fa)4WX}"zQ{i_PRH)$ZAJQ9rE.ADV77kx(k*JM({)Z1w9TP]ml.GD:ivI"B%OJ0"E|K"mDPqKQ^CFRsvguSAN(;p_S:ZJt]eiAM/(w+a5D4>E{J$XpMd*dS}78_[g9E1h,6(V$/[H!AMW,kRqEUHY$t*y7:4WOgOF]CQjGRT?5PD"d(f3uhZ|4E8/orj!:2n}Yw(>Jiiz`DHn^n^ybsU2EJwpIu!ko2J}nRJ:LYR:i.j7(go/@*kHvF*VxO16tdS6)r,;(0H!c)@1,3,7eR%r;WUWutOUoDKu!>cWaD:.f@nLQ[`d@`xo/f<9xQf>JN/DKj?^.p3n9%YTo4LvA`HKze$OP,?#?iSaYwiKC4bz+UyWTQP``B~qyDb?k_EXC/Al1#L=0T?O}7PkX[^d6&iMH@KUx^kMHFLI5KSVYI5FxdwesjTGDMxFu)**@>V53&J>d?w_p;[z$2GwPe*YO0.!?OYja4_JWpa3nc7iF&k{5U|)2onr,{Ck0UP{E{1bA%,O1,<W4}@1,O1</E~1OWL&~x@X4~~z~*]y3}s;}+z)h?~T`kBr(T|r8Lc?~yi%~X{1+@9Lc%~V{h]|4A"+~L{O(j_rW<~t}%6zk|~C~J:TE{~z|mLj_$~r}fA*>$~"`oV(hB"+}Jyd+>~A`eTt(j~_[Yl~~)}cxAt>~~|XI*>#~)?v.jD@4Ai7(op4VypRCSImZmyu%!6%B!>Xn2KEjfK)lSw72&2Mm/b#wa04s@xWfPDij8,h:7@y/Bb:Sv+W~i{ErL3dvT]u&Xn3Drp`Mv$lG6r;{&KJvq=9zi}}uETspc,tTJJ`;b8,/L3yEvYzlKt~/+N|t(NI:{0)%gku!R!ur`]c%n%vR.Me%C)e?|Is#~hT|qZ.xhkE=1)%~<2}ykof%={2XNjksw.aZU_`_&>8MY(;CX7X2h$xri;0iq,?)by[z]oBW~7Fl4^XFH%A#GBV3Kc6D"W>YU%h~I6)W*NzC7}:Z4mWoFrQo5^T%%#;@j(zJXgP6&cT]d_H!*kr"%1qz7^7p!5H&C#{/5"%Z01+3`Hm$bL0h7hobzmylQb7a`&yQt/1oyRg0#N+Ex,^EuuF`t=y$&e@VDlCYO8dZZ7%lORu+aNs,|+n{bnAu4l,+G|f(;CW%}kUw~4EFc3Fz@P~k[JrsapGa?#"hrZ>){^Gf>H`jf6~K&NAv/#<y7h.Q9?Az<2<yiMra#+Df}d&#fx`+4^iR~gv%ZwR1yx6>+:.6)j|w^IY({[>LypXM8To"vb}m=wL>Hu)H5~Rz)1}mjKl:3K^ogjOH_{)1R*?P/6S*m6O!Kjm@uy4zen,f{0!*YOCWN;sTWh7jI9I&_5yJ,@X.6&l(k{)1BnR{sTYKTY@Z236hp9LjHsUdKYWZ{mMQ<N]`NPB>Z)M:IM*|,T}]RD9aN+H4@$~SrwY:G.?xzuwJcj<JYhp9}M/YNi3|?arz[Mi|R;{1n,EuGt5ug|)1*NGnDS^i8T)+~/PaDfpTbR&Zrz[_Z3i0%,?%YG;yp6@I&~YK$pj`&ewU:_Dp#f?!v~n]v]NRH!*k@f$!AeoN>dKpU}c(PekCfE=aV>:A6Fof^M#KPm*pcaZiB&tQt3F{+IJ]9}u$6>Fj/b%+PyS+"?P+X3WohPF>5>F]mhIdY)m[6nvT}(<&c{~clXdn(A64[a#O.Tm3(0q;m~$XV*Jh,}=LQ5XgoeKj5bx+%dcnhG=lgEcdHa#i^faq{jKx$h4h&P?+:X:o"Jq$G)`J>ISvNI}vOK=M3:Q7V0z.}NLbt.,6sFoT@W8y|YhZ9w7d*d$L1IL%tUKpibls0Pp7UB4>Xjrap(uZ=yW@Y?0ZmXdH"o}crS&J98nzvC1S&5|YLb9m:IQ])JH!OvITCQQ]2TPqCzD~;JT"%Z}=WlRD!$0^^%Wz7b#+<y(jf<o*2fBbT1(%uf>1e1yuZz2VX>]z~f42C(dnNJvGq5hQnj07Y^je(iL9msazLN=@*3Ujhb%!OZ{u+a/#+NV5Oc!TO%r+/[1c^oWHPq}l){"ZoNL{}Viuuu:sl"mv8whHG1E<!XeYRa#w7/yBLnS*}PiZA}!dW66)N}DedBadciq7SaO3Q:~7:6UaO3S8fghc_HUKce@ojvqf|d32mH/11)tz"Ox/)AGU_5Eehw.:r$DY!suH~kG~BPQ54>]U{wi@r@^r=tMy@7!EV>+xDV$]W,X3h!=+MgRU^8!l+1lIusbQ.=?c>s`]Gw/%,nU_6urzp%0b2D~>]f,dw#*clEtq"7ulG~53@a4^~8{;B<P^.ljM9>v^@Y)L|PbkF=}urCj{Vu5G!%1o`fspSVfNsax8?UWIQm2%0b|$]`?Ji7V6v_s95<4PM!gT1_1V>j?.ty#!2q_xKd(]1e6>P[(jd@!q9af.{p>VN7Q[W6f=bTINdUze?$4~VT56aUcT!7MwcwqqDR[3;{tx4sfg8=zz.H78dnj`[Hhj&+tf"[*#C~c6xzl<oeFR/wggV8geaoxM=t6e:AxD!P|G_(QGlY*0}h9$Wg9O7LA,[<6nQg9zHfMgQ9G1%24mraO)Ku6ojlMxxhQ3swEGxc)qi;XXp%3p{${<5!ylv~DOm3z)e~eIBnQ(4!Hxy>K53M<Dt,|+gwz>_;%_9m.[/0R11IO|qqN>yhtv?gK~&M7U)Ka{}]]$z)Qnz>(>f=*rnPG^GQ@xixT0=28m8mrss[b<0?W8`MbEB}gP#$0;%8)%dG;^N>6|(!s#~?P{`r*d(p_ieNT=!sIRwV7>o0unk~h)&uT]!h6oY)gpO35=`mM[Wmn!LR.=~Dl:alpofhu)2S%>,,kTb!c!wR|884z#4uT]Cl"Useyg?33]~!m+V==G7ZkjHN=@p;%z+}4Orgji7jAnE5XK>jdn!_^;H:kx/.L`Fp@xhF.IK9;)).,#hnj`2IibV1z~h)LpP,ra!NuyNU~8hRkb>L*:Kl)J@+Dz.R4s0js6/1vnFm]P:QJ2TG~nYxj!9)^e^8j{v3~H`4^<,=D3?5ZH~8_z3Z(zE:19z@_By=rd$uD^7><oa489}r~/RMEZKhW}$XOYP{cNl.rpBIGjjeSvJ0Xgl3iEX8b=PURw[!C9yaIuB+:&Ja|{kwr,M9iE!D"W>YffvRQyXgZanG;)).+"Q)nUdrC^d4Q:sSh%.,T(qp:r1s)TcNV7ijF$z)r2P@m=q$1o*^"yrQEX(>egHM1VoU)7={R;lkQi,h[mXrIPA(^]_8A]7s"S(]H8&]gY"7)fu,nZ(,/zxH3/c)/R|x:5X2msy;ijP]CMB5vuXj,dfo^N"/c~0${Cx+CkFYlS=}CMR!+QSL6o|4LL6o1!8l$#G,?<Y?Bz=NrM.mxu5]SRk^m>~MBb]g!=rM]$1:]@@syr,3KQs=4#^t(xkN7:]gFcrdxh(8o&!l"[::9H^}h<)M+?C{Vu%]TkNVo~m*O!hnx$+Pp%|?K~oq"jr{)1[,uhg,j#DH|x@DFYLUWfk}{.z$:}oq:,u=].r%Xuo25)L:^=X.|ZJ]9Q>9J1y)_%J(#U4#/f<;__MQ!XL]`+T]}5y]u&1tK>r.Eq5pKv.N~wiNlrs,p*K_X.li6&xl`w5Q===j?M?[vNZfqe&.4ePV*]?#5%qk:)09Hv1:(VP[p[of)1k9Bjm@gY.Zz`)V#,l;:Aoza0Wf)YJ9A%9}TZT%koB}YLI`kOR?^;LmI<@g#!pycwLQ){Omeo/@GEX0i@sT{}2#06W6x=(@|<Jp8=U$?+WZ077nuqWPITNv=29=_I:8#S{]B^yJTsCv,xbi?q`&qp}^IQOZrX]*K~R;p%c]nW_!b]vKIF$mABX6>Mq.kCDgKW53W=3#xH(>_SN=(29=UGc>p%9G|0YB9Te%*I*<ksPE)lAb!!U`$%!M/t77t_%>G@$Nbkw8q,Mhs,q$U*+Q<9Dc@!$hM9!|3a3,vNTNzeElH1Z$~pIM{P2HbQeL{/I:p(,mJW,6zu+%+<ty"i_;hc+jeNW:>zvM7JG3=2P3U$COBb"p{$6vWux!Ikv*8_/}sOe%6|S%y|tMo2XWZ[6MnTo&9:S}rmyU0?;$0bC^yJtat$cxMx}4[5_B1uL_Mi_fDfR>c)t2~Sfv%]mhPYdfP{t#jb+y.PPE/3MVnF{f!N.1<bSlEUoaU%B~4qqPL|Z(g;ry{upz]zJq3fspx<QwLdVSy;HjkEs[{^^UoaG}6~71v12?W0:+1z/xrC3Gu=f{t#e}t4;Q?+BqP^w#a{*&ETmr[.cwf~hf|.Qg_;h0IsnErs2lU#P3?F_mJqe3a!#]v&X3b^CU>]RM/2D?9%Z0s@V1#;:^:2kIV^ceUpRmjbiEu,0hLX|mIJm}qjIfH#i@~5=zg=IroToXn`GqU<J]nWDBE3yz8ghj[*8_Hsib^$2*.+mr4>Y{Q[urSEO73)gGdu9m}]BTSsB&qkJXYgzJjb#LuqKkvCSdWoX1<ldv0l%#qfi`q8KnmJd^`jl6)Hs}D2~0i?/XFnef!#tHALr4okqXn!RgT#b/%cuDqLuJ}0cxylfbU:d,%zJ3en)?O18E[+%e4a^rw8X6Iqh%pm5{Qle%2#P3hn|@?#hn2DEjb9H+w/|/c9~FI+H3UmW:^UvZSm?3!lg<9#P3@:^U`D(4xPr$5m4phnIu[!!zFC3YF3iz4uo[wx~p:}:0+{`Yw{p;:#B(B#,t*$&Hws!Nf6Ej6.Z2F5gRl^q0._P&|KG9j($]tl$#wRMQm7`!b]$guvcaUliYt0}]^=el/9P3yEW;,Rx^TFjgWyg=4MK2{{4Q.P&)P=dwb)H>(%@!9bRa+jfMYr9$soGcrd5T6/Qo{HcTo9n*k`YbmbMtDVh1@,7Jcjj{Vzm1ys|0y/6!~?L2[_,=*=XKRJ`8C#CBXEa7Ej5bt>t#us`fw<C&HT!>*jgIn1}7@a}+/H}`p;JboUUrTl$#6v,V>ZB8*Gz]/R;6`SvP"GApNXi{Fr)19=<L)4~H_LX?Ub1m>x@oU]m:R]Lj%b]vEG_r+?7.~:q3^UA]40m:>ZZ_^&%LV3[aTl"[Fj5b/+ZKApYl(E8lKp~/%wPm[g`fjImNNw~q>Vl;L#u{B(dEFzb|+freAG4#(dON5scwM>3B0=26f$~)VZ}P|<5!KhG%t>Y6q^]_jfS8tY:^4mlS+[9`t$FNKpD`[57.V{^8q%r$6/`f_g#sDINQ+c~/MnWZ,uOgx0tU@|:pTeQ8tYta,}GQca]@d1{M#fL3:kT#P=J;kko?qTrqhnXM/6@#rp>5!A!UR><ic_*k[{&Ovq8p)?3Zk`d&_<3!flL>syW2bVXsXYq7e9E*g[4&VN,C.DMxxh)g6DmZcaLd3D,x}X{0ta`kOo,Y`##?T!6n,;^*!#n9GN_pzOzOzjD!O!N[Q|rd:Q{?&8v{fp;ldfB(VzFSHeM!"8>l3/Zu&b|55@SYXj7)$%82MF^pJsO&As)L[a~goZ;bK3%n"f`&~#}SPmD?"[Mzl:TN|]whN>J#jr5Quhz.:Z.1JUe%^.alONNhwh.1+3i3d1^%C#E|@x{qraF`@x&y&.{1A8Ov,mB;C8|5?Z;G$Wnej@%=6E3)3?exzi$Gcd@5"2(s!ZqvlNvl/zrNiJh4qawlBemlQGb577ra`/OoGNLr9PninjZ8TbC1{h*wjshy)2EMyLQ^5orTDr@V$]bX<:IMHsm"11*K.6RM<5w7FM5aN;QJBIh@)Jv+%^l(|k?%2{=Yo{MZ<:Zh|^k@|k}W5M8D}T9xwM^Ove$Z)5$L[s*tH3|VU.9R@]W2#R>YZzlp2qADn8H&nwNgvYpoW2p;mz_U2@qSo3W9z;8zCl*:VJxv6O!SH[ChwstQd0{^pLrSB<F.pD/*Il7L"Jxv6OWK=_"_@Iad~ud(Hn*8F{nwoftm%z>DU>lk2ZYu+6!50b}WEGDYVPd.b"P3g&.Nf6#U+N%ZXZMKWyrS{jq,W2ZzqSxM&ZCm[/uStKQ~+VqSQ?+}rO6&ewi]X.H#2MC*W+It_py|$dzywWK%y|FUOLvRY~YWB}*<*HcVmZ~ORv8rTtc.~kDk7);SZV3W3BtL2f)e55Oq|.~pGi3%iM9>W.?)PN*:?g14XM6TBI"q;"j+PxEMVi_tnT?C81bHLbz>:pavI*fp%_V}{X])iRLalj.Zvfo?~{=XlL1oca1oFM<WP[9H=W)Mx|A]fzB~F%G![ygIY!.Z%a2?3>Ep`dc,Eb].%p{j)j7L9)d{55y#=9q9G{%9B!bfyj7hiorZvN$idiB`;:`dZ0nwa(@aMQkr#mhgoeoq[pKpU]Zha3bNM%4Gx#n*B;?6<66ba3smf3d3yUKpU]m:"dmd2#6b8b8bny=6$+?]A86^z=D`E@#CQh$29Qh.j1Qkh04sSo1CXKLr$U{W,O>x7;KxO08WJ%gK?y%%+Yg@npoX<]1f#+?]zBa9r$?]lpd$Og}=6;Q7fcRivg,g{U%n1cRX.7Gf#%R;s7AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB842E6AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8AeB8B;BeB8AeO?=eWV_&AeB8iY<]Ae"%+1ws}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p|p|p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=t$~m}=^%:p6^X=hk8}I&:p6^/X<]6^G@P+dy5KYVwqF`I@P+dy5KYVwq(7|p+x6vv$RyG$(qUJf@JUey5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@hY<](7|pE`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVwqF`I@P+dy5KYVzxK,hy5KYVJ%$KZ&,1D(ch5&Vrr{_]<;89ch5&Vrr{_]|6;=ETwKE>&UW<*^[ky!n@pl5&Vrr{_]<;89ch5&Vrr{_]<;89ch5&Vr)7r{_]<;89ch5&Vrr{_]<;89ch5&Vrr{_]|6=;89ch5&Vrr{_]<;89ch5&Vrr{_]<;89:3fh5&Vrr{_]<;89ch5&Vrr{_]<;89ch5&Vrr{_]<;89ch5&Vrr{_]<;89ch5&Vrr{_]"dh@xrB;:p.^c<rXg&jTgh$2*Qh.$OW~k@JHzz4Z4&e7b5^X<]/c#+I|xBa9=e%Md>2HygT_&yTrT_+Vl!S=K|k>taNVzr$9K|k>c=E|M[K|k>yrT_,&K|k>yrT_,&K|k>yrT_$H;Mt|jh#`yr6N6rT_+Vd_,&K|k>yrIui,oFa9g1xJi|VrDcx>YNJ%_:dg"."3}V{r[|*`u[A/"3}V{r[|td_^vJYFCnhKLmb}oS^[ToA4}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{r[|*`u[A/"3}V{rY]g@O8L%}^z=!q,m$&jTwh$2mdq},+TOJNWz%%7c2Y(Cjz~{$Da9vkhZ?=CPJ%G4?y%%MZg@Wso%(%sZ?="3G3s@*NLU|+wbWo[zG3s@*NLU|+wbB;,ip>n>!94x|iZKWV$O[4G3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbWo[zG3s@*NLU|+wbJz+i2Nz<8z+P=+N$n@$]TogpSo*O=EM7jTygodH3y@bLyg`G?y%%ox!+~U)Da9~+nZ?=GZg@t3g@t3V*S{Grs:+3M{{6wVX]@bGrs:+3M{{6wV"Z6%JmFVG&qpq!*}x5P+IN!rs:+3M{{6wVX]@bGrs:+3M{{6wVX]@bGrs:+3M{{6wVX]@bGrs:+3M{{6s8Ljj(00W<2{X;,|rC4@jpB:L~UJ]+.lbcOJztI(oyKfH/]5:y$EEw;Ki"t_hpAdK:oghN5LQB3)mR6/em@3rf)y,K?D"IcN^OpFh*dp`>fyxF{@7PFFW2.P2*hpF!UmWk*tP@nR>IIIsE$%s%$**kv2p&u+!uQD5n?=g5Et1/)TgNlBsY)!HDLec/J3<i5*m+;(%@<0*zF;`KljNPA@7yw,2B|,1(Z8l7YzTvRD)q!hER_T,![b(PW*BNwz("{UVhr,d8+IWb1Qi?3Q@OB$5MH8if<xif9y!t#<LIIEpBw]@^V2Caq`bI+40NfXbqZ{=[&S&C(`k1TN`$wD,u,qQ$>KE%GR,x4P*DutEUL[qFD}n2qb[?$T8yq/#9}z+0)5!Xm|it,W&TvLjDU.IR(YWBWuejqbsPmiYJRhR+C&kc>vd<zoS>+75.jV^fRDo_4eTx2e;V86mB:Sd2J32)!tJ4%P~)P5X3U.g5BC_9:i.U:iLnYw~krm2kvUV0Awl1X;Y<2e~>c;9LxCgg1tu+g"9r(+{F=<7NJ[zD]E3+7(U|CNF:NvVTGR9KgGvtes>6]Kum,69lIRWY>"j)_h,j_QnLW)GfTY!.RjjBh(7c~bc&Lt52?^Q1`Bu_7AM*/4m02;Qi;;$@x(z~[=9_]+xh9C]oGG}Lce}8aLRN[c?^0`%ZyW9!I,!Ur`7i[:?;"+_kh#F%Q!9bG*7RNPt2BS[B]=}DRiXK(/yZT/`lkOxgEkfAPPEbS1"C}]Z{ue.BRjd,eU6iE#SR,9}G6eV#Z@g;e%rPF^=ML8CfmDt"ydf3*61(bA<|zV?sLbBK5wdojB|TFBis.34OBGH).fw0uP.4mND3G;yjERlKTBZ,}DMi2Cf|zVh)4(yODTy]23b7JZr`sr""36U3kw!V*tEipFe}(VD>)E^Nh4f`NJ86zMd}(V<wVkKi=J{^TX$"mG!|(VMtKt"W(k#%Et<$h+4{srjX0Oj7VR{?Sa2n2NshUZx1L"+_}x5U&"v@C:(0ol*G%GN/.8MX*T#uaY&0T0`XOaa"af*)g"Bx/*&0M5DD:w3XzH:,k<%=)<g`S1c!QypxzH!wwwcG=,g`4D]4d,dVPrU97vMc|ki,fY@.CA!<|eTk`X~kA:V;MHNA)[3bs8=L*TsP)*V;SV(+UU4A"enC/$zyk5cpCgT&OJXOapkd^vvTR};NoAs8FBZL&lx_a18[%=7UuJ%[UMs"y82"^DJxQc)94iuGzfv@!%UmFJ3ReY~#+r~Btj~1~98q(wCZb,*{UHLl~O^tsmfMn!9K>9iB4rn|nHW90"[J.(Ye~#Dk1/Yx=590PaOG)+MPA=It8Gq1kqQ}=vx1*e?9,`Faad`xiC;gumXJM0OsML|144">jFmf#zStMc`eezBtKS:if9o5IX<)`|I~zv(151<$M8MKx"pg+!4VT.kY|tZ41VPW^B5c0{pkfJ4BZP{H1zR9Qc3XL^^.s>6CFi6RlJ0KjH$7U^^.k)]yu5Ea_<z:|v&_#~V#R)W[R*73CJsE,yxQ`e)@9[S#&(a;W/<V)Efixh_HTzxL*R,f:(f"lb&ho;JoeC=r399/fZ<vo(K.@U)uHY!J*f8fjjT|56>B42T7vDMY7*mJv[t2jJ,>a|vbE6^9mh]5o([P=UlzazvjQctYk/~SZci?(5&Bq45BozAGM.~S(e&?po@MJ,"Q1Qgt5*}Sed[H`|>yW0D?m~owox{lr9"u>>zIncYu,j.?9*}S.fu6;a>MJ0I?cq&.HzWbwB8L)T7K84+CTr2eKjt2:ED*)T7ICdrByO0)VR,9raIb?>*THyuM6"4_@0{ld,,tNcKInv>MZB1OqId}0S%7Wc$L7vTN88^0""}lD1B9;t"abc(B+_*AaephSTckC)/h~WcH,B,ed[X}"X^tOOVhWc@u`TGEe6t{=mR1CWAXdo`oec[x<rUL^WM<>uuudPkkpa!@{&L/CIKirUH5^Dd)xM7tI(KcJ!61_[QGK$@A5cRBb}oWc("6:OdcFv`s[B[sUL6VCK4+Cu&Q!aYP!u~]oV6S*?Xxq5YEN?eeog,9^)al(4%JBXITtocVWJ];;cLCGy`K45gE{z]m20M~yTG`ucPtNcVvPJ@+?T)9ZSOC{ZWma,aUEC@cgYs{H}V/~0TDR,9_nHt44wnP]:hp4.y+Cai5.EjCU<|A*Y1H2C=p>0Pq9e?orhHOhlVXywCCo,fBPY|G#h<vNhW2041X[5Xe(XQaw`Wt?#fGx1alEN|CDTMMTS>Dth&L4[[Fp0=4"ldEOO(9b#xcGaBpDXv%{x0"3]>D+GE$:IAXJ6i7eBma9~4W7L9![BS0C6<TE6!4?sd4lc8kEu+BD:n=`037m%_BbLISTu,,a`d@cDLAM(8y}h:IoAM"Q>>2L96nrhK7^JWYwcf5@Eh"2R|z<rl4^Fx!_9801nkuPW|I~Se2P;,0?GE0>GY)`Bm/{lSKS`tPyFC5}EV5+tY,}S|7#ve3%N94FF3c&2p%(EwMf&^":+wj8WZ!J])<hCiI._`RBjx7v8wu~Q_@QBruXLBZk"Da14MoRFxMshK758|,iS^v`n#(A(i"A(#FG!NS!O;K]paCIO.i*9/oLRzGwv6YrKgeFa`)o8~FJEoL@W}W7Kl*F"zPyhiZBCUkvD%4lFhftl%:o89ZaZQf@Aa4lF44bd^/p8_k$bVY>*a0$")AXVg2yH!i!(uJf)D][2fz9I)<+DXBOBxFi4J6zL,GsGYEKP6KFx)1^{E0YuUX9xMi*90:~XVv+CLXNU6MWj9p;&X/FR_KGY&wMU2(WRtJ<_{tIO+yGqquYoUO0cnzwwhKMI>O7lkCPObkuz6y}F)9GHmam<w0E0,XHnk",T%9puIUaR&$>""oSCf4OS];wDAu}y<hy5X3/c2k8R,9dSMO^nQcbtfpvB=Jd.@r148(8y!=<c9Ut44dax2hNO$y~EFwXGh;ILxwfJ8_bu")AQhxI!<}XepLPhF[1Cdc<N4tNa<}uJxBWX#8QN<IrA:ELZK0$t(3mCkY&0iqvzQiDtZc<C_IF0ufhavbGe9LC"jOmB?[KC8Y{&;F#19Ewc$vFXc0J!t|1G&IP?Olvi*R5d|G~IM`aD?uW?pv.,+R3(+OSaL`aDHyE<5I{hP0~Lq_8Y81oPhA/wCY_H+Y$L^3fCp|FW5INhD:d^BdH^QQITWRX}{qxo~!NiJ,B?ZRB3OPU!ICR/<b/B0fCa8O)NEY|&2gUv0DqO/tJF@O3gnBRb!9g?qARXPy3b4TY`;bh#JDzo[14OyDF*QO[)1,O1JHSPiq^NY`;bm6w<B"g`$36+CmM)j;ocRPFt+7IvAWR%O:Ef<,hLu@83kw#duS}~"#eRRc{a#Td]VTiNcKNH0U]*>a11V="L1CRwY3bH_L1hVq[j%HAxmp^,bDsUWYjLQBI,_dtzj#acA14:We4}FC>hOOW!>=9U<U3=iN|$.I&Q7`vMv"vH"!R{2Z"y7a">6ILz5.}Wvogc**nsa5/b@hsxDfj+y.Oc0W9}Pt,5]KwS]5{tXn1b~eF7B$~xKmqCYgh+JZWjA3HV[PZCaKnL@S4.Dbutvp.I+TZYbqq]b;a]?RyB&"=}+@hqT_{+t;8<%@^$u#%|KB8FBM>YHH/DlZFldLiG6RKbUfKAM&.DcklL64&F2h(TrLozM3pff+/^]j")]y7"#+vGkLax[BAs{T_A=+m6.52GB5y.J~~!lCm4pz5SbnClZ/<]S3!h9BIN3!8(`Q|`dVIgG7tac!>i@"*FzDwLXfT77]e^2G,54I[v{iFvF{"/>ib21s(g}pbfaOtMce^c?,1#+|BEyu7|yt$46Y*Bi4!l#%P*MVs?a(7(mtIq.tX;O].B)Kg~.W&={2z"D&2E0PnuARwQ(z?J{zYE2x+8CSV6WYXL0MJG#|,}h`kevfVs]u^m^DoB=N:8KR4/uy>yp<Qj{RNL~ha)4kL2$b04tRPj#W9MMM;gYI^.D[q?2j~WbB_UN,TVXO/3c,bY^v,L,`o!pHJ."j^.Xn;Fnxd<;SuWaL|vQfb+y>.UaS|l?jB{w)&Tb{}R/m8M~9RjAusOQ/+Bc#GcA1eAJUo"}c[5W)PN~IO}Ty_D*I7rF/EHz9FR|DsiELa!mKrOtH%jS9c)RZ2pr^NS>;7IfB~R^Xv`(AgE7lafOxY.%WPWj3uBs^1EjiELudXGwcV(Gn3t>7KuD9i)my1ExN9}SW*UfziF5],,Flif3iKc>ndjiT5*pe0/)j`>OJFt[h.u@TPW&:M8P<%@V!:::}/Bpn]KVidn|Ka!SGS?{Kfp^"p/G09*MfX+@0]43r;y,IAI;Fv{$EueY]j`g4|c2!mf]Nf)Pc6"<rFj$LnjuO+Cmg2CFMWG=]1L$jU!Kdb|IDDm)E*oo.srD[hG9ypZM!D+*3Rg#]LpS%($Aks+,H|q]/`|kp8pz7I09!e<xW3k1(_H|8JjTZ<TWXzt.7S53czXZ{A.~b)A>!pPtDK`BtE)68JjqhNHn)r+Vt1MXLU@y6MrFjXWWi&[^,[O8u.F?/GfR+y>Q,OwHL}O$u;CTXC$>.LKFTX"bf#X9!&KJAq2deLJF:6Y.VzXO`(ga5Z;4<T6c,kE{};(LFwwrDLj;G:UQ<QA#hJK]KX[cRbi;GB#&2e"T[0ptEW+]b2ucbb,/Y@b8}GCcDMeEv=lg/bEb%),DVLBSd=H@;JJ*b)n#j"exucA,uoR];gUeZ<L}R.)GM5XX&xMshQZC:InOGoeOX?<?MMPL8VW[>#5)E*8(ATJttLG)9>)p1>G#Xh*oX?D%_/Vh}zVmdQB5in~$EJb8Ypa}&oyZHr]3R7f`)GkHzG:rpkxeXkE@I=]F!MDd&V<{^9E7og?U300!wNx&n|ji,hS1v+]=Wdp@aA}@fI(~b;SP~plae{Z|*Nvb}^V~itF!+8:<K((zO!CPs^G%b}1MEgp}9UEqX{j5]E$iq_1TKL[@Q,AeZHzcp6Y]C~,hc1H~vEYOa)sF4"h`NB*.zUTw8]2y?{&vFDf|U@nvn5E:Xif+iqhxk$fS&brbjxEE|"CsYV;I*BB}eblx8ddXkuCXxp8URoLp;Xd3i<DE#F"uO(9|wp7o!lB@..GljCY:C0{pk8t|jVt[$r^EU/X1nn!nYC;gK`|.B;R(XLdcf`e40et?/dM&aeRTOsu{}d:bj1=/TJVGKeP!AS@~Sy%/4OJVVYo<`O2yf=s.fOfRN""jg;t7PW"b!}lq@Jp+2!ZD,1tmtl#<saJcL*XLdph*dK7S%.7Os/<#k@WP,X^N%Ye7;qephpef#o@>OQ0BXN0eG7_Wb^4Z%^Hus++ceUu`CW<0~iFNUmhoo@M|0$4lXd}oW{/%MZi7:C6fJGuE=L^.~|#pE]CJ4sS[l_C.4OsUL#/]ABX!0=4_0IAm3@;ez%A/BdOh03tWC_b<}.~YwAJbF>(OOUBrM_YF#_Bl=|>AzW"wG?tV%N^>DxV[1HB;4G0N)Q@+G~,%H#D<cfj8uPOB+ubEzLS>DBF9xmE{2yO:XI?{>=*%HLfa]ti7v6c%v{93KzD!|4Wp,0vJ)5LY0VKEigVWskLM!uJj4!dBdL5}AsHt<hC):,[6IU#J,v!4BCYKH@;Io@j.,s6LO:N>o<8l!(9ydKUFtARkAh;jC)`XXw`2tXBXqMPd*M,~yA$^oF.hCVH#&Ky4LG0$A.K1LrIp8;Pn+ma*xa0s?vu~B_F)9Rj.nIYKA3e$L/`lX^(xh@v`X{BU!w6`FKQeJKG)9#5.hp1x/GU+<aF*LMcb,QF!Ens;3cM@M|RSY)0J[1C<7ZdWu;V`w!mr3|,rpG!yyY/MEE0duc]ZEF.QFhDYDZFA)w@.Pl)5(61hKdV_A:V_MDlYE%.X&{!QN+K]tM&CCjX1M([A3bP(9})D/WoogCaK;xB6[EHhaaK^7=oq?HOv6e+bbo@nPCN]N%5lK7t?Zb7fkPX|&uw6y_Q"ha4^f5He0)A*GlfN&cwp4L71ez4@@XP<TFt1n@igfZGG)cKjvD"r+)Ncr>2:IH!aiNPNw61vSlfEaWRgZBvZt?]StQ5az=|I0TSgZBv3,=8O)Q%,nnX}c$Czf!Z4Mf+I:5Isfr0UwlXWCt#FT5wSZnb@^3DxE"@tEg<hz}4q0B]~hQ2a|AOLBJ$t(=Ppl:yE)gWYlH6vWn<GhT5eF7W=J;,j|<,Wv:+8_)ET5EDnUOJWCwLs1g*RNrB,}kYG38c]lRM.V_0L7O#o.T5]xZVsPBfI47F3R%X@2{m$f7(LS7Ba+_hnv7(%/g!=P%M3GsE:vxhk)RcrVJn/w#F^tJ"VR*tWi(Byuc3>Z;waESY5(wzo_="R]0NyL:0/k2)dV`h94TkYt:wGKb3/k]>XjYcHA:18Bv2?W*HjiT2]9JV;+$g!]ZLeuzPu+68,z1MplA)ms4WbdfX]h.hT28N[H]=V|VEf+7FHXr1zHje7vOo:"5WmQ3)/ooLy*kSw7`U]APJbn.C5W+a*kw88)PB~(Hh;v2i""a4:M3e4/fj/AY@PC7Pzbs04,q"U5m*"Z`$MHxJgBUztp|DP#h^B}b/9*gn}QDGmt)rlYcdgjv,{HSE9vW"%z(ImY1ypiO0GJOW:hLRkd6OQiT2dD}fxb>}KC8p[R2X"!K.7ROG6(jSEcTx:oTibe.wuI2twuC"Bz?a4ZXO^(`QMPweC"sENJd[/q$L.]QGmi$f)Snpu2XL)15O[Q7q:&pkWv7yaOdZ2{sL>C;N=t1;2H&},a8wy+OCf#c0fLQM^.g+y(s8^yRj6?zpw@accE^.+YbL:?ou&G>PdM@@#bPfx6{jVvy:oD3Y9J%z(n[l6]9_&a9UF0UjDuWq`B{!|ePryMu{%Z?cF7ggp_rNLP1VlK,Fo%sLTWt<.7*TVa%]atd%~Xe84!Qzpo1v%R**US|+|rz(kqSXCKO"Ja=B8]+pcc]7gw(!q_MOc&THTr^Jd#KV:/S(|[h1&m%jPrzJo6_VW2@}RN,a4LV:fs1Vn<,IaB7ic<P/_X4Lt1]9:8y%A.{h9P?ZcM,t]WJ0$](i~dH?%NBXwiSHyAbi5O^.y)*:7vhiRjoX,hlB)A6ypktttn~!@Ey2YYwRCA]Ot8YdHO|,|vT]]PI0i6QcD8/3;u[k"uiY2!VIkYN&838;B2hNrHYkD*0hxX,kVJV!e{Fl~*$KG!osqoNvG:bF{]m/#bN73B[X7R{L!X~xEq5<.$tM#"[GHT{A4WJT7B6]sXZ1!c)KIu:Glp9sW@z&pkL?H$Y@;h^,/ovT.f:VplL2[C*N>(Jh9mGzGa%F=VQrPFD7YKJ<aZCs$k#)zt2V1C/LrwnJ/1V^5v[0pBYf8pWQQys0jW!/(n4Wtsb3pk[?c4plKK%*~l2Cz3kw}9G.BRnzRt?jnRKSNc@CuYk;B2*cH}=l>I{U<K$Av?a;B2C1bl3RLt{iRSFQXUxN^.Akps6TSYB?)k.4mGO$d^[hMwBGpz<D"2aCJjjQ^.Zv=C.jaqc<"e1k=H95@8%],bku<yz|dOIap!.hi^USR"T1`WEy:G!CktHHIzg{DL5Z^U=x?1P/?/xulFFfZC{EdJyV~A_wK&EJd#^Wh{(LTDlDu3Bz+t8L|;hDB2pkjA.*?>=Mezq9^CJgs>US}>cFP,b&1hyn)WUmmC5fle=vEYQmf+5i)aEaC++w/3&Br|)H`x~})@M&y6%y>/pkr"rbY?]vbnV|p;,LhAh{]OlBpcjGCC%IVx}[>PYMi{3P]CSms8*LM`p=PTw"%;US*WNVpF>c98>JjKik5rc8pkH#Qi/WlM7Pq+Gq#|*h/3PmQ,]y{h3>R/QT4i"jCgx6CGU)|WO@MRL]2RmaWch{:m!MgX8.k|>t_(ZppIL9<%zK~B!_G3l>|y?vyC+z^.ZBssE@a`@B*H}v}Px;h{jHq)9,uskGLLy7iN1*V#GJ.UsX]D|jE0G)+ea"9]"t=x63Rd:yM,]C?MQ`.O^.uuhcIRIKy2@QNNqzKWe{JZtBmt(Kus6(rzyusc9?US3f$2+WkNeeFT{i>`=Jp!/P#wiyy1|G4)WU=XTjUY%]R}+uU:4Lff]FwD@kTNrf9{jM~Z+M}E`MQA7<GB!]*]IDkb^M~1{LIBJi#XLvX/pkmXc;W6%@ZiEYA8NF=FLPzltbCNWX3yNc36+a)8PPYm?oL}[jl1)0B%dl;tGfR$oO1B{kG0kh^yFh=X&u/wuI5WvP?GOLWqT1jP}iMPzlFx`F*U1X8O8+fTLPc*kS[9LCL+uZR($q#ZPfyGl9|DdZUwwDiAEPUE@!]wNHzHgX,#7u[QR(.L;yB!1q0kT2<K;#CMJ~2tOcEt,NC1/kT,F|4QF~qAgEaFy4:1/k89`j:^`t}*TNj2mtx,l#;IsC#H&tc_w(WeuB:|1Hva}u6OJZl+jN0%}EEtkC4/N;y:l!X2URA4`W@c(!1H!du6McL~2!?hUJD^^2qy/k=c?GA@v|oB8GY;l/ao%<YHzdX|;V^DlKgruM)2:w!I!}Y6k#Om;TMuiX9B#!=PbQ_EhANb;JdK4<U9)ZMP#%FB&W+0)YrR[4D<:C~40HmFbbJw|pbf?*^Hq1}.#8226S6t,OgX1DZ*:t77.fkYVCk6(XbuSjfor[vi/?T5ju6<9.uqHL_,2Ox2I).8CSfGlZ.M6?|QY?&M,Lbb0H}P3D|u1*hsY"_Xs0c4e*/k0t@o<EF0csr`*0jH4]|,kSu!#x}R_E6f|Gg)lD;(mYFKy"HDmURjo4cxSZitMH4/JZn]**r1Ux.oV*>La*.wPV;43Q&P1R3Obf!:muO#>8ER~F+xSN+Hbw1E")>d/wZXPM=cl[;QXEY;<Tw@`S!d<"[Ow(T|Bcqu>R!GvO:St8YD8offlikDRd4LpX;f_<H0I#UI_FX;`(;7zwucl5{EB"qPUqZI)tEU&fX)cVqFlGnRx>"+cV}zK~SM%@1,5Ecb,8{GZt~J|vY0;i_:ZY3>g4A"Ux;TgZBv3,0|mCMyu(3_IE;*VLlfk:O`;c9)2B0{]Xx=Ib8@At7?YQU<CH5gX6B"tX^L1w%plni*NFHL+HPsr6&{FG6Ok!7.E7P4ms6+_#";/A>oU#!aZhM4c_yKltwxSmfb0/zfvczK!yR19ublEnvJM?To+>l+6k3efWF`9t:Iw1OJn>+xV&bE6"D<!*2v6(7;XdQ#OW|qJr?;pAV/bTSCk=)M?{OJILy3o"A@6W7g,a37p+D<Id^9PL8_|20BX+RuSm^#DD:_PiQ/hh[X.i@)>JK0P`ncW<tY:t@E:S}+r7tFGBEo|I~AMBVuBZmBEw+v"ng(1E9oRwRj.C2@e9jgC+%C>0NG<n]~_ER*$Bwq|Gfzb3mBbyk*%OD0YA,Vdtx=8F~z|w_vrC0X#qzsq"Twwn:6@GIhyol|qLs3ZycH;q(vunO/$f%Hm"+^YU=oj4}E4M4AgV+lO4r77$/FP?rt<R[C5/<.yq.)x@(g4S(`T(iDPV5by:(u0Q2D!R}buJdV"Qs8Vm}JkI_w9gtBe0PwkquK<Y:$v+T6WD!I!Jv+j|qZHb)!*Z:.<c:K^Jwv4xWDyE?jYgpA,_pc|qYSg{fNg{RXLSi~=PV/.?*$wk)!0eJtZ&:BnFYxA`?h($]vnc8>}zz|8Wx;[WOR8H?DS}u+z6?w6yR(8DnnGi+TJPft2<&ShUW+B/GJ%b}ebH~"V!9eHB1?~Eq16DDaKI#T{|([PxRu3L_6pAj3`o?TM{*RfI0cxr^"gNwtx$RFp?v"xPocEkp=Mn}@3`L/kB#:!D@hr.bR%tSvL{s3PtPKjeZ`DiTvU!hRl:6y%ba)n_c7mBQ6DifW,Ls>K$gwItNR:P>YT&m~0KLo|DlGzt}M(v;_9q!J~Phw/J<@mh[Gu{Pe7(Pu<a2>zXyo.nJ_3YzP!TXdp}QCrpwAtV[t73pyj"@EiC}6BzB%@du*[uqN7T/tOLTT9`gKv@^cAZW4!iHjAwR~x_V~/yY!@xH"c8H)|V$<w_w/btrI"qAK,XiqUA$z5C_1}fM+u},5DLD=,$U*">)LFA~ZA6ZQ2jzor4EGGi;7=Qf1iukYD&sM+)at$(/;Gq!Oy:p9YerqU5muwBD]&,I!!O=J_|cLTXrj6i:N"S6]+G)A68!|eUvzpsptB(3Qio[y";|)AwyysE^>EB[BExoxzAwzq:Kuo~%~ILsD7.gP=n:>/oZ=j7]2JHlESUdi9K"X1*"dzP8$Dl_]eu5_hD_|7)_9g61|sy9gGx$|oh$mL3631x/C)(xCxQh*4#1C*2&/@zi6p_94v0[]ixmvq?=Q:Ck_wVg;zo,REJVt^e%x|Ak!T]LvRy_Q,}hxi"eDU:hupu_FU,Ov*/+V%1&^x2@xbD1bgZ{{CGxD=d*dm7nO!>2)&O<./T6#4z0tJD7`VjLM#Zj18(~VH_&$AjN`|WAmcRuanvMu?}$wZ1_FDwnhOE$`htOJ5CQ5InrSZ}fLAG%"*EL#RNEUgOZ?%W<N)I:uQdVs`%MMS@9"YR^_m+|+^#+IuyjqF:g)5krTwk6@|2)MGBT<snl:*R|>D}mHgKb[KW(v5V@CI[wtE<yaT"w_qD_gT&%9DG&)`K8,kX;PKfP{:qfz/^NPnFbS4.Fk9]Wz"kDER)OXsE`_`4%zHw+TnisMDFYe::EjF<3m4w`3@T?bGGaq{*e)K*hZfBYv;.<u!@=f$+7uYO`mh+yXYW6n*<CDf!G_GO]eMBT&<oDHF7XR)^9F{]}wKidG9<n(3jrbkG6urweS6`]61_o4s1hB&u!nyLLC>dQk#r?`}2zPe]i5p|UcXXhXUP}GPrGICaq93!G]|czwbEK?+cI44_!_/oVl{:T(2R@npv/[jaf^r@Ih4S`n:j<c@TG%%NVLMhjOt/a=Ew5.LhV[/LK<,Ys_>)_i/^siO{]9KG!DfM[XiyrgM&9/{(HDF/hxTI_6s|nLkH&36nRZd5k|[v3BdG,70BNt(mXjc@Ai,C?ANi:VA#l(!E0KD!}.Oj&}g]3[3Xa!ZCRt5f10!QG@csHa;,YN)N9N3v!n(n"(3))[4$"]YW&4q_mD{3HwLi/.9fr>^XHo3LpxtKrL7EZ)h_&8VL{ulsyG9|;ZA&cv<_!lMp(n^NPIqfOWN6O>BMx?>DW.!(oI9`vt$"3`En>8dU2x@DGDJBDZ3E*q}M#QC$swItt/lTnk3*4Eygy.C{27a"X$tPQKWp%:COR3:QNGqLlisE+|Ee>@)w%@*tb?~AjZy$,L8nUp?]p`tCCE}08H+G1?Xt``hh2u$g*ML&Y4h@~Wj7Zy!",iZXkIujL>n3g&jZ8MF2*(=lhQ4;@Q;(h+:$`uXRVY{u_2~/t_]W$T*23f^KT4[|~Fex;8vIxKSC3r=,2>2Wl/S*WtCO2+hqSKUL=SU`0&`E;E9i23{x5*5)U/2P2(n(B9(6dSu%S^zvdaQV)vI)ByrB>@u5s4NO+0dT&A)B*t3n0@qnr_b}Qc<Vd%dx1CCG@URO3U[Cu%+V6&jdJE8rwIrSi32xqMZLCFfrv(xY0b#7(,q&]M?>Eu2BjhBR>die`KlU3[EP./Xk>,bJ15o>0v#_EzDN3VjL@bgG9gRjsM6M~XaQ~x1x:vLeaMFG%KRB}mI,/n8/_=z)^/sBJKsMUHR?p5|,_B:Ch6ESlGR)Ayj$jUa^!>Dg:>Zr>WEo2M=J5Dyu&b4I*XPe<3BS|`0c!PKHdLh13L(rOm!{PMuarJ~|%NAMt?r?83CE."m=N/@D/&BV+$/I!a~tVWCQ]>e`_TyaC{Eiqb3T)E:|,y_HqM4RLI6zoyyQ@$;C2e$K<iR93EJ/aB(nb6:)fIGOB[NBF"j.;rG&MzPW}eC?V##EWrSq!zC]xG^CS3e!!JUHY{)y"LbTYELVmGc0ZyhHAnW@~YvJ|?`w*h6H94O1yN!re4zv+#,{EzP@EFn!r8]&Bh`ns>A#G>nnh*Svv"1C4(Cj>Wz%mLBWaa)<ej!k[4>:&hiYL>oHG@hBsO.CUY@20c6?85Wd_J{(gs2y8_]_L:+DN)EBQyqW)6`p6A(_?pmq2W!m&fYhW]onRg$@k|P^DH92Ea9HQIWq5BPu=O1k/c%GK>aBK&"Vs))(]kKSUv0&&r<`#W{qQKqASWWK5?vMJoDbtd&2+pmdcDmVK&K}R!a?Q?m+HL/zDnuiJVLO5>heO&RXKJ>~M0<|O"8w>j~7huEa0k/w.kGS!ChShL,>hem6*IQQF`SK%s=iDzh+t#RlKL7F:V|zRQ"}qY.$n7Jg18ru>IrUJt*Rxl+aNRQP_9ESK5`EIHwoXXht"&*FTy<CrB0C8MEZK=`kv"DJa+7(1+Xo"K;n=V{)#Y:O]b2?ZU0||52{[r?_fssJx(&=lKK&A?F[`E25*,L!{E;GGg?p3r`0*J^$U[c(W5%6&}Ww<2T~Y:$N$>?|1S=2FQ{;([X.t~86WGocaG@M{0D^Sq?s~c=91w"#`|Ru!s_b=9e/A=}}kD#hj4~S^|j}i(x#~SR~o3>9G/"f{r`JES^WgZoA$QYG75)yHF|#2@[l3f]lni}ep/Ni(^,v{JDVGoM%k_F"e@`x"TSBpnM_gE?;uG&kGRw(9+snYwhFz3`jR*CNblK&VV;hZ*CN?JT|MRHxUR(XC*ZtD"cl?o:MpB^Cvc[G}l*`X$~q`;n[A9%}qRg(XNW8VEhSiS,>BYAMAG;CocL?Bt0x(_Zq`;6uB19K1n]vE.=2x!sI&kVY,>#K#%^L*gQweFgvXUgV3g`Smapf+kZQk)=8NScsoTb<;r!2`wb,>y!2e,>y!2Q~FyMj_tiT+`J]fl=HKR`)3kmWH,kUNqnf{A$dK7UN+oALIk4cXdbko1oiJAU1/o!o$7O1Ig!gWYbQcJcib6Pf}ya02V#YW6!17"/OKnK&~2l_fkrvy.ZtYFRGS%m,!v"s`V(X@Xatzc<TCW8E+ekKS#la7_*U@6oZR%ko.j*Po9&;O1Q1w%rf(wOJEF2zZaQIwf)jADjU(8bQ3g#*g^sPT|2,O1i#.Ei#+T+>:X}BXOocioA?M/igRBL0w1U|4h0+jS!fHllZ"a.TTGm6~*.sz_&KNjr,H63Ddr+};>M/2ES%)4;hO4+7(~~&/4O1Uj`jo~pyO1e}aP=G&P8(TKAGBw2gpf:D@49"Ct`+o,O1@`DWR%O:/,UYtvWIYJCI6nUHbQ}XT"@4tM2(*uz9S%koR7bQ3gC./0>oog2k/@1,K%R%1F2tO1tuKctv1v0"JyB%DKTzdSuMQ@1x:W+X6k<Y>$R9,aw4uJ]n&TfBSVGqp*JAXGOPmS9Se?7?1R:&*~HS9?k)/45z9hv<sJl|?U!s*Y=9*."fk|nM!s6p`;")t2j|"D!s7W=9.v"#=|o5nkud9BEcve"0y]z0I32]X2b,OhR8xOg;yg%$:h!1ye?tmNQoVgv]N0HDzgdg2iWNHdO8xa%e$!FQP(aeN:dHK~]Hzs0$_[cWGM;c3|Cd:9BTq80EUx<)c5;_$Nk(YXxFfsL/*xZSA@PA]|1ak"nT%F.Yh?@o,0k_qz(h"oRV,boTsM>EJBgCC?zaoZ~YzT@AD7^`(Sovw/+P,>A*7}>D!n{qKLK&*F/Q{XmI]B|C?JX>NB[djvw/TY+>%in6Ec9IrHK7!{d~|Y(Te<tJs@9GFbFwS&l_(=CMWGh.UAh6Z!v#@dc?2)xG4VR?Y@FTSq#iVL/EDMhiw(bwqseKqP_v!nMoNScs_Pea))yB7e&Q6fVtGb8}7)QNS?*<"Z}sV3jU$~B%2yxA,o|sJY.Qqbpi;PxCCurs~k<JE|PkL/6t|YN`?km~Qf4hnG]eoOPpeI`_l+&}!)q8]>%y{|$5j~*W#JbtF,@E(sL3dS!kgc$4+!IvPJX:?26XQpOAgO$c)"Sujt~hv75b)f=V>MoRVpQY(6311"0CcK;n]:C=M!~50dv.*47tHZL^qCK6M.ywC{xS;ai?n<7K@0sj%7r.=yf/LKJFp`_2S.itOA6AR1SKA$17twmXR*({R/knAyzCuGTKV[s4/>jL,)WUnSA[eK[ZX(5dL7pZQpf/{JMM}oXcM6fdn<([cIVPeYgwBp[c"Th)iV<n)s8EZl"X=|E}mS?)Sm?[p1f4yMusTH@o"1alp?fHpHG2)aong+DSg*m)4ob4L2T?dF3Uf^g^,u!<E9}P{234?V"Bc#p:v1go5D!&YhfrotV%.|bz<|d`:G)s"CY4mL]/6N%3xd{c,4Ka[M+F%uzf5k`,kRO5PM=w_N>:e#c/&4G"bB"}0<q.HG(,Btv*1M67O%+@#O1b|!D#m2qZ[aGBCI/6S]B2al{4,T}YDTW:pOt4mtlZbb{:@GX/<Wx0b1dDES*5mipDvsLF]^f9]qx%5[GdOlTtHaA<7*vFR5]IPvxW}BOl;I{a6i!G1bA74W{BKJWak)}4;1:tJ,F1<H*I5D5p5`e4D?2CthXH{C[ZWK(N"2^nicUS)soC35`4Cu|BJ{O{A{xb!44tfZ:gmMCl)g+Obb_yBv4T&shlp%p.p/(yhDWMPu7#2[+3Arb[(T()oD}Or#E<7PTl,EdaW2^7^*CIt7|9ax9Q>u17]9NEpTF+AwHmp6fa}*)G.!Z.DmCX5RI)ok*3Ar`jC.W6Paa5i:!4@z5v|1nVVY!EU>p`zbKRwNL2rYP3V[_Q^)dbR54UKJ/R%3|dM.W*7`d!_}MS&[Gl]T`CPC,=lVWYcSXcKt`DhE#fSdY4<Ra*XH.k/*gwp.ktEu*K]:zdS/P.N.`}?!QZvCF46OX7)55i]D1t>mu%=cUXLY}Wk{~Fl/~yWEaAnAY$<cfttbx7#v${sU}kYLxr/vZ%Z%YUCjE+PT/`a/.kxW;uuAlPHz8x{{,PB2t`^,G6s34oz[`itSB<eArGxoxC2OblYd{RT|5ztB)"%,=F`W^|4[3Jr43t=v@ZD[L#Y42">ENH]"t/{a~WitUP]8*B3[~,qtOwdv;YNpH0e4|br/[1N?sAPMjH0kwW4vWWk)r#Z44/%4EM>F{W>OCmVGovxvgyHGzbTH$5N"mYCN$H{aBN+:02Q39L<,]WKv}]u"$4)%Mbx2Q33O:&**_|"R2.TUM[f3jj!;w@@@)TUVqBvCMUl%LO}90D~OD[47k6i4e"0S$(3WMUowNcPtuAd|1F9V7D#zw1E"mY$X^)aUy&usQ3IO^`|cKX/WpTNUum1.LXpS?)dd)ilPS?pVv%IHd47"]wwnThZ..Em17K.<Uo`8c/,4%iWw`MUz1@ZbX/R6Ko8+ZxVUkB_;QLw`}};`Kmcu$a[7[+#cK{n7Cd74G0&wgYR*G0]ahRSNoHEC:<NJ?c74ZzJD!F}w!OMc^1N?&GPMO{1[D6jX6!dVxeO{1[J:a!WtTT:D)E6F%AECGkcHj6~9KZ~TIg?f${ilq7]5Mtqac[Fp|RW/VUS*qG[GFp:oYc|1C)IE4q*p1|Ky?O*N*1x(pxsn?B;9~O2.xdRcV$$4z/yRg[P3Jex`I.GHg4>XvPkm6qkmkm{{O{M]P/AXo[tFx`k0ZoL#a46ifBMlvVkUN7u4dtth/=@8e#j#0DI$?WF+=L97sch/=WV+lF+XH[)fNOn4jd"ymY86<Y@cj)mi8CpDu6p@po0:]C&B59(P?jI7kb%LY81[hZV@B/lF.R.AH""PPO]:_)4IYurK_S3:AlFpJdIX&Xvh:AzDoOJ]/T(Ae`PH5Q"q>/9y^B>F@Zx#>2+R=0_ucIrjHkv&0koZCXwOA;Oa?B3bj]rOJ!CZBwv,uJ_5l:~h`:kL,Bnm5NKOu40(5HN=t#ZKY8v2DwBBkSN:hX(ug2(D4g)6FR9uGlA;T3:o<aq!lwE1~7BQ&[/Twj9P#5`ngu/R!{iAgfn5hW#D;q6[&W<BWMfJADw1^4~RPu~gmMldc01:e4`"_C$O!{U0PV^HQs]awBV#y+!iLBeUqBVWzf~llm`4)zFvAXoe&:95?7*/g!+t*KK{mOA3=(?3*K5=DghZ_?!CwVK]q7j7aCClAIob2n*vNUetF""PxI$@rl_Oz:V/FtLBIp|(&KLMi:]2V"0C4U0EH0Jm?(0IbbU>V%NcBXj@qG:e{Os~.7oUH0`Z/6$WPYZjhLy=!izC?76[7:OmcXeXDFzNYbY4UaCVr+*d)iSI8Ds0/gI.GHe4Kj*y1a$R#65Lw3KrB,9of[DwuxOwrV(uZDK@MHX59iZGR3cuikrxN3F5lX^u*,RPgc]i#7OStD4:c4m"2AJTE2p@c](GBk*[SOdSc42tzB<Ytj~v"b(#]:e#$FLCtXZw[1]qHHAdUtVbUSm5FNI0iSU761Ua^aGv7B5hcCE0h4=zJvAXKMxd1.pc8`vL&wqS6dZcqRFkO.~%g%qbTXv6:opD_gr01bF.:`[`@oY4^!mBzg}wJ5Abd#ROyod/}WYV^CbGQnx18X"XPCbmNKfP{:1E(614,zSEIfZT"x`NvjbS[2Bj@O=QKx9v=D,KYUemGOC!@vzS}UMlY:u6gvr72WeBsKt3>RY:x%KB1(A1ZxbQ$D$D`@Rt"Pk#H+%xHW$;YYB{vO/Fcbj0W.9U/=%BuS(5.LO1=l_A`@pZW*wEakt%"k;TWNiRhEckVJ?cu/X^[G~c}yAygXR5Mmom7z,1?x7W|?o7H!7Cy;AwBdR!lk1D#cY$G$>Z/0=,#FOMv2J<A8)cznEqb1jxHWKna3m&]*P/Z3wo3xl<cO{"YKwJ5WV@DDuo*x&58R4NbG8K#RjjJXE0yO"2!to+pA4jo0F0+5DX^Tj5Hr`R~jFd1Z5)OKQsV,+O]O3kU!4o:,ZUzM}Hmqrlu/A6r6,"/b]I9)664kZ<@MgH+@^qx%q@@+yJ3JVOjZv)dLUPt%~k}O{o:xu1`iVb2M<lfX!G[a=h]D)sM+rK4qdbAD$59!|uZOK{#u^X_>7(A1)$V*3mikDBJ)kd=,Sck92tKws<jN6.cRx)Tz^*c:h2JOr`ek<#Jk#:qsy`rNwlS2v(Y0lv2O_jhq}Hj2",fRo*JJldB[Rdy1T2|Rl)hIiM;|[jS3V.F.57l8(JYdHk^p~3txjN(1_i].RI"wJOUOPp0cp2yDEdhrh2:S^K|j?ToXSFelZ?l,Mbw7balYwfR.w1Nb`T!j4Ss;4W:Z1NkwlN71#ROpMa:ZkDy}TrfXcH7#aR5)jz[rgwlN!:L7_WI6TT!Sj7}vaNm$`V.o;a"h}C4BKK7=@@GkH[H[[Tc*VFOfW8{8B#^,KiI"*M02s<(a`h&.^S^+$Q%Q>J9G=4i12O$#mc<dedVGGgS](aeRH6wCfNESFS,M8w=By(*k)YT|5zAI8KYYPA"fec<:bKLnOH]I3K;W7C3KSR/u&YP+ZJmqT,ntf4|ztOP3Aj7xfO}h#B.Ra2/`wzvagJ04(Enl4oMlT,AlLH=FRE[5[tSkFd)cjK3j1Ntx"IbO#cR?Oy$yxD~ok0U,<u}I"RDlzA`lMul,y/lR+X;mB[/`%j=k+WAz;5[tTcZ*gS,!N.bKK2v3v3Co%,/Q%4_}jd:,b39GQPUptx%7VquaGHAdM)WHMmPuxbx@kIMl6Cbc^LKIB7k6k6k6Z;Cu5cY6|+cL(sJ[b[t+Y:>:/I/cYTMl)Yl0}3Fu&Y$dL7)c#OY<.ucy5c6iOHS4kiP05c<_:uVH"cM);`8)0EdS?,pR0N?,k<:Y{9"a%G0;$L!)&6?TgN^23Uu6BQ~jR5cCK/kRdCJcEi7xfOMl7?hIPX,6vz{EOU^23n*5JOA64o1vzSU?:u0d2wtO~5vzEa/T:OV[v44(Q0fO#cJn7x25L"Sk(1ad+HY5ua~OMl{&w.h*x(76NOT|C.Z[s.vVMB`l"(P,W6XCO$gU:>XgT%7zon+@~IvT9W/}=_&O=$oDD[;<{xL#<battmd47:}8y*dp3ac;D0m~1ajj5k<<R73e)eEpY~e"G7T|Uh(+QOK4R`oV?~L;a#,~lMLcH~otG9cfWq+lR;|6X"y9V.,wd([p4,@7PRchLzSCS;Y3rNtm_7"<4+#etKQ~z=m9@:]~FMM/z&@SH4gpL#.bh"!z&T!yHjdNP)@u?+g_X[_LIY+hiu2?xMryDLu,czj$]Yb&WNxh*42><~@LLchY,ug3>W{(_2)U"+[t{sY]Z]q>gcAT0<vBc"u^sI>GC@Wq;a2i8]rWa=&BzWHH[Fo"wE,~4%?1|C1"X.=`ku/$WRhwex+~aN>11h`IUk<FJB~#pL`jW/7uoYn+ZSJt6uAR2:B~(sqWN@N2|sHtzk,}GzW4F`[:]LBl:wCtG7+}voqWB@[q$~2JM/t|%KrW^i#*bX;ds|.*_s7*.`i~;YLcq|P$_sr*,osbO:[B&FhGwY8yI:7aoz;QZ5o]:~W5G7&}XwW4T~Z:FO|~?|5Sm;c)zW4RhwI^l1n.`q/MYYIBJ5/Y8V^ktlZd7Te*!X.Ba)4I6*e/HhoJXG81R*b*K#ssfc7TY*>zssZu<2;`]Yrf}}o"<2.`Cbenh^/q8>M4[|xU.;,tyl64HYk<HGfNln[lnM6XrR3f)e@g3]@mFGi)LgHUzYRSn|7Ts[!7W(iVn.:_qjR(aNs2%FNVmb/_CbR(E#$Nl|#K3>SG$`+Pz9uBV)KBamm?j=^C]DAT:a2iv?QlW(@L<2t?EJgs%W7T^)K#([pB.7Zwabl+l_Av.IL?ouzHL?8WY44xqyu.cny.h:#}drbn9vU[h|+*cn1v`FG09X%T!n&Klh=CC}Io%t|v;a2ij?mDW(+J<24`2#@jg|"/2>o<gd#>wESB/7"w[2wnSC?;#tmq_UtmDm#]}l=WkBx&@Sk:?<m9h*kk"_d^4a15U5K_+%TVfNenVvTkf|(!cnNvU[e|y%2>AEmb6_7gQ(^SV?rIK[F2esZO&u%6bqfK,v2_Cb5>TDx`NKy9aBYweB&16rpSoqQEA#j,xpce*D3lDk*Mt;VEm!o$;gdAaRJoZ)JS8}_Wbnku%6a|6p2>JJN]6SCkcQa|;m2>eCn.w_U*P(>Rn.@hvWG2_TC86}sObn`,3o6}HNbn[,gdg)xxWIZ9r1U[?}iMbn(tU[W|Ercn7t0WASviN7s|{mX1,w3]~7uIT;S!=p:T~Nq_7gP(>B<2?>z<U(uB<2>?|RS`!T7Sb/|sFKpt~T=B]<tfcp;6d,0i^<nNxCGVP(JQmbn_=:4>@0Tkh(Z@gdb(P!U[g(<|9O{j6l8@}nCKFq88"&>N#|aJsJ8[d$s.8!IA(%dIqjj@Z<8}]r=2i~Wwmb@gcnWs#K!]a(k?gd!>5~N$e~w&s2Tca}2#4>(;K#4}S87Tn{}5&An.7qfKz,LLam#X1(i^/;@]/;#5=7kVf22/evL#>BxAgdms#c<2Z`]r4>z;gda(:Nn.)+dn8]ip>WN27Tn@!719aB*|+LNTZU/>^Mex`fe8v*+Z0mb9rBL#:BxAgN{Z&Z@ajhh.`ncX/BU?7JcIuH0J)y!PX4}s%~N~I`0[o1tW"_q?Atu(PL;^At"~=~9}xK}sM~SPesk_cb88]TkV@Il[?~=>#$r(U|"Pf`Ehz0@dW44}j0J~e;/}O;<~Wj_~+sBt{;5IU~8/N0/P]21IiClhk10q+FIgDaZ(g7@9!tV![oV@({QQ[lQBru,&$C0@!VVRu^pI,;<Wxsfcn.x&$C))1,(+R%7zos6bmbkhgBj?:nb6T3X.Y/}sGltmDm/@NEdq+lZ[0KTe/%udRuq&M[PC|#2t#~8jQP@BQN8p]*}%}!>DAed6mNGhUv`Y);lQSkiRcnU+&bgn}{ZmdnM]c%6>G:gdNhoBthbIv&2Q~_vE4>!y*{/`1,94goaNn|uN8TP@!VjHmby|C[<2,>z<S(+5$N,}U{3ojsTA<2D`D.3>~xU[*}km{S8/@~NG>n]m%?.=l*y%/w4NZeOq5>m=fn1U6fg.&H3`Y[(~;mmIh.yH3`x+ps8=IcS[h](~oTmb:|Lg!~5{MZ1sMc7hK,z[k<BKd}s5b(R0>9,!cZd}m5/~Q0m1,!0R4{7Y2~dOen:!vQ4{vY1scOq(xjHod}aP$h:!KP4{a7b(8jx:P~r,W4na[Uvu+8Q|$TK(4Ek8o.+QmAjbPRM#SxCA7MC8QGs"HXbYB"s|?2LG)E]6eJO$rnDtsx_Rh5*~FkUkoB="sx9nJX!W:&^PL#&taA9T~?;h,vpI}|EB+>Su5FSqTfUqA~7RGE[~,ipn#VUUG>&Sam`>Ot?wqPT5*~,I0ty^|e+>U5_2mF$ATng($f/[&s{$J<)E{$"B`>1`WUd~giDoHo5H>9hgWhrw]U%)Em:{i$i=u(*~8JgiS(cT_)O[?iFhv%mw_u/HmTUf9=fP_(0a2/,0bQv{afmM14._Fu"QA&[db&QCD[4FA~V{}s}~U~"yO1Z?9*{B32+Fa[p`%BM#7"a"zcYL9HO5tB~lUj=KjopF9me:!7]5.t]2%EXDayzx|2%E!CayxD+MEsh?*l@QSqab6q[BO$pnCtWbt6pJW<y)v6yM0^yD*4bbQImmhIg9z,ooM>SWZTmTPb>,p<k@CGq3>SYC|~+utG6phIJlyJ@QLYWMP56xV:$Fsv>.EPP1)+M$JXS*`MgJH<O)MBCx~^rj[z[bAT*n?W/)ZQAv!xLT(b{N^rN0zbT!mtiolM)<bl=U!1M?j_Bs:h))FjPqmr{=[gCz~+9AXo*a~+"^]*@{<QRSP+3qe&15E1xEb<{qavs=X`JM2f!Xu!6`2hg{LQKDtN|ZJ]Zg)GJsOhC/FiV)3hkJ,FyEv.G<qE=;0zR>6*K,tyCq@^11}jn2E;~mvq!Ht3D_<e"p&eBnAve{}y$PXIf@sT`Uh1D!Py8hF)j`H!R!BUx>T:K@JuV)7l}^AiE,Xr7G5G5sM7{RZg,djEOT?xH0Xg21_v_u^&BxPRMQNiQY14@h9JUPi$phr]Zp0ISbP}(/%cF>GuUddg:cYyb$d~9I3f_2Hn,@/utydpAh}UN>^Y"5chp9b&vht,]UN)(%e](+d?@YE!NQ)Z%J.xuJs=IxW#~5P+B`{}4]M,~qALTI<G%.N=ni?HaQOn(=I%!q[CGT>Ig~u_jf]jy$)`oMc>^%BqI~|xS#u@3fK;di5|<N~]CQT9#hp9/,jT1A,2,W=mMu_IxE0OM?|LNd>c/>)j%MZls,saf*Kt[!$G|PI;XtH5"e^/hM0iWN^<RzPUI;bV$z{Iwzj_QG^WigNXLB~#4c%NI]k0U|)*u,=?1,O1W"7*k|<JBX_Aw{/8$A$<Qwf!oONdalxjDo6}.86wem!Fj`f#WuOKK1WcIRV:BRjt5n1j!FbX_X0UvMNdm%eIB%|CG!/vGi"E;5J{sV.kvLugkB=r9E~t}xyaK75dbDV{5Ixme{D<?D9A_q0uYJee|d2X+@Am%)@#nl>G`_}USQl4yA~S.*U{yQbchW2)6let1IDJ_okg4WqB^;gUENU6gq+Ca;ZzfWG568LDaHP^T|,qs6~4S")4d#6.pZ1"ZGvMNdD,~!oJWGc?yi^3Cp4)j*Xt~Ya695+t5Sgz.q7]iOsN.A(USQUL7(23]C1tX;7"cP@aDHb)C~sVq)>PWE`kv!2.$(3,)[XGI]V!l_Z{48dL1xy|_.OUgi8Xse0uD}2j4}zVMBfSGGf?/a`jHKtt20EzlXcs.3Zb~YK{KFst<oHs[1zL^BZUSQb29gr_tx`I@@c;TR/NbD[W($NlEX`e.h,vX"#5|<e#)iiVqUSQ.f8PT@<,dJ1e24k6J[]vXG0O/DU|sr]u.sAO<2hL<o`^{er=qSVKK1K.Pt)%bkHt21CQ7n6l6+OBdJcS2AspS,q),Q2ihzW2}nNFXOQMEZa6TP/>{^sf8i%+FH%nx]fDx[%C5pkgV#&A(02byWozMSf)zogAln>baCI]Jwk_!|DDz660druSSP31nOow1/QQ4fC!EKPJ}T!Yj9A@qh)W;!0uCr;R^_,aNB7Z8]qZXErnq!T,$)1WC6.1wg&XJRtE$(1p4}^Vv`03TR>p[>IsKL2i[o%N]GQoWvBBe81I67z(h2O?K}[IP(qw1|ov!4jy6F!,pTsdQ.``$LP(qwk3ct|TJt=o;#/,+%WEL^.$Qs2C/95?Q0+A^7[dw&vS5xCK&K=USQEL2AW;y11E;KOYyWElWGFpyFlKK1CcCXM8k=$kGd.*H,]`Izxfm<Id+G;R#U/>:Oi=uyyaVYafd0BKM3/W&ab3kj8WjlPPuMNd0/bk7N")>a73gIOf5)A?$Q{(EyyaVYj0_7Mhyaom2u08$)t"^1OMb)1@@~)C3rQD:(8pwh]]`*!r2C/9vdV9c(3/BALg:K^9,HE.0n8|)E1hb+tnq"cct1^vgPc.1xUU:USQ}3yAW;8p|"*HzLv8~(WEM3Z!uMO:(O:>P}sf2#ME[(DFA5QP@>!#M$z!/>:3p$>xvA#+tZv/.G"YfFwiL<T|pkvi$ZhLsBW+&87X"k4)6{oE1hOTTJsy|i*Z~W/F9}hN/(|:ZO4}V#J;b5sg7Mf#/3]9U&;bDKK1kyf"?wO4dEZGzHO9C?P%0@NJa6}GEt?wSMFo4ddd/b4.fRmczjXxMD.dS,T|/kJu_9u<TXok+1Fk[[fSya_NM"?w<!^$+q+C/9DSza`6QVER1JncNP)FNMeXZQ`D]QbYIbi+1B@QmuHZ4kvjc02xBbOJa6JMI"t2SM92Asw;?v~LGa}DiC]v_)SyyaTYUfMHIBnRURqC.kPOv6$R|D}kJ1hDXRFT^E*|MCX+D6a`mnaCN[51[15OTTY2"YfBNFw6LDV6d/9jndFT+/gfQYFRawTNT,=h+xxc1(Wbuf<P8DkZnb`RJ,3nk98Qh[civDDf?rMM{d*p2<vIwJWVi5_AuiKHeE84;DvD$D))]uD*w6:)nH1TVt0cACzLzlHkOP}?+H&Or_&GD6oZW32(w8LD.dN0Ufa*wAbfzN7|wG+$Hecc.*2.Y.coa`iF]5`E(*PDO0SAlKK1WwyAt{S,dTw!ucG6FS66ff};yIwOZG17.DU|[s)Ym6#5J69Z|sy.HL{qrupnR.HB1h2[*m;]n_dZ4j0x<f,,0ukl;RFvTpTg>J&KIGzj#u4AaLxi>6E<JljL=*&r#D[5xQ>C)k20O?OM+RI:mA2YzMi!,O$8EHnDQ<s#PJf_/y[hlsuaMaL)4O0AdxQ3v2bK]B]h@XF7.EHM})FJZGI]XO.R5Mht[FTaeO}*w1z3m4<u4}4WB#DA;(;,eO3c_&Kd]?%FCT8J>PcPJiR0cc+Joub@*EdUSQTGi5S7^v18lAP5]2}>n6_,>6R0NdB5Hz[Tz,XmRU{i^WE+ac!_n_[1[2S"#F$8O?Y>]10H42YMfrEZNBlO.X/y4vec,Uw`fEqGf,|)P7NFF0s148Km~j*a<YqB+LQ0idrIi&ZRb)@Pxj4}.WRPLLzi$,PH?brK]@4(LC[i"3cyNR7Rzva?vzqn7CO!(*r%Hy$uG93apO?).F[Et#O?wG+RBM=VEu;hmOG"7Vj^})rKxOPP9iXO=cF,^;E0#tmlPfww$.U<7P0bxt=C4GdO,6Qo4)S@LD/:R,E.Ltc^:C2<Ea<|gA6uhRb)XK.u4}}W!l`K]iXEGNTXa[:u+ujXEKK1}C7AVe^,A"[:N^<EppP26ObkZ9ecP/LDEp~9l_1C"~#$Ty&W,94</7OK#n1knr{xya"Xb"(UA}B">4%AYL)fAMOa6ANcd|Q@0n?u#LP(ac/}tWCJNXmgpFF#,ZMh2W~JrC0u[OD^T|bu8@B"R.JFd?5re2XaD`&A_n[JWG17`h/>QF20B"3@!fuWj&3LWXtU35uimGXZa6"4Nt(U]iB"`O9OU`J>>aIO1CexKCBiJZa6~4Rt(UckA"j0*D4tbS/I3cQyUc^N=zLDxSE<l_1CU^B"D_{O.}IE"cn~xdRCYAHyyaoBd"(U|jB"`ORvZdYO^"141F(L8EjiCZa6~4Ntha*~u(Zc#nnA^v"aQL5XdO4IPZa6}4RthaA}At<S+B7BTc:Lcc=v"T1EbD|JK1<C7A(0$w~~eTo?!Fmup+2cgLjNyM.ZXG0O`h/>1G20B"8NaX$wLi|N40qi:<uO;O0u6DH,T|7u0{B"7c{u6y`N@I.ROOJEW!`Eb)C~,u4}dXw`B"1#`Co_I;R0.o;OwL18TZqNu@83:Cm+fpS,{aAb|Ghf7{u(Pa:_;bu@83.wGkB"wd7DaOTA6X0;`(;7zwOc?ILKYI{@XQnpd/~,rIr*p+uAmBUH@L7ybuZ[CoyJgMAJ[d!6<wD9$5UWYBuZI4&TDn!W4W81bu_@gl6Y__VCJT_H[4axbuwQo;FQ$W2Q[?Nl$F8]Kip<fYf7Tj(W;K=XO^l#.y@6"`9!wk6[/H?Wi:NXqUt=b"<|~A]_j=P/Ey{t#p0ZBG^W;R!l%@f9llsL<|mxO@&y_,&Q++Cg,#WcFfiwORP/_RHziA?Oz?{t[jjSySdFfO[1o+6SN/se&t/:<`D#p&G]Nv~_&A@B6liVVtqB%a7#EG+b7IEPt%ODgL6yqv7?/gs!$AvHh5.*0OV/XIyakXA?dlgC!</rfv3:.Q=a[IYDd].WoiMX:zA58$$$(,NRJN;S&:j7p4/ORz!%*0KkeSmJSi%P6O3i5>:KBm?DW!a;1R>Qd*~>IL;>iQ/t$gOkl4Is}X[Fo+`jEPwhMEp!Sc|0Wjn%Dv{CXf:WeZkCQBy*Dd_wvZQj@h6NL:U|RPC6BU7n.O/1~eeAK!4CmeJ`ja:nvbsuqG48dqb#^@4Wyorq|h+yET/)wNjX{A<,?ifZQ|M1$LX),jB<WtwQ[Caq$.Zi*@5AbRKh;Cu,(+lZ5}`(<SnD#cy$8ycWYtE3N2%I[*[FsL]Bh5_B/hXL7T%$N%5YjHd!3FD1;`cs{+KE(e*,*t4;I`jaoA{Ey)!jZNv!=S}94yMKo6<24>4gAVhGQhFO@0!?H$M@,Q3dKa..@TT}$*FCYVLCpiFxIDefSiV4f3GtKC#`lC&Yo;D3Q$Kc|0]t^Cu0>(L^NOMMTh.~=[x*zXWt2iZdJu{ew;<4`I@v,L{|LmI59R<,swOl7`.WaKHz@,aQ$4c|>Gd:J[G9~FqjVQK*eqD`d;"u?!S""Yrsm`QcXNBNl;BJD0yPS1:PZ`Hr)X3d466l8X_t"x|j%$lp5O?**lo2qEOCqYo+=($T3eBoBGd:+i|Wxe9zkb@dp!6FzH%k_V{R(c^)nBNT]qfDUiT2lVA*7BeLjg,E[h/V1%=PwPH+eq9(5i@R.t.0MBkY01)z#LbA`,t6w@CC6KU5Gh9Dq4/h.VzHPLpB)I/wy8vC3aej1r:C9Bfz:?feO]OA3?w(/I^5dJg#>ZU5y*Yu&@=aCQMMB8nhlqf{FlzcjL,En,hDx8vD^MPrKU^ED?LF[XdTKip%x8pajaCG|xiY;B0{:Brvcl^._@D)*0"WcO$M@Bc.2O^.wQq[EHYI4*I5eJ4OIb/36l3WR5c#6#2SyCoc!p4f|0Z)snOG??3BCY=+Y3pkk!dFmtu+P|LpUuS^wQI~emqNLNMu+o6SE!oat4M;f@:WAYZ7bMIIvq1KlFy]tOQUz(tN2!jCYE%IKItedG8`r3;Z4R{I)FeXjgtlML;.}UOt(yLaUV]xGK:wxs;#|3)gjvp&aC_nzu"LO}@^X?/bG+N+`IdS#X[9a{g5dCHtVXjBAJPp*,5t!f*CvazRxJw{s1^QLo_EY*j}(v6x/1w/Pj_R_Q+l~B`#%:lVC@VEC0UtyhnZ6}`<RiDpxjMC$}((U|_k?RD4RswQxkJm(BcHQ}7!RXC@IW^fYy0aEA`<WXjIAnI4Rs1#U4GGXqkuaSVNbIn*d;Go$j+kLiWM(A,b6([JteotXNDDFD(y[$QE0J;Vy!pDV!WKF%kYB?gWYCbX$);Nm)"o/*Y;ZC{yDP8EfdU8CD&j7SNJO`gB+fCFy(Bz8br|v(B$dLTom5kRnLB#pD|P4v{)_UmagC@@x|H+;N1#_4%/tc6M"Se"UyX<ZpSQ%Pw2M7OqETXRAx,_XeRXk`TbMMg;}X8C")2+YeH`jaitCAFF5gWXfgt^d,gl1LUMyAJBF6>B9XCi8@YRJyU?oDt)oI97tcywb,$*J+VR(+IF{yDRg+Rp!|!]8!kU:}+tlc0K:y7l8@)=*M=C1wU[)zpx=FHON0h7`dGNTS`)DXkEwLKu|,AwjD9R;DDX}xJH*MyIgy}B;<Nc*hzq::E67bPRDFWX%*[F2XEAAAAAAA0EJATobFWsW;^;a7UW(||5fbB611VbU1;2UnHuo+k~huC:WHfs&mk4U0}}$}cj&GY[&i,ezMf%8+g<MOeSdc(6dDZ2`.avzw@^!{)B+m,/?>QFlV5^~I>g3U^bFS[$J9Uh!NO#x3Q4$i]+Q[qbf/tBTl$#DV>WSRL;d;Sk1$O7u$<KDn*5|`&2M%Ma:2;cvKDuTPGmL2RBHc$J.7Y.B_7#ieMQl{e$no~+@]1kz[M|O~O(Q*VLK"c{C>%yi#Oj;$P"ilbR%,T|a~U*;v=(psat4s).W8bFf`?o}}8G3ijH`>#F!2Ol#WJiZHOf1{_~#Xh"N^gtnz37/`~3m|*9+0dtEg!4MI`,Qe6KqdDua]*N?yQ%YexHI^lLY}f>jTxkPsn#1Kctah4l2mg>,vPFj|lGYO#Y`>S?$>cVWp4:jP,_$Tx/D:RC[H]O[$<{0)K0O5xVbQJc$F5<YhoGc=$t7>fo?mE&l&4ZUF@2?8gr6tU|e=|WQlYnDnTh9W=9^Vd>QB2]6y}8hF+w=>tbe{xfav%ubAQ4S~3KO2S~[wN4;1>N._PjbMtIo}=W,B~UZxm{wbmYkvhfgC]>Y~4~=e]P"U;kX.%t$JAq(,rwEHDd6,3^CY#:B3`LV~*~IW|X)djs!0|)[4~:]$fC9DzW^FnEJ<^Pn!vdA4H}6(XTX+bX2m51[v/VVTk53VVgq$H:toht(s,TU/*(WeB+#!gm?IPb^QfD3wpnPG=[">Vc~zZ((EN?oIR=":#h%bwEy`Yz[u92/I3,$N|%z"{W[*gJA9LKoo"^BUvUE>#MqYLCNddKW%w}`q<JR>[*_ls~$IQpp#ns*{7kfZlHX)V&PM~o4UM6EwUoNobdGn*G?dp:$qMiEF%~ZH:4h4wNUnqvdI~}@q6"mJvN@I2CjlqJsl$~/svA71[%hm,5|.e/[`2S^>[78Q^QT6av]9m$xMJhktLFv<3+1&ZC^u<FP#=4kDSku)Cj;pLQec=#XsiCS&dSPZ|77g?&(D@j#N(suZDgrHIsw9.$bE8=F4g5Xvk3$}d>fWamIi~%0T=Q9$]WH&]E}SpVM_@)/4P_8M<[47f9}pd!ryl3LMi_gPzcBQk+tuGQ@TyIZ+c~s_pF88ntl3>{+@<5~ZcUs7CEPU<V8CGG.fZSN8Ve/gIE$Pe/$b18H[{BE,+>&_$yxAS4/`=.uGW16*}e0n5GB}>.g)wen=%MEA3vGza+_k^NBFHMRiWDGomu~/:aitJcb<TV%Yh?O~3+RBrFsI{:{)YS/fw[]IL<x~wF@e.aP<;7QT[Q#l05OC)R;V;j8!!.<j]&Ma],.@lSkDB/Wl{v[JB@J,8JZr=iuwc%vTM:pIsI`bV|3!GcNsE<+O^ekjPflScrhC^m#_JI2HafNN{4o4?HL8nZyUW<J5)8AbfR08j>K.eU3SwT1Z}>pgN>ifV80WDE_}FzO`EOy}12x_FeDmHtvr$.f*D3kg&W:L?5|,%VUaxU`NW%O^6f:Cf&$<b}XmO`.rSpQb)tyi?1^L[3C#@ZiKS)n`s|w7fPP;9tF8VqxMPpw?2|[Mg>=3H5gD4{z|!z)R)sPUmd?9.ow@XSW2kkkB%:N>%k=Et%/|CnT~zjuDEMy(8/P,EU8~$A++]0B?89]`,XO,W$L&4lkRd;OPa5@_d:0m4i#iGSorz5"Fd>ZtZ&%|v@TR_2O`8_[]VF56e|8o:<|Js|nxw<>!waIFr}Ue:DU_RdL@dvCp.G]TDiR;EXbTjfv[a=DRUpYv,[`Ph0aV>Bpfx0KVUB+!N!es+8_~LldwVm[N3[a4qxB);]!127uD?R#Hg/Lgf;0&U%y]6x,]c*Uv0,/@1oZ;H(jk>Kd?A=_lJ1nc/v[a#N0>)}PL8JL)RWf7)h]sl)3s|i4{vRDi^[dVE*dC|~.m2wVjV/Me2QK:`]{L@xlLO@%q_qyU~GI*NmF|,=p|nrV]v}%rN<j|!66RKk6Nv`bw*zF]yA6QXF6>n5%?>v+_)AG|4U#0d2`V&~#Tss.lS"erZQYk3yk@Q{0K8hU}C0+?s}dh3>|s!wx>P4nD#fr{L?]$b~I*[Iemapog[RKE8#"e@"dYCXmwAcbl@=rT[:fW"bSXy]`cj#$|yQ)1ui2lpes_P:[i=b+QU;U.DIQp&/p6;tTEPt~`Lg}("YU+u>tOUL+_HJp%<=QH`L<3rXHP0ujzOx9,U3gnt";p!aYH54!%fxAMN2vSJg&]~8O+w64Fd|wrRnDtB:+P:W^wNEH.|("odL$3_DzY,$Q_X(s./NXD%kfXH,1rjiVf{K@g|5m=EC^IXy+9xS!@e:i7qqQa7d#~h`W(#9,c^vhh_W?j>IyGhGcv3,ZmlCTUXH|#cGVCTB5}u:0JLg8ChDbNZlE4Y1[+K1spJpY;`/%u6d;iFg6M7Qm<H*QT/TQ)c4h$U1#1.rQXYh5VF@443w1dkx0O#1%t!a,EX<kwRA8XI`~=e;Gpn0PRF%*Wp~RBxhhzQu3=/h?#06A]3GHt_Uv|1Qq>f&Is8.Esj/Gw2l}StPU?s:9Pv9`3d+6>Zd.gY`pG:C%p[*J%jc<X3@o/5:%!A;kp"/T$|ZglMOWIz9gf"o#kP<HX]MK<uE~@zjQo<.L"$C[IzD+zu=kMo9Ay?c#bQw@Ti81rBf&!?6TPvIRB%R@;z=IHr,,&$?X[`+6wG5;LXRqa+lUS&td#Qq.xxxcVPvRjI+G9u044#_;AT/D9F2H#^yLh`g#LF5?SFwSALm`<pjQG1;.8@vdN^Xvt;he{r7k`!J.g$P:$W5YKq#k&HI@Jp4#qXH+ENN&yGBu}Ktg~C7,|btHLo3pT<*.tL4EG+rep`!sNc=*@;E?h>yCfwGPOQ7MiUqvS"7A;_70K/.~F@MuDpbL~DBtF4.a&*AHJyliZ!:L4)j`fJQl(.+|/,EBd$JqY8d&:aCYk<kF]H+5Ynb`+6/Lf@m~9)]pAh@ghZ(~SI{$rK=z#q^1&]%:,|VOl^5|omeF^^/G#RYhh$SWk`%F&4Em,Hl4Bkc[=2NLW@vrwX>(V8<B4";;EZ0eqjMs))#0{:52!1PFg"5n2=IN+In@]8&YO.T~8H%ng~Gd/`>_{U99@OM977o4ygp"SA4M,gD:3o{6;Zp*gR?[RE[`ho)<M,Zj+j*9{4NxKDF*iv4Vdjj,Jw8!6:8D/z]LaKU}(xRX%13A9vvNK+f$D4=I6zXHTy~.Em(2@{|6_<v2gZ3RV@2b.mzj7|8Nzx/We[+V@&~OCH@`:%tN{g~1]s;x25GyW2c2}F;1Ip*K/DeX0o"~.&CrjNRA<]0k4#;nNg)#=z8GgeCO:?~>D%d+}E>9kx]+d:e%EIh`9czS~6f1.oiVW|W!Ka<z`u(/Q<e2|A&z}6y$g;2ltQ/${rD?R];b]yX],z[?R(M)!lZL2>%x5]!%@+,x.ne)LM|t#VQgJSeP~jB~:>I?7p[tj14]m1p`Zb/U*|SK4<Fr&(^43s^,3Z?OEHeyJ~W/*~_tiA5f6F/^!_y4[JV#t}Ct]EX~pGqF#2^b!@tYTjyuWxf%8SJP;t$L|3)x$<2f,1Z,R[LY25xn}lxsx}oJW4^EDfk)c4<G`6P}xn`v"!<(HlkO~3/bl8x9`AMkC_dF*.lZdl<wDHWT]!1@^RhuQ5>7zA@7)P/Uv2p{k"b!xh;}3tXS)6|Zt&i,%IwUP}epPN!XJ9T#"J@S0ave}Gr!x=gNwdxS=sH~1@4S^nhLFWtzvVwx4ym(h/nQRR2:rXaL8/zw!*]OLVYw7Um6,cdX}.wm8HIpdh)7:X"#z;DIpb:)5~YiIUvVvqRSZ<F55j9Qup1V1+zG}Zl_X.9P`7CXS>>zR"d)&|^T{RONkG7RXdvscYRP2/(s3nWhN0i?Q?F4ZQf~QdvAsDSPMp%X/G/$~:n),huV=%C?r$~]o.ZghQ:yeG07OrM[]RFZWx;!snE+k%@5ym|[XU_4U/2,x@2IijO/~a|/$>ix#?2i`<3Y0|S2FY|O9!jKR^bD7n`/j=OQXC$>b/zW>wBc`;`"$,m9a</UF8jl$1<]kHbM+YV68jin`yvW%_EUnvbhSs3l%R/9ZP,LZ8:2zzx"]p8Ac%noWq0t3mi(g!Q#S#iiq>[&l4ZXSk~rD=88h!@=E7<iL565Ns}vmCHzN#DCx]>JXx&N+gkdY&~bMYeV?Axe,J`|Q1{`*LH]h:k6@"MkX1JJFo@!9X$`u){&cyRoZuEzvpsPwjZ6YD]&MWYEvV2H1Q5`3Fp:;9y"!Jd|YW|Ju)|8}~P~&Pfe!hTP<Cr8A$L1n|wT;z.PQ^xEQUrrTGw~&PoL%.#!/XU5:vDD5iR.n,~|5V+6kfI$vhAyzGHi93KhZ)a(i4_Yl5|5WS`F!{Ci=dxZlyHfi{{xgCw5,g^ac;C.o)xOPp6rN3!YNztz5bCfB+PSFBS7fBk^/N!7Gmm:<(CsYgDZSe+~HMuEZHE?bl2SV3#1[kL9LgVcj)H9=bd2VJNo@iVy}{gi[)kh0cNgLq}NL#^^cPNGsPFHkcIb$Yqn!dJAPB{9u^y~>3_CLe,ZU.@)&AhOJqELD"m@e&T"?o`kO1z%BH3j_Q2pfMV[l*KDpDH9{^$6p/@uo|cy6yjYo.bw5|<)0<xw4%WqY+;Nd$6YGthp|Mx?r;[$o6ihnZT5P?j0}TD)gQ.v+]zIMhm,}peRQVvR[K859Rn"him/q;szB$ztG*Z%)~U~gmxFZ6@OU=+[hROzy9q|!#/R%1MD=qK>I.OK6C="g$/2!Ktk%F{J?zcLZjqFvkYAW9t|R<,.T}8C/s{u!UbzhoPrx?^1GcDcUp*`$C$Y{|DrL_$wxI1_HP=K4z?{RpRN]ER_*F%9G`oYFBV2Hl#c%UY%K!7xml`B$FGKcDHpm0D@3;&b2~ZID55Hs~"Uo$}VWW2H$(xAMt}&}DT383=MMA{}9S|i9"o8`s:xgy(a0[6Oh<j?,9m}a<5O~hE!tpRMIfcb}@gp+Q[m*~ZB>6xNZzfNVl0Tn|bNWo`9puvl=]`Fw4;q%3DPB{.,jUQ?&"B,luB07t.r34>+4jP&Y86C1$=zN5H2tjJw/h!MlE];<XSs/I&ErV>,Gd78nwwhX8^W5gH^MKjpUi##+eexD[KU5)Lu=jGJ+v$Cy{kQa!kGR57_ov6g$P*qWE`HH]WcW#5lL<;hQw?5}>+m#%1;d@qt6%0eRgrKNursSGj#fs007"y74O.}&(]BWB~4(EqJk93]pfth!+_zl4Lq5)FbjC;+;,;0b<E][wU4<cPI8z[Zo(Xmf]#f8e?V~XS[4(BiF#c,/{9RCAW2qIuqmvKY!u~}*LDt`3>=GfE)OC6<5e;JnF<]Q5x=]E`7hlaQuHv;$uP2CUqh97`q~f.}%nX4&.ZB2+Ss*^?1&{Lm"0wi!ic>@4]6>w({q@/%o}Q(P5ta|(GXK?st%6jwa*m`v[+eS"8TXE<=sI8BDW<5`)9MSB}@uli]nc*oh5"RsWP*`TfE(@rISjM4aGe__sgeH8v0Ms5(GZv)or~a)DUHj)YO~ue|>=,JtrVHkBD+96R+_HWN}3tcgmwKcE*~3mVa9U<.55eX*S@GM[/2J9hA1U$Nty@zXzjNGhu.)i)H#MFmIcQfudoS@sUUHg3ZHC?6)Qcyu*vbq.<S&iKIF8Sq*QydVe))}Sq,$!s#TSyXdg,$`H6!P1?Nz^B4jU7%=;Q|;*Xo[=KJdI="N*ks|)}{r4Qjo4DW[9yk/]FrB1eK`RXL9R3{/iz#xZTAqu=NhGS#=0ytT[7)HB}1m!![Z%#&>j=)$@f]5=>1F2qj#L"?Z[pv6s}osvE`g,}S=R5LZA%3lPwfb*&VK{v}DZYUiRqxw8~bc"FlL73L+mkD!41QCzGQ*9q;%J4G3rf)z/]4l8:?v+q0L>Oz;@PUF%}6,wc6@bqoaN*`DJIW~U3aU.(.Zt>aFo0ZFdMD@uiFEdFabzjBHpQU$W2_agoa%cYJ+mba8R`iHK>8K;N*ZZ;k:DXW0.&fu/guJ(/>w1LduRIf6bITJlH1E0i)n;^Tg;si((%:UFC&F22<l(l6I9*#4Cl[SQ2o)lR5OHtwyjFVUY2B^$+_}qF_a!I!;eXulQ.IE@_dda9Y0t!qfE8,Bv#dLk1k]){;0jPd(0^aKHnW}RZXLB/k3QaMVx/TFmWg.k;[Cpfob)r0;CLYOz}=E5cJX9XkoSF9#,(Hi%F|T"<=N"ux@Xs=e)^i9Cz%pqRc=U$)MVZtNpu!(r79i47pVVJvc8|!Fbhx{Vw_tO]m%XjaZ`QPV~D*`YtVfb"t|[J,y1RgZm+oD(y0g;Lxy+b(.E9pI(0@&dv=ueu`zA*p=h"sO.86c~$TXr9(+Xb|MN$tLUh3L=zfsv_ImQ0]Tlgk<KHz#o[At"<X"*Phtr{AKhEi9Mkd;P!MR@d[;j,0RnP4"B(l`RM"U(M7lbb"X~,]eNYmo{Yyfw=oL6]BF;#[l+(qWB&L8.zJi7R;*4oCV".hrM;D=1hww82r}=EEg]2L#QVDyhIA[O;H3dgip$2}>n.j72)/sH81G+;@?0;(kgLek$T#oFD]C~fbGP6|[E2bK,>iUSiUi?`:3&FdfkFOBPI$*tPO9CxE*:*g>%0#(EVZ.*]{B0iRlA&O`<3)GKN4c#NqFqsso*&6;Ie4Bz=b>d><N"K)2vl1FKoCxB12McMJ}+lf.?/Kyrf}S73Qk2CJlDe=h;TEa.ut7!`rse,4l*_M<2kS&)s0PK1DFdZVdX},3r!MK7KVW]3*XLK(CH(A{P.qUjV^u$2lN$)k>M?`DSU6U]I71FR#v?jgG==l8%4fKP*?QoYDj]B^yAF*U=L:aQQ:K|}i#OVm9McbawC[sftI5:Jt9QCDYND#]Cr,AitoaULqDw`yfdg39!&giv#~|^#m#mbq.rK4+VLTLiWk|AbL^nTDMJOU4A.2~qk4C$aQ:c9Xa4?uBMQ!w/aFE=h<c&JwnNUNY?kYlXMcPuY;GEX&?jMl~NMpr+kJAN30iBH}ZxnP~#RYQo>2y"O8,lM+L{lh}Uy=NCr1UD$(`z>E=_il2GiSx1P4uZ6<#g2XK~URd=J?&n"|U_5EFp;nc=@Sq&>&!czE&hu,:NES(.K9n]T21[C#U;cAtEF9Bp/3*@9*&b1Gwd)%$WJ:5jZL:6pGjYQPe=#^!.f)b7QtO:hs~7@Kb=*HoV?}tp=ddP0cjV@{EmltjBLpQ7kNW/M#VzFOcZq}aalr8FJqFK~~:!To^Xc:|PKU6d.vur`C^Y8/P3`f_H79HtkC[)<zF8g,*a;|qw"kj0b2ZS6{g3`:sjCE;o(1c,62mLNbk*V)9zqgf/h<(+Du~Q#ZRHxX3$/@a]TUJ]8[ieCu+,yb,4f>^q4W!u]yXeJZ#VPo!3XU^2utU&{1a[4xOx>L=&Qn+x3;r{jC;<NJ7=}NxO^W{app7*k~V#z#we?BQaZta+Q~lsXY@IkPHY11D4w8IR5)@mDd41pN7xb/zuM?v=EP^j6~m^W;o;xJzxfBh`h?2cQr6Uzz;f~U=BN&LQl:GyOrdGv&d/U)i43ZWf^U]Dqh3l&uRS=UZ(T1+?4Z$(M,N>@FfsZZ,DfQKuY?(eX0b+z]/RqCOUfv(9e)!Oyx3]x_E"+IR7,kUMr_a]G$A>VNG)x*TCp`{yB=;7nuyt2a<&Q~31_q/eE9T.|dLGofPt*0t{Th(9npk<>j]8c(**YMmNC}MiWpB~U(?{F4r!_6[9Sd#!vw=gIl/<8>%B6J%xyK:AoQvo/6Tf9OG"U[8W{Avp5N*@]&RcEzZ%*3Ms]V5GawB4G]1CGe{g`k`KXX$8eRvu9yh1+2N[3d(zmn^Gq&u.Z3q%o&b4ES_6jD>Lr?S%@%xRfoTFxlQx,O109>myliRcG^s0~Ft<]mZy+bJ)_U2IgZs?Dh*~j5dKOCMRRiwgLlB|Gm|=qiG~?4*_<!F,nf?FwNC/rO!h6N&g{OZC"jz&tKGPT[PEBiW]y,,=Q!sJU21?2[x$CD=sWqx(oxqr5)YJ{lDIVC,=kIFz#AZgx?Fvf;@pN,SEv7p:C)0k7FF<!P%Q?YI^b,KAre"Dm%jEv^yjUcSCPMiZ=^"/vP)@QXH8h1:$sMLIG[<}50P/y0_;=rrNyv)~TG}pxAK)>wE;$hua!:ZP@<,KUtRH#uM]"9dn!shnGk`M.Z1SYq$C]n!Q92f.})c?|^k[2x@f5;=u)tn0+2ngpbjdWsO"F@DTY"1.c0[RFeptxpg5FOCG>(5P0fI#6SH"Y:6Iy6vI{2t!k^nm8r6UP*+^v.K[BHGUYPdyb7rB}k?]JN*/!$r^G3GN#+a)cg0"gTp}l~qT>jW,rYtI+(XVgn=rq8evlKP;VO*5PX2qC(&|%*==:pxWi%wyNPD0&A>UE+i$/.,D?L/$/e3<lyP9DU8nVci!uPCvv#8_X5vr)kPL(RA3_dpnas6[[%<=:rbJK/OPL;ZX0`7mkWd_M^u7d1pnrRL,o?fJY@Px*JP+3J3+>>}6N"]qD_a7dF[6,52D8u;vIn!U"v^4*{Qak6uwUu6BOF*,YRlfzB[<5LE|~e08y?3vlud)f{=A@Ut7l=vzLTBlRmD`#42;?LR7YAu+(.&aQK;=?qnUsaU=T&xT>2%J^f~izC)/,4L>m92G!@gwGKd^z,|Lv]5Ie.!v9LkP;!2(O+oeqp=e/*8g6h8|R@vjtT#|{.l8NI9+~Ugfx6~XKW+&nU6}}pK.f9,1<q+g.~[Y.V7e&ItS17cQ+Ry0m*MMHrXx>bY.vK?Y!b^3RR#h,3Q6nU.:3nY!z@7Wodg]JKK0r*+af2eiKCDEq:&>xOPIC6{.gzin,.ir,Wy.WLMz!q4q_7RzLLvBr;?mLrZrTFITlzmExUl@k%WsNsun5p/pc%dXks84D]oUPW"2?mlUWUrZ],7{%Ogq!,}+YO?Pn4h4w2W*{yRgP$Tq!{+wVs3iC}l,x1u}%HeJH#fyP[z`3@L;<24/&g]IWr,)k|n)iqwLn3(pS8<L%_fYg&iu_~]1D"Y57KHAfJet!2Pw:#mKBi(tC&a@?aFD^ay<=)_vPXq852y0b.K<<Jc+EV0&YGe]AR[YW`b(atEXXfK!%1q|r/M~L!~6?}*$x<K=[?oQNG*cG!<.!htSJ5ovEgc6:Cv)Ee3z{:{.{6Gc1R7R+}z:*Jw@xr=^grga"@ubHN!zX6YjkxuAFK$<O&@8%_]}DdxL?iF?b2=X}A7%FHyp.q+pWdd#cSOFz035d7@bBu&m+g|^Z9{6P;Q@BFQMRy>acxl^MZkb_St#h5BN#W61~%X>zc>7UjIsJ*?o4j4I$"[42}M8jQHsLBSiz74IN)QQ7)LqfQO/V$Z1@8@Hv?=Q#b+W2BzFh!(>1M#"]KR=enaJd*]k1RUYKA`$Sautoq/0xE>b#p=uqQV;?C0ImHRuIyfeyODscXQ$2iBij3XAz~fn4*d*_$TVxLcr^bm"}GG<,$V^!Q9V99({ctb+R>V8rzEs*.*"$kBbyr,f2O+I3MoldPt5TvVFz|FO<f6TrHhq!#*{Q#kt<p)T"GY`n/ND<7^`jt;Jm4W4moAB6V50PW0w&oY^90HiEc~ta83WfaA!O]neH(UbUS:AlN(Gc@:tIvxfjJD2f"2NwVKDnZ:2W6zGHrvr=?Z:n%OE|[R)fL!&!CfGI0{K:Od{/9:@*aatfC>S50nnGXwEO?K]bI|Px8CQ@%1r5SxL;1R9!<%R&P~(I@1+~xiiEqBnzUDAC5{Ss@{hez%,EJ.e6%DdsgI4pGB&DnLanP#fM}{CpS$IXXLjuh4gi5E&RxOU^zlqf~Q)Y{UbtQ)D+1*1W2;rxB@MkVBfJT%CDRPR^bzTgi"F&4w&yS+PbX$GPxON+6,Q.9h!0wT[W<L"nK(St$5@BY!l+vJTGp?Q/x:V{xhG00t;0tTY!W^.27KoGe)9=pV|DJ?$=ybi"Toy0:rg!e$>xm$KZOTl9W:h42C3c^LqEUwk?nf,m~;dZO:.I84gmEB!7"R3M#bFiQM&RN"m!Vx|NHS@eZxeD[+~ml=;gDRzvAHzu3RgaD@JZcN/"kCr|jErgY$L_%h^YIbsoG)FXI@E@ODQ!+NNd0fdfigcJ[C3<|yoLw~q^fSM;.Y>I8fA(dfu{3R+b"|~xc44EkER9QP;s51jzAFwG9rwl/BG_k6Zs[2{h?yz]_)n4474je|1.U<"RUBH%:Kz+/%)L[s;H<y$Hyl}Pe{;a4*ZXPQMfNJ)EcME<)Su)6Em,PQIR)zQ)$R=>cXtPLHD!.JCuX0v8vny@Ta|ND)gXSKj7!>Z_:&[`(Gw<Rw.RrC4H/Z1dZlUw7b(XDpz%9JT{ymJXYQ(5AxRHg{Gsrmh,o}iBUX,Um%t8fLGRM21pJc6&e1$FKTQFLvUnC.<8f]935|tU1<B?+U!U_Q&^8T;DpGEJ+h1x~KOm)KkNTjMBUGifUEoDD}2Vsx$8k.M%2!M+LT3b;+M7+UUhI%w9*Jxfu%pdqs]*;3MzAyl0!Yxxl:5~)[pH4N]ji9+yll(Z.:fiCj(Inu6Rny,<q,r|BESbDcGG}.dX3dx4j/:pZ9@;5lY^@l<oz:1+:*BtrK6n$(k#/;q4YB?i9%;=ngc*d5XiV^:/LU0<wD]cGtnb9L=Owdk[&IVMxObB#H.*f+%LZwO/%!!,jJ88oy)qqK*/wWcmp_ZM3O/ZJ]#]^0F*vKtd6>pt|m<Sgb8PVr;uiLP1Q^2;PZIIv)i%)B|R%?eXIe``Kxbq7Dz_9Bh,v#F,VW_i;>FldnX_@Jy1_zXqGUeyu!R"`kb^kt">9Z[VDM)c]79pk],nK>gb4EPYP_f(w!/{XtjGe<XqQ,d&|~HhtsET;CiZ8ilY1BJ>e/87(oVxpefbIDtSejN"}bpwbCwPu~BI#)jK"PQQ}I?@53_wjhayZ<:xI)_KRj)^]k)@^v^*Hbw|E@?V;IM^i,Me:^[:PSKRq:T4I$pA<<]~:W>C&:WknnRynx>ex6iyOLwqPaK2@SzC;OcaSM9;c#)=~Rc%t<e`z#>iC/E%iSb71)m&40_/9X{[(L381avb/j2ObS_V&6ec"M!HKqQU%M"W9);qW#1/Rqq"iFFUh{EJ;CKCIE3|$FjGz6*wRNIj{q"*J.WoYJ6bgc(Gd.4/7&rF>Crub~^E[%jRfYoOKv!`/9yVdD*}UE4Ys$|pj7f>wd&ZZt!|BX(zjipO;}L[]K!O&cv(F|+~B"z@>ObEf)e26]Km>aIN<,6$mcQ0E3.[5uSD2W+Hu<R]Zrp:Lo)qXQ>v;!{2nAH0lA7muL#%rG&Ee#4fQmz);blXFP&5Wbki_W|xQPd[dl%N3yJ4#N<$m8/>c+bCtlCh"Q){yo.M+)A(eGNA$+EO9L"046%X*}L&EOdjR%G%ZoBPBBJI5lzb{v1mh4@LGuGieYv;0(FHeQ+a:2QyCnht=#WTBjbWg&kw*j:bmBRDy{xrAM;48m7(x#(2a5UIEIMiIvHD}TJ0of==C:[&GY{H+Y=xR7i8836Ro,XR0$Nh{#6kgXBN,G~Qm+f$(NrCm0;4ee0;DxtZJ#X5^CGP2>!pVWfl3%5L8Za$tI9XNmHXA97*AZ>4hKUYq4zt8o>aZe,IoZqz9tq{;2#V"z^i1U$W}u++urQ2&0F<Vyyrb4Naph;.KR,_0{wBE]TM^^wS"5"Y"7O?2%HHqciB9*$$@bbc}!L@SRz8>;p:uVdzy;jiNBx?T]!uyKmEXTb],=tuUO2z80W2@H6_>hJ?T6Eqee<;(zt/bruMU6UHlICm092<HrF5IqtndiKr=mkfP!wF<gToyN`<v.5FtIYT`x@ILkxPPYb2.LQwy8AX%pKf"Y;Eb:C~]hu5(?*tms?6g}Xq`C#`pTZXQuv]X%Gkrb/k1)U`%|z$aYF($2Q>n3C#gVwH2b,+$9]Q."L5Y^#LV%`:JK&)B,[/Vw3/%t#yQJl<vNH@7EEXqet^ptM/5H/RV&B5.@D_uZ6,(Rw5"$ny+eJzqr.!@,KIFXu8q^DF%{dHJ*>}F=|F39}@f3=:$dOC/=`~pt+b5#RZ__g_hgLek/8d!c^*OL<z*I5(5g%#z#BLWj}~!pfh4+++F{8XlSv<Xa)k$t@<6R2|9=4G;?u%@yI#YQO/f{nGV[)P*oOOGrR!g4Kk{svH}Z]oiik%ybQWs&IkDg@e4.nI4l3B!&3xk,N9{E/%m,Flg}SaA@{gUsv%+eKdO{X,tBJF}ktxk!&tDTdDdyuJa4cu*x6gB!:1NzL^jTEm*9St=Sy`bE$i$aEW4l_6V6F?rsx[5+hUre8:Jb$8OydXG1zq$~nK0aT?IR";xq;&?BEXV;B0Rz*S|=L}TbrUW#c5q#?,!,.=^4[wj{x@C};L4DI%]Fh*#/{ewU"C/XFvK>Mv<X>*.uV=k{HAPR0Qp0ZF*T|/B>]Z6*jR6<,{y2~(81l7F=i!z4L4Zmd0GUyPzPF:1OVjABy/JzDQ}6F(@&4(9cxn?tM+r2q",N0l<6p/cMs$Y%?fs;r@XtO(PCd;g$GKl0"*W{<:vHRtk},Rb5t^hT7;Q(Gw1xb!!5a#.W*8U6Sw=V7P4VX9@Yi`/|xLZSN)lE{S=elHOUq9rV_u!F+9s+o4`&wK4HB|oAsf@&1_[GSF[(whoJddI2$T1]c>IU.O6N9/cu?s:?s*[CAK]0jph[#.RsA2k894;J>Y_3bD./P0nyd#c@t@WFh/&|S$M"o|*escAv;DvYLX]T`p>,g;&.d`;3IvZ6"#>)I6tAP@vj4u^zL[K6|>>l%(o;odZKZ6O3=`N#b^!svroe?9[xa+Oi)h?(X%oJL`x!R=A:>)kQ]&T=D)Ck]Z,~_Jjp(a9yvOTIBoO%|_(B;u$zJ|&1u@K;z;*$+@i.rB&;6e!ptG>_*.!]o:2+`UK;p&^:mq/xtTeX)NU}5MK>h~.wQmf.Bdjpq*iE!=TeBQey;,@wo9|NI,?kcXDg<21oSO4Nz$PaHm5;Er+Fgh(2TVu14&,vM=>BAaoHI.]|_N8"6&wSk0qhtj+~#e%rVzl)XYfuJ{F=;wiqQ7qeh~NqWH8IM=1DSTUewUSTNMDf!,rE8#,]aw5sHvk8Q^+#=~s1ctD+Jkhtr{~]E_BPFj{{now0TlSolmb)Ho21p;((;B{@:RYyzTv*uMH?kKyU,K[b$Yn,hMij6tC~]pna!3x7Q3D&]Hg?B_Os%jc_s=1Ipb_l1hzj:}U[?u3d?c_!?"fFA_n#8r(.FK=s<Kh[|QpdfPOM;fIs:*0b_Uj+~GQ9fb`I*::v=&kA1t4OeNvGtOkJWb[NSSfrN2@bXlC[3BLg;=uXfN3i/kDclHD_W&y2sg[[@ZK/?4o`[)v{59k"D&"p5nR}OI*n@~}_"yZXNUu(z&_>>]G:*[^b2@DgkrE"D_p{bh>`AcW!#|.NT^9g5((j,tKj%.W)h`{n.r=TOu<]6`92G=cWKfsoj&WRJ_X+3e)~W?z6^_!!hKAHym"Tw;SqJsh5WTwl1cqQ[GP9/@XNc}+`$:(jUl9F7};MTnR{#lUh]lgAChouoeHc{w)y6W~UDIBHTG_sPe)jzZi!RsN]a;g;k4Gp[qzp(=M~6xMwRaKk8la0R=!P}=N4)>%VXDXV3]1_e?DB#B2kJ+{&hk%ms{5>M@2VD|aEx>>i.u7k>);WV];(M^mx"{XL5:i>V,`S!.6$QU#Hs?&=5U4=BCAEM0dv%ch3Je_L+gF*Rn[JKbqOJI`!,2je&AM6~F6"FEn)1~@/bTHLB56Dx@%HmeUcZZHM(K;e0}n13h?4BM;rl0sH4V7UdI[$AN]4{zOXnV5HcTaVC=LC%Z3mb5rn9%r2jBLV.kb@UinuKuOL=hE)hs"$#uV(Zrb!SHk%Fk6@@y#X(Lwt/5")h~z{D1rw$MiE[^Vv".P>(Ika*QaT63{CLf3j5c:u9m+EGBHxU25W2;#:]QvJu|]c[,nP^gjfrx+Ds:/<H6Z8!P)y55@xu}ueO"9KA8"UGf`.51tgC4h8uZWYR|bJaqC<<[NRxhu#K^FTsq;JklMF5h;A)nB"f5n"qVyWjU}c>9]WLy(q1P1sE9iTx.Iq|ip@q^L{PI/DAKFm;~2f"?].xfrqS$o~!7Btq{z3^Vv$[D@QXzqDw?LCqZ:o_w(!,*)1I_f3q|Ny/}|Fxy>o<O=*)KULi^n,O?ZNo1#we:>1i(tvyhqD[tcyWY0Rj?{;Gaegh_siu!/r"B:qttBXD.mjmn:k!&]q@m+Cd=8tsh_{l@WO:pGCM%f+V6@00ab(szG{d;Bb2yLkqZ+xm^/n8,QE:e4m;Z;Db~m?u,xz$(*|%u@5z59P!_oiec;kri*1tr3L><z*EXENDd[Q"n.uK++)D|l>|,Rz?XU2+}nN/aHeRM[BSC64jB~2.?*rm;%^/}$}_F:~EREMB&kX;JE{KZRrT*V@bo<9N[+Si]^)0X{.hB[YGU2{}xFs4NFJ>aF9+*A0B65XS_S44{PI,^?P`[0G4GTkf+c,2Z4r;:u#f2Mo@0Pn)R0J|<OEZ;7{PyRhy;XD;@7&O0/[$OUnB]/wy7=DA@[}3MHnWU?"qKhvVz$kDnh|Q2]VG{(hUltuq&E#Kj9mY`@GFKx_cnNyNXhj`ZD~o}5[Iph]5B|kgy>FKHQn*G//bi$?Lite~~jY.g:dndz3[d~a]6YimA$43mBPsX;*teo~Ek/G&SU.8.jMBcW%Vjt4)Lga:@w8HvW7n2Zw3^CU~c%Jh|tyCrFwj,m4fr.X"M$?R_H^*UIrP/xm<Za10X.6f]Y9@amLF(_z)+r[5triS|jrwnA]T?j9}Y.Fx0l<#VZy6%l7y`~#d{/BPUv[6lRENg**a|zQ&$utOH~}QqndVR:n8RI~u.3iG";SzcfBsknkwDx}]&[dM&&MIHFxhs;;2v.S:2G9=610a6:s:Em>,]PO5cC427:_vL`}#@1jzv7Z*QS,Nxdm)JdgBut^itueOS3$SKF90{{]|rOkaq_Q+W8/.$HG:PCF13D"]Gp[/_+na//XCu{5f$0$GBn:W1(uD/*P)mH#<R8sr<5:<OF.VAofyq%bTU4XM>O(.93x}Af}1!.i2Bzr(k3GeMpv*H9.?8CJ1&LCt^?]w%"]="8=f[8WGQQH&nXU|v4_tQ2[^2%Sp#HdTu!a[<T@zEulte3bsV/.$n?WPPhjqP6$mCeM1dKD&<1C.)T5Xt$uoCe.ZMN9+3Pt^g7f;T`vVlZ2Xg)hU|J{r;#337A6onNh;sDP<dHf^M4XrI+:Bl6"5R+<QA.a^qxB($d:_w!SI_CT=jWPQqCg[}<6SVLyxjz@nZgTA^AU@x9zE}%{M2!Y:y|*4&6VzTn1Fi^PTG!bpO&WcIot59qF[`y_hT~(02hQGpG3/Ev)ugm3,1Sk4G[J!l!jRJ,Td|MIO"(c`p,aJy#_#?QqUtXzI*0oXH[Lyp4gN64$VtJKwTP)r}dg@%^M"C41|Pxw?4K_0,o"w,Z)qbC$@&^IFdUn9,}2?[/yZ98vB]O26uPF1GayBI$S.aK[132Dh]*<}H5Y|15Fn:WC.EAstY~Nz8~,aWCs&^?I;D42vTL;KMH)m|8{&*gZ]eVjAuKSB:%f8{GOp:z3=ElTz~]k6u7#sFS}04#(l{,z%y""AFK$ljHj_l&Xzfr}_brfP8}t,^x:qVS|N/hV7r1Jj`jo]]38L*3,"@Tzi<F5>s:n~L_g;c?JkqyZJt!qx3Qz00/dFq~VPc&w2@$0:*vI%z8kW^Q6UoP[;1e<*ww&he[i2Rs)(BN]Im!FPdr^[o,Wl4kl}N00|~6(cQ<Ms9DwU`C>_h)<oH=7bElq}EAl}.UW}Q+}QB[{2n+GUB`ZQu:D?CS[QQ.edx4CMN`6YME#>5~T#);^u66ZDl2s,D@8h5Z}2iV}8pe2IRO9s6),w)>!7Po{<eZL{W~ixeC`pBW:IKF8l7nzks0dKPXXCP"SZTPTk7k8P,DW]J~w[[p#(u+/zTdhQ{nmji`gg3QKvtC7*60SRo{I[rgs6&/^i5,2f2;RQi+rSS%A{a^wpMM6&VQU4gE{s}06,}Aw$ZkGG+~N.IhCA(74eveEl#fan@Jif|GvEmP$Rw5.)L5~Wqpp?^F2"G#>tXj?b&Y!vLAV3,$"Ab2|p]Ep+q#,=@yl^kk7V#?lJ#P8@tQJb;4DbKgRE3TydToZRJ]aepQ:m,Rx3PbIy;??;V39a1Cj#C0`J@yPfK:YQd%BYf}+Lqumo/!Qq!;0aHFk]B`Pr?/SL/up2rXV)I*<7q)((Y(y/XdH]"kZY)o_5D&F@Zht*cx$eBPDB4NDp%khPknTmj0E0%Ikf5/rTR;v%{+R}:TJ"_JYy4W4ru+Ox(0;cU[CPg*oeE3J;cl["R(6*6?+;1!f%s^1nU;O%>.pMc,!Zsj6a|4Fc.rkJO?nQ]`Xb2q;VM#R<f6M_/!McXg9OkPg>Bq/n5:>w`ORF~rekE1b`7J("v(B6>}H[7<))bR";OJpK!]_8@+Pg9]p(?uk>B?=@0T1<wlk5vju=d48>H]zmqY7E;HC}dJ/fwR*(MeoD~hZ7.VFBn`rmJ*Yi?+U$;8ffBu*M^i5QQRD3H(O(!2qC*yr|5Jl^3tSt_yBV%*E_omObd}f4a;I|EYMG[Y1a*Xj8?(YkUkndWb!&<#suMzB(u32j?ONU(0^0p2#ydG5Vdu8JAUYJR7*xsv:N>JC_*dzAYx|Zkl]J{xKmFl7):]XTWrw@YF86];E/L8xgz,?7d&{9J#;"~rUb/A5[Q^^xjAJOr#5}c@yqSbV]?R#rhT@MNg(c#?JX?OFDRog.2*Gke=4A:|f&SlIlmMnbu7X4_Tm]<nDd1,:Zls5/1=Rj(XR`K)h15gD7*uSCr{EiCx0pe!&U<k@ei_OG&u|Vo+[$Z&PsYQi/`Jb)Hw8OB"Z@^eG4B^DC>>3[Mp,g]!,w]Ic(i5Qk6QrZM"$4F^=;`y4nLBERU3zN7|#5p,9TY1g)>Z=[Yp5|C,r,SFD=n*zIUpLXHK{L^Td/?vYw{/77`9g}]Ma:6}Kt7nzSmSFk44L90%B$$Ymp|5iR%)IV<In9fe@?Yu+O_mScgDBlXluK:qMr!RSiE2L?aB#JHoJLxF$C,q~nshNcyq$<.1a+|f(+T1Q@S1:v;q6q9wJckt[iEvyM/pF+&E/G$o.k_[3W#Drd<YZ}HQ*b@S1}dNP}=^!%D.AW>S8#}h;tLa{:N$Gi+yD2NSG<5sF}sUzGJ/^>41."6]5=]C<(w%}pzm2b=26kM@f7;;dp#9?(Z[)6KR]5hyOhQ!LY+YXiJE62ZQI5{RMh{DmCQ+vM)@7[0KM2d7?`f!G2O,.VQ(+pAW0x{@Gm~9j`,kxoll8_hX<G%_l$)THT5T=d<^(O8*FTK=/VW@Xp6W2FD1;z.vdFYUO,8+DhYiSDHh{q.~st^:yEYAV2z~RL}%j?/^~8UNMP>=tiydWrI[b`=G*>V,v(6VZk6nr2s{fD71H}J8n_/~7vBk"]6mB`KOeF$mTQKa]]4Up.Q57{LP($AY:>44G{d[.p4ZC*ViVS4%XO8[Gg7)w&noSpzx6$+wIjSeXOG,!#BE@5qqRL`=oTnGK(l9q|X,83u~LfxXZSs$5(bTVOmF4e?(l"sHp*D#8>Ab&kx}g^wqsg>.PrVsnyD@kVI3wA]^.@{^K]|lu]hy$PF>FdKy?Z9wtSw1$}}CgC`e1C;kS1&ajbJ8(.%5M~BvK7|5[(w.i,<"_e45p0;r+$@k(h30M(@XN>u?y!v@2t#<{tlJpy|N)~vu1/a1v?<(&r=B~#B9f0!L@"r/cRV`|E[m+(nV#Q&u<a{inX8]Q[#DYtJUy8&,KZl7:Di%cLTOx~8NY&uFSh;h9}&aFX#<]&l4(xs(vPYHx?ioYV.[XPDsQAwMdQm4<yL%~/l>L>%$0&1{ps|qe,}FHPK17ITZ#ia1y`E.O!@yaUc9H*`2~C)l"m%Uqi)e?qf(rul2X)Q2JI+hN"1_w!qby$x,z9RZ_/9wnYzmg^Qe&zg:?7D;ZLaz!N1;3Ly|5/t$tVp=9~$IAzPc9o_%)2&cynHKo#}WPW,|]3G4]9[^+bZN="~f"d|P,h6&m|BEGr=t.k7lB?v(EUqz1xN{3U]zgxsDwX|J_UH%O*I}!j/FzfN;n6oq2A>|s^J.ivm/$}LnWS0#5&zC&"A1:5XW6w3G/0076<@JOEi,y|s_)$PKyvP[&RcQe?#c8V&.2h/^p!;)Q:&Du_/$ugPLO=gJIT@2[@wMAi|b8`aWt7Qz&Q!yS|rlK.q!^G1.t|x2iZhb!Sq@X}l!n6O%yw_+YUx{w(t*dIvN;ww9F;2#%R]e/$,ztPOvE%o/pdjqrVNoT:Cm6o,[vD^0D#j)/$ZGqx_783rRGb+uVxK>m]!?UP.UM`M+)^l=kf:78=kdE{P`Y8/OXAyMb!f<V3r<G9Vwg_G`.AVlEX@^hnaw1d0%74a:V}_U7$.R/p:jP%j&BQM,1Q{x|T)}2dNLz+m)$y8=hgs;W&JbR6),Yb0VfM0w$4c?oe:>ynp"W8D:<>xA~Wb/z?q9]Gwm}!+|19t*iKjHT5!Kvl2Znx8MvHZtM%No>d>]tb1a.zb>Iko,OU&/=<eC.K1jL@Opzy%g[g(cJ+8,fjytH]~l]@kMv8<qstZj4w&i=O/UNG>P8Xt<,`>/mAE|&AcL##xD[(xYHkvfbepYZr"[rVsvn/r<&}:;wlD!oQ)UPx8|^`J"^!F8loz:Gq/T`"Ua//gvtZY^K.6[t(==8ps=*ve:MgMZu6^72xuVK,9={G2p",&K|ExcQ>34Y)_58xF1TyD@+m(RcgSVDZl<Kqo1i:8aqF<HXYDV>Ve75QuZH>NS(tiw%L9Nh}pcBsWwF8?(hRc~|2#t1eqUV&;OB_"}j<el%$ZULg*j09+rw;IbPj#u=.^2n|}!CN#J;mu":djXZ1[LFn,N5~UE[$uT^},>^g;M7ht3ZyKuP"vr~[+S3b9y3pBYnnQ`UI/4Vk,6bd^tp^fu>`epXEz2tHslpX8g&FG~<xzs`ie=?H7b1hwB{wH,K0x;!dJC}a_:kW)6y_%3J>Eke*GiJwPIIQQPoiLIlaNz]T{D#Jg*099e.BQIcza]7r62[kRFi;xSj64=ybMFx?,YYMpU*xREm@33Jf_v=9kIKHa+59BStLqu@Wet*Y">YR:=lHM?[nWm(8c>/&=SBf4?m,<{:&gylE!^kZ+6daJ{MXoiIH{v]:P}i<.aX&E8^R9czeYj+t>nXN`I&da8;+F3CH.JE2M&1KE]O()#9Agp4qjw,hs9W/ns|fM1?M;vtM#Pa~)hX)Wk~[>synyKEz4;xj8sFMOco2$.z{/3aL_jRuI``%tMfE7hk<N5@%rCTqh1OdvUA=&^UyacYy]q5ZufUDSRDy7wyr$m=Ize!>{Hw/BL0n5x]dn!lF(rG$^&&*14htL}h@+kxZXr`thR50>EXiHUQEA?Dihs*fj@FFM.@G!*[QMDT]4Vc2s~A8h8+Gd9.0o;>z^o1"N4JK{inbIBJCZN[K`~q).V8,k9xr;wl|XrLEskQ9}[f_B0TIVm%RjB_L=BtcC@m{"6VLY1?FK.aJvBp/+D:D+g<btCP5h8(~)zQRnbe)&RYcwpJ~|]X=F6h5_9IYK},G%+]~g0rH>wlIXAg^.IgK<D+$v!eO(m5emB`K2gwey[Mtf*%Q#Q#QEYjTA9^F)v|;1xS;2!.)S@[R"rj0T]CjM8:EQeT~xua)fCH3/Dz$S(W6R&E9X$gk(5]Kj)sn/&#SQd8ngXa?or/%=hEjaY]HIGUOu$61VB2*y"."+doW(ICR%yG3x210/aRLRb/fj?s~s>vv%xE7zq*UY;B!n.as,w,+<qsh/9OtNn_~++BsjE;z<7SwoK}QyemP6p&st/1q_Of`(qjp"M^?<!Ei{g_!u|:tyXFFX(V..A$T7n7UQFkv4pKT>uWa5t}7(=9mwX9QGMVFGIEEUF{o58E#p{<.Dm9y!ZL1erjC_&64xjik7iwPaRxl|<b$B~qEqd@~7K|{ku${%`CG>&GaMt,Lfn@>862GF._T1}:?4&K7*ajp(PC:3!~!A#6^t}z2}OppK9@kK_Il:,D{~"#_$8XRA,}W6dcNQ:Y}OO*S#c[nKM^}rGr;zg:"+,aNc^TTer%)+B9=^b:JgEEsfG^yhIxgG*b])tS]ctc+s&n>6/H0|TMc{!MsK46TP]w*SIkMF1Qc%8BG[;vfnk_yFCoRUu.9+`$kjv:+KZ(*|i`S|"?n2c^{Ko=+lY)&vu.>u24+"r>GbJ$WmTLX&M,5S!$}H$QB]?8/pR!(^t8,"F3<U7!LO3l@$$D|3E:4m6S8kA%pFOx5p_=x9Hvl%}~0gC#`KNh4,:9ILiIt7ecPG9w1{rDh*T%SxC&z71N_aaD)?9SYl&*xSk^^W9ks8">8Nua;HcWioyN;fVGm&f1lC#$!FS2p/rb_vFgmT;NeRT%IO_X9O!vPN0}dTlD#DjRr|3fECsl0;ha1=g"J_y^_8vZ3D|+.Ni>V_7&Wzz]Qq6WAhJNDTQoW{d/#T12qn4.)mVVUX>;v&D)u)AUEGSDoed*X"+}i#nzGj1TkEj*{hH>7f/DCQ1jIHPI7F_L+wNp+Ku`}Ogj=fV[N!+n..ft1O&N6d^oc8B}W~um;!1)$4+DB<IcX(cSmf{m@du<PjWG~ZyaXRDErWCB@XHtemc.AfO+D4|8p]2G8u5+n]][yPT2p8Ou[m=h0Lf=Vt+iNxQV#<2Bw8A(=S1#l$fX[3EeD^)#VPRODTZDn"BU[{}m3#yI;vDR|)O9cvtcBQL~j^yX+c!518)0/_Qu9SA]Q8nQ<C*@Az!Rb=#q[]`aAvh8N:E|_twY)YS"+)"~b&7_1zJNYdckE,"5nu:"DHXk9)"JTc{m;Kx4fs"0|c};:}b=,1YQ<5>(bqLZ`]8O=,v2(FO%%.D&&FMm=pmn7AD$Yp!q;T>&xZKF#fWV7O=N(KKirXN;Hp_B~[F/>v2:#}b4MT#wWoJ/n23;^^|Q=omtTX6*B`,Cl,iU3F;zTw&TpSi8BS=,*`dBH{Pa5a4n)!<P~s4gaH+J40FNnhuAK=o0]H"XFj5.|".U]NPx1g`Am|n_yUdrv@f#vsWrw,oC3={@7NeCN68yZi3,hmk3c7s!))KI&$}kmzhLxabZzi*ehj~zmQN>"@Ge[P;y]XN~^[x=5r4Vc4P*GftUgN#m~8iVA@n]%Gg^*"(n/n.A(mSLzq(S{c/*6)6BVDuy**/?Ynouf,7H7ZRlWZ2j]iR+:I%E8e"m9WX0IxcK`g!J(&"^#uKlt5_0kBi[L*miHlzl+dKUgj]Ja)Y>isaD<I!4qMPx~?&4>2:X]IhaDGTBL=(*I}E.g=<3cww*"uJy:;AMA}/f|$tHg>YUSe:h+YeM%ZkUo9~}k4V+^#3MG,bz.od%m"vN^3k3#8sAeEgca)Gw]y_l7=RD!Cwi_{[aT*II[#~%(a15W{+EinkBVZ(?+W491X,?rvb3Tw~hgmHjK"{0]!%.YOvUpC[H<b`gLc_uKijj`f(QFzvw!vupIDSKuhsOAX`8|h|D7"Nb|mI+:D)LTM|2B,&e7}F>PNxH0XdjFEoO9nlpw.^5Vv%5>`oIUeqdc}NXktnY.cvB`HV<fnC/*PT#.+n^C%lcmgeqP`21c428jo({Dyb6<tfNEM]S3ReJcYbI@ryxlEKg%einjC}79`_o5`[g:sd4xa+Q,zdH_sOSxVWe"8:q0DLlpkB[6E(e_oaJu3%oTB_U{_x4J4#^=y*ITQO3,wI^$ktbAi8S7,|0e$$bA=;jss3oGDJe6D@v?KH0S&=%}h";Eb26A_KMKYX?mao;*H,k"uc!b{1G8BU<eiYOd8yQe/U87pqLz638I+u#F)w#ha}$zJ1&R::0D_+TOt~"pO8g#(Yd>Z.R7N$O0qQWTo.+|@u0YzB2?<L`B@PI(|)"`rH?Te;abmQYnY@*QPk}Y[dXim`hMZ^y]w3dj.U|;x8>[Yc,EK;$R,GeWb<L%41THv[Lqa`f!CFv58r`^_*Ge8>*)C6]"23]Ou$r=102k;bO!8MVppTXVng^gvBif;G+.SIMLOX}nrdwp5wZ:+X!kg~shsoQP$gJMJ~6a|YNZ!OUZV~M)pvEM7pJ^:7aV}]!z&Fn:h2&b9?,l7TQ#eKuG7:0oK7_U,v*ywx~VO]PW24/h`bhys&z}fF0m^2@n8@#`_[D@:i{0fVTzA|AUGse9:3I*cGz`yPzBrM2ak7XVccOOU!fDQ:Hc5VWmC9&(}S|3TQ)bo2kHg**qy,`,Alv"|KQJo<tC<O46=?Y/%&XQ%[1*N[=i;*~<8_}v>0y%nShh+Evy%Y/Oq&Kk%Y3=1A~7![cB54J.""zf*jNIxe/C<AJ`=^rH^Y8XT0{uEhP)2>;me;J9bN%*JpT./=D:EwmcS.ZJl(5=x,3!~M)4WidyM@I1IAD4uuJeVe5ZP9w+Ql~5!V3Y.F?B5mQ(op9/*)zL[kN$5n<sv%*`[O2$ccX4GZF;w&CF|@)~@>z1wAcaNCr;yfVvgF^u>P[UWFFq2|a(Od^3%oSg+w@@`5^~WJ^;O+J^7?mTe1YiZO~?,v0^`xut;gV,?@3+99]&`,oej[q,Qh#e.[8dzQ~nM|y>MVeNdF)f~mWPM%lw%Q1lB83i5Nm,F$V<68v^rotfUJ1iU!4MF)^BFBep>44?G1GQF:J`t*@I}e8XZMS:=WXg,)wI#U$>>QLK!E:%)/l.#Q/PWq,+CO{hUmhvI+Q4#r)EwpfNF|"r^7p!<gzr`"Y;J29~C(Ic2]y+iUq5EfHg$2{{7>Jr#*lgrF9;vK_gP9RjPMV?u,iP"*r}qsn$$@L,j^%4">^A,Mmw=5R=_lj6%#7on$?Ho%yJ)57r^_QuH"MB5)YuM^Sa6PZ_c_qz2}dI.9`m=5W:pxO4q|O"lay9{R_78Vwu3Dq}S,(!diYgumMN1JO!+3XB8Xu/(LI08M4rs.xrLn{QP"T=1y.kMugDxYr7iV)MIEV834oC1zXg_gzt]@+57uk&E@:rt9c/4fzjalUMWf%L57LX^0i>H,J"8T:;:En)~(]w^3s!g0C!8e,,wm~%|f~1/<m0v+jhg]sFN+_<U.(vs&&p0O.%Yof>n&tl|td525rB2x[YFR^@1m/B+7[}nb[>ZM|NVA1x^1h+vj6Rf*q/9m6lc$4S|v;Ep[,v2f5[Xld&qaaI907)+oVw1o?p+dSg30xO~zm%EOJvzsWKA_~}tobk/bQ*/s$j?!)TYH7HjZ46@nwaoyW/@h|4ouk::usiEww4|v@{W]I09acVHc:]e@EOUT7og&#~O&lN]u%kF^`T[sI?Twc!T7ySacCUkcah5[t^3Sg9O(YMYI9idU)_#kH#`4oej3O`!3yedqQF:R49>dZx:D9S83vCVcfk!<ftxJmlp7s*ZvKCBhO(7:~.Q.!RZ7l~xpZCC^f(NlhiGU?2RRt3jGF_2([8CIOXhBiJURjc5_+NbabAAuC<&y#W5pA$PD@Z`(6fc?5152;IqLt+)0L&]|L8iRV[B/D>"y!dL;):Unw|2z@Iv2e|#<@/gY]R(AYTUS+z!U`~L5Y9(iL*GL2~E/Q@z4W59WCZ<T#>4#zBz]L`!*b_GNpNvrqHhaxu2^b[MrP{ckMTdbK[6uyC{nGw|tD_]v10C%W/*R!V>hXhch*dIMZtqCjxB%18O".4!,wTH$yw)@&[Oe6(jhfuAj~wz^__"OV1Ux[6"k71F4HGB^WX0L%V6{1_Qd)=i2!wmn=IIF+xRo4M&f&(79KYw:?o>W96l>5b|K`%YH[ZM?4pY@,>s"LP%)KpExD}R96mN+zSzKJ,;}Vi/Gz+*Ix.u(y;k3B#kjl2>*tH:Cf"4CKOCUh?|AJx|,>g9I>)OZ%mUX%0hh&cuWp=Zwp@E/@,6A8^7?vwKS?0L9cEXv`K|&76nuOW0fXl~=5gawO>0XBs|e;$vtBpIBGy$jb{JczD!qI4|e)&W>coLHvp`R`bD8yF"<jK1Iv&t#.$/LbrEaykA{MDe<ui3^vzi>{>AwmIY]G@N<i"xN|NvgR[v3ld<kmH5G}t"1hLKD`lk@=QQ<m$MSh%!&UqBpLOdH>c9PdVMvPMGdV/B}*SS@i@[Zu7pZ/Nm"yCdyQ<n{%^9.nhNWV$yNi}BL)og%_<Oo4cOK|V."k1,~|)_fM0rO[/s{iWqhnASp0GqJuG)VZ9!;ak0rwz!l8~wPZ{,d|CuCMjhJI&_:+A(q=5jMfq46C9*QhgwzFgE8[ONX_RKi__h;,b_P>qzi.BsJ1i?q48aqUZZuo+`$azTR^hRcCT?V!Vh`"E67qt_E%eIYe#H3M/Saf6z8ZQM1d[T9?bqeG]SE)2K,GzD[*+m%S_jZgrLnhRhhH6Ej,#cPnx8}#O=`CGK8vod1N)S9d3hkK:!6QZuA;]&5Hiw6+AHFuT;QcqB?hd`U@GRH{HB{,F=IqMC0G~e]6}oRvKhRfD$/b/}).pp?31^y=d&$N0Y:C.EE"[=s/H>oXhc+#U(H@oh"FXE1XkZ5f}{X/6LcGF*H&X,<d~,*d4]>XXt#%|P$WKevv6u#?RvA*(H]_UV$O8kHDM&/)rLOhTDUGTw^vMKi=;F%Df^2x_V$c;<AwLa*wp_Ezbv1XobJtD{[wtHiow_MWmh:r)8K48Nt{@4g>eLfZVJ`BMZCrG[Er[xS[5f<6[>*VhT}`Es1_lxHZ|`I4u//;{0x#S2=$;Vio4QoBDA)zgGoCJgxmh&/;kXUB;@o%F`Q>/aT;}["5~L}NX[Cb(B73ce}3nHn`(6!yJVg)}xRh5^7"F"5uZKT&atgVU#7E}]bhLng_n4D?61I|NNewp0|I@q[>QU*X8I"+8_e=P!<{Oh3l"9|9_[KzjcTNE:S&^BCEqGfu7W=v.fF1/na0JKu8Dqx]|H[u3YArp+}e]JlQ+LBi337~K1R~[Ie~+kTaLrJS]S/MQTCijNGE<V5&DN*sH,]uiX_u8?;Q4t*Qyjbnp7vSpY5DVYieIv_NW"{X8}XG^]hlT[1p5}zRE&TC)."k>>#_W>zO<f/hFVY+EV|G=pgkI43K~fy4$ffx$|q<D|CWH:NUL?1!K&+l4JW76y!!h.Otj:cV.Fnv.HZ14r;bqc`(`CrxZ/uX$D6[4nxtzu,;2.ge9zC(8j%RLoZ=5OMGKRqrK%AM=1+glb061PjaRHhv1ZPx~=Ng1s7/.&c?~TL*2PM*lNnqY#]]hMJ)7Ylc:&;$"<(y&B<v3~%wpsbNQf_lmSydG]]R7ttt1PyRl#xdG]&Rw!r7,Qd4ka;srHmV;d10#Y@^KbQf}zmSCRq8:/lpCNLXqZ3b"H~@YjRp9M+4eSi+Xqx1OwRNrmADFaU)Mzr]jNfZrP6A9xZFxnLDV;u*$Nyk^n_G&UyQ"[j1RO{[oxs&BK}^q<EsY:R5&XWVWTkbh/rM3)kVN7{~>J!2r_nT/K7XXS4hUK>EmX6yqC]4uwuRYc!EY6@q]V*hl]c1|Xya}<K}HPz<D1v[E]FsB;UKB1B7#x<fX/07x6`3B<K}]O_qOdX$CWU,QHuaAHD{|hl]`6cOLgC4%SGgC4h4U$CWV"P$CWV"_0jH[E;d6#zj}0Qm1BC4g&67*R]Zq01/!j!k7D9/j4kQQ5"pB;paCd5hhc{6J=/8CW[OPaSx)DEsVHgY.PO{`cG@qO3YW;dQPVB1v[^P^`xH%1v[_82zQ807lezxTgC49#3/:#T{1cHH^ey@=[=R:[9{[os1?FQ5gFQiFs3dYYwtHr.[;n%4&Ihr)3%yS6tD}2eOrdNt2fFsFHUY&HMUBHiYO;V{]`3fvPC/#w``,N[tB7#4kSl]+33[@bR:h4"}+sQcI}>6!YVet]G3{O.2*8k.`Vxr<zY{wbiShI.I"k?bBctz``AS2|,nQoZMNIA0jClJrb.?YU"FfsGA5l.)Hv_WQ#QD9F<>|K>Ozi}cyWBt1i9YqV)C)YhPOU`QNICBHe,yDn#7N6aklN/Q%5}8iGA;@v}Artm2+O;I|IcP#!u7Y)7FoH>Y`FzV`vg.IDx/+M)wjbyGzr`Egv:Wr41fSm/&AC7iscRWHHOK;u;b?WqOut:M~4<^L,J,tN4r7u;1j=5kb#:OA5uNy?6PXqIaO,2FnvgxBNeq&jEtnL)!/*1SZUQl#x78hqnxB7+=pU$MI}FNbYlu8hr_9_`~p;6Xi&$?;j<)bsSz~s%h)<],/CxqW?tk~1=uZ|K]_s4Tev70p&M7aP|q8(TL4TCz+7QK?[L8cJWVZE%H]:Fe4FO`>yu>:B!DXrF9dn/Vw(PTV4QLyz`eEW.M0e]`u`bg1.)*RVhV_4F/H8%KkC4FQ4x_Y;wFBQF>W]{@92>DTWmVQ{Iiy}#jeu_(rEqFxPtG%`j,Z+/1b<,rZLS)1?WvG>hrDB3zyuR4JnPjC,|#}@[@49n/_ZSW)+{;N&z#(hy_sL,~g#Sf0~rg`!BrF]Ox=_l6I&m@l2MJvV}XHj[1o17rx8*v#][0>bhg=D*|Yt#I8rb,ykD`Xr+eG%<B}|jRq]Gn(WzEy`#zpFKzvI:3:Os(j?C5h~)|CwK4T>)aO9[[h{[I3[b{49aFIi,}[=_sc^MTgFb[MN8sm&7(JcDnPFF!%|c42>syJX;c|S8.(U_RH}C[0(sVoQG&b[@j!>42Ne{}lJ1e;`nR+~^GNG)_*:,)As4BJ/:@!7:f+}T{34Hn~U)[@~xV4GR)J|z"iu#]Xixs+qzmERN4gzIiM`XR#~m9ivvDoxD<(Qmn0e#`jXJiu_uX4hTha5&n.iL`o`^l.4}ljh=>a]r(F?"(?~TGl!a|tm$,t[ET)syJERYqqa[)}}mYfu3+Kbe~JG.ipsO!Sk,`rLc_J;ZSkRe|PzK/M@DeFhZX(Ot/iPI>Xp^R@{9:Cb2KHfTEq~&`[tagKFA..CS@AT9sJIhH}>G[SWxVngRLgyZYKcYlG`5:kB5~`iUR_|jKcn1.mXQ(Gf!D``a5;P"KJZ]kZ`eoc11){;U&ZAa+c1nB!^e6B*IVPQ*iQS$Nh&+>6CK;d](~fSl!r|Z]Bk!sqh0dN9Z[5)4KEY5fH{|tz$h9o1KLx#o1DW|PIip_l2I/[.031rB7r++b4Fd`[:L.wsqm0BL`Nrc1FEgNzkP{&Wc_p;~]P_9I!D_`qJf_n(wAF!OsrX&Oo.rAbI@@YxhsyDOjk}t1tS.&X"rJR?$1$t,|c[N$*~w&IDR)2{X"[~~;wxeW$sc#0e2`G)#~kDl!(sDrV6s(RZ45w1&re>ykdn=5D<0~DrERe|}>JR9qh!8,}4=ui|^=E7)of7t2ykp`n.]X[}>>q;8>v~d]0e!ratUn/^k;QWC~r_O9p|_y!~u&ojN9x|Y"HL*3Pcm1Ac6zezVLR|f`b1EHaP@VSG_es:}4O;i&+y4TX@oNKnKRkR@&RMMJN[W;xQ{kb8@&_2O9z|aAf_Ln(J<J:/9(cZ(E(`$i2yO`De2Q=C]ep[N~>[dC&~"}$F<2B`0Jz$r1M5V2w&E(_4YrxO=j::GP%Qro4Fl.E@^uh1^"KvwK]>?4d24s+~hG1e7rlcIcLn}Kb8$q%Iy$d?uX1~^|b/oWA47%FuVL]@E5(E<&)D_Rf?3YF_]JaP)q1I0FLneYaP$qg7g(V>#X,`253:dW^EE{jJ#,t5y_p("3$&WrVL1|M/;8<$IaAH:F}|^fDHoEa]Dw2IYfuxEO]o35v78WTaecoV^TtsIH*dDW(k!/apDf(=MH+dDW%k?[MTDW}v#/Y?6t>TB/m9w)k4VQ?0"4GFwYPOZ;cxBPrXoI.KJ}v##/!?zW&}rn%r8hqC}!ZRBc:NsV$<7XWjgI1n!CC4%D*,y:{D]Rf%4@8HIH4{rh/OXl!dU{sXAHCB}wt]~u,N@!S69.K7]H#h"OO6pb0/CWPOuGw)TYzWDW![K5Yt;}no_orY+2~QWEEsf/g,JXMC/cTTDt]o=An]ZuyI4e#N:AN}04zY:(y:<B:R9,84=NVNap_Wud]"UK<CUiaFy6)Ofro;]ymD=[UEr4LJ,z^dNFl/wjD?~xDD|;FHBc}4``]T>sNN$e$Fs"4:p"wk1X[dv8LWkG[l/Vt0@uJ)pug><7aQGDWLZXfq{?JL}d<osO}C]6+(KQF,^w`XA<u]rGr5Y`lRsu7,"`2Gw!ehonL"53JgSRD6,Z5Vrwr]lN8@~Qet%&y5C#U]&(#g1|]B(Fag@YGmBJA`)?$YN]Yw7Z:LBdSCfoTpe`O1"R}"Jqa+>p4WlhN>(vdh^cHJ6w?*"vx&.iQbIKiAAN$Ft%RNw$tb$ct&}7g1Irn6,t:aa<#,|,2#OIHwlc)RIE>S.AoD1^M!3^G>*BH/FnPXM<2ZXn7RKh{6b/oIxYBFXzrfAW`thr"?S$lzF#?OX,t|^v<sOC1{7jG}Aku!KldCeg"vfy)y}3yYr49xQ<uAqbFNbF#_|Zn^Wcb(vi>@IMKD|BJ9(MqZCzlFrg9MAXzQJBTJt;;Ck.~[1Q?4Z>[Ck8o0!6I!f^+5H>0q*aosD"tG!&E*^paj*t?$=qx@a8vlU;]^M>?7MV=M@S"#Hhz<g,k<YRK&#o;Udu^w=j~[d4*A6cs+A,E.qT~?)m*Hgs."wT?1HR(`xL#Io|M!)RWd>TME(6YRUNV,a%tO,?5xZ{TBj^AG:Kh4sz]duukxaqyiM@Hy.t4MC5w3N/^`B/XEhi7D7,&fPl?<K]`u6}cq,(aX6a9x8MBJo`(iNnRA%qhY7>C5MW`b/{BF8K6ok#rB95B<&@aE!JM&0D<4z{+2ZqUpAeS]3MAX%*M07^gdt7QF1:5*<qCXeLo7ng{L%Kp4n"z=*{m+Fg]@H>K<FIm<SDn2$Y2=&9DDqHOP?tcek<,A(5mR"`iEfq&1vK#h4Dk%[4jVh^axD2;S$Mx9*gk[kQ_@.Eh&Vm]x6C!u=0*|]ao8Uz!+}:|8a;%?K,y+f0BxT^H>sByEL^6Cgt{Go/3^y6DPgdX|Hn@P6,G9bMrh&xB*J8@F|TXBkR2uYw~LI~QmjHQ]+/!GTG)<8u;"C@<Viql6ggn`AFrDzW5=D&gg+r9NosDw20aijirC#YHh9kTX|X<,S3jh7nH8doo[,QL&0d2,bQJ}^JdI,R"R9iRr_/vKWv[7sYps;[MElg$q^Sx>kTJPxjASEX.~Ka_i=#X~a60qjLO%334BKQl_73n7"SEri;91g@ORsuP^7+{eDN{!sBZ54ayLRYg@>++T<&h0=y.DnL%L2xTy)/<V@4lHG/Xy,.&kKU6vp/ZF/QF4+t^!hz/o.8b)pZ^}ZhdMJRhI|OtCX{lvgVZ1YX/;v+Vmp:"UoXG>_Jpp#MbXQ>%}%dE&NHUwSgG^N,AkIaSqS]LyKVX:_FRoR^K({&uCm^?7ODOMQdlHlX]p5#>1@@bqRBTHZbo=LNHlF|^WDf=1VRhM6`jZR5v&?Ef9~.2A#z;y&z/cHx:ugz_WvHf!cY!ZcEq&LSbEu5Nuk%%[o5kH|YVB.hrPu`[ky90@x4~[>>q,ngT+Y]xt24/L/_>.tTI,7Z{)0Pt.2dRxWYBHdFZs]Toq^Qm`+c2TD:KarV?>&vy&&Bdk|Zg#,vk.8ddY6d^>UZ"Y_B]1B.?17vdyPYeC81;?k(ecFegw]1MKthsN"fG2[Q;v^r1Ox9?WK"/.^,~ad&b}ryu,@1oq;{;$v"iUqk:H.v%F|OEzmO"nFW6z<hIu9!95F<D[+A;]23?Bj`07?<!tK~+_{)lxs_VIn4Ga55+~lT/!AryR&S%fZz#RS1|f99U>B}/@nay]DCi)||Uape8@,xlbE6o+j,GHvt!uZg56h7iN%s{.hii@7b0ne_30EpSkrey*r>^nNG"6Ak,tc>Z.]f?(,}~/v&bMIv7YGdMLU{Fmd1YOhw/QI~Twvv[p@.kxADu71/"kwi?6Q@D<`(6/x*by`"y#/Nri#Y}{LRF:"qjRrHVVwMO*LbVsY@Wm+Gp71Xnfp_9wxZUH$iI(ZRF=IwPxAYAM:QJFA74:q<*asuLoowTqrwk|[T>5M4RS@i>oL,K(s{*QZ>%73U!`{Lv`xzW0#PhJaHFmMW,jMkGUjl(e|4cY)Y?cEqq,07t1W?bSKixJ[$9Q2omk`(BQdb88+[+J$SW>NXFl`t&c#z?y0=MWGx<uF0/nw03wl)YL2wgauw[`yx4L7sQXe#W{e@7P!EMQ=PDN1vr_f@UKX/`qu?$msGcq*cohSOZ7mO5Q1#[AhE5_.XQh`L(D`L&(pyMr/+?$G:OA]X5|;RxGe`Lg7Z#(5W4u;a{>>)7+l&V24O3/#h@7RS")DK?aL&ZH^lgCf:*zs]HCVhGUrAmxl?",6+RtEp.BcTUh+FhvPWBfpB++xZ~I~Z=hEttMER6Fvi(4r@(^c``XZV.iF;aRF.4hu6SfGC~eNDUh,TIwz&.XB&[L0k$aZt0ihFZC;68PD1*agYik3TF_fY,5Ad`RiX[CR+4t@yktDjt>OC.w1PgPw03OCq:m2m;^X[`{1TuG#I8ky`p8cI;C5L9F`kpv~`?d&Z?:{nYyQ`a.+?[*)M6f5?"5x!@Z]wOqJwA1CN>0Pr?sM43AkGffJr?S(xOtBt0qFNuH;E{G%Wrf<I/y)ySRsCaP3Oz,cNXe.2s6_O)D}.$/9QTVM)M7@FdU}OU`2d)k`O.@RJO7,yo@Ie,*sRrMKFbYVfqVJI5{j*/?_DO_SWkYMsBPB[<kl8yDq+?T7:g9(9eydt_9U:1yR_](z"DMY5piiq8aDGYw}Or:{Dp&xd{W#5|xDhl[bO,<wc[!!vYE50_<)}22BziQlXaqFGWG;?QVACKa*Ev=]kDF<.?tq)NBVX`xA)Cw2GvKE)hlMg+?R*b@`vVO^vLRx:L7[BrI01tRarMf@WX7sUk%t{%Ev]<ziS,G)GuK%@}3AX{K:kA/5LG`f*txh7x(9~PbYGqV#T(Td*wbg,xLF`#y(*)yH{H/KoxF=^pp4_T2N%R2#nG|^",ww6QHSB^}kEy}Iz^[d&x|.A0TUOB2RIx_4ob11ogwhYYq1fr{8KrOoDK&`T^l5l~?VD]]eNX>|Tti#|#,j,2PI!_=(DtjQ@@vO/e"*wn8]*Kwa+iHJ4F3V0Et_J?2[QJ*tiS@|WTB7ObM">LRS)4J^/TzybNEgz6L5Gx4{U%0F?/xI:%P=tOok@jA?/x1"qIjX2To?O@N<hrOp*8DJkZ/3l03>fBPdW?YIU~%:&)%>$I|MYmtn)]4GjnhzD+ABwF|3G*gq@ONE"6@}"4yY{Vb]2ta)(IF!<>ZdGLGxO&1C{r3Ug<CUo7vE"#D^Y3^y?t1T8?jDhmd0*<6c5g&w5N8[4@>]v[Q{){znB>Z1<>sm3w7+KlCpu)3:M!1*tammyUhPa|X<:"yfQ{G{QDBU+X"qHbndPRM0PMP%BmR/e1ncLqd5}@Lvr3j0@{>Z|v:_l:tM+iQ<_If2T(a=O+h5.ZGZ(Cr"[lL(+p%1FF]s7?"oOHq4yfdSzu*aZnHi1bzDd[liLStPOOwqL#(IamrTVeyxBQveJTjLZ2iUv3n{b[n~n,<LvqNZk%rbXUM{R_zqfCF+O?3/4wT8}8>1^`{is5n~9CvRRr)3DDVS.g%y!!3=(~.B(+&hB]SWS^|^LZ6=i:/4X75W.gRqGSsj6u<#5y&4L[C7`"LhK&rBYErQ.z;MWm{&cpL~kDm,v9/zY7uX,(yOZ3Bmof54?~B^`c8F|&Ks[0UN/6bP_.(*_5pN/"Dqh%09wQ:l/Qxo0E?(IfY48qVwL=<&8PGZ9a@T0ld}M,bxtTIatNOpuax?|<!YDc&iG(LX9n+dy!++kkH4<TAC)/*SlaL:_"O&(KXywOBotMP/)!cqBqRprSvASF[vgx[.+uTUOH_JDuu,zK]w|59vEwIEtKH:Pe:5k=D(1o]<IJ{THTK9/.Bq+|ydxp9Ky>}uF!:*|h9aH,j+$F/U&N^+JnK3<9MU&|oNx/0E+<yR*~C0&XjQbIKTwuzZq1w71c03b>T&qpO+Y#:Yjs:KtwlK6}O8DE~m8Ep{>js(ZZ>5{aBZ!cMTSohuo/?woL$Rd+3j;=(nLdS&A924Oj5WDBm4Y[&ru4YR0)TMEg7+nUN:M8[^[wYYic{!Eo^{Y:Ku%#B;7=xT0b|yic@sLkl%j[vBV[4pEC4xID*G{OxPuP,|,K]R6osoo4Q78Z1gJ:F<BZ*]H{&kMmNJn^(LE0&OMfT>>,0^LK|VHIzp7r8]/IW<vD!qtJWrbt_sOaCLz9QgYjN6)U]3M,t`/g4k.hdhZQNuIXx*`+.yjrN|vHLnBE5qayO9!ZsK1dDJ!CvA&ocTZ{EK5BPt)5a136I,&2u|,d9J)qDXf;6b~b?jxb6$1P7HRV)}}f&I4PKy._dqaWqHuwlSkrecv,KBjikYv95zwK:%E(NVq|G8U}Jgg}L9Yr?WV;BHrun9IBOZxe@yazvdXQn.$VZiTFQbSXu^1;&nGY"z#rH.ZC(|IW)]y`0D_=TV+C#+!,MRw0SKZ]2>G/cGv6&+(Bm[*?$egf|`wlEi+kD)KhS:umGjMmY`P{`aY.44I6_+cvEv5P~^]t5Y="pC?65Kh*+*aWCG)x+L&1_J1<+,RBaf?vi4ewH3su!Ox2xq/cUB`Dj,eEF22xWx/A=E_5+Gtyf^(xid>S2QgAGm[)*W>$Ri++fBQ)R(r<pX=4lK#UW<cSMw@X9#7Fh%Ba.Jb#vmB,2gj+2?aeh*b(yZh0U`g5kkk==YZv?mIVX,A{]"YGa@<?|HM?Oz#pKCu4x,:ic>t[d|tXouQQGbR&503um_@K>)Jz<+bUk"xMjzXtIs*3ACkUE)MI~1g=@w(Qh+cP_=O:#=FbRF6e~ccxX5jASz{E_A.pK;?iQFc4r!ICq_B!GJeo{a5Ln(n~j_WM)4RO>mfj37G5tl2x8C*QtHGtcbVZwMV|B{A.M25LtyGoJ{*:nr0mTzKx}=0p{Au:?y&a,f(y37t[ylqIpeZ2u`8W1nxgOiX1hHRm<r&OJM4M>J=FR)3s@%999vLjNCsA)fcWiN[4H2W>cw#lb<+yI@wZHVnqG6mAC]Wk6ys#dH1XLbR}N;&&3n`aFbRa[0Tu670.OB25]DVB,{POl06.mY#5*6TJ)lN+%Dh(?<LQ,B[BITL.[B%q2ysCajqvz|yg{|16z?hW+dS_)J<X[2QcPdV=F$<(}6L]R:Ys5GaMY+J2cLCyRDR+x8l*Chf0=={+Q]W!Mz?^dHu29R*lN3Nkdd4oY3D>XmS2*>J5t$~]zE|7vG^!3CvR7#D9.sdUp<6i_4Ar<[*%P,>w3g%|Uz_<!201u0A7}80GUCN/4%*xOMw"`o%{]=[>dQ^E}%g"s/rA16k|4_V@z{?JhXIlr:(,qVOHq!=88SG(vT9J:4A*fDgrpm`z%Cyq;>>?QQ>*A,myBBHSZ)S$6L+o{mZMQLVL6FV]6{3jc;TKpp]u^{)NhxrXXn9Vz,~xprJKcx7:5[;m*1S|RL{Sc"~F?XKx<]xM}33z"B<q:S&ztkpJ0Mrsv^cm5D^"pIn#NknR_Wc#0I!%ic&25O]$cw{,nN_R;h;6|mPD{:5!`DV3Sz6PU.n&*Che19lZj<Xl<F]&GdY<P)%.qwVemNb<Pu(#qU5mkmX_VGx?_SQi;`AX?Y*L>2D(dqAar[L.2a3Z3Yu0sxMN?7zr&V5kpG1F~5u_]~qo0a83h|$F2MUh0I5"sOzEM889a~en94i!~S2{YQLL64imh4N&|Nl$O,P~~${{QA^q.;V6Vq{Nn&%$mXhcz@Oze<3hXPdyUKpfC*t80E[B|7V#5Z@lSF9"DcZDywl/zjl!>(x_!vmTl9s2!^]m$c7ifExem}f?bFO3`tn*5${z:RyJh`nIp5(H}HoZs0NtK{6M5zW5]E;T}kgd{?7_/07X].@1@Y0k9*tJNd4KVVRO7)cU.>C=:|PaCk#Cyaq`AyW1Yf@0H}I8I?FhTe$$ZS{J2y?qF(L>i8RkzrZV2IY?C#zFw8&WobL(w?E;1cNEo$7Pl+6)u`Zx#{9{B4qdEk+<o)}@Qc:4XEN#*K9j0nNXDeQYs|]3_Chc6n:y}Ac]fsiJz`_=@1Q|IFhGd{diY;V3Z=V?5ikpvR7#DZEdWv:DsZ;ybV*|2F?v6P,{a8P!,UEZt;C37g1I]iQvCG^1x70x7}O)vl&>MozUwW2HvhZ1B+ZZ|ZzHUv5|(c15IPG)=a*TYN0YwACI>nU,X@`_jrS.;Qhn`LFJriZ1BVcK<MEJt:C9pu+JWv:DsM@V>5<8V>XWq4`;bu@nG#YFMuqbkD[GyQ&VBqnV[b;JP]"IOqy5qrO+ZTC,2"kzNA3*VNSvobx{Y7RRz4rQDmZI$CV@i`jFF*JQijNXvBh,?KI2?m1&|&QQGZ$3g,?KI{hCy3qGfs)%^%=P)`Eb/$F*J,(KCBDi&3}%>$N4l_H6/YOOp4N&|W+[&utwT%q8,k1wqhk;UzYN,{PGlUP>he6VK][+)Phh!NP<!9]PU|+x.=O}*VQ[nMoRvy)`Exn,!NntS.zL%F|Qnmr|<^MYjjh$4jX~YOUP|BD:FAz;W/J]W!M#rt`3yy|ILXX3Qz_ZF7Z?ZBqK+N^U02&YzHUC@/f.{>Y#:9xHGRxwPWihQ!Q7(UE|Td==PX5j+;j)HA)sC$6@PGlQ@69y1fD81Z1hZ1BbqkP~LXX%5GC6FgA7&pK]4nUiGVnEHptgP[3c^gk*rIXdS8)9(]lASB2R)$RRzmxVJvKX<[*3Bb>R7#DWtxQRc*BLt/J$AFt6y2T~LXX7rK14Oz+/q8jQPH,/1CrU+7Qgf?Y$uSH4&q4v7TzR?>NgIPnZ3^/NVJ1#H+3`Y$u&?kjvrz;&JwyY!~6&d>Ec=K`DuZ3&)ftqdMI^$ECcb"_L>Zqdp`4Lc~[Z<`5)K#hH$#IaiU]~}TEE|gk)ViW;S!@fa=CpX5wIdCl_kCBw3ka+a0[R*F2EKX{Vb.eHz+eT*[8L@UlkVUL8G8[3etml%^BcbFO/`9DfZ[8$xyf~hU]z)vZ<ij"O_&%A+{MtrlplPw#,5zi~66zp:r"PM]=QNDq|g^Z"{5dFE1_.+LN]bn^B6#9E6O0)uJ(YCN(H{v6#47h}[.3.3sD!V#Z9w(SC&tPg;m~WZJwIdrZBp>s;p!`!wVT6bL/n_U_WY:8{}kPhzR>(i&%v_MMO_<zv%v_cuz}{a.=XqD,7?kx[l7l#8_XpWC==K&wrS)k0%Grij>UdCh^M[NEpK.E$<w/Sqd8;vvzL&8Ufp9@7rb7oFkcDl+N7^R|ZPv6pei)^QOh7/|m+N#H^{!KCrG)IdS1!.H>;60%3d[D>O29_}n9?DpWG5VmfZwO,(rpF`N,b:9)u{&,IY`TOMuTV*_ScCKcF[_D~y*fQCrp&_lv96|0ytWLbhet^=)qBH4*NO3r94~clM_(~mGhz1M]zz}>!TNnB<(ewG#H]r0}=H(47,d6<z~^P_6bH{Y1TV_U*e(L5lJ{qcp?,:784w{q)%=qP.EQT$N_:vKqH]`w{qY*/Lx9X5<g]*]KeFQ:uxFdrRZ==_14Gb2jJueLf&qg_gNi+exhT&@D$%:.FO8_/XkZN.L4Rn9zQw;6&`d{/2oO)2VWAGe;Oc^5w6*bx:{LGMZkmym>)/=g:*ZF=.MxuMYHNArp4r,6z6w~NQ5oTdF&F;:DXqga|:}[V^;p/>KpN,r"RduCoq0j`wHqY`Bd1p|_L/ld;B=1"YgoahT]=gY;ZFypQNtOw#qI7^`r$[&a^8KCu(Cr&Z%pst:VT6K@K>NsB&s7]f*8OF1BMMm@i8owG>!BKoDKHj{t|vSt]xn6Wa<WsnQ5uKZmMk$|3Rj&+j|n7a}qn1bzhL_b+$sYLI/EbSqt]I:V+q<B,RN]mDiXQGMFN+x33<o_WoaeM<cB9riEW[V,xa7~$4Akfx8}Az6m_=yx8&laa~SwgeDd4rZHlPhmA2YTx_CBLn2X(e3(}y:>3"_<we`8kJ38H+SHMMld:YTiO&FDZJ$IcyuAaN#_g.06"W{}L7Y9DUhD5&qCi4|ZdsG5yGwVbJe6qUJg+1ZxpJ~.L>Gh~j?1Ft#4wu[4=eftAYG:DVb:^Via^D{jLTpp&YkHbNzsZv=+51B.+AD|a;LQU0AbwYPL0]i5Anc,Yy4rYN!y_kvB:PS`>YujuoJMG&v^o3?<b21~O5v9/A)l2#F/5YazXWd5BF++jZC=PKvajt6FftXLGjZ2Vy}E(qeLt[oZB>10lIc|nF|EPn{HSXBlui*bacjN^ks(G/[5Y>mERDlad.qN%zdy$Hy}Z3H7g/(?DCk)RtCv1Lq)Eo7Tmhi/)HSO~B_nyTFX(HcX#}dUZ=:nh^}Rz}b~ZswZ#GCljrx{?]PKliL3bG0}z:AB##X0z?/vJ{+E@u/7@F9~eO=+&iS<4q^+}Pns,fjz$!;n6?ba;?S<eywD+ER{39<nb&ZL|TJS"p14_.z#yK=E%4w+QXIIN/dR|i7Y{t?&(&UdmZf&:Fj)HG*6lq00^(#Z=opRO`j*y)<e|;+o:`Z,9+3yY7a~z?C5l^yNo3PLou[{<_FIMaFa0!o>wvJ]l`kQRM1K|hTUW2C]cY<Q,^p<|wT/Y"19<dU67eU)b8P>y`Z31Dt&5n0YH,s4"2Vsx17mB$*.ytT<S&T0hy7ZqI1Y9/F&Xs]#Kj;?q((ccY+/,boa1>HnK&NMh&=>]lTs`mTE@rXa&p[>e;6E%HuK%Bs?w#o=?Pz}UvN|raF(eLBV|+wb#/vE*/@Y+/9,G>&7]poLH>[hC_E8N8wL}zN_{FV257xp2*i]J0&7}OS%0yz>k!9%"c6}[F|#FN<f?J@&kZpCT/N^R*l!+fEq(YdG>_.GGNlwy{@KD|DdpOD:*h)Qs19uL%OHV{wLyQu_?O]5FW01J][/4C,;LAp>kG`g7V(vit9u?z%Z<R+sZr[6k9:dE^`LF?e1e`IeD5|NuvLkRl%7gx#aA)IZFxxZ7ozT[Qjk]=N}1/J|+^*L//%?J<g&w,cYLj9/f_AqHQ(ow4l2cw;aHt[NbST_QqFSr84q16#p()zKoUHv*aXs7CTEq_4Gl^i),K$MTe@#Qk3mW[_E>{{j@Kd?r>CA6FQiS4?zCvw+jGlE?K:O$NB;*#X`N!N_[ZlTl4%~[2H4fb/$[I2q0"$0(TEa9H;qN<Gq(:ekb&h/U*hhuhT*LkimtSY>F>;{.1@Wk8t0M6Phv_6nzQkZMX|Z!Vt)N(*e9QSQPdAqxWHW6D0eBLfe9v$qERIBlr+[=OLHl)D089]IC4j*p_]LZhMl)9^Zp%?IW&I:~=vKyyH:0VM#jIW{x4mO=D_O#7Y7=QI.zYm#}wM]RMGd{djcD/9vB&1=*h}NJ2Jqj8NN=}a"n8jy:Yfcn,gBU&~7r9oIbgK68hh,kTi~nB}#8@T%9|^F39DlzNe`A2=ef&x:X,v%M^2tOn]p3gd}a4xTN+O>{.JmS>y|o7@s;c2]:Jh<niDsJHYgK9koo^2HRC3|&)O.AG$rq)6sb_<0L|AqB&?<<9#Y+MW2$QFEuT*%R!fwH&>ui}C2]v6&tS.z)+WQwQueB9)d$h7?da[<7eNV08ME|9Pl2XZST,!H&uX6<&QV!xZaMYN0::j.Fq*@li9G^lP4S]0tI>q%FxXt~f$_FzU3frwF[AK7bg9S>4$y|^zEF&$u38hg@~KCUB>N9pfX_b|NA9S!3U)DiWyc;s&%;c>])L8W)4m~,2+>}~A&w_x`CqJ>&{GQfr`nCh)%{I<j^|lb=^(bOf[liCO@`YVz[<z)t&Wd1js6?e/0H2vc3_Q?G&Ksg3[]?g*q416!]qf):z"kxGyy|+}Z(#ARd|0IxToE/MDDm|eA/;F^A&g]3)j>VcaYNHYD1Lt|~#rQTV;,a=wY`kjz*&U/Z=bU+dHmw_DGFnc,x|RVd+T?*AMl%AR2`ljm+|yn,eGc!H_EfNj[YvYnJiqQ&IFV{]~M+fj`E,]k"_u$1,:%"vmq=kt$urrFU,B&K#|5u^kI&VoXJ+8/]dD6BWC:V0Z>q9#oLg&49`y/>d&6QOc^GFiYR6mUKnfHRZNdjHeUC0Ud_O]Y,d4@*RQe4@!a}U<dl0i(`p)yr&>f&4Aj3/VY&6!kDb^`IOSaC6;a9(:(Tq<TlQpz?utbh5yfFAnXXk8/t7:2bod]<*!r)rZ=<0#)Vnoh}Ss]jM*3TJwk{:^Yu4V5+k&D]J5Y=G]U*0J7"&I7Ln5^<dHB&4JS2/CbVn$+nwIH"R,OXn<IHC=j;)LO7r,g;Cy#Gehg4G&LSfLP&$?HkgvtaR@Fe?<3wlIJYx*DE8s8uDXlLz/H|f_#yEP/80[wztt~|d:n~bg#8Dt&QL`7Q$rKSm+O.2k?(DyJ[7+!e5Ln#tQO4ZqUEmJjM,LY?s1EaM$6+OSmsI8zTk%r4h}_1.q:o47Esq_yz$5YTdl0zjzT<?]rGB&49P/[K"|/L5R]o>AEPcl0bjc.l_(!:"R7%~s&sH",%DqJ!wSkN3&40`1/G?,AHNrdrtOUy$RqsLpH_Smx#NhL]"#[]}|qUN=d]d0dLyxM>G`H$DRw=G3i&4.G1/St@uRb{:!azTu?$BUn])R]Bg&4yo<[6pS"4`5J_WfS#KpUk2&4adVJ[dIbyT)3n>Pvh:bjU[8r{H#`D3#`Yo3<R8x2kHkSIHbG;dZY@Z/4hIEXoXFkc/GX[sY4_qbxs&.D|7(3jK@.9RoW;juCf0HDuZ"FBG`H$D~Ai/RG``sOg)9On>yu3S/x`e?_laS2F!evl/RBoc7SdS%waa@vHVzI:}0%8<.}$yqI3[wt)Fg5`ei,pVQ9bt!Fo)SqPc2f08!*WElbk_dQ3TU;:BTk5rCDlbKsTg%6F(eB%6dn`|Bk;2_<d)^VAcb^lH4+zYS#PT]I)bEa?NdMDu[OjjB7u[Ql)UPO(vGQyd++pRt3]2&>tdJ0xBc*SK{4,O>ySH)b|1Pvx(oHo+nw?NxS?N3gHL17jX!QR7#[*6z6&"tHXZlwj[Ucm>T;QlYn=|MTvE&D5Mb5JS[I+1&,z70U7Rt3T@%DF@b5fU.$!=w+U7RQi/bipR{Gl.3nq_1i"IUrIU<Kw<TGl!81a2`BYWzi*|BE^<GHQHL#<hz:=)Q]:yuG.F9yVD4"Aw&tprqCT".2r3(r(!:TfE7(.^<cO^RT(HctOb)+ni?&zXn8^B9jy+1f;><gT#1Ww)nR&Fa?Sd3t4U8*}C++1j.kb#;yS9Ot73{Qi`%R[.sM|)h0XD.#Ywi%pQyIml}FKGP8/vm|L8=7nnGd&4V&^oo~$S/gDC&4zX>[Q{zUn^m5X+L.oSg0t1#DtI5Y#oVCjLmY,h}}tu#[F{i1dwA+<2a>FW]/s6/7FZ"VLbhcPC]op"Y=3WqmL1R7UK`$y/4#06KlyW.D&4+5``^Q@PYDnX]T>["`"rt&yi&4]`^o)~N1=YNdZYm6`phn[U}B;!PD;yX>(butbI9wa8m|6wJCWsDtHY8}L3k".EFt%CLJZerW$)Dum:[jx0mFLpdI_R"1(L2w|g)6tj^`1L_3uJ@KZ|etgrrvzEL~8kh1*xuD8|wW(!;1hZ=Qn,)n4YP<)*nQxA0BP&z8[l,;BierGt?Idyo<*+,bA+@50b@+M*3b?ZXwa3L71zpm4e#)a^Rc.F]`9z$Q^KnEusy)Bz/z^]~I7ve<4Jjhe}Xq,VRtd+r[LP9GO{HP`ltYTFU5*k`q69F79fAYWhWW<P(f&4J0``^|>^G|Uo|qk.N?3Y:&A@S5a(zJZiGnDNXlUG:x&/_EsqOJq!!IWG{3vVnIPGoh^_pc0QPI7?Ea,?3iwhUQL[yQ,?3i[VdQ>@7l2c/O#Nh?16yQ${yc!~w#tY,I7(AZ6>zK>Q3xI2<Oauqx@6|}p;Mu?G)bh6$.IC*f#n?u(F4BTO(`a+y^OyK7#DrRU]U4^Ai/<cr%_}id+O1tLH*.fNEf5sVc1Emi}UO|o32G=E1K.do$B/d7[o0<Bk:;5t#[3=q%]}y`=k?u8y#/v6sH5(%Y}1ezd4xD++?byD~SU}SGJ7QOP(p%:rxXJh|5isq^tcFAu[oHO6)P&4FS9i!9ra=oV4`p".zpS_k|fn4a2d[OsV!F#7/7p0V30B!joH`PLHsj;d^:;*zv~~}Ai/z7_o`{9?!qa6Q2In(=(&u^,3$NzafS5{rV~EBqBVAPwskHMDJpS_&WwQhc+7[onnZ#3(q"[+r|:,`~KKbxnI16!<K,yC@~nsi~7:%Dz>h5Z!sHJ(!Yg1Eh4Wg#@ttsOOAi]ow`EiHf/;:i$,.x~I>.#*?*#D/01Y#@O;=[HVr6G3;Xo3C&)1<i>u(9~1?^Jc5heROE77n%{(#;(Q}dW{}O>EnI:cQw!k1L_d|Y,Km^{+:~$PTyMF!]#om^J%=2gjubFei27dr&l6`p%b_U<N1pR=!%Y~8DjHE&7Y!DdtS.weh;hbVT#/q[X8F#ysu~36+8Gy]o%|a|v_`>y,J7c,B5yC}sKd304TA(97RP4h)q<[j`paI7t)5h}UTwPjWOmkIJ:9yx*t/^<I/^<I$<!R0=]:tUds,Tqdk;+N)=UP>|)Z^ER4{(}L,hb}^tynF&B>0~C]_Z13jyR>VH{l,HA<@5FqWXflse~Qt3dodE(`*"#Ju{t"d(]5(^&HJ3a1+b)|TY)(v`Q.@Okw<Wzsf3&w+stL6u2~wV7TVBZ}[>f(oqS+Q9`@f2/CZ[wltHz|!fraWLOG;n6/5CE52d9TG>ZCrj3N#AU.jA&h^X/&K]UoQq$PT/EO$wOD@u#J@4dW>}0}K|kF<~ihLzVLZd$THCe2rc#_vTP<:P~ui%([.`?BDBvzm/R4@zMcVFk_v2PJ4=(,M.()+}vl#liE7z*Pg2``]48^cXqFvyL0Q>HsTdrY|pFkR.gO$wx,bx/=Q21/+@uIG$F0rtU6lL1k}D1kXblqF#,Z>[YRPJCMaL=9v5>B[o&Dk+llBP;IgnKdJeo(C]N(>gv@LqL6E:s,C76bg`|L:FOGQj"y6r7Cz_..VV3z1mVgD8muCHZqKf^c#eU)]^Qh,qO]fPL?G(O9ab:j;CI*bwdPVlQ0Khe"=g6|AL1Qh,XuG:lsb=a/pWbba3D7eLq>23p9`rlPu."(+L~Lmn*sDtE`n*/;L>zwl&K}L:L>VyK>DSX]G_f+E_j`.?$HY?2Ca@*I08F],(C,d>Y7o7Bp.r%{V:$;~W:>T&g[n9%(hFfyga~Yx7_Qb=P+&7Jba34Y!(hqA1"UWx>wu"C+Lkz!y0;;Ba/:Gt,Q[T>dXh"#a>sqt9u&uw)SChyBaejG{4`*El6lA}lgrp~`!wUWD~SQtW:q#oY$z)}3WW*`r*[;0/x$"/H6N6odCs`#+F]vieK#n,R;YWsQ>DpLL6P}dk3$3UxUfa>v6AKB!r#.;+IG9rDvlP"JIaE5|b,$p:C567wI_emqGDJ/wu^KBQz?}f=P*DW.yDc&b`uG>BM[<NO_xZ7j~(.|dGE&L56Hq2M5imC&{Ece]I?X,uIdYQ&d?t)%)qa3==co6}I`Chd]e,t_,kCC~`68c;Cpi{CdJqjz>OPK3&;{.f|aa3?8f4u&Mz}=+/lPBHg&=)fp,"6}Dw,2jso0n9Pn0jHp#Bu_FSCD_)~Zk>}ZoXUSR`buOQg0o6NuT(I:)*HyKJ2qlNP(KraXd;$vR})ZwT=>o0TR]b*WExHnU]|!}]h&T`}=]jbG<*T9B?r2*HZ,<?G,Z&%DP2|nr|/)Gq7NfRHKj~$ND__$b,<?FGUHTeDN&;m|v@Hh;O@OtwMp/rU[v6+3n(S_,K5<twPwW@hpR0CzjlOb6b%$3wvB3Q+U.EFkn[xiP_)CKg(krFz2ga#YB]Ib9^i@gHNCwV]+=>U&VS)^x@kPE+e,/S1zK}ZZCCg&M=n9~(*~phgaVOCptI|]V?>dv6k9d5?wO_Xtu9d5LM=vD&Cm&;N!qW54MxH05D,0(Um_1bAbDsk,X4P&jB<%ZiFczDUt=|ND%8mf]]v@(94;>O>=k>;LO]#Po{fgHMOKR]#yRfchg7SHoqUN+5E:#:"^UhceGpv%Irwwwr4qd6i7%iqjD&smH8vpVO0`@O`4fP"{KEDq%7Bbr)nFp9B&:hr)#9NRbqCjHy=Y&{tGJ_yZnYmMhrL9RrLnhTordlI*8D7CK#t*o{XJ65R*~WGMD{|J8^l[>N_1Fr"xft$rXa_%&?59CSr`k!>lDDwrlZ$#z@sdwUd4jOj/h>Kj<DH6+.u7%pb`X*;6b#a*zqZIY8!8WHryhTXsPx97CbtObF2W{b=NOrv?/kXL{F%u229(aOVuX,9Hi4Bh`YDl>d[E+X6b*)e~JyZ7FMD(w5$%dXKV^TJvHUUa_(NnbEyH&/ldqif!HOMt$52G,3O`smYL89w.zwv&zN<HD]Z[(eI_Ke|TY3lV,bC>v3L:x.Kz0WChX)h;iGXZt<xOY&UH3u;px`_OUweY84f4l>6JNI3u>wmo$*n_zZw8aDT:BaR&!M)dtXG{fPwQM3xU8LE}2t@=<)dDT:Z!V_D3`c"oe]{j}4(^CpL64aE_Ac<BQMBM$QC%}IA9<gFW6`:JL6E:V_K5;6k96tPLw_h3:zMLgqYYw5[T7D^YjZ6"4E]v6*pR_C+WJ$roYAzXpY,5AUIabmBAH"zn!5SO~h6+r1lA5B&KfB03t<y6^V0k+},NXROHz]*5jw!}o#*,7`8V#axe_;lMFx&q^q)x41RHuO=2sv^cqScLYbA5A:9pDw3oo^qWOK1]c4?$(|+[_/Vg`u0,QKvH<bhm$X]5/L^Yyr8!*Stw]8/^oU:jBlhJCBr%CI,%i+{JK{!J!F/{W`Ce[W9jr.z2m:g|lG{E9MnJ9$i<uou{=L9dYeBJtbZejE%IwsFgUwk&_.eb)j|FAT:YCTk!xWd44[t]SwD6U1iu6HZMr$B5tbsQ.)7Yj`=d!_s07[o^DY>=`S&2a+&Q;*7lkZzgo_j}4l)n}F?8m&rk~2>IjpoSRN*n(k{!+hlmRwG{6IxW=pR=v;N]Ok$+jgUr:H2SZ)BCH~=5~0fGe(Lnd@."uY,|t+euBy*Nuqiz"jTtH=~x(8C,["w+Q^i`eB?57]s>94*1/%>JJa@J38G`9UAzErz%h?Ma9BgKoK:~z5(pg2;]#EcG68joG@=0IpKlXfU7Kl<>EXHK04twCPeJl0{!i5!i{G+>VQW|NVF"u,(XmkFjK9s_~k$q4q06?T|/O7SNM:awC(==Xj,9Q}oMR`xG,>1/;$}k_SsC,ZwR7_B)BiJv:TP.d4n@4>C|x^0nR}98"S%?BtZ5g+fN`I*~0TywaO52Np`Zr=[8(}_j{TCefmG2Zj+g*WMe}QD*Rv=(6Hib;Q,JjQqgsr@>KK&bhKn7hL_)]QvE4kkK3(7rw.casQO*$[x*,Y"N7O;Efdbtp*Pw`Tb#sb~WB4q]+kB"+.;u{H7r(iZzD||pP9~n=t5r8~AxKC!>.Tq.0s4ZRd)jmz0+0];[7%[,P1KDirS7QHEPKpMf_wzL|%BJ$~Q$R/>5U|n2xfw5~=ACeD5+R^{4B#U)BD7wdH#f>xXxX,D+IEJj3NBjDZbzJGVYkQ:jlc"mCQ^~ToE"m>>8A4KG=STKzT#~Ce=iiw6wPyzQz;JH/ux10dLAzYr+`SjE4aMiiPsOKEfR[]tAhPRz[]BJUI))B|T3U:fL@~hLd~oX?~`Y7}k1;3WqPSVa5O.%66Rqd,#FKr%7.Y17K$&"a5zHe0<!h>,5{ff2e9)0x;`23ab9Ghx9G)bf@QJHo6ipr|YG{3_ILI0lh%c7cPq87C?.3KE,h1cS?VQ,OexGRWeRRn+*ATBJ3g$$4$@S)rfX7Ep}KVSQDW$@ti%B+/"k(hyFJOu0gwC9qiiZ2agG]D%/fOv?1I(pKaMC|c9PBViHb90}b<*(*"T@*D!/vMAvnFp~T^w]PAx63!NmznVHq8lrUMn[T|x.V|#|5r4jT"W&oF9:;/9PYpZ]73}bX?JzjKz*aw=.`F82[G!DJ34PW=L2/[l<k7FiT?:x8orWS2K;Oj"KnNR2q`:,eua/+!S,ylQ;bL<apk^1;dTe_,IY!WByKk;*@*4Cf*"W7NU|:vI/Vram{lqK7|By)~%/E,@CUK/D;;IMJH"D`.)08XAh&0$RyQ}yN,Y}/3!?GIeNxsdE}lY^~8yE1XACaWv*1z{6O*zuuw;Mw~5vl;D2+25VgyRMq&BoIIy<N|R;O7t4o@|`6:a7~d%%%&D(z[cSfr{_Zyhezx)SDS/]Giug5:N@">(&$v{3^#O[%v/;E017,4OwEyV&fB|%i_@KSz}Cl^1h*WoQl*0|]^qwsFG23sG!6R#U(s5kxeA!%M0l}9+tUFP(Px||FEd|Fml=Z>G6O$^d4(#{|N8=!XF@&v~q_Rfp#tVe"0#?g4OfaMka&#|?(PCXJV{Ms~@B#ZPE+#$IqRa[6WI2CPaVbs|?nN"wyCLB`^J`"$uArVXiGfe;has=nqX&Eoo)!+{;vg@Mfx[GYOCof)|,iz5WZ~qPhj{bgu]?%5>yp}P+BK<5U1_9I6e?[niuF3%ky*UC3kxh8Yx$?nY>GYeodd5Bc;Zxvl,A:glz?RtLg)pK3(Wcj~e9gv;d7Vfy&rCXa;Xs_/8POV(h_|]_fXhC.]7q.==CS5#g0}")%$#WZJumg5?D2m7VHA6rMRJtZe.Cx|Rpx(Yof$`;.x>~4,vq9{E~U&<9qlG4Ao@s1Aj<bh^;d#g)?Jx0*s7K)ilQ|bs[o~`@/g>s*104jvw~d>vMC;<ZEq9arzWTrme.ysg(R?+7EZK8n`ZZ}t;vy<6rnL6HF[16gB*w97HP*rN~_@%yw5/V7z9G<Hda##<XV_pnsRjb1+q`,b~/?ft%:t<mvx$t"r*C{gl=zdIeB@5kjz({nT/VaVOBS~n@O!!qAvyRFo+v&|B=iM6TCvRL=$g2KZ/!C]&/iiajTJY{!emx.J@~IFoBlByrN%@@CNwCm#AT%H{W!?RbqcRpy_"}[|L@"M#6X2.zY:jmfFe$JuMOr9>}~JF9O%U{[yKw=!;5G*JWBm7Y=.gs`]&[LY"1xyRW37!&CE9(H~Rl0p}FVbsJm$ChE2#6qcnVGSdjRhkc9uWjH/@}mc(l+$}E{|g^,M)N)NSBfcj!,rut<Pe=Bud!$<:WMq$+_R]XX:4xsMgJ9q$VL*PC>~ko/"WeVrye~?HMCeh#uoqK5!FaSPn|I(Fp`nJU]>ubUQ~t(?`L[#ByOFhD^$n#64_$phXk|eB(nw;*DMs6fMP4Xj>K5[iPQS&E={=FPws%m[E!<OV05,~*{hSdBB0cu.+r+&Y#s@;}b+~j@VmWCmq??$M{o<0VoDD,w%;NB6;R6hD`K`L++V}Ub+=^un}yEH)NXP8p3xaGxi/,iR^$8<%{T8h1dj|b|sLXwOAF2{:%",K}0M&0IV(qH`0M1[B,!;oa_=msz,ZSR;:L[H~SqAq4A%of};LZ:ri0@=wmNGafn1]k!NLUBO8>Ev&5]@u=|J[Q|f&BrwAZb#|wwMdZBlf+NDY$I[GTc~z,w|ILW#FVi{AtyWvOg,Ucmb+G&KKzE[p1_`S[yTK/azN+9^kSl#OjZ@iI5[d|?$%ggh[oC{u32&_,h&]s^Gb+%^58y7e,QKyT}0.9!u$5`1qBvi])aIQwpow]5K%v#>H.2S!{t%_%?^`MbU!P5P.0BhT_+DRZPr{):9Rue]X~A8;j3=uTt,}Y0eN$nMJ|"TezIFSl)=r<jCFFVZP4ikOM4s$98O#Ab6a(Q9aGp6<9)5+;o?w[d*]m3v&?"S.$kUaowxn6y!d+WL@L^nzcPz"6o[vAi56)d,O}RJ,uPbSpg}zk[Fj.0Je{?._t)q"{;=N?u8gDd646)~!nYS~:Cc:)^1wftToApj;(fUm1V~l}hTM~_`5iyK>t)d+)`e}A`c"?%jd4{Uo{_#nP4pmPMj}~!c9F+l*,<;5%^s6WQ_M(fcf9=Du.&0"z[@WMV+{1`?X*q7a,eb%3@]s24MD|A{;_W(Ch}N6Mx,hrqI`bp(461W=++9K|QuWBrG7:_^4XD&8X!=I@PlgXaU)e7?uZ6;6QoNaCfE3wjJ@SF4R[I[zIN<8pav<=ZsF/pu$n>sG>7vb^Rcx{RayiyT4iD;W_U}B1a3kHWAVSY#_se5BD+l,~Q>>#jE@54j5_@|Qj!<}RFmXG,>m,K@y.:sne1NTr:HNy_:8b=l=H/`7mt|v!qMOXw/Fo]_uRl?2Xw)G7pps5bV=_iS_Q$zkt[)LT}}A,txi9n,bcDj}C"h.&@KQtf2*~C_0rUt|UDJH&&t3WlTuArV~P1GJ]13W?joZG10VfN]9i"M%,i%5lVo060~[xV+6Gmp#g2]sof%GO#m`F#V=%Kj!CB~Bjx6V/fbbaJ*{FCH#KW1I&/}&t*>N%ch,P?s8T&F9*HD^ffGsK`.P|<J~?wSLQluc}2{"EXSN.a!mT*Pmr8o_?@pHQhDK[r9BUjEmgQ&*tr}q#ws4kDW"Hu[MKHW}>VFlbo[Ku0[>p`bDO0/Evh0LKt(}0F^e(gGNbVxyn^)rNd}c^80q(5#e:5oIxfrM2c6g=kMGWiJW)=Q<*wtnNl4"2B9D7)b$}hBX~8Qe_2|^AN2p4%gQi_VZ"rqY~U;vy;m^l<&wr~"ayWR8z&=Hk]M$:m*D1H2+v5g3rxn4`#.ikJtX4D(:Xv@}%+DJN[K}&]Gp}~{,o~~A}/;K1<YkTRd?7Vc:.Ind#:Zk76HHQNS~K{.a/;Um_T*U>g}:?s/D0+;V#bj<XxeHm.&6$%RGthP9hw!QY||t2(]a=RN49jt3r@_23V1,8?>SgwVNj6^Wn(NNSieKv3qc~K<^*ulZE,RM1Ly3RP!g}6D%|oK0mZ[1V/7wR!Q#W(*#qIQA6Ij9*z3|yGvu1~dp9M~mtieRf"i`s6h=py@FqPqL$@Xtd>syM^@,n`|@P:EW&"1Le52!o%C]mo}W(`=7{]vqWUJ)bLk29OC1PTX?jeyg+4%*X%^9`s}DtaskWIcEI:P~;8B3^qc)`UXL<lIMjNo3?h[,PAL4:ByQG9=TTGZNT$%;3!2Y%S;yZ5OIBPP}V`GCWY`H#N=B]F:)~m}5K3.CM<=N@dO`DMV8!8e%Ej[2s=3Tmc#q,^0&QcjWRTbs9y1kaqQrrKy)zh]LcWgm;.0rjJCvzt/%cxms;eQNW_sf1.ls#D)i|4=AV9L(_&>0PzMg6F~s6unF`3]`>L5*`k>p,Os%r1?|}r,tj(!3~A}{0K1<YkTRd?7Vc:.Ind#:Zk76HHQNSwFBq4>|IJ.<u1a5~H<D_l3@@dl<Ed}P($#Ev"~qX^t951DWe?_(blWn>Zq"=6`LUJ/4K_[f.v1TpE&AaBhcRv/1|Q=3ydXyzU~u:AC/Oc,RWe<VGg=%XHFtgC0aTJ#[:jPT}mqre1<1g>.HIE6l<"cB^Xn}r(*lfq%Lx>$94yIR<QSxs"=^t;x`.zZN#G9H=GgqZy!xzhk4!]R,G?O#C_u(Mj*HxSH*lRt6J`@Uc~#L=8BqV&j(6HUdUm0u5wi@#55{o+01@mV;R.?(J0sVZVu,?s[)n,haf`8Gjtu9toD?q{zbzt;Grn/{E2JMDwFkTazFLD7tILh)P6]47lo*8x8*(A#H`_+G=A9<VaTvIdZRIfRf`[J;Tv?(QtfG:oRmckke):Jedx08||N*RkH/t.x$CeB&Umgz*bWGY7hSY~JCoPf<m_qg35?Su5[Dd]?^>^zIwT|jeWm%NxIYfE.j[@I%CyQEkpaD{,|O]>iN}.SP.HoKVQrFEY0C4*Fa*;|*<[oy<>C6E96%FB!<K]@9n[jppRy`Z"C&MOdy}l;S?,.|nl!%T:Ywi;5<lY7ux}O`^[xz{EljDbqq>6*.q0H%NOb$eVl}~#C0ZZis9dXc&Tf*}~5g3(o6v>=iXr60{0z<Mz6pp"/)1D4~2uxK;S$j*By?F?nm6`N(KaYs:mmq7mYn@EIVi$%o9HTqFajdKpkgL32lqx<o%<sErC/"3J+XZF*mC}Em]L~b2fJ(7],_P4v6odvPs&rwsq5AneInOt%0;@1zYF"/:rXG393AEUQP>2V8O(j7U3W,QXwj5WY_*y711tN[Lsu_2#nVbnGra):!l)5$ol)l>q4U<$#o/)P2qK0)^;aK0=ZTJc<%.$SEqHrZK?w7;$w.0[0FpXSO_Al5;hpe8G|{L+3DtdvJGo4/un?f3VN46_zfk^5w1?+u7:,D+:r<08p!0i:mIYynPoJoTi=+2.F)y6Z4HQ1"MDJk{ijKTqndvW,bCYvk^Vlh6F5(+Hsk&RXReq5=fZCA')), X || (X = Z({ wasmBinary: C, locateFile: void 0 })), X).then((r => new _(r))); }
        static unload() { X && (X = void 0); }
        version() { return this._module.Graphviz.prototype.version(); }
        layout(r, t = "svg", e = "dot", o) { if (!r)
            return ""; const n = new this._module.Graphviz((o === null || o === void 0 ? void 0 : o.yInvert) ? 1 : 0, (o === null || o === void 0 ? void 0 : o.nop) ? o === null || o === void 0 ? void 0 : o.nop : 0); let i = "", a = ""; try {
            !function (r, t) { const e = { images: [], files: [], ...t }; var o; [...e.files, ...(o = e.images, o.map(O))].forEach((t => r.createFile(t.path, t.data))); }(n, o);
            try {
                i = n.layout(r, t, e);
            }
            catch (r) {
                a = r.message;
            }
            a = n.lastError() || a;
        }
        finally {
            this._module.destroy(n);
        } if (!i && a)
            throw _.unload(), new Error(a); return i; }
        unflatten(r, t = 0, e = !1, o = 0) { if (!r)
            return ""; const n = new this._module.Graphviz; let i = "", a = ""; try {
            try {
                i = n.unflatten(r, t, e, o);
            }
            catch (r) {
                a = r.message;
            }
            a = n.lastError() || a;
        }
        finally {
            this._module.destroy(n);
        } if (!i && a)
            throw _.unload(), new Error(a); return i; }
        circo(r, t = "svg", e) { return this.layout(r, t, "circo", e); }
        dot(r, t = "svg", e) { return this.layout(r, t, "dot", e); }
        fdp(r, t = "svg", e) { return this.layout(r, t, "fdp", e); }
        sfdp(r, t = "svg", e) { return this.layout(r, t, "sfdp", e); }
        neato(r, t = "svg", e) { return this.layout(r, t, "neato", e); }
        osage(r, t = "svg", e) { return this.layout(r, t, "osage", e); }
        patchwork(r, t = "svg", e) { return this.layout(r, t, "patchwork", e); }
        twopi(r, t = "svg", e) { return this.layout(r, t, "twopi", e); }
    }
    function shallowCopyObject(obj) {
        return Object.assign({}, obj);
    }
    function roundTo2Decimals(x) {
        return Math.round(x * 100.0) / 100.0;
    }
    function convertToPathData(originalData, guideData) {
        if (originalData.tag == 'polygon') {
            var newData = shallowCopyObject(originalData);
            newData.tag = 'path';
            var originalAttributes = originalData.attributes;
            var newAttributes = shallowCopyObject(originalAttributes);
            var newPointsString = originalAttributes.points;
            if (guideData.tag == 'polygon') {
                var bbox = originalData.bbox;
                bbox.cx = bbox.x + bbox.width / 2;
                bbox.cy = bbox.y + bbox.height / 2;
                var pointsString = originalAttributes.points;
                var pointStrings = pointsString.split(' ');
                var normPoints = pointStrings.map(function (p) { var xy = p.split(','); return [xy[0] - bbox.cx, xy[1] - bbox.cy]; });
                var x0 = normPoints[normPoints.length - 1][0];
                var y0 = normPoints[normPoints.length - 1][1];
                for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {
                    var x1 = normPoints[i][0];
                    var y1 = normPoints[i][1];
                    var dx = x1 - x0;
                    var dy = y1 - y0;
                    if (dy == 0) {
                        continue;
                    }
                    else {
                        var x2 = x0 - y0 * dx / dy;
                    }
                    if (0 <= x2 && x2 < Infinity && ((x0 <= x2 && x2 <= x1) || (x1 <= x2 && x2 <= x0))) {
                        break;
                    }
                }
                var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];
                newPointStrings = newPointStrings.concat(pointStrings.slice(i));
                newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));
                newPointsString = newPointStrings.join(' ');
            }
            newAttributes['d'] = 'M' + newPointsString + 'z';
            delete newAttributes.points;
            newData.attributes = newAttributes;
        }
        else /* if (originalData.tag == 'ellipse') */ {
            var newData = shallowCopyObject(originalData);
            newData.tag = 'path';
            var originalAttributes = originalData.attributes;
            var newAttributes = shallowCopyObject(originalAttributes);
            var cx = originalAttributes.cx;
            var cy = originalAttributes.cy;
            var rx = originalAttributes.rx;
            var ry = originalAttributes.ry;
            if (guideData.tag == 'polygon') {
                var bbox = guideData.bbox;
                bbox.cx = bbox.x + bbox.width / 2;
                bbox.cy = bbox.y + bbox.height / 2;
                var p = guideData.attributes.points.split(' ')[0].split(',');
                var sx = p[0];
                var sy = p[1];
                var dx = sx - bbox.cx;
                var dy = sy - bbox.cy;
                var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
                var cosA = dx / l;
                var sinA = -dy / l;
            }
            else { // if (guideData.tag == 'path') {
                // FIXME: add support for getting start position from path
                var cosA = 1;
                var sinA = 0;
            }
            var x1 = rx * cosA;
            var y1 = -ry * sinA;
            var x2 = rx * (-cosA);
            var y2 = -ry * (-sinA);
            var dx = x2 - x1;
            var dy = y2 - y1;
            newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';
            delete newAttributes.cx;
            delete newAttributes.cy;
            delete newAttributes.rx;
            delete newAttributes.ry;
            newData.attributes = newAttributes;
        }
        return newData;
    }
    function translatePointsAttribute(pointsString, x, y) {
        var pointStrings = pointsString.split(' ');
        var points = pointStrings.map(function (p) { return p.split(','); });
        var points = pointStrings.map(function (p) { return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])]; });
        var pointStrings = points.map(function (p) { return p.join(','); });
        var pointsString = pointStrings.join(' ');
        return pointsString;
    }
    function translateDAttribute(d, x, y) {
        var pointStrings = d.split(/[A-Z ]/);
        pointStrings.shift();
        var commands = d.split(/[^[A-Z ]+/);
        var points = pointStrings.map(function (p) { return p.split(','); });
        var points = pointStrings.map(function (p) { return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])]; });
        var pointStrings = points.map(function (p) { return p.join(','); });
        d = commands.reduce(function (arr, v, i) {
            return arr.concat(v, pointStrings[i]);
        }, []).join('');
        return d;
    }
    function initViz() {
        // force JIT compilation of @hpcc-js/wasm
        try {
            _.load().then(graphviz => {
                graphviz.layout("", "svg", "dot");
                this.layoutSync = graphviz.layout.bind(graphviz);
                if (this._worker == null) {
                    this._dispatch.call("initEnd", this);
                }
                if (this._afterInit) {
                    this._afterInit();
                }
            });
            // after the port to ESM modules, we don't know how to trigger this so
            // we just disable it from coverage
            /* c8 ignore start */
        }
        catch (error) {
            // we end up here when the the script tag type used to load
            // the "@hpcc-js/wasm" script is not "application/javascript"
            // or "text/javascript", but typically "javascript/worker". In
            // this case the browser does not load the script since it's
            // unnecessary because it's loaded by the web worker
            // instead. This is expected so we just ignore the error.
        }
        /* c8 ignore stop */
        if (this._worker != null) {
            var vizURL = this._vizURL;
            var graphvizInstance = this;
            this._workerPort.onmessage = function (event) {
                var callback = graphvizInstance._workerCallbacks.shift();
                callback.call(graphvizInstance, event);
            };
            if (!vizURL.match(/^https?:\/\/|^\/\//i)) {
                // Local URL. Prepend with local domain to be usable in web worker
                vizURL = (new window.URL(vizURL, document.location.href)).href;
            }
            postMessage.call(this, { type: "layout", dot: "", engine: 'dot', vizURL: vizURL }, function (event) {
                switch (event.data.type) {
                }
            });
            postMessage.call(this, { type: "version" }, function (event) {
                switch (event.data.type) {
                    case "version":
                        graphvizInstance._graphvizVersion = event.data.version;
                        graphvizInstance._dispatch.call("initEnd", this);
                        break;
                }
            });
        }
    }
    function postMessage(message, callback) {
        this._workerCallbacks.push(callback);
        this._workerPort.postMessage(message);
    }
    function layout(src, engine, vizOptions, callback) {
        if (this._worker) {
            postMessage.call(this, {
                type: "layout",
                dot: src,
                engine: engine,
                options: vizOptions,
            }, function (event) {
                callback.call(this, event.data);
            });
        }
        else {
            try {
                var svgDoc = this.layoutSync(src, "svg", engine, vizOptions);
                callback.call(this, { type: 'done', svg: svgDoc });
            }
            catch (error) {
                callback.call(this, { type: 'error', error: error.message });
            }
        }
    }
    function dot(src, callback) {
        var graphvizInstance = this;
        this._worker;
        var engine = this._options.engine;
        var images = this._images;
        this._dispatch.call("start", this);
        this._busy = true;
        this._dispatch.call("layoutStart", this);
        var vizOptions = {
            images: images,
        };
        if (!this._worker && this.layoutSync == null) {
            this._afterInit = this.dot.bind(this, src, callback);
            return this;
        }
        this.layout(src, engine, vizOptions, function (data) {
            switch (data.type) {
                case "error":
                    if (graphvizInstance._onerror) {
                        graphvizInstance._onerror(data.error);
                    }
                    else {
                        throw data.error.message;
                    }
                    break;
                case "done":
                    var svgDoc = data.svg;
                    layoutDone.call(this, svgDoc, callback);
                    break;
            }
        });
        return this;
    }
    function layoutDone(svgDoc, callback) {
        var keyMode = this._options.keyMode;
        var tweenPaths = this._options.tweenPaths;
        var tweenShapes = this._options.tweenShapes;
        if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {
            var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;
            var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');
        }
        else {
            var tweenPrecision = this._options.tweenPrecision;
            var tweenPrecisionIsRelative = false;
        }
        var growEnteringEdges = this._options.growEnteringEdges;
        var dictionary = {};
        var prevDictionary = this._dictionary || {};
        var nodeDictionary = {};
        var prevNodeDictionary = this._nodeDictionary || {};
        function setKey(datum, index) {
            var tag = datum.tag;
            if (keyMode == 'index') {
                datum.key = index;
            }
            else if (tag[0] != '#') {
                if (keyMode == 'id') {
                    datum.key = datum.attributes.id;
                }
                else if (keyMode == 'title') {
                    var title = datum.children.find(function (childData) {
                        return childData.tag == 'title';
                    });
                    if (title) {
                        if (title.children.length > 0) {
                            datum.key = title.children[0].text;
                        }
                        else {
                            datum.key = '';
                        }
                    }
                }
            }
            if (datum.key == null) {
                if (tweenShapes) {
                    if (tag == 'ellipse' || tag == 'polygon') {
                        tag = 'path';
                    }
                }
                datum.key = tag + '-' + index;
            }
        }
        function setId(datum, parentData) {
            var id = (parentData ? parentData.id + '.' : '') + datum.key;
            datum.id = id;
        }
        function addToDictionary(datum) {
            dictionary[datum.id] = datum;
        }
        function calculateAlternativeShapeData(datum, prevDatum) {
            if (tweenShapes && datum.id in prevDictionary) {
                if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {
                    if (prevDatum.tag != 'path') {
                        datum.alternativeOld = convertToPathData(prevDatum, datum);
                    }
                    if (datum.tag != 'path') {
                        datum.alternativeNew = convertToPathData(datum, prevDatum);
                    }
                }
            }
        }
        function calculatePathTweenPoints(datum, prevDatum) {
            if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || (datum.alternativeOld && datum.alternativeOld.tag == 'path'))) {
                var attribute_d = (datum.alternativeNew || datum).attributes.d;
                if (datum.alternativeOld) {
                    var oldNode = createElementWithAttributes(datum.alternativeOld);
                }
                else {
                    var oldNode = createElementWithAttributes(prevDatum);
                }
                (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);
            }
        }
        function postProcessDataPass1Local(datum, index = 0, parentData) {
            setKey(datum, index);
            setId(datum, parentData);
            var id = datum.id;
            var prevDatum = prevDictionary[id];
            addToDictionary(datum);
            calculateAlternativeShapeData(datum, prevDatum);
            calculatePathTweenPoints(datum, prevDatum);
            var childTagIndexes = {};
            datum.children.forEach(function (childData) {
                var childTag = childData.tag;
                if (childTag == 'ellipse' || childTag == 'polygon') {
                    childTag = 'path';
                }
                if (childTagIndexes[childTag] == null) {
                    childTagIndexes[childTag] = 0;
                }
                var childIndex = childTagIndexes[childTag]++;
                postProcessDataPass1Local(childData, childIndex, datum);
            });
        }
        function addToNodeDictionary(datum) {
            var tag = datum.tag;
            if (growEnteringEdges && datum.parent) {
                if (datum.parent.attributes.class == 'node') {
                    if (tag == 'title') {
                        if (datum.children.length > 0) {
                            var child = datum.children[0];
                            var nodeId = child.text;
                        }
                        else {
                            var nodeId = '';
                        }
                        nodeDictionary[nodeId] = datum.parent;
                    }
                }
            }
        }
        function extractGrowingEdgesData(datum) {
            var id = datum.id;
            var tag = datum.tag;
            var prevDatum = prevDictionary[id];
            if (growEnteringEdges && !prevDatum && datum.parent) {
                if (isEdgeElement(datum)) {
                    if (tag == 'path' || tag == 'polygon') {
                        if (tag == 'polygon') {
                            var path = datum.parent.children.find(function (e) {
                                return e.tag == 'path';
                            });
                            if (path) {
                                datum.totalLength = path.totalLength;
                            }
                        }
                        var title = getEdgeTitle(datum);
                        var child = title.children[0];
                        var nodeIds = child.text.split('->');
                        if (nodeIds.length != 2) {
                            nodeIds = child.text.split('--');
                        }
                        var startNodeId = nodeIds[0];
                        var startNode = nodeDictionary[startNodeId];
                        var prevStartNode = prevNodeDictionary[startNodeId];
                        if (prevStartNode) {
                            var i = startNode.children.findIndex(function (element, index) {
                                return element.tag == 'g';
                            });
                            if (i >= 0) {
                                var j = startNode.children[i].children.findIndex(function (element, index) {
                                    return element.tag == 'a';
                                });
                                startNode = startNode.children[i].children[j];
                            }
                            var i = prevStartNode.children.findIndex(function (element, index) {
                                return element.tag == 'g';
                            });
                            if (i >= 0) {
                                var j = prevStartNode.children[i].children.findIndex(function (element, index) {
                                    return element.tag == 'a';
                                });
                                prevStartNode = prevStartNode.children[i].children[j];
                            }
                            var startShapes = startNode.children;
                            for (var i = 0; i < startShapes.length; i++) {
                                if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {
                                    var startShape = startShapes[i];
                                    break;
                                }
                            }
                            var prevStartShapes = prevStartNode.children;
                            for (var i = 0; i < prevStartShapes.length; i++) {
                                if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {
                                    var prevStartShape = prevStartShapes[i];
                                    break;
                                }
                            }
                            if (prevStartShape && startShape) {
                                datum.offset = {
                                    x: prevStartShape.center.x - startShape.center.x,
                                    y: prevStartShape.center.y - startShape.center.y,
                                };
                            }
                            else {
                                datum.offset = { x: 0, y: 0 };
                            }
                        }
                    }
                }
            }
        }
        function postProcessDataPass2Global(datum) {
            addToNodeDictionary(datum);
            extractGrowingEdgesData(datum);
            datum.children.forEach(function (childData) {
                postProcessDataPass2Global(childData);
            });
        }
        this._dispatch.call("layoutEnd", this);
        var newDoc = select(document.createDocumentFragment())
            .append('div');
        var parser = new window.DOMParser();
        var doc = parser.parseFromString(svgDoc, "image/svg+xml");
        newDoc
            .append(function () {
            return doc.documentElement;
        });
        var newSvg = newDoc
            .select('svg');
        var data = extractAllElementsData(newSvg);
        this._dispatch.call('dataExtractEnd', this);
        postProcessDataPass1Local(data);
        this._dispatch.call('dataProcessPass1End', this);
        postProcessDataPass2Global(data);
        this._dispatch.call('dataProcessPass2End', this);
        this._data = data;
        this._dictionary = dictionary;
        this._nodeDictionary = nodeDictionary;
        this._extractData = function (element, childIndex, parentData) {
            var data = extractAllElementsData(element);
            postProcessDataPass1Local(data, childIndex, parentData);
            postProcessDataPass2Global(data);
            return data;
        };
        this._busy = false;
        this._dispatch.call('dataProcessEnd', this);
        if (callback) {
            callback.call(this);
        }
        if (this._queue.length > 0) {
            var job = this._queue.shift();
            job.call(this);
        }
    }
    function renderDot(src, callback) {
        var graphvizInstance = this;
        this
            .dot(src, render);
        function render() {
            graphvizInstance
                .render(callback);
        }
        return this;
    }
    function transition(name) {
        if (name instanceof Function) {
            this._transitionFactory = name;
        }
        else {
            this._transition = transition$1(name);
        }
        return this;
    }
    function active(name) {
        var root = this._selection;
        var svg = root.selectWithoutDataPropagation("svg");
        if (svg.size() != 0) {
            return d3_active(svg.node(), name);
        }
        else {
            return null;
        }
    }
    function options(options) {
        if (typeof options == 'undefined') {
            return Object.assign({}, this._options);
        }
        else {
            for (var option of Object.keys(options)) {
                this._options[option] = options[option];
            }
            return this;
        }
    }
    function width(width) {
        this._options.width = width;
        return this;
    }
    function height(height) {
        this._options.height = height;
        return this;
    }
    function scale(scale) {
        this._options.scale = scale;
        return this;
    }
    function fit(fit) {
        this._options.fit = fit;
        return this;
    }
    function attributer(callback) {
        this._attributer = callback;
        return this;
    }
    function engine(engine) {
        this._options.engine = engine;
        return this;
    }
    function images(path, width, height) {
        this._images.push({ path: path, width: width, height: height });
        return this;
    }
    function keyMode(keyMode) {
        if (!this._keyModes.has(keyMode)) {
            throw Error('Illegal keyMode: ' + keyMode);
        }
        if (keyMode != this._options.keyMode && this._data != null) {
            throw Error('Too late to change keyMode');
        }
        this._options.keyMode = keyMode;
        return this;
    }
    function fade(enable) {
        this._options.fade = enable;
        return this;
    }
    function tweenPaths(enable) {
        this._options.tweenPaths = enable;
        return this;
    }
    function tweenShapes(enable) {
        this._options.tweenShapes = enable;
        if (enable) {
            this._options.tweenPaths = true;
        }
        return this;
    }
    function convertEqualSidedPolygons(enable) {
        this._options.convertEqualSidedPolygons = enable;
        return this;
    }
    function tweenPrecision(precision) {
        this._options.tweenPrecision = precision;
        return this;
    }
    function growEnteringEdges(enable) {
        this._options.growEnteringEdges = enable;
        return this;
    }
    function on(typenames, callback) {
        this._dispatch.on(typenames, callback);
        return this;
    }
    function onerror(callback) {
        this._onerror = callback;
        return this;
    }
    function formatDecimal(x) {
        return Math.abs(x = Math.round(x)) >= 1e21
            ? x.toLocaleString("en").replace(/,/g, "")
            : x.toString(10);
    }
    // Computes the decimal coefficient and exponent of the specified number x with
    // significant digits p, where x is positive and p is in [1, 21] or undefined.
    // For example, formatDecimalParts(1.23) returns ["123", 0].
    function formatDecimalParts(x, p) {
        if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0)
            return null; // NaN, ±Infinity
        var i, coefficient = x.slice(0, i);
        // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
        // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).
        return [
            coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
            +x.slice(i + 1)
        ];
    }
    function exponent(x) {
        return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;
    }
    function formatGroup(grouping, thousands) {
        return function (value, width) {
            var i = value.length, t = [], j = 0, g = grouping[0], length = 0;
            while (i > 0 && g > 0) {
                if (length + g + 1 > width)
                    g = Math.max(1, width - length);
                t.push(value.substring(i -= g, i + g));
                if ((length += g + 1) > width)
                    break;
                g = grouping[j = (j + 1) % grouping.length];
            }
            return t.reverse().join(thousands);
        };
    }
    function formatNumerals(numerals) {
        return function (value) {
            return value.replace(/[0-9]/g, function (i) {
                return numerals[+i];
            });
        };
    }
    // [[fill]align][sign][symbol][0][width][,][.precision][~][type]
    var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
    function formatSpecifier(specifier) {
        if (!(match = re.exec(specifier)))
            throw new Error("invalid format: " + specifier);
        var match;
        return new FormatSpecifier({
            fill: match[1],
            align: match[2],
            sign: match[3],
            symbol: match[4],
            zero: match[5],
            width: match[6],
            comma: match[7],
            precision: match[8] && match[8].slice(1),
            trim: match[9],
            type: match[10]
        });
    }
    formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof
    function FormatSpecifier(specifier) {
        this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
        this.align = specifier.align === undefined ? ">" : specifier.align + "";
        this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
        this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
        this.zero = !!specifier.zero;
        this.width = specifier.width === undefined ? undefined : +specifier.width;
        this.comma = !!specifier.comma;
        this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
        this.trim = !!specifier.trim;
        this.type = specifier.type === undefined ? "" : specifier.type + "";
    }
    FormatSpecifier.prototype.toString = function () {
        return this.fill
            + this.align
            + this.sign
            + this.symbol
            + (this.zero ? "0" : "")
            + (this.width === undefined ? "" : Math.max(1, this.width | 0))
            + (this.comma ? "," : "")
            + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0))
            + (this.trim ? "~" : "")
            + this.type;
    };
    // Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
    function formatTrim(s) {
        out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
            switch (s[i]) {
                case ".":
                    i0 = i1 = i;
                    break;
                case "0":
                    if (i0 === 0)
                        i0 = i;
                    i1 = i;
                    break;
                default:
                    if (!+s[i])
                        break out;
                    if (i0 > 0)
                        i0 = 0;
                    break;
            }
        }
        return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
    }
    var prefixExponent;
    function formatPrefixAuto(x, p) {
        var d = formatDecimalParts(x, p);
        if (!d)
            return x + "";
        var coefficient = d[0], exponent = d[1], i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n = coefficient.length;
        return i === n ? coefficient
            : i > n ? coefficient + new Array(i - n + 1).join("0")
                : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i)
                    : "0." + new Array(1 - i).join("0") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!
    }
    function formatRounded(x, p) {
        var d = formatDecimalParts(x, p);
        if (!d)
            return x + "";
        var coefficient = d[0], exponent = d[1];
        return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient
            : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1)
                : coefficient + new Array(exponent - coefficient.length + 2).join("0");
    }
    var formatTypes = {
        "%": (x, p) => (x * 100).toFixed(p),
        "b": (x) => Math.round(x).toString(2),
        "c": (x) => x + "",
        "d": formatDecimal,
        "e": (x, p) => x.toExponential(p),
        "f": (x, p) => x.toFixed(p),
        "g": (x, p) => x.toPrecision(p),
        "o": (x) => Math.round(x).toString(8),
        "p": (x, p) => formatRounded(x * 100, p),
        "r": formatRounded,
        "s": formatPrefixAuto,
        "X": (x) => Math.round(x).toString(16).toUpperCase(),
        "x": (x) => Math.round(x).toString(16)
    };
    function identity(x) {
        return x;
    }
    var map = Array.prototype.map, prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
    function formatLocale(locale) {
        var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + ""), currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "", currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "", decimal = locale.decimal === undefined ? "." : locale.decimal + "", numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)), percent = locale.percent === undefined ? "%" : locale.percent + "", minus = locale.minus === undefined ? "−" : locale.minus + "", nan = locale.nan === undefined ? "NaN" : locale.nan + "";
        function newFormat(specifier) {
            specifier = formatSpecifier(specifier);
            var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
            // The "n" type is an alias for ",g".
            if (type === "n")
                comma = true, type = "g";
            // The "" type, and any invalid type, is an alias for ".12~g".
            else if (!formatTypes[type])
                precision === undefined && (precision = 12), trim = true, type = "g";
            // If zero fill is specified, padding goes after sign and before digits.
            if (zero || (fill === "0" && align === "="))
                zero = true, fill = "0", align = "=";
            // Compute the prefix and suffix.
            // For SI-prefix, the suffix is lazily computed.
            var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
            // What format function should we use?
            // Is this an integer type?
            // Can this type generate exponential notation?
            var formatType = formatTypes[type], maybeSuffix = /[defgprs%]/.test(type);
            // Set the default precision if not specified,
            // or clamp the specified precision to the supported range.
            // For significant precision, it must be in [1, 21].
            // For fixed precision, it must be in [0, 20].
            precision = precision === undefined ? 6
                : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))
                    : Math.max(0, Math.min(20, precision));
            function format(value) {
                var valuePrefix = prefix, valueSuffix = suffix, i, n, c;
                if (type === "c") {
                    valueSuffix = formatType(value) + valueSuffix;
                    value = "";
                }
                else {
                    value = +value;
                    // Determine the sign. -0 is not less than 0, but 1 / -0 is!
                    var valueNegative = value < 0 || 1 / value < 0;
                    // Perform the initial formatting.
                    value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
                    // Trim insignificant zeros.
                    if (trim)
                        value = formatTrim(value);
                    // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.
                    if (valueNegative && +value === 0 && sign !== "+")
                        valueNegative = false;
                    // Compute the prefix and suffix.
                    valuePrefix = (valueNegative ? (sign === "(" ? sign : minus) : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
                    valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
                    // Break the formatted value into the integer “value” part that can be
                    // grouped, and fractional or exponential “suffix” part that is not.
                    if (maybeSuffix) {
                        i = -1, n = value.length;
                        while (++i < n) {
                            if (c = value.charCodeAt(i), 48 > c || c > 57) {
                                valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
                                value = value.slice(0, i);
                                break;
                            }
                        }
                    }
                }
                // If the fill character is not "0", grouping is applied before padding.
                if (comma && !zero)
                    value = group(value, Infinity);
                // Compute the padding.
                var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
                // If the fill character is "0", grouping is applied after padding.
                if (comma && zero)
                    value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
                // Reconstruct the final output based on the desired alignment.
                switch (align) {
                    case "<":
                        value = valuePrefix + value + valueSuffix + padding;
                        break;
                    case "=":
                        value = valuePrefix + padding + value + valueSuffix;
                        break;
                    case "^":
                        value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
                        break;
                    default:
                        value = padding + valuePrefix + value + valueSuffix;
                        break;
                }
                return numerals(value);
            }
            format.toString = function () {
                return specifier + "";
            };
            return format;
        }
        function formatPrefix(specifier, value) {
            var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3, k = Math.pow(10, -e), prefix = prefixes[8 + e / 3];
            return function (value) {
                return f(k * value) + prefix;
            };
        }
        return {
            format: newFormat,
            formatPrefix: formatPrefix
        };
    }
    var locale;
    var format;
    defaultLocale({
        thousands: ",",
        grouping: [3],
        currency: ["$", ""]
    });
    function defaultLocale(definition) {
        locale = formatLocale(definition);
        format = locale.format;
        locale.formatPrefix;
        return locale;
    }
    function logEvents(enable) {
        var t0 = Date.now();
        var times = {};
        var eventTypes = this._eventTypes;
        var maxEventTypeLength = Math.max(...(eventTypes.map(eventType => eventType.length)));
        for (let i = 0; i < eventTypes.length; i++) {
            let eventType = eventTypes[i];
            times[eventType] = [];
            var graphvizInstance = this;
            var expectedDelay;
            var expectedDuration;
            this
                .on(eventType + '.log', enable ? function () {
                var t = Date.now();
                var seqNo = times[eventType].length;
                times[eventType].push(t);
                var string = '';
                string += 'Event ';
                string += format(' >2')(i) + ' ';
                string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);
                string += format(' >5')(t - t0) + ' ';
                if (eventType != 'initEnd') {
                    string += format(' >5')(t - times['start'][seqNo]);
                }
                if (eventType == 'dataProcessEnd') {
                    string += ' prepare                 ' + format(' >5')((t - times['layoutEnd'][seqNo]));
                }
                if (eventType == 'renderEnd' && graphvizInstance._transition) {
                    string += ' transition start margin ' + format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));
                    expectedDelay = graphvizInstance._transition.delay();
                    expectedDuration = graphvizInstance._transition.duration();
                }
                if (eventType == 'transitionStart') {
                    var actualDelay = (t - times['renderStart'][seqNo]);
                    string += ' transition delay        ' + format(' >5')(t - times['renderStart'][seqNo]);
                    string += ' expected ' + format(' >5')(expectedDelay);
                    string += ' diff ' + format(' >5')(actualDelay - expectedDelay);
                }
                if (eventType == 'transitionEnd') {
                    var actualDuration = t - times['transitionStart'][seqNo];
                    string += ' transition duration     ' + format(' >5')(actualDuration);
                    string += ' expected ' + format(' >5')(expectedDuration);
                    string += ' diff ' + format(' >5')(actualDuration - expectedDuration);
                }
                console.log(string);
                t0 = t;
            } : null);
        }
        return this;
    }
    function destroy() {
        delete this._selection.node().__graphviz__;
        if (this._worker) {
            this._workerPortClose();
        }
        return this;
    }
    const pi = Math.PI, tau = 2 * pi, epsilon = 1e-6, tauEpsilon = tau - epsilon;
    function append(strings) {
        this._ += strings[0];
        for (let i = 1, n = strings.length; i < n; ++i) {
            this._ += arguments[i] + strings[i];
        }
    }
    function appendRound(digits) {
        let d = Math.floor(digits);
        if (!(d >= 0))
            throw new Error(`invalid digits: ${digits}`);
        if (d > 15)
            return append;
        const k = 10 ** d;
        return function (strings) {
            this._ += strings[0];
            for (let i = 1, n = strings.length; i < n; ++i) {
                this._ += Math.round(arguments[i] * k) / k + strings[i];
            }
        };
    }
    class Path {
        constructor(digits) {
            this._x0 = this._y0 = // start of current subpath
                this._x1 = this._y1 = null; // end of current subpath
            this._ = "";
            this._append = digits == null ? append : appendRound(digits);
        }
        moveTo(x, y) {
            this._append `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;
        }
        closePath() {
            if (this._x1 !== null) {
                this._x1 = this._x0, this._y1 = this._y0;
                this._append `Z`;
            }
        }
        lineTo(x, y) {
            this._append `L${this._x1 = +x},${this._y1 = +y}`;
        }
        quadraticCurveTo(x1, y1, x, y) {
            this._append `Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;
        }
        bezierCurveTo(x1, y1, x2, y2, x, y) {
            this._append `C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;
        }
        arcTo(x1, y1, x2, y2, r) {
            x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
            // Is the radius negative? Error.
            if (r < 0)
                throw new Error(`negative radius: ${r}`);
            let x0 = this._x1, y0 = this._y1, x21 = x2 - x1, y21 = y2 - y1, x01 = x0 - x1, y01 = y0 - y1, l01_2 = x01 * x01 + y01 * y01;
            // Is this path empty? Move to (x1,y1).
            if (this._x1 === null) {
                this._append `M${this._x1 = x1},${this._y1 = y1}`;
            }
            // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
            else if (!(l01_2 > epsilon))
                ;
            // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
            // Equivalently, is (x1,y1) coincident with (x2,y2)?
            // Or, is the radius zero? Line to (x1,y1).
            else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
                this._append `L${this._x1 = x1},${this._y1 = y1}`;
            }
            // Otherwise, draw an arc!
            else {
                let x20 = x2 - x0, y20 = y2 - y0, l21_2 = x21 * x21 + y21 * y21, l20_2 = x20 * x20 + y20 * y20, l21 = Math.sqrt(l21_2), l01 = Math.sqrt(l01_2), l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2), t01 = l / l01, t21 = l / l21;
                // If the start tangent is not coincident with (x0,y0), line to.
                if (Math.abs(t01 - 1) > epsilon) {
                    this._append `L${x1 + t01 * x01},${y1 + t01 * y01}`;
                }
                this._append `A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;
            }
        }
        arc(x, y, r, a0, a1, ccw) {
            x = +x, y = +y, r = +r, ccw = !!ccw;
            // Is the radius negative? Error.
            if (r < 0)
                throw new Error(`negative radius: ${r}`);
            let dx = r * Math.cos(a0), dy = r * Math.sin(a0), x0 = x + dx, y0 = y + dy, cw = 1 ^ ccw, da = ccw ? a0 - a1 : a1 - a0;
            // Is this path empty? Move to (x0,y0).
            if (this._x1 === null) {
                this._append `M${x0},${y0}`;
            }
            // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
            else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
                this._append `L${x0},${y0}`;
            }
            // Is this arc empty? We’re done.
            if (!r)
                return;
            // Does the angle go the wrong way? Flip the direction.
            if (da < 0)
                da = da % tau + tau;
            // Is this a complete circle? Draw two arcs to complete the circle.
            if (da > tauEpsilon) {
                this._append `A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;
            }
            // Is this arc non-empty? Draw an arc!
            else if (da > epsilon) {
                this._append `A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;
            }
        }
        rect(x, y, w, h) {
            this._append `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;
        }
        toString() {
            return this._;
        }
    }
    function path() {
        return new Path;
    }
    // Allow instanceof d3.path
    path.prototype = Path.prototype;
    function rotate(x, y, cosA, sinA) {
        // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)
        y = -y;
        sinA = -sinA;
        [x, y] = [x * cosA - y * sinA, x * sinA + y * cosA];
        y = -y;
        return [x, y];
    }
    function drawEdge(x1, y1, x2, y2, attributes, options = {}) {
        attributes = Object.assign({}, attributes);
        if (attributes.style && attributes.style.includes('invis')) {
            var newEdge = select(null);
        }
        else {
            var root = this._selection;
            var svg = root.selectWithoutDataPropagation("svg");
            var graph0 = svg.selectWithoutDataPropagation("g");
            var newEdge0 = createEdge.call(this, attributes);
            var edgeData = extractAllElementsData(newEdge0);
            var newEdge = graph0.append('g')
                .data([edgeData]);
            attributeElement.call(newEdge.node(), edgeData);
            _updateEdge.call(this, newEdge, x1, y1, x2, y2, attributes, options);
        }
        this._drawnEdge = {
            g: newEdge,
            x1: x1,
            y1: y1,
            x2: x2,
            y2: y2,
            attributes: attributes,
        };
        return this;
    }
    function updateDrawnEdge(x1, y1, x2, y2, attributes = {}, options = {}) {
        if (!this._drawnEdge) {
            throw Error('No edge has been drawn');
        }
        var edge = this._drawnEdge.g;
        attributes = Object.assign(this._drawnEdge.attributes, attributes);
        this._drawnEdge.x1 = x1;
        this._drawnEdge.y1 = y1;
        this._drawnEdge.x2 = x2;
        this._drawnEdge.y2 = y2;
        if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {
            var root = this._selection;
            var svg = root.selectWithoutDataPropagation("svg");
            var graph0 = svg.selectWithoutDataPropagation("g");
            var edge = graph0.append('g');
            this._drawnEdge.g = edge;
        }
        if (!edge.empty()) {
            _updateEdge.call(this, edge, x1, y1, x2, y2, attributes, options);
        }
        return this;
    }
    function _updateEdge(edge, x1, y1, x2, y2, attributes, options) {
        var newEdge = createEdge.call(this, attributes);
        var edgeData = extractAllElementsData(newEdge);
        edge.data([edgeData]);
        attributeElement.call(edge.node(), edgeData);
        _moveEdge(edge, x1, y1, x2, y2, attributes, options);
    }
    function _moveEdge(edge, x1, y1, x2, y2, attributes, options) {
        var shortening = options.shortening || 0;
        var arrowHeadLength = 10;
        var arrowHeadWidth = 7;
        var margin = 0.1;
        var arrowHeadPoints = [
            [0, -arrowHeadWidth / 2],
            [arrowHeadLength, 0],
            [0, arrowHeadWidth / 2],
            [0, -arrowHeadWidth / 2],
        ];
        var dx = x2 - x1;
        var dy = y2 - y1;
        var length = Math.sqrt(dx * dx + dy * dy);
        if (length == 0) {
            var cosA = 1;
            var sinA = 0;
        }
        else {
            var cosA = dx / length;
            var sinA = dy / length;
        }
        x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;
        y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;
        if (attributes.URL || attributes.tooltip) {
            var a = edge.selectWithoutDataPropagation("g").selectWithoutDataPropagation("a");
            var line = a.selectWithoutDataPropagation("path");
            var arrowHead = a.selectWithoutDataPropagation("polygon");
        }
        else {
            var line = edge.selectWithoutDataPropagation("path");
            var arrowHead = edge.selectWithoutDataPropagation("polygon");
        }
        var path1 = path();
        path1.moveTo(x1, y1);
        path1.lineTo(x2, y2);
        line
            .attr("d", path1);
        x2 = x1 + (length - shortening - arrowHeadLength) * cosA;
        y2 = y1 + (length - shortening - arrowHeadLength) * sinA;
        for (var i = 0; i < arrowHeadPoints.length; i++) {
            var point = arrowHeadPoints[i];
            arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);
        }
        for (var i = 0; i < arrowHeadPoints.length; i++) {
            var point = arrowHeadPoints[i];
            arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];
        }
        var allPoints = [];
        for (var i = 0; i < arrowHeadPoints.length; i++) {
            var point = arrowHeadPoints[i];
            allPoints.push(point.join(','));
        }
        var pointsAttr = allPoints.join(' ');
        arrowHead
            .attr("points", pointsAttr);
        return this;
    }
    function moveDrawnEdgeEndPoint(x2, y2, options = {}) {
        if (!this._drawnEdge) {
            throw Error('No edge has been drawn');
        }
        var edge = this._drawnEdge.g;
        var x1 = this._drawnEdge.x1;
        var y1 = this._drawnEdge.y1;
        var attributes = this._drawnEdge.attributes;
        this._drawnEdge.x2 = x2;
        this._drawnEdge.y2 = y2;
        _moveEdge(edge, x1, y1, x2, y2, attributes, options);
        return this;
    }
    function removeDrawnEdge() {
        if (!this._drawnEdge) {
            return this;
        }
        var edge = this._drawnEdge.g;
        edge.remove();
        this._drawnEdge = null;
        return this;
    }
    function insertDrawnEdge(name) {
        if (!this._drawnEdge) {
            throw Error('No edge has been drawn');
        }
        var edge = this._drawnEdge.g;
        if (edge.empty()) {
            return this;
        }
        this._drawnEdge.attributes;
        var title = edge.selectWithoutDataPropagation("title");
        title
            .text(name);
        var root = this._selection;
        var svg = root.selectWithoutDataPropagation("svg");
        var graph0 = svg.selectWithoutDataPropagation("g");
        var graph0Datum = graph0.datum();
        var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());
        graph0Datum.children.push(edgeData);
        insertAllElementsData(edge, edgeData);
        this._drawnEdge = null;
        return this;
    }
    function drawnEdgeSelection() {
        if (this._drawnEdge) {
            return this._drawnEdge.g;
        }
        else {
            return select(null);
        }
    }
    function createEdge(attributes) {
        var attributesString = '';
        for (var name of Object.keys(attributes)) {
            if (attributes[name] != null) {
                attributesString += ' "' + name + '"="' + attributes[name] + '"';
            }
        }
        var dotSrc = 'digraph {a -> b [' + attributesString + ']}';
        var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');
        var parser = new window.DOMParser();
        var doc = parser.parseFromString(svgDoc, "image/svg+xml");
        var newDoc = select(document.createDocumentFragment())
            .append(function () {
            return doc.documentElement;
        });
        var edge = newDoc.select('.edge');
        return edge;
    }
    function drawNode(x, y, nodeId, attributes = {}, options = {}) {
        attributes = Object.assign({}, attributes);
        if (attributes.style && attributes.style.includes('invis')) {
            var newNode = select(null);
        }
        else {
            var root = this._selection;
            var svg = root.selectWithoutDataPropagation("svg");
            var graph0 = svg.selectWithoutDataPropagation("g");
            var newNode0 = createNode.call(this, nodeId, attributes);
            var nodeData = extractAllElementsData(newNode0);
            var newNode = graph0.append('g')
                .data([nodeData]);
            attributeElement.call(newNode.node(), nodeData);
            _updateNode.call(this, newNode, x, y, nodeId, attributes, options);
        }
        this._drawnNode = {
            g: newNode,
            nodeId: nodeId,
            x: x,
            y: y,
            attributes: attributes,
        };
        return this;
    }
    function updateDrawnNode(x, y, nodeId, attributes = {}, options = {}) {
        if (!this._drawnNode) {
            throw Error('No node has been drawn');
        }
        var node = this._drawnNode.g;
        if (nodeId == null) {
            nodeId = this._drawnNode.nodeId;
        }
        attributes = Object.assign(this._drawnNode.attributes, attributes);
        this._drawnNode.nodeId = nodeId;
        this._drawnNode.x = x;
        this._drawnNode.y = y;
        if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {
            var root = this._selection;
            var svg = root.selectWithoutDataPropagation("svg");
            var graph0 = svg.selectWithoutDataPropagation("g");
            var node = graph0.append('g');
            this._drawnNode.g = node;
        }
        if (!node.empty()) {
            _updateNode.call(this, node, x, y, nodeId, attributes, options);
        }
        return this;
    }
    function _updateNode(node, x, y, nodeId, attributes, options) {
        var newNode = createNode.call(this, nodeId, attributes);
        var nodeData = extractAllElementsData(newNode);
        node.data([nodeData]);
        attributeElement.call(node.node(), nodeData);
        _moveNode(node, x, y, attributes);
        return this;
    }
    function _moveNode(node, x, y, attributes, options) {
        if (attributes.URL || attributes.tooltip) {
            var subParent = node.selectWithoutDataPropagation("g").selectWithoutDataPropagation("a");
        }
        else {
            var subParent = node;
        }
        var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');
        var text = node.selectWithoutDataPropagation("text");
        if (svgElements.size() != 0) {
            var bbox = svgElements.node().getBBox();
            bbox.cx = bbox.x + bbox.width / 2;
            bbox.cy = bbox.y + bbox.height / 2;
        }
        else if (text.size() != 0) {
            bbox = {
                x: +text.attr('x'),
                y: +text.attr('y'),
                width: 0,
                height: 0,
                cx: +text.attr('x'),
                cy: +text.attr('y'),
            };
        }
        svgElements.each(function (data, index) {
            var svgElement = select(this);
            if (svgElement.attr("cx")) {
                svgElement
                    .attr("cx", roundTo2Decimals(x))
                    .attr("cy", roundTo2Decimals(y));
            }
            else if (svgElement.attr("points")) {
                var pointsString = svgElement.attr('points').trim();
                svgElement
                    .attr("points", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));
            }
            else {
                var d = svgElement.attr('d');
                svgElement
                    .attr("d", translateDAttribute(d, x - bbox.cx, y - bbox.cy));
            }
        });
        if (text.size() != 0) {
            text
                .attr("x", roundTo2Decimals(+text.attr("x") + x - bbox.cx))
                .attr("y", roundTo2Decimals(+text.attr("y") + y - bbox.cy));
        }
        return this;
    }
    function moveDrawnNode(x, y, options = {}) {
        if (!this._drawnNode) {
            throw Error('No node has been drawn');
        }
        var node = this._drawnNode.g;
        var attributes = this._drawnNode.attributes;
        this._drawnNode.x = x;
        this._drawnNode.y = y;
        if (!node.empty()) {
            _moveNode(node, x, y, attributes);
        }
        return this;
    }
    function removeDrawnNode() {
        if (!this._drawnNode) {
            return this;
        }
        var node = this._drawnNode.g;
        if (!node.empty()) {
            node.remove();
        }
        this._drawnNode = null;
        return this;
    }
    function insertDrawnNode(nodeId) {
        if (!this._drawnNode) {
            throw Error('No node has been drawn');
        }
        if (nodeId == null) {
            nodeId = this._drawnNode.nodeId;
        }
        var node = this._drawnNode.g;
        if (node.empty()) {
            return this;
        }
        var attributes = this._drawnNode.attributes;
        var title = node.selectWithoutDataPropagation("title");
        title
            .text(nodeId);
        if (attributes.URL || attributes.tooltip) {
            var ga = node.selectWithoutDataPropagation("g");
            var a = ga.selectWithoutDataPropagation("a");
            a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');
            var text = a.selectWithoutDataPropagation('text');
        }
        else {
            node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');
            var text = node.selectWithoutDataPropagation('text');
        }
        text
            .text(attributes.label || nodeId);
        var root = this._selection;
        var svg = root.selectWithoutDataPropagation("svg");
        var graph0 = svg.selectWithoutDataPropagation("g");
        var graph0Datum = graph0.datum();
        var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());
        graph0Datum.children.push(nodeData);
        insertAllElementsData(node, nodeData);
        this._drawnNode = null;
        return this;
    }
    function drawnNodeSelection() {
        if (this._drawnNode) {
            return this._drawnNode.g;
        }
        else {
            return select(null);
        }
    }
    function createNode(nodeId, attributes) {
        var attributesString = '';
        for (var name of Object.keys(attributes)) {
            if (attributes[name] != null) {
                attributesString += ' "' + name + '"="' + attributes[name] + '"';
            }
        }
        var dotSrc = 'graph {"' + nodeId + '" [' + attributesString + ']}';
        var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');
        var parser = new window.DOMParser();
        var doc = parser.parseFromString(svgDoc, "image/svg+xml");
        var newDoc = select(document.createDocumentFragment())
            .append(function () {
            return doc.documentElement;
        });
        var node = newDoc.select('.node');
        return node;
    }
    /* This file is excluded from coverage because the instrumented code
     * translates "self" which gives a reference error.
     */
    /* c8 ignore start */
    function workerCodeBody(port) {
        self.document = {}; // Workaround for "ReferenceError: document is not defined" in hpccWasm
        port.addEventListener('message', function (event) {
            let hpccWasm = self["@hpcc-js/wasm"];
            if (hpccWasm == undefined && event.data.vizURL) {
                importScripts(event.data.vizURL);
                hpccWasm = self["@hpcc-js/wasm"];
                // This is an alternative workaround where wasmFolder() is not needed
                //                                    document = {currentScript: {src: event.data.vizURL}};
            }
            if (event.data.type == "version") {
                hpccWasm.Graphviz.load().then(graphviz => {
                    port.postMessage({
                        type: "version",
                        version: graphviz.version(),
                    });
                });
                return;
            }
            hpccWasm.Graphviz.load().then(graphviz => {
                const svg = graphviz.layout(event.data.dot, "svg", event.data.engine, event.data.options);
                if (svg) {
                    port.postMessage({
                        type: "done",
                        svg: svg,
                    });
                }
                else if (event.data.vizURL) {
                    port.postMessage({
                        type: "init",
                    });
                }
                else {
                    port.postMessage({
                        type: "skip",
                    });
                }
            }).catch(error => {
                port.postMessage({
                    type: "error",
                    error: error.message,
                });
            });
        });
    }
    function workerCode() {
        const port = self;
        workerCodeBody(port);
    }
    function sharedWorkerCode() {
        self.onconnect = function (e) {
            const port = e.ports[0];
            workerCodeBody(port);
            port.start();
        };
    }
    /* c8 ignore stop */
    function Graphviz(selection, options) {
        this._options = {
            useWorker: true,
            useSharedWorker: false,
            engine: 'dot',
            keyMode: 'title',
            fade: true,
            tweenPaths: true,
            tweenShapes: true,
            convertEqualSidedPolygons: true,
            tweenPrecision: 1,
            growEnteringEdges: true,
            zoom: true,
            zoomScaleExtent: [0.1, 10],
            zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],
            width: null,
            height: null,
            scale: 1,
            fit: false,
        };
        if (options instanceof Object) {
            for (var option of Object.keys(options)) {
                this._options[option] = options[option];
            }
        }
        else if (typeof options == 'boolean') {
            this._options.useWorker = options;
        }
        var useWorker = this._options.useWorker;
        var useSharedWorker = this._options.useSharedWorker;
        if (typeof Worker == 'undefined') {
            useWorker = false;
        }
        if (typeof SharedWorker == 'undefined') {
            useSharedWorker = false;
        }
        if (useWorker || useSharedWorker) {
            var scripts = selectAll('script');
            var vizScript = scripts.filter(function () {
                return select(this).attr('type') == 'javascript/worker' || (select(this).attr('src') && select(this).attr('src').match(/.*\/@hpcc-js\/wasm/));
            });
            if (vizScript.size() == 0) {
                console.warn('No script tag of type "javascript/worker" was found and "useWorker" is true. Not using web worker.');
                useWorker = false;
                useSharedWorker = false;
            }
            else {
                this._vizURL = vizScript.attr('src');
                if (!this._vizURL) {
                    console.warn('No "src" attribute of was found on the "javascript/worker" script tag and "useWorker" is true. Not using web worker.');
                    useWorker = false;
                    useSharedWorker = false;
                }
            }
        }
        if (useSharedWorker) {
            const url = 'data:application/javascript;base64,' + btoa(workerCodeBody.toString() + '(' + sharedWorkerCode.toString() + ')()');
            this._worker = this._worker = new SharedWorker(url);
            this._workerPort = this._worker.port;
            this._workerPortClose = this._worker.port.close.bind(this._workerPort);
            this._worker.port.start();
            this._workerCallbacks = [];
        }
        else if (useWorker) {
            var blob = new Blob([workerCodeBody.toString() + '(' + workerCode.toString() + ')()']);
            var blobURL = window.URL.createObjectURL(blob);
            this._worker = new Worker(blobURL);
            this._workerPort = this._worker;
            this._workerPortClose = this._worker.terminate.bind(this._worker);
            this._workerCallbacks = [];
        }
        else {
            _.load().then(((graphviz) => {
                this._graphvizVersion = graphviz.version();
            }).bind(this));
        }
        this._selection = selection;
        this._active = false;
        this._busy = false;
        this._jobs = [];
        this._queue = [];
        this._keyModes = new Set([
            'title',
            'id',
            'tag-index',
            'index'
        ]);
        this._images = [];
        this._translation = undefined;
        this._scale = undefined;
        this._eventTypes = [
            'initEnd',
            'start',
            'layoutStart',
            'layoutEnd',
            'dataExtractEnd',
            'dataProcessPass1End',
            'dataProcessPass2End',
            'dataProcessEnd',
            'renderStart',
            'renderEnd',
            'transitionStart',
            'transitionEnd',
            'restoreEnd',
            'end',
            'zoom'
        ];
        this._dispatch = dispatch(...this._eventTypes);
        initViz.call(this);
        selection.node().__graphviz__ = this;
    }
    function graphviz(selector, options) {
        var g = select(selector).graphviz(options);
        return g;
    }
    exports.graphviz = graphviz;
    Graphviz.prototype = graphviz.prototype = {
        constructor: Graphviz,
        engine: engine,
        addImage: images,
        keyMode: keyMode,
        fade: fade,
        tweenPaths: tweenPaths,
        tweenShapes: tweenShapes,
        convertEqualSidedPolygons: convertEqualSidedPolygons,
        tweenPrecision: tweenPrecision,
        growEnteringEdges: growEnteringEdges,
        zoom: zoom,
        resetZoom: resetZoom,
        zoomBehavior: zoomBehavior,
        zoomSelection: zoomSelection,
        zoomScaleExtent: zoomScaleExtent,
        zoomTranslateExtent: zoomTranslateExtent,
        render: render,
        layout: layout,
        dot: dot,
        data: data,
        renderDot: renderDot,
        transition: transition,
        active: active,
        options: options,
        width: width,
        height: height,
        scale: scale,
        fit: fit,
        attributer: attributer,
        on: on,
        onerror: onerror,
        logEvents: logEvents,
        destroy: destroy,
        drawEdge: drawEdge,
        updateDrawnEdge: updateDrawnEdge,
        moveDrawnEdgeEndPoint,
        insertDrawnEdge,
        removeDrawnEdge, removeDrawnEdge,
        drawnEdgeSelection, drawnEdgeSelection,
        drawNode: drawNode,
        updateDrawnNode: updateDrawnNode,
        moveDrawnNode: moveDrawnNode,
        insertDrawnNode,
        removeDrawnNode, removeDrawnNode,
        drawnNodeSelection, drawnNodeSelection,
        graphvizVersion: graphvizVersion,
    };
    function selection_graphviz(options) {
        var g = this.node().__graphviz__;
        if (g) {
            g.options(options);
            // Ensure a possible new initEnd event handler is attached before calling it
            timeout(function () {
                g._dispatch.call("initEnd", this);
            }.bind(this), 0);
        }
        else {
            g = new Graphviz(this, options);
        }
        return g;
    }
    function selection_selectWithoutDataPropagation(name) {
        return select(this.size() > 0 ? this.node().querySelector(name) : null);
    }
    selection.prototype.graphviz = selection_graphviz;
    selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;
});
define("ui/popup/encodeRpcBodyLines", ["require", "exports", "model/UpdatableNodeLocator", "ui/create/createTextSpanIndicator", "ui/create/registerNodeSelector", "ui/create/registerOnHover", "ui/trimTypeName", "ui/popup/displayAttributeModal", "dependencies/graphviz/graphviz", "hacks", "ui/startEndToSpan"], function (require, exports, UpdatableNodeLocator_3, createTextSpanIndicator_5, registerNodeSelector_2, registerOnHover_3, trimTypeName_3, displayAttributeModal_3, graphviz_1, hacks_3, startEndToSpan_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createTextSpanIndicator_5 = __importDefault(createTextSpanIndicator_5);
    registerNodeSelector_2 = __importDefault(registerNodeSelector_2);
    registerOnHover_3 = __importDefault(registerOnHover_3);
    trimTypeName_3 = __importDefault(trimTypeName_3);
    displayAttributeModal_3 = __importDefault(displayAttributeModal_3);
    startEndToSpan_6 = __importDefault(startEndToSpan_6);
    const getCommonStreamArgWhitespacePrefix = (line) => {
        if (Array.isArray(line)) {
            return Math.min(...line.map(getCommonStreamArgWhitespacePrefix));
        }
        if (line && typeof line === 'object') {
            switch (line.type) {
                case 'streamArg': {
                    const v = line.value;
                    return v.length - v.trimStart().length;
                }
            }
        }
        return Number.MAX_SAFE_INTEGER;
    };
    const encodeRpcBodyLines = (env, body, extras = {}) => {
        let needCapturedStreamArgExplanation = false;
        let localDisableNodeExpander = false;
        const createNodeNode = (target, locator, nestingLevel, bodyPath, includePositionIndicator = true) => {
            const { start, end, type, label } = locator.result;
            const container = document.createElement('div');
            container.classList.add('node-ref');
            if (extras.decorator) {
                applyDecoratorClass(container, nestingLevel <= 1, extras.decorator(bodyPath));
            }
            // container.appendChild(document.createTextNode(`area:${JSON.stringify(bodyPath)}`));
            const span = {
                lineStart: (start >>> 12), colStart: (start & 0xFFF),
                lineEnd: (end >>> 12), colEnd: (end & 0xFFF),
            };
            const typeNode = document.createElement('span');
            typeNode.classList.add('syntax-type');
            typeNode.innerText = label !== null && label !== void 0 ? label : (0, trimTypeName_3.default)(type);
            typeNode.style.margin = 'auto 0';
            container.appendChild(typeNode);
            if (includePositionIndicator) {
                container.appendChild((0, createTextSpanIndicator_5.default)({
                    span,
                    marginLeft: true,
                    autoVerticalMargin: true,
                }));
            }
            container.classList.add('clickHighlightOnHover');
            container.style.width = 'fit-content';
            container.style.display = 'inline';
            (0, registerOnHover_3.default)(container, on => {
                var _a, _b;
                if (!on || ((_b = (_a = extras.lateInteractivityEnabledChecker) === null || _a === void 0 ? void 0 : _a.call(extras)) !== null && _b !== void 0 ? _b : true)) {
                    env.updateSpanHighlight(on ? span : null);
                    container.style.cursor = 'default';
                    container.classList.add('clickHighlightOnHover');
                }
                else {
                    container.style.cursor = 'not-allowed';
                    container.classList.remove('clickHighlightOnHover');
                }
            });
            container.onmousedown = (e) => {
                e.stopPropagation();
            };
            if (!extras.disableNodeSelectors) {
                (0, registerNodeSelector_2.default)(container, () => locator);
            }
            container.addEventListener('click', (e) => {
                var _a, _b;
                if ((_b = (_a = extras.lateInteractivityEnabledChecker) === null || _a === void 0 ? void 0 : _a.call(extras)) !== null && _b !== void 0 ? _b : true) {
                    e.preventDefault();
                    (0, displayAttributeModal_3.default)(env.getGlobalModalEnv(), null, (0, UpdatableNodeLocator_3.createMutableLocator)(locator));
                }
            });
            if (!localDisableNodeExpander && extras.nodeLocatorExpanderHandler) {
                // if (existing) {
                //   if (existing.parentElement) existing.parentElement.removeChild(existing);
                //   target.appendChild(existing);
                // } else {
                const middleContainer = document.createElement('div');
                middleContainer.style.display = 'flex';
                middleContainer.style.flexDirection = 'row';
                container.style.display = 'flex';
                middleContainer.appendChild(container);
                if (!extras.disableInlineExpansionButton) {
                    const expander = document.createElement('div');
                    expander.innerText = `▼`;
                    expander.style.marginLeft = '0.25rem';
                    expander.classList.add('linkedProbeCreator');
                    expander.onmouseover = e => e.stopPropagation();
                    expander.onmousedown = (e) => {
                        e.stopPropagation();
                    };
                    middleContainer.appendChild(expander);
                    const clickHandler = extras.nodeLocatorExpanderHandler.onClick;
                    expander.onclick = () => clickHandler({
                        locator,
                        locatorRoot: outerContainer,
                        expansionArea,
                        path: bodyPath,
                    });
                }
                const outerContainer = document.createElement('div');
                outerContainer.classList.add('inline-window-root');
                outerContainer.style.display = 'inline-flex';
                // outerContainer.style.marginBottom = '0.125rem';
                outerContainer.style.flexDirection = 'column';
                outerContainer.appendChild(middleContainer);
                const existingExpansionArea = extras.nodeLocatorExpanderHandler.getReusableExpansionArea(bodyPath);
                if (existingExpansionArea) {
                    if (existingExpansionArea.parentElement) {
                        existingExpansionArea.parentElement.removeChild(existingExpansionArea);
                    }
                }
                const expansionArea = existingExpansionArea !== null && existingExpansionArea !== void 0 ? existingExpansionArea : document.createElement('div');
                outerContainer.appendChild(expansionArea);
                target.appendChild(outerContainer);
                extras.nodeLocatorExpanderHandler.onCreate({
                    locator,
                    locatorRoot: outerContainer,
                    expansionArea,
                    path: bodyPath,
                    isFresh: !existingExpansionArea,
                });
            }
            else {
                target.appendChild(container);
            }
        };
        const appliedDecoratorResultsTrackers = [];
        const applyDecoratorClass = (target, applyRoot, decoratorResult) => {
            appliedDecoratorResultsTrackers.forEach(tracker => tracker[decoratorResult] = true);
            switch (decoratorResult) {
                case 'error':
                    target.classList.add('test-diff-error');
                    if (applyRoot) {
                        target.classList.add('test-diff-error-root');
                    }
                    break;
                case 'unmatched':
                    target.classList.add('test-diff-unmatched');
                    if (applyRoot) {
                        target.classList.add('test-diff-unmatched-root');
                    }
                    break;
                default:
                    break;
            }
        };
        const streamArgPrefix = Math.min(...body.map(getCommonStreamArgWhitespacePrefix));
        const encodeDotVal = (dotVal) => {
            const holder = document.createElement('div');
            const id = `dot_${(Math.random() * Number.MAX_SAFE_INTEGER) | 0}`;
            holder.id = id;
            setTimeout(() => {
                if (!!document.getElementById(id)) {
                    try {
                        (0, graphviz_1.graphviz)(`#${id}`, { zoom: false })
                            .dot(dotVal)
                            .render();
                    }
                    catch (e) {
                        console.warn('Error when d3:ing', e);
                    }
                }
            }, 100);
            return holder;
        };
        const encodeLine = (target, line, nestingLevel, bodyPath, extraEncodingArgs) => {
            const addPlain = (msg, plainHoverSpan) => {
                const trimmed = msg.trimStart();
                if (extras.decorator) {
                    const decoration = extras.decorator(bodyPath);
                    if (decoration !== 'default') {
                        const holder = document.createElement('spawn');
                        if (extras.capWidths) {
                            holder.style.whiteSpace = 'normal';
                        }
                        else {
                            holder.style.whiteSpace = 'pre';
                        }
                        if (trimmed.length !== msg.length) {
                            holder.appendChild(document.createTextNode(' '.repeat(msg.length - trimmed.length)));
                        }
                        if (msg.trim()) {
                            holder.appendChild(document.createTextNode(msg.trim()));
                        }
                        holder.appendChild(document.createElement('br'));
                        applyDecoratorClass(holder, nestingLevel <= 1, decoration);
                        target.appendChild(holder);
                        return;
                    }
                }
                if (trimmed.length !== msg.length) {
                    target.appendChild(document.createTextNode(' '.repeat(msg.length - trimmed.length)));
                }
                if (msg.trim()) {
                    const trimmed = msg.trim();
                    if (plainHoverSpan) {
                        const node = document.createElement('span');
                        const span = (0, startEndToSpan_6.default)(plainHoverSpan.start, plainHoverSpan.end);
                        node.classList.add('highlightOnHover');
                        (0, registerOnHover_3.default)(node, hovering => {
                            env.updateSpanHighlight(hovering ? span : null);
                        });
                        node.innerText = trimmed;
                        target.appendChild(node);
                    }
                    else {
                        target.appendChild(document.createTextNode(trimmed));
                    }
                }
                target.appendChild(document.createElement('br'));
            };
            switch (line.type) {
                case 'plain': {
                    addPlain(line.value);
                    break;
                }
                case 'highlightMsg': {
                    addPlain(line.value.msg, line.value);
                    break;
                }
                case 'arr': {
                    const encodeTo = (arrTarget) => {
                        let lineIdxBackshift = 0;
                        line.value.forEach((sub, idx) => {
                            encodeLine(arrTarget, sub, nestingLevel + 1, [...bodyPath, idx - lineIdxBackshift]);
                            if (extras.excludeStdIoFromPaths) {
                                switch (sub.type) {
                                    case 'stdout':
                                    case 'stderr':
                                        ++lineIdxBackshift;
                                }
                            }
                        });
                    };
                    if (nestingLevel === 0) {
                        // First level indent, 'inline' it
                        encodeTo(target);
                    }
                    else {
                        // >=2 level indent, respect it
                        if (nestingLevel === 1) {
                            appliedDecoratorResultsTrackers.push({});
                        }
                        const deeper = document.createElement('pre');
                        if (!(extraEncodingArgs === null || extraEncodingArgs === void 0 ? void 0 : extraEncodingArgs.omitArrMarginLeft)) {
                            deeper.style.marginLeft = '1rem';
                        }
                        deeper.style.marginTop = '0.125rem';
                        if (extras.capWidths) {
                            deeper.style.whiteSpace = 'normal';
                        }
                        encodeTo(deeper);
                        if (nestingLevel === 1) {
                            const wrapper = document.createElement('div');
                            wrapper.appendChild(deeper);
                            const tracker = appliedDecoratorResultsTrackers.pop();
                            if (tracker === null || tracker === void 0 ? void 0 : tracker['error']) {
                                wrapper.classList.add('test-diff-error-root');
                            }
                            else if (tracker === null || tracker === void 0 ? void 0 : tracker['unmatched']) {
                                wrapper.classList.add('test-diff-unmatched-root');
                            }
                            target.appendChild(wrapper);
                        }
                        else {
                            target.appendChild(deeper);
                        }
                    }
                    break;
                }
                case 'stdout': {
                    const span = document.createElement('span');
                    span.classList.add('captured-stdout');
                    span.innerText = `> ${line.value}`;
                    target.appendChild(span);
                    target.appendChild(document.createElement('br'));
                    break;
                }
                case 'stderr': {
                    const span = document.createElement('span');
                    span.classList.add('captured-stderr');
                    span.innerText = `> ${line.value}`;
                    target.appendChild(span);
                    target.appendChild(document.createElement('br'));
                    break;
                }
                case 'streamArg': {
                    needCapturedStreamArgExplanation = true;
                    const span = document.createElement('span');
                    span.classList.add('stream-arg-msg');
                    span.innerText = `> ${line.value.slice(streamArgPrefix)}`;
                    target.appendChild(span);
                    target.appendChild(document.createElement('br'));
                    break;
                }
                case 'node': {
                    createNodeNode(target, line.value, nestingLevel, bodyPath);
                    break;
                }
                case 'dotGraph': {
                    target.appendChild(encodeDotVal(line.value));
                    target.appendChild(document.createElement('br'));
                    break;
                }
                case 'tracing': {
                    const encodeTrace = (tr, path, isTopTrace, dst) => {
                        var _a, _b;
                        const locToShortStr = (locator) => { var _a; return (_a = locator.result.label) !== null && _a !== void 0 ? _a : locator.result.type.split('.').slice(-1)[0]; };
                        const summaryHolder = document.createElement('div');
                        summaryHolder.style.display = 'inline';
                        let addResult = !isTopTrace;
                        if (isTopTrace) {
                            const countTraces = (tr) => {
                                return 1 + tr.dependencies.reduce((a, b) => a + countTraces(b), 0);
                            };
                            const count = countTraces(tr);
                            summaryHolder.classList.add('stream-arg-msg');
                            if (count <= 1) {
                                summaryHolder.innerText = `No traces available`;
                            }
                            else {
                                summaryHolder.innerText = `${count - 1} trace${count == 2 ? '' : 's'} available, click to expand`;
                            }
                        }
                        else {
                            const summaryPartNode = document.createElement('span');
                            summaryPartNode.classList.add('syntax-type');
                            summaryPartNode.innerText = locToShortStr(tr.node);
                            summaryPartNode.classList.add('clickHighlightOnHover');
                            summaryPartNode.onmousedown = (e) => {
                                e.stopPropagation();
                                e.stopImmediatePropagation();
                            };
                            const span = (0, startEndToSpan_6.default)(tr.node.result.start, tr.node.result.end);
                            (0, registerOnHover_3.default)(summaryPartNode, isHovering => {
                                env.updateSpanHighlight(isHovering ? span : null);
                            });
                            summaryPartNode.onclick = (e) => {
                                e.preventDefault();
                                (0, displayAttributeModal_3.default)(env.getGlobalModalEnv(), null, (0, UpdatableNodeLocator_3.createMutableLocator)(tr.node));
                            };
                            const summaryPartAttr = document.createElement('span');
                            summaryPartAttr.classList.add('syntax-attr');
                            summaryPartAttr.innerText = `.${tr.prop.name}`;
                            let summaryPartResult = null;
                            const addSummaryResult = (builder) => {
                                let div = document.createElement('div');
                                div.style.display = 'inline';
                                builder(div);
                                summaryPartResult = div;
                            };
                            const addPlainSummary = (raw) => {
                                const val = raw.trim().replace(/\n/g, '\\n');
                                const trimmed = val.length < 16 ? val : `${val.slice(0, 14)}..`;
                                addSummaryResult((tgt) => {
                                    if (!trimmed) {
                                        // Empty string, treat specially
                                        tgt.appendChild(document.createTextNode(' = '));
                                        const empty = document.createElement('span');
                                        empty.classList.add('dimmed');
                                        empty.innerText = `(empty str)`;
                                        tgt.appendChild(empty);
                                    }
                                    else {
                                        tgt.innerText = ` = ${trimmed}`;
                                    }
                                });
                                if (val.length < 16) {
                                    addResult = false;
                                }
                            };
                            // let summaryText = `${locToShortStr(tr.node)}.${tr.prop.name}`;
                            switch (tr.result.type) {
                                case 'arr': {
                                    const arr = tr.result.value;
                                    if (arr.length == 1 && arr[0].type == 'plain') {
                                        addPlainSummary(arr[0].value);
                                    }
                                    if (arr.length == 2 && arr[0].type == 'node' && arr[1].type == 'plain' && !arr[1].value.trim()) {
                                        const locator = arr[0].value;
                                        addSummaryResult(tgt => {
                                            tgt.appendChild(document.createTextNode(' = '));
                                            createNodeNode(tgt, locator, nestingLevel + 1, path, false);
                                            addResult = false;
                                        });
                                    }
                                    break;
                                }
                                case 'plain': {
                                    addPlainSummary(tr.result.value);
                                    break;
                                }
                            }
                            // summary.innerText = summaryText;
                            summaryHolder.appendChild(summaryPartNode);
                            summaryHolder.appendChild(summaryPartAttr);
                            if (!!summaryPartResult) {
                                summaryHolder.appendChild(summaryPartResult);
                            }
                        }
                        // encodeLine = (target: HTMLElement, line: RpcBodyLine, nestingLevel: number, bodyPath: number[]) => {
                        if (addResult) {
                            switch (tr.result.type) {
                                case 'arr': {
                                    addResult = !!tr.result.value.length;
                                    break;
                                }
                                case 'plain': {
                                    addResult = !!tr.result.value.length;
                                    break;
                                }
                            }
                        }
                        const body = document.createElement('div');
                        body.style.paddingLeft = '1rem';
                        if (addResult) {
                            encodeLine(body, tr.result, nestingLevel + 1, path, { omitArrMarginLeft: true });
                        }
                        tr.dependencies.forEach((dep, depIdx) => {
                            encodeTrace(dep, [...path, depIdx + 1], false, body);
                        });
                        const summary = document.createElement('summary');
                        summary.appendChild(summaryHolder);
                        // summary.classList.add('syntax-attr');
                        if (!addResult && !tr.dependencies.length) {
                            dst.append(summary);
                        }
                        else {
                            summary.onmousedown = (e) => {
                                e.stopPropagation();
                            };
                            summary.classList.add('clickHighlightOnHover');
                            const det = document.createElement('details');
                            const trKey = `${JSON.stringify(path)}:${tr.prop.name}`;
                            det.open = (_b = (_a = extras.tracingExpansionTracker) === null || _a === void 0 ? void 0 : _a[trKey]) !== null && _b !== void 0 ? _b : false;
                            det.addEventListener('toggle', e => {
                                const tracker = extras.tracingExpansionTracker;
                                if (tracker) {
                                    tracker[trKey] = det.open;
                                }
                            });
                            det.appendChild(summary);
                            det.appendChild(body);
                            dst.appendChild(det);
                        }
                    };
                    localDisableNodeExpander = true;
                    encodeTrace(line.value, bodyPath, true, target);
                    localDisableNodeExpander = false;
                    break;
                }
                case 'html': {
                    const frame = document.createElement('iframe');
                    frame.src = 'data:text/html;charset=utf-8,' + encodeURI(line.value);
                    target.appendChild(frame);
                    target.appendChild(document.createElement('br'));
                    break;
                }
                default: {
                    console.warn('Unknown body line type', line);
                    (0, hacks_3.assertUnreachable)(line);
                    break;
                }
            }
        };
        const pre = document.createElement(extras.decorator ? 'div' : 'pre');
        pre.style.margin = '0px';
        pre.style.padding = '0.5rem';
        pre.style.fontSize = '0.75rem';
        if (extras.capWidths) {
            pre.style.wordBreak = 'break-word';
            pre.style.whiteSpace = 'normal';
        }
        // pre.innerHtml = lines.slice(outputStart + 1).join('\n').trim();
        let lineIdxBackshift = 0;
        body
            .filter((line, lineIdx, arr) => {
            // Keep empty lines only if they are followed by a non-empty line
            // Removes two empty lines in a row, and removes trailing empty lines
            if (!line && !arr[lineIdx + 1]) {
                return false;
            }
            return true;
        })
            .forEach((line, lineIdx) => {
            if (extras.decorator) {
                const holder = document.createElement('pre');
                holder.style.margin = '0px';
                holder.style.padding = '0';
                if (extras.capWidths) {
                    holder.style.wordBreak = 'break-word';
                    holder.style.whiteSpace = 'normal';
                }
                applyDecoratorClass(holder, true, extras.decorator([lineIdx - lineIdxBackshift]));
                encodeLine(holder, line, 0, [lineIdx - lineIdxBackshift]);
                pre.appendChild(holder);
            }
            else {
                encodeLine(pre, line, 0, [lineIdx - lineIdxBackshift]);
            }
            if (extras.excludeStdIoFromPaths) {
                switch (line.type) {
                    case 'stdout':
                    case 'stderr':
                        ++lineIdxBackshift;
                }
            }
            // '\n'
        });
        if (needCapturedStreamArgExplanation) {
            const expl = document.createElement('span');
            expl.style.fontStyle = 'italic';
            expl.style.fontSize = '0.5rem';
            // expl.classList.add('syntax-attr-dim');
            const add = (msg, styled) => {
                const node = document.createElement('span');
                if (styled) {
                    node.classList.add('stream-arg-msg');
                }
                node.innerText = msg;
                expl.appendChild(node);
            };
            add(`Values printed to `, false);
            add(`<stream>`, true);
            add(` shown in `, false);
            add(`green`, true);
            add(` above`, false);
            pre.appendChild(expl);
            pre.appendChild(document.createElement('br'));
        }
        return pre;
    };
    exports.default = encodeRpcBodyLines;
});
define("ui/popup/displayTestAdditionModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/create/showWindow"], function (require, exports, createLoadingSpinner_3, createModalTitle_5, showWindow_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_3 = __importDefault(createLoadingSpinner_3);
    createModalTitle_5 = __importDefault(createModalTitle_5);
    showWindow_3 = __importDefault(showWindow_3);
    const displayTestAdditionModal = (env, modalPos, locator, request) => {
        const queryId = `tadd-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        // Capture `baseProps` immediately, in case the user modifies text while this dialog is open
        const baseProps = env.createParsingRequestData();
        let categories = 'loading';
        const fullEvaluate = () => env.testManager.fullyEvaluate(baseProps, request.property, locator, request.nested, 'Get reference output');
        const cleanup = () => {
            popup.remove();
        };
        const popup = (0, showWindow_3.default)({
            rootStyle: `
      width: 32rem;
      min-height: 8rem;
    `,
            pos: modalPos,
            onForceClose: cleanup,
            resizable: true,
            render: (root) => {
                while (root.firstChild)
                    root.removeChild(root.firstChild);
                root.appendChild((0, createModalTitle_5.default)({
                    renderLeft: (container) => {
                        const header = document.createElement('span');
                        header.innerText = `Add Test`;
                        container.appendChild(header);
                    },
                    onClose: cleanup,
                }).element);
                if (typeof categories === 'string') {
                    if (categories === 'loading') {
                        root.style.display = 'contents';
                        const spinner = (0, createLoadingSpinner_3.default)();
                        spinner.classList.add('absoluteCenter');
                        root.appendChild(spinner);
                    }
                    else {
                        const textHolder = document.createElement('div');
                        textHolder.style.padding = '0.5rem';
                        textHolder.innerText = `Failed listing test categories, have you set '-Dcpr.testDir=<a valid directory>'?`;
                    }
                }
                else {
                    const addRow = (title, cb) => {
                        const row = document.createElement('div');
                        row.style.padding = '0.5rem';
                        row.style.display = 'grid';
                        row.style.gridTemplateColumns = '8rem 1fr';
                        const titleNode = document.createElement('span');
                        titleNode.innerText = title;
                        titleNode.style.textAlign = 'end';
                        titleNode.style.marginRight = '0.25rem';
                        row.appendChild(titleNode);
                        // row.style.flexDirection = 'row';
                        // row.style.justifyContent= 'space-between';
                        cb(row);
                        root.appendChild(row);
                    };
                    const state = {
                        category: '',
                        name: '',
                        assertionType: 'Exact Match'
                    };
                    let update = () => { };
                    ((() => {
                        const datalistId = `${queryId}-categories`;
                        const row = document.createElement('div');
                        row.innerHTML = `
            <span style="text-align: end; margin-right: 0.25rem;">Category</span>
            <input id="cat-${queryId}" list="${datalistId}"> </input>
          `;
                        row.style.padding = '0.5rem';
                        row.style.display = 'grid';
                        row.style.gridTemplateColumns = '8rem 1fr';
                        const category = row.querySelector(`#cat-${queryId}`);
                        // row.appendChild(category);
                        // category.outerHTML = `<input list=${datalistId}></input>`;
                        category.type = 'text';
                        const datalist = document.createElement('datalist');
                        datalist.id = datalistId;
                        categories.forEach(cat => {
                            const opt = document.createElement('option');
                            opt.value = cat.lastIndexOf('.') > 0 ? cat.slice(0, cat.lastIndexOf('.')) : cat;
                            datalist.appendChild(opt);
                        });
                        row.appendChild(datalist);
                        category.oninput = () => {
                            state.category = category.value;
                            update();
                        };
                        root.appendChild(row);
                    })());
                    addRow('Name', (row) => {
                        const name = document.createElement('input');
                        name.type = 'text';
                        row.appendChild(name);
                        name.oninput = () => {
                            state.name = name.value;
                            update();
                        };
                    });
                    addRow('Assertion Type', (row) => {
                        const opts = document.createElement('select');
                        opts.value = state.assertionType[0];
                        row.appendChild(opts);
                        const assertionTypeList = ['Exact Match', 'Set Comparison', 'Smoke Test'];
                        assertionTypeList.forEach((option) => {
                            const val = document.createElement('option');
                            val.value = option;
                            val.innerText = option;
                            opts.appendChild(val);
                        });
                        opts.oninput = () => {
                            state.assertionType = opts.value;
                            update();
                        };
                    });
                    let errMsg;
                    let commitButton = document.createElement('button');
                    addRow('', (row) => {
                        commitButton.innerText = 'Add';
                        row.appendChild(commitButton);
                        commitButton.onclick = () => {
                            commitButton.disabled = true;
                            fullEvaluate()
                                .then((evalRes) => {
                                const convTest = env.testManager.convertTestResponseToTest({
                                    src: baseProps,
                                    assertType: state.assertionType === 'Exact Match'
                                        ? 'IDENTITY'
                                        : (state.assertionType === 'Set Comparison'
                                            ? 'SET'
                                            : 'SMOKE'),
                                    expectedOutput: [],
                                    nestedProperties: [],
                                    property: evalRes.property,
                                    locator,
                                    name: state.name,
                                }, evalRes);
                                if (convTest === null) {
                                    throw new Error(`Couldn't locate root test node`);
                                }
                                env.testManager.addTest(state.category, convTest, false).then((result) => {
                                    if (result === 'ok') {
                                        cleanup();
                                        return;
                                    }
                                    else {
                                        console.warn('Error when adding test:', result);
                                        commitButton.disabled = false;
                                        errMsg.innerText = `Error when adding test. Please try again or check server log for more information.`;
                                    }
                                }).catch(err => {
                                    console.warn('Failed adding test:', err);
                                    commitButton.disabled = false;
                                    errMsg.innerText = `Failed adding test. Please try again`;
                                });
                            })
                                .catch((err) => {
                                commitButton.disabled = false;
                                console.warn('Failed getting test reference data:', err);
                                errMsg.innerText = `Failed creating test. Please try again`;
                            });
                            // typeof line === 'string' ? line : { naive: line, robust: line }
                        };
                    });
                    addRow('', (row) => {
                        errMsg = document.createElement('p');
                        errMsg.style.textAlign = 'center';
                        errMsg.classList.add('captured-stderr');
                        row.appendChild(errMsg);
                        update = () => {
                            commitButton.disabled = true;
                            if (!state.category) {
                                errMsg.innerText = `Missing category. The test will be saved in a file called '<category>.json'`;
                            }
                            else if (!/^[a-zA-Z0-9-_]+$/.test(state.category)) {
                                errMsg.innerText = `Invalid category, please only use '[a-zA-Z0-9-_]' in the name, i.e A-Z, numbers, dash (-) and underscore (_).'`;
                            }
                            else if (!state.name) {
                                errMsg.innerText = `Missing test name`;
                            }
                            else {
                                commitButton.disabled = false;
                                errMsg.innerText = '';
                            }
                        };
                    });
                    update();
                }
            },
        });
        env.testManager.listTestSuiteCategories()
            .then((result) => {
            categories = result;
            popup.refresh();
        });
    };
    exports.default = displayTestAdditionModal;
});
define("ui/renderProbeModalTitleLeft", ["require", "exports", "ui/create/createTextSpanIndicator", "ui/create/registerNodeSelector", "ui/popup/displayArgModal", "ui/popup/displayAttributeModal", "ui/popup/displayProbeModal", "ui/popup/formatAttr", "ui/startEndToSpan", "ui/trimTypeName"], function (require, exports, createTextSpanIndicator_6, registerNodeSelector_3, displayArgModal_2, displayAttributeModal_4, displayProbeModal_3, formatAttr_3, startEndToSpan_7, trimTypeName_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createTextSpanIndicator_6 = __importDefault(createTextSpanIndicator_6);
    registerNodeSelector_3 = __importDefault(registerNodeSelector_3);
    displayArgModal_2 = __importDefault(displayArgModal_2);
    displayAttributeModal_4 = __importDefault(displayAttributeModal_4);
    formatAttr_3 = __importStar(formatAttr_3);
    startEndToSpan_7 = __importDefault(startEndToSpan_7);
    trimTypeName_4 = __importDefault(trimTypeName_4);
    const renderProbeModalTitleLeft = (env, container, close, getWindowPos, stickyController, locator, attr, nested, typeRenderingStyle) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        if (typeRenderingStyle !== 'minimal-nested') {
            const headType = document.createElement('span');
            headType.classList.add('syntax-type');
            headType.innerText = `${(_a = locator.get().result.label) !== null && _a !== void 0 ? _a : (0, trimTypeName_4.default)(locator.get().result.type)}`;
            container.appendChild(headType);
        }
        const headAttr = document.createElement('span');
        headAttr.classList.add('syntax-attr');
        if (attr.name === displayProbeModal_3.searchProbePropertyName) {
            const propName = (_d = (_c = (_b = attr.args) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '';
            headAttr.innerText = `.*.${propName}`;
        }
        else if (!attr.args || attr.args.length === 0) {
            headAttr.innerText = `.${(0, formatAttr_3.default)(attr)}`;
        }
        else {
            headAttr.appendChild(document.createTextNode(`.${attr.name}(`));
            (0, formatAttr_3.formatAttrArgList)(headAttr, attr);
            headAttr.appendChild(document.createTextNode(`)`));
        }
        if (env) {
            headAttr.onmousedown = (e) => { e.stopPropagation(); };
            headAttr.classList.add('clickHighlightOnHover');
            headAttr.onclick = (e) => {
                var _a, _b, _c, _d, _e, _f, _g;
                let initialFilter = '';
                if (attr.name == displayProbeModal_3.searchProbePropertyName) {
                    const propName = (_c = (_b = (_a = attr.args) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : '';
                    if (propName) {
                        console.log('initialFilter:', propName);
                        initialFilter = `*.${propName}`;
                    }
                    if (((_e = (_d = attr.args) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0) >= 2) {
                        initialFilter = `${initialFilter}?${(_g = (_f = attr.args) === null || _f === void 0 ? void 0 : _f[1]) === null || _g === void 0 ? void 0 : _g.value}`;
                    }
                }
                if (env.duplicateOnAttr() != e.shiftKey) {
                    (0, displayAttributeModal_4.default)(env, null, locator.isMutable() ? locator.createMutableClone() : locator, { initialFilter });
                }
                else {
                    close === null || close === void 0 ? void 0 : close();
                    (0, displayAttributeModal_4.default)(env, getWindowPos(), locator, { initialFilter });
                }
                e.stopPropagation();
            };
        }
        container.appendChild(headAttr);
        if (attr.name === displayProbeModal_3.searchProbePropertyName && ((_f = (_e = attr.args) === null || _e === void 0 ? void 0 : _e.length) !== null && _f !== void 0 ? _f : 0) >= 2) {
            const pred = document.createElement('span');
            pred.classList.add('syntax-int');
            pred.innerText = `?${(_h = (_g = attr.args) === null || _g === void 0 ? void 0 : _g[1]) === null || _h === void 0 ? void 0 : _h.value}`;
            container.appendChild(pred);
        }
        if (((_j = attr.args) === null || _j === void 0 ? void 0 : _j.length) && env && attr.name !== displayProbeModal_3.searchProbePropertyName) {
            const editButton = document.createElement('img');
            editButton.src = '/icons/edit_white_24dp.svg';
            editButton.classList.add('modalEditButton');
            editButton.classList.add('clickHighlightOnHover');
            editButton.onmousedown = (e) => { e.stopPropagation(); };
            editButton.onclick = () => {
                close === null || close === void 0 ? void 0 : close();
                (0, displayArgModal_2.default)(env, getWindowPos(), locator, attr, nested);
            };
            container.appendChild(editButton);
        }
        if (env) {
            const spanIndicator = (0, createTextSpanIndicator_6.default)({
                span: (0, startEndToSpan_7.default)(locator.get().result.start, locator.get().result.end),
                marginLeft: true,
                onHover: on => env.updateSpanHighlight(on ? (0, startEndToSpan_7.default)(locator.get().result.start, locator.get().result.end) : null),
                onClick: (_k = stickyController === null || stickyController === void 0 ? void 0 : stickyController.onClick) !== null && _k !== void 0 ? _k : undefined,
                external: locator.get().result.external,
                styleOverride: typeRenderingStyle === 'minimal-nested' ? 'lines-compact' : undefined,
            });
            stickyController === null || stickyController === void 0 ? void 0 : stickyController.configure(spanIndicator, locator);
            (0, registerNodeSelector_3.default)(spanIndicator, () => locator.get());
            container.appendChild(spanIndicator);
        }
    };
    exports.default = renderProbeModalTitleLeft;
});
define("ui/create/createInlineWindowManager", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const createInlineArea = (args) => {
        let { inlineRoot, expansionAreaInsideTheRoot, bumpContainingWindowIntoScreen } = args;
        const applyActiveRootStyling = (from) => {
            inlineRoot.classList.add('inline-window-active');
            inlineRoot.style.border = '1px solid black';
            inlineRoot.style.paddingTop = '0.25rem';
            inlineRoot.style.marginTop = '0.25rem';
            inlineRoot.style.marginBottom = '0.25rem';
        };
        const activeWindowClosers = [];
        const localChangeListeners = {};
        // const activeWindowRefreshers: (() => void)[] = [];
        let activeSubWindowCount = 0;
        const area = {
            getNestedModalEnv: (parentEnv) => {
                var _a, _b;
                return ({
                    ...parentEnv,
                    showWindow: (args) => area.add(args),
                    onChangeListeners: localChangeListeners,
                    probeWindowStateSavers: args.localWindowStateSaves,
                    probeMarkers: (_a = args.parentArgs.probeMarkersOverride) !== null && _a !== void 0 ? _a : parentEnv.probeMarkers,
                    updateMarkers: (_b = args.parentArgs.updateMarkersOverride) !== null && _b !== void 0 ? _b : parentEnv.updateMarkers,
                });
            },
            add: (args) => {
                if (activeSubWindowCount === 0) {
                    applyActiveRootStyling('add');
                    expansionAreaInsideTheRoot.style.marginTop = '0.25rem';
                }
                ++activeSubWindowCount;
                const closer = () => args.onForceClose();
                activeWindowClosers.push(closer);
                // const refresher = () => renderFn();
                // activeWindowRefreshers.push(refresher);
                const localDiv = document.createElement('div');
                if (args.rootStyle) {
                    localDiv.style = args.rootStyle;
                }
                localDiv.style.overflow = 'scroll';
                localDiv.classList.add('subWindow');
                expansionAreaInsideTheRoot.prepend(localDiv);
                let lastCancelToken = {};
                const renderFn = () => {
                    lastCancelToken.cancelled = true;
                    lastCancelToken = {};
                    args.render(localDiv, {
                        cancelToken: lastCancelToken,
                        bringToFront: () => { }, // TODO bring this from somewhere
                    });
                };
                renderFn();
                return {
                    getPos: () => ({ x: 0, y: 0 }),
                    getSize: () => ({ width: localDiv.clientWidth, height: localDiv.clientHeight }),
                    refresh: () => renderFn(),
                    remove: () => {
                        const parent = localDiv.parentElement;
                        if (parent)
                            parent.removeChild(localDiv);
                        --activeSubWindowCount;
                        if (activeSubWindowCount === 0) {
                            inlineRoot.classList.remove('inline-window-active');
                            inlineRoot.style.border = 'none';
                            inlineRoot.style.paddingTop = '0';
                            inlineRoot.style.marginTop = '0';
                            inlineRoot.style.marginBottom = '0';
                        }
                        const idx = activeWindowClosers.findIndex(x => x === closer);
                        if (idx !== -1) {
                            activeWindowClosers.splice(idx, 1);
                        }
                        else {
                            console.log('could not find index of closer in remove');
                        }
                    },
                    bumpIntoScreen: () => { bumpContainingWindowIntoScreen(); }
                };
            },
            notifyListenersOfChange: () => {
                Object.values(localChangeListeners).forEach(chl => chl());
            }
        };
        return {
            area,
            destroyer: () => {
                [...activeWindowClosers].forEach((closer, idx) => {
                    closer();
                });
            },
            updateRoot: (newRoot, newBumper) => {
                inlineRoot = newRoot;
                if (activeSubWindowCount > 0) {
                    applyActiveRootStyling(`update:${activeSubWindowCount}`);
                }
                bumpContainingWindowIntoScreen = newBumper;
            },
            // refresh: () => {
            //   activeWindowRefreshers.forEach(closer => closer());
            // },
        };
    };
    ;
    const createInlineWindowManager = (args = {}) => {
        const areas = {};
        const encodeAreaId = (raw) => JSON.stringify(raw);
        const decodeAreaId = (raw) => JSON.parse(raw);
        return {
            getPreviousExpansionArea: (areaId) => { var _a, _b; return (_b = (_a = areas[encodeAreaId(areaId)]) === null || _a === void 0 ? void 0 : _a.expansionArea) !== null && _b !== void 0 ? _b : null; },
            getPreviouslyAssociatedLocator: (areaId) => { var _a, _b; return (_b = (_a = areas[encodeAreaId(areaId)]) === null || _a === void 0 ? void 0 : _a.locator) !== null && _b !== void 0 ? _b : null; },
            getArea: (areaId, inlineRoot, expansionAreaInsideTheRoot, locator, bumpContainingWindowIntoScreen) => {
                const encodedId = encodeAreaId(areaId);
                if (!areas[encodedId]) {
                    const localWindowStateSaves = {};
                    // areaToLocalWindowStateSaves[id] =
                    areas[encodedId] = {
                        localWindowStateSaves,
                        expansionArea: expansionAreaInsideTheRoot,
                        locator,
                        area: createInlineArea({
                            inlineRoot,
                            expansionAreaInsideTheRoot,
                            localWindowStateSaves,
                            bumpContainingWindowIntoScreen,
                            parentArgs: args,
                        })
                    };
                }
                else {
                    areas[encodedId].area.updateRoot(inlineRoot, bumpContainingWindowIntoScreen);
                }
                return areas[encodedId].area.area;
            },
            getWindowStates: () => {
                const ret = {};
                Object.entries(areas).forEach(([key, val]) => {
                    const states = [];
                    Object.values(val.localWindowStateSaves).forEach(saver => saver(states));
                    ret[key] = states;
                });
                return ret;
            },
            destroy: () => Object.values(areas).forEach(area => area.area.destroyer()),
            conditiionallyDestroyAreas: (predicate) => {
                Object.entries(areas).forEach(([key, val]) => {
                    if (predicate(decodeAreaId(key))) {
                        delete areas[key];
                        val.area.destroyer();
                    }
                });
            },
            notifyListenersOfChange: () => Object.values(areas).forEach(area => area.area.area.notifyListenersOfChange()),
            // refresh: () => Object.values(areas).forEach(area => area.area.refresh()),
        };
    };
    exports.default = createInlineWindowManager;
});
define("network/evaluateProperty", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const evaluateProperty = (env, req, onSlowResponseDetected, onStatusUpdate, cleanupSlownessInformation) => {
        let cancelled = false;
        let activelyLoadingJob = null;
        const doStopJob = (jobId) => env.performTypedRpc({
            type: 'Concurrent:StopJob',
            job: jobId,
        }).then(res => {
            if (res.err) {
                console.warn('Error when stopping job:', res.err);
                return false;
            }
            return true;
        });
        let stopper = () => { };
        return {
            cancel: () => {
                cancelled = true;
                if (activelyLoadingJob !== null) {
                    doStopJob(activelyLoadingJob);
                    activelyLoadingJob = null;
                }
                stopper();
            },
            fetch: () => new Promise((resolve, reject) => {
                var _a;
                stopper = () => resolve('stopped');
                let isDone = false;
                let isConnectedToConcurrentCapableServer = false;
                let knownStatus = 'Unknown';
                let knownStackTrace = null;
                let localConcurrentCleanup = () => { };
                const initialPollDelayTimer = setTimeout(() => {
                    if (isDone || cancelled || !isConnectedToConcurrentCapableServer) {
                        return;
                    }
                    onSlowResponseDetected();
                    localConcurrentCleanup = () => { cleanupSlownessInformation(); };
                    const poll = () => {
                        if (isDone || cancelled) {
                            return;
                        }
                        env.performTypedRpc({
                            type: 'Concurrent:PollWorkerStatus',
                            job: jobId,
                        })
                            .then(res => {
                            if (res.ok) {
                                // Polled OK, async update will be delivered to job monitor below
                                // Queue future poll.
                                setTimeout(poll, 1000);
                            }
                            else {
                                console.warn('Error when polling for job status');
                                // Don't queue more polling, very unlikely to work anyway.
                            }
                        });
                    };
                    poll();
                }, 5000);
                const jobId = env.createJobId(update => {
                    switch (update.value.type) {
                        case 'status': {
                            knownStatus = update.value.value;
                            onStatusUpdate(knownStatus, knownStackTrace);
                            break;
                        }
                        case 'workerStackTrace': {
                            knownStackTrace = update.value.value;
                            onStatusUpdate(knownStatus, knownStackTrace);
                            break;
                        }
                        case 'workerTaskDone': {
                            const wtd = update.value.value;
                            switch (wtd.type) {
                                case 'normal': {
                                    isDone = true;
                                    activelyLoadingJob = null;
                                    localConcurrentCleanup();
                                    const cast = wtd.value;
                                    if (cast.response.type == 'job') {
                                        throw new Error(`Unexpected 'job' result in async update`);
                                    }
                                    resolve(cast.response.value);
                                    break;
                                }
                            }
                            break;
                        }
                    }
                });
                env.performTypedRpc({
                    ...req,
                    job: jobId,
                    jobLabel: `Probe: '${`${(_a = req.locator.result.label) !== null && _a !== void 0 ? _a : req.locator.result.type}`.split('.').slice(-1)[0]}.${req.property.name}'`,
                })
                    .then((data) => {
                    if (data.response.type === 'job') {
                        // Async work queued, not done.
                        if (cancelled) {
                            // We were removed while this request was sent
                            // Stop it asap
                            doStopJob(jobId);
                            clearTimeout(initialPollDelayTimer);
                        }
                        else {
                            activelyLoadingJob = jobId;
                        }
                        isConnectedToConcurrentCapableServer = true;
                    }
                    else {
                        // Sync work executed, done.
                        clearTimeout(initialPollDelayTimer);
                        isDone = true;
                        resolve(data.response.value);
                    }
                });
            }),
        };
    };
    exports.default = evaluateProperty;
});
define("ui/create/createMinimizedProbeModal", ["require", "exports", "model/adjustLocator", "model/findLocatorWithNestingPath", "model/UpdatableNodeLocator", "network/evaluateProperty", "ui/popup/displayProbeModal", "ui/startEndToSpan", "ui/create/registerOnHover"], function (require, exports, adjustLocator_2, findLocatorWithNestingPath_2, UpdatableNodeLocator_4, evaluateProperty_1, displayProbeModal_4, startEndToSpan_8, registerOnHover_4) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.createDiagnosticSource = void 0;
    evaluateProperty_1 = __importDefault(evaluateProperty_1);
    displayProbeModal_4 = __importStar(displayProbeModal_4);
    startEndToSpan_8 = __importDefault(startEndToSpan_8);
    registerOnHover_4 = __importDefault(registerOnHover_4);
    const createMinimizedProbeModal = (env, locator, property, nestedWindows, optionalArgs = {}) => {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const queryId = `minimized-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        const localErrors = [];
        let showDiagnostics = (_a = optionalArgs.showDiagnostics) !== null && _a !== void 0 ? _a : true;
        env.probeMarkers[queryId] = showDiagnostics ? localErrors : [];
        let activelyLoadingJobCleanup = null;
        let loading = false;
        let isCleanedUp = false;
        let refreshOnDone = false;
        const doStopJob = (jobId) => env.performTypedRpc({
            type: 'Concurrent:StopJob',
            job: jobId,
        }).then(res => {
            if (res.err) {
                console.warn('Error when stopping job:', res.err);
                return false;
            }
            return true;
        });
        const cleanup = () => {
            isCleanedUp = true;
            delete env.onChangeListeners[queryId];
            delete env.probeMarkers[queryId];
            delete env.probeWindowStateSavers[queryId];
            env.currentlyLoadingModals.delete(queryId);
            if (loading && activelyLoadingJobCleanup) {
                activelyLoadingJobCleanup();
            }
            if (localErrors.length > 0) {
                env.updateMarkers();
            }
            env.triggerWindowSave();
        };
        const refresh = () => {
            if (isCleanedUp) {
                return;
            }
            if (loading) {
                refreshOnDone = true;
                return;
            }
            loading = true;
            (async () => {
                var _a;
                const src = env.createParsingRequestData();
                const rootEvalProp = (0, evaluateProperty_1.default)(env, {
                    captureStdout: false,
                    locator,
                    property,
                    src,
                    type: 'EvaluateProperty',
                }, 
                // Status update stuff, can we use this here? :thinking:
                () => { }, () => { }, () => { });
                const cleanups = [];
                cleanups.push(rootEvalProp.cancel);
                activelyLoadingJobCleanup = () => {
                    cleanups.forEach(cl => cl());
                };
                const resp = await rootEvalProp.fetch();
                // };
                if (resp === 'stopped') {
                    console.warn('evaluateProperty automatically stopped?');
                    return;
                }
                const newErrors = [];
                newErrors.push(...(_a = resp.errors) !== null && _a !== void 0 ? _a : []);
                const handleLines = async (relatedProp, lines, nests) => {
                    const nestedRequests = [];
                    Object.entries((0, findLocatorWithNestingPath_2.findAllLocatorsWithinNestingPath)(lines)).forEach(([unprefixedPath, nestedLocator]) => {
                        var _a, _b, _c, _d;
                        const nwPathKey = JSON.stringify(unprefixedPath);
                        const handleNested = async (nwData) => {
                            var _a;
                            const nestedEvalProp = (0, evaluateProperty_1.default)(env, {
                                captureStdout: false,
                                // No need to capture tracing information in minimized probes
                                locator: nestedLocator,
                                property: nwData.property,
                                src,
                                type: 'EvaluateProperty',
                            }, 
                            // Status update stuff, can we use this here? :thinking:
                            () => { }, () => { }, () => { });
                            cleanups.push(nestedEvalProp.cancel);
                            const resp = await nestedEvalProp.fetch();
                            if (resp === 'stopped') {
                                console.warn('evaluateProperty automatically stopped?');
                                return;
                            }
                            newErrors.push(...(_a = resp.errors) !== null && _a !== void 0 ? _a : []);
                            await handleLines(nwData.property, resp.body, nwData.nested);
                        };
                        (_a = nests[nwPathKey]) === null || _a === void 0 ? void 0 : _a.forEach(nw => {
                            nestedRequests.push(async () => {
                                if (nw.data.type === 'probe') {
                                    console.log('mini handle nested 1');
                                    await handleNested(nw.data);
                                }
                            });
                        });
                        if (!((_b = nests[nwPathKey]) === null || _b === void 0 ? void 0 : _b.length) && relatedProp.name === displayProbeModal_4.searchProbePropertyName) {
                            const propName = `${(_d = (_c = relatedProp.args) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.value}`;
                            if (propName !== '') {
                                nestedRequests.push(() => handleNested({
                                    type: 'probe',
                                    locator: nestedLocator,
                                    property: { name: propName },
                                    nested: {}
                                }));
                            }
                        }
                    });
                    await Promise.all(nestedRequests.map(nr => nr()));
                };
                await handleLines(property, resp.body, nestedWindows);
                if (newErrors.length) {
                    squigglyCheckboxWrapper.style.display = 'flex';
                }
                else {
                    squigglyCheckboxWrapper.style.display = 'none';
                }
                if (newErrors.length || localErrors.length) {
                    localErrors.length = 0;
                    localErrors.push(...newErrors.map(err => ({ ...err, source: createDiagnosticSource(locator, property) })));
                    env.updateMarkers();
                }
            })()
                .catch((err) => {
                console.warn('Error when refreshing minimized probe', err);
            })
                .finally(() => {
                loading = false;
                if (refreshOnDone) {
                    refreshOnDone = false;
                    refresh();
                }
            });
        };
        refresh();
        env.onChangeListeners[queryId] = (adjusters) => {
            if (adjusters) {
                adjusters.forEach(adj => {
                    (0, adjustLocator_2.adjustLocatorAndProperty)(adj, locator, property);
                });
            }
            refresh();
        };
        const ui = document.createElement('div');
        const clickableUi = document.createElement('div');
        ui.appendChild(clickableUi);
        const typeLbl = document.createElement('span');
        typeLbl.innerText = `${(_b = locator.result.label) !== null && _b !== void 0 ? _b : locator.result.type}`.split('.').slice(-1)[0];
        typeLbl.classList.add('syntax-type');
        clickableUi.appendChild(typeLbl);
        const attrLbl = document.createElement('span');
        const fixedPropName = property.name == displayProbeModal_4.searchProbePropertyName
            ? `*.${(_d = (_c = property.args) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.value}`
            : property.name;
        if (locator.steps.length === 0 && property.name == displayProbeModal_4.searchProbePropertyName) {
            // Hide title?
            typeLbl.style.display = 'none';
            attrLbl.innerText = fixedPropName;
        }
        else {
            attrLbl.innerText = `.${fixedPropName}`;
        }
        attrLbl.classList.add('syntax-attr');
        clickableUi.appendChild(attrLbl);
        if (property.name == displayProbeModal_4.searchProbePropertyName && ((_f = (_e = property.args) === null || _e === void 0 ? void 0 : _e.length) !== null && _f !== void 0 ? _f : 0) >= 2) {
            const pred = document.createElement('span');
            pred.classList.add('syntax-int');
            pred.innerText = `[${(_h = (_g = property.args) === null || _g === void 0 ? void 0 : _g[1]) === null || _h === void 0 ? void 0 : _h.value}]`;
            clickableUi.appendChild(pred);
        }
        env.probeWindowStateSavers[queryId] = (target) => {
            target.push({
                modalPos: { x: 0, y: 0 },
                data: {
                    type: 'minimized-probe',
                    data: {
                        type: 'probe',
                        locator,
                        property,
                        nested: nestedWindows,
                        showDiagnostics,
                    }
                },
            });
        };
        env.triggerWindowSave();
        (0, registerOnHover_4.default)(clickableUi, (on) => env.updateSpanHighlight((on && !locator.result.external) ? (0, startEndToSpan_8.default)(locator.result.start, locator.result.end) : null));
        clickableUi.onclick = (e) => {
            if (!e.shiftKey && ui.parentElement) {
                ui.parentElement.removeChild(ui);
            }
            env.updateSpanHighlight(null);
            (0, displayProbeModal_4.default)(env, null, (0, UpdatableNodeLocator_4.createMutableLocator)(locator), property, nestedWindows, { showDiagnostics });
            cleanup();
        };
        const squigglyCheckboxWrapper = createSquigglyCheckbox({
            onInput: (checked) => {
                showDiagnostics = checked;
                env.probeMarkers[queryId] = checked ? localErrors : [];
                env.updateMarkers();
            },
            initiallyChecked: showDiagnostics,
        });
        squigglyCheckboxWrapper.style.marginLeft = '0.125rem';
        squigglyCheckboxWrapper.style.display = 'none';
        ui.appendChild(squigglyCheckboxWrapper);
        ui.classList.add('minimizedProbeWindow');
        clickableUi.classList.add('minimizedProbeWindowOpener');
        squigglyCheckboxWrapper.classList.add('minimiedProbeWindowCheckboxWrapper');
        return { ui };
    };
    const createDiagnosticSource = (locator, property) => {
        var _a, _b, _c, _d, _e, _f, _g;
        let source = `${(_a = locator.result.label) !== null && _a !== void 0 ? _a : locator.result.type}`.split('.').slice(-1)[0];
        if (property.name === displayProbeModal_4.searchProbePropertyName) {
            const query = (_c = (_b = property.args) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value;
            let tail = '';
            if (((_e = (_d = property.args) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0) >= 2) {
                tail = `[${(_g = (_f = property.args) === null || _f === void 0 ? void 0 : _f[1]) === null || _g === void 0 ? void 0 : _g.value}]`;
            }
            if (locator.steps.length === 0) {
                return `*.${query}${tail}`;
            }
            return `${source}.*.${query}${tail}`;
        }
        return `${source}.${property.name}`;
    };
    exports.createDiagnosticSource = createDiagnosticSource;
    exports.default = createMinimizedProbeModal;
});
define("ui/popup/displayProbeModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "model/adjustLocator", "ui/popup/displayHelp", "ui/popup/encodeRpcBodyLines", "ui/create/createStickyHighlightController", "ui/popup/displayTestAdditionModal", "ui/renderProbeModalTitleLeft", "settings", "ui/popup/displayAttributeModal", "ui/popup/displayAstModal", "ui/create/createInlineWindowManager", "model/UpdatableNodeLocator", "ui/create/createMinimizedProbeModal", "network/evaluateProperty", "hacks", "ui/startEndToSpan"], function (require, exports, createLoadingSpinner_4, createModalTitle_6, adjustLocator_3, displayHelp_3, encodeRpcBodyLines_3, createStickyHighlightController_2, displayTestAdditionModal_1, renderProbeModalTitleLeft_1, settings_4, displayAttributeModal_5, displayAstModal_2, createInlineWindowManager_1, UpdatableNodeLocator_5, createMinimizedProbeModal_1, evaluateProperty_2, hacks_4, startEndToSpan_9) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.searchProbePropertyName = void 0;
    createLoadingSpinner_4 = __importDefault(createLoadingSpinner_4);
    createModalTitle_6 = __importDefault(createModalTitle_6);
    displayHelp_3 = __importDefault(displayHelp_3);
    encodeRpcBodyLines_3 = __importDefault(encodeRpcBodyLines_3);
    createStickyHighlightController_2 = __importDefault(createStickyHighlightController_2);
    displayTestAdditionModal_1 = __importDefault(displayTestAdditionModal_1);
    renderProbeModalTitleLeft_1 = __importDefault(renderProbeModalTitleLeft_1);
    settings_4 = __importDefault(settings_4);
    displayAttributeModal_5 = __importDefault(displayAttributeModal_5);
    displayAstModal_2 = __importDefault(displayAstModal_2);
    createInlineWindowManager_1 = __importDefault(createInlineWindowManager_1);
    evaluateProperty_2 = __importDefault(evaluateProperty_2);
    startEndToSpan_9 = __importDefault(startEndToSpan_9);
    const searchProbePropertyName = `m:NodesWithProperty`;
    exports.searchProbePropertyName = searchProbePropertyName;
    const displayProbeModal = (env, modalPos, locator, property, nestedWindows, optionalArgs = {}) => {
        var _a, _b;
        const queryId = `query-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        const localDiagnostics = [];
        let diagnosticsGetter = localDiagnostics;
        let showDiagnostics = (_a = optionalArgs.showDiagnostics) !== null && _a !== void 0 ? _a : true;
        let updateMarkers = env.updateMarkers;
        const stickyController = (0, createStickyHighlightController_2.default)(env, (_b = optionalArgs.stickyHighlight) !== null && _b !== void 0 ? _b : '');
        let activelyLoadingJob = null;
        let loading = false;
        let isCleanedUp = false;
        nestedWindows = { ...nestedWindows }; // Make copy so we can locally modify it
        const reinstallDiagnosticsGetter = () => {
            env.probeMarkers[queryId] = showDiagnostics ? diagnosticsGetter : [];
        };
        reinstallDiagnosticsGetter();
        const doCreateInlineWindowManager = () => {
            if (env !== env.getGlobalModalEnv()) {
                return {
                    inlineWindowManager: (0, createInlineWindowManager_1.default)(),
                    shouldShowDiagnosticsToggler: false,
                };
            }
            const override = {};
            diagnosticsGetter = () => {
                const sum = [...localDiagnostics];
                Object.values(override).forEach(val => {
                    sum.push(...(Array.isArray(val) ? val : val()).map(diag => {
                        // Replace source with ourselves
                        return { ...diag, source: (0, createMinimizedProbeModal_1.createDiagnosticSource)(locator.get(), property) };
                    }));
                });
                return sum;
            };
            reinstallDiagnosticsGetter();
            return {
                inlineWindowManager: (0, createInlineWindowManager_1.default)({
                    probeMarkersOverride: override,
                    updateMarkersOverride: () => updateMarkers(),
                }),
                shouldShowDiagnosticsToggler: true
            };
        };
        const { inlineWindowManager, shouldShowDiagnosticsToggler } = doCreateInlineWindowManager();
        // const inline
        const doStopJob = (jobId) => env.performTypedRpc({
            type: 'Concurrent:StopJob',
            job: jobId,
        }).then(res => {
            if (res.err) {
                console.warn('Error when stopping job:', res.err);
                return false;
            }
            return true;
        });
        const cleanup = () => {
            queryWindow.remove();
            isCleanedUp = true;
            delete env.onChangeListeners[queryId];
            delete env.probeMarkers[queryId];
            delete env.probeWindowStateSavers[queryId];
            env.currentlyLoadingModals.delete(queryId);
            stickyController.cleanup();
            if (loading && activelyLoadingJob !== null) {
                // doStopJob(activelyLoadingJob);
                activelyLoadingJob.cancel();
            }
            // console.log('cleanup: ', queryId, 'inline state:', inlineWindowManager.getWindowStates());
            inlineWindowManager.destroy();
            env.updateMarkers();
            env.triggerWindowSave();
        };
        let copyBody = [];
        const getNestedTestRequests = (path, state) => {
            const nested = [];
            Object.entries(state.nested).forEach(([path, val]) => {
                const pathIndexes = JSON.parse(path);
                val.forEach(v => {
                    if (v.data.type !== 'probe') {
                        return;
                    }
                    nested.push(getNestedTestRequests(pathIndexes, v.data));
                });
            });
            return { path, property: state.property, nested, };
        };
        const createTitle = () => {
            const titleNode = (0, createModalTitle_6.default)({
                extraActions: [
                    ...(env.getGlobalModalEnv() === env
                        ? [
                            {
                                title: 'Duplicate window',
                                invoke: () => {
                                    const pos = queryWindow.getPos();
                                    displayProbeModal(env, { x: pos.x + 10, y: pos.y + 10 }, locator.createMutableClone(), property, inlineWindowManager.getWindowStates(), { showDiagnostics, stickyHighlight: stickyController.getActiveColor(), });
                                },
                            },
                            {
                                title: 'Minimize window',
                                invoke: () => {
                                    env.minimize(getWindowStateData());
                                    cleanup();
                                }
                            }
                        ]
                        : [{
                                title: 'Detatch window',
                                invoke: () => {
                                    const states = inlineWindowManager.getWindowStates();
                                    cleanup();
                                    displayProbeModal(env.getGlobalModalEnv(), null, locator.createMutableClone(), property, states, { showDiagnostics, stickyHighlight: stickyController.getActiveColor(), });
                                },
                            }]),
                    {
                        title: 'Copy input to clipboard',
                        invoke: () => {
                            navigator.clipboard.writeText(JSON.stringify({ locator: locator.get(), property }, null, 2));
                        }
                    },
                    {
                        title: 'Copy output as JSON to clipboard',
                        invoke: () => {
                            navigator.clipboard.writeText(copyBody.map(line => typeof line === 'string' ? line : JSON.stringify(line, null, 2)).join('\n'));
                        }
                    },
                    {
                        title: 'Copy output as text to clipboard',
                        invoke: () => {
                            const buildLine = (line) => {
                                var _a;
                                switch (line.type) {
                                    case 'plain':
                                    case 'stdout':
                                    case 'stderr':
                                    case 'dotGraph':
                                    case 'streamArg':
                                    case 'html': {
                                        return line.value;
                                    }
                                    case 'highlightMsg': {
                                        return line.value.msg;
                                    }
                                    case 'arr': {
                                        return ['', ...line.value.map(buildLine)].join('\n').replace(/\n/g, '\n  ');
                                    }
                                    case 'node': {
                                        const span = (0, startEndToSpan_9.default)(line.value.result.start, line.value.result.end);
                                        return `[${span.lineStart}:${span.colStart}-${span.lineEnd}:${span.colEnd}] ${(_a = line.value.result.label) !== null && _a !== void 0 ? _a : line.value.result.type.split('.').slice(-1)[0]}`;
                                    }
                                    case 'tracing': {
                                        const buildTracingLine = (tr) => {
                                            var _a;
                                            const lines = [];
                                            lines.push(`${(_a = tr.node.result.label) !== null && _a !== void 0 ? _a : tr.node.result.type.split('.').slice(-1)[0]}.${tr.prop.name}`);
                                            tr.dependencies.forEach((dep, depIdx) => lines.push(`${depIdx == tr.dependencies.length - 1 ? '└' : '├'} ${buildTracingLine(dep)}`));
                                            lines.push(`-> ${buildLine(tr.result)}`);
                                            return lines.join('\n').replace(/\n/g, '\n│ ');
                                        };
                                        return buildTracingLine(line.value);
                                    }
                                    default: {
                                        (0, hacks_4.assertUnreachable)(line);
                                        return '';
                                    }
                                }
                            };
                            navigator.clipboard.writeText(copyBody.map(buildLine).join('\n'));
                        }
                    },
                    // ...((property.args?.length ?? 0) === 0 ? [
                    //   {
                    //     title: 'Create search probe',
                    //     invoke: () => {
                    //       displayProbeModal(env, null, locator, { name: searchProbePropertyName, args: [{ type: 'string', value: property.name }] }, {});
                    //     }
                    //   },
                    // ] : []),
                    {
                        title: 'General probe help',
                        invoke: () => {
                            (0, displayHelp_3.default)('probe-window', () => { });
                        }
                    },
                    {
                        title: 'Magic output messages help',
                        invoke: () => {
                            (0, displayHelp_3.default)('magic-stdout-messages', () => { });
                        }
                    },
                    ...[
                        settings_4.default.shouldEnableTesting() && (env === env.getGlobalModalEnv()) && {
                            title: 'Save as test',
                            invoke: () => {
                                const nestedReq = getNestedTestRequests([], getWindowStateData());
                                (0, displayTestAdditionModal_1.default)(env, queryWindow.getPos(), locator.get(), {
                                    property: nestedReq.property,
                                    nested: nestedReq.nested,
                                });
                            },
                        }
                    ].filter(Boolean),
                ],
                // onDuplicate: () => {
                //   const pos = queryWindow.getPos();
                //   displayProbeModal(env, { x: pos.x + 10, y: pos.y + 10 }, JSON.parse(JSON.stringify(locator)), attr);
                // },
                renderLeft: (container) => (0, renderProbeModalTitleLeft_1.default)(env, container, () => {
                    cleanup();
                }, () => queryWindow.getPos(), stickyController, locator, property, nestedWindows, env === env.getGlobalModalEnv() ? 'default' : 'minimal-nested'),
                onClose: () => {
                    cleanup();
                },
            }).element;
            if (env === env.getGlobalModalEnv()) {
                titleNode.style.zIndex = `1`;
            }
            return titleNode;
        };
        let lastSpinner = null;
        let isFirstRender = true;
        let refreshOnDone = false;
        const tracingExpansionTracker = {};
        const queryWindow = env.showWindow({
            pos: modalPos,
            debugLabel: `probe:${property.name}`,
            rootStyle: `
      min-width: 16rem;
      min-height: fit-content;
    `,
            resizable: true,
            onFinishedMove: () => env.triggerWindowSave(),
            onForceClose: cleanup,
            render: (root, { cancelToken, bringToFront }) => {
                if (lastSpinner != null) {
                    lastSpinner.style.display = 'inline-block';
                    lastSpinner = null;
                }
                else if (isFirstRender) {
                    isFirstRender = false;
                    while (root.firstChild)
                        root.removeChild(root.firstChild);
                    root.appendChild(createTitle());
                    const spinner = (0, createLoadingSpinner_4.default)();
                    spinner.classList.add('absoluteCenter');
                    const spinnerWrapper = document.createElement('div');
                    spinnerWrapper.style.height = '7rem';
                    spinnerWrapper.style.display = 'block';
                    spinnerWrapper.style.position = 'relative';
                    spinnerWrapper.appendChild(spinner);
                    root.appendChild(spinnerWrapper);
                }
                loading = true;
                if (!locator) {
                    console.error('no locator??');
                }
                // console.log('req attr:', JSON.stringify(attr, null, 2));
                env.currentlyLoadingModals.add(queryId);
                const rpcQueryStart = performance.now();
                const doFetch = () => {
                    var _a;
                    let statusPre = null;
                    let stopBtn = null;
                    const epFetch = (0, evaluateProperty_2.default)(env, {
                        type: 'EvaluateProperty',
                        property,
                        locator: locator.get(),
                        src: env.createParsingRequestData(),
                        captureStdout: settings_4.default.shouldCaptureStdio(),
                        captureTraces: settings_4.default.shouldCaptureTraces() || undefined,
                        flushBeforeTraceCollection: (settings_4.default.shouldCaptureTraces() && settings_4.default.shouldAutoflushTraces()) || undefined,
                        jobLabel: `Probe: '${`${(_a = locator.get().result.label) !== null && _a !== void 0 ? _a : locator.get().result.type}`.split('.').slice(-1)[0]}.${property.name}'`,
                        skipResultLocator: env !== env.getGlobalModalEnv(),
                    }, () => {
                        const stopBtn = document.createElement('button');
                        stopBtn.innerText = 'Stop';
                        stopBtn.onclick = () => {
                            epFetch.cancel();
                        };
                        root.appendChild(stopBtn);
                        statusPre = document.createElement('p');
                        statusPre.style.whiteSpace = 'pre';
                        statusPre.style.fontFamily = 'monospace';
                        root.appendChild(statusPre);
                        statusPre.innerText = `Request takes a while, polling status..\nIf you see message for longer than a few milliseconds then the job hasn't started running yet, or the server is severely overloaded.`;
                    }, (status, stackTrace) => {
                        if (!statusPre) {
                            return;
                        }
                        const lines = [];
                        lines.push(`Property evaluation is taking a while, status below:`);
                        lines.push(`Status: ${status}`);
                        if (stackTrace) {
                            lines.push("Stack trace:");
                            stackTrace.forEach((ste) => lines.push(`> ${ste}`));
                        }
                        statusPre.innerText = lines.join('\n');
                    }, () => {
                        if (stopBtn) {
                            root.removeChild(stopBtn);
                        }
                        if (statusPre) {
                            root.removeChild(statusPre);
                        }
                    });
                    activelyLoadingJob = epFetch;
                    return epFetch.fetch();
                };
                doFetch()
                    .then((parsed) => {
                    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
                    loading = false;
                    if (parsed === 'stopped') {
                        refreshOnDone = false;
                    }
                    if (refreshOnDone) {
                        refreshOnDone = false;
                        queryWindow.refresh();
                    }
                    if (cancelToken.cancelled) {
                        return;
                    }
                    if (parsed === 'stopped') {
                        while (root.firstChild)
                            root.removeChild(root.firstChild);
                        root.append(createTitle());
                        const p = document.createElement('p');
                        p.innerText = `Property evaluation stopped. If any update happens (e.g text or setting changed within CodeProber), evaluation will be attempted again.`;
                        root.appendChild(p);
                    }
                    else {
                        const body = parsed.body;
                        copyBody = body;
                        if (typeof parsed.totalTime === 'number'
                            && typeof parsed.parseTime === 'number'
                            && typeof parsed.createLocatorTime === 'number'
                            && typeof parsed.applyLocatorTime === 'number'
                            && typeof parsed.attrEvalTime === 'number') {
                            env.statisticsCollector.addProbeEvaluationTime({
                                attrEvalMs: parsed.attrEvalTime / 1000000,
                                fullRpcMs: Math.max(performance.now() - rpcQueryStart),
                                serverApplyLocatorMs: parsed.applyLocatorTime / 1000000,
                                serverCreateLocatorMs: parsed.createLocatorTime / 1000000,
                                serverParseOnlyMs: parsed.parseTime / 1000000,
                                serverSideMs: parsed.totalTime / 1000000,
                            });
                        }
                        if (!refreshOnDone) {
                            env.currentlyLoadingModals.delete(queryId);
                        }
                        while (root.firstChild)
                            root.removeChild(root.firstChild);
                        let shouldRefreshMarkers = localDiagnostics.length > 0;
                        localDiagnostics.length = 0;
                        localDiagnostics.push(...((_a = parsed.errors) !== null && _a !== void 0 ? _a : []).map((err) => {
                            return ({ ...err, source: (0, createMinimizedProbeModal_1.createDiagnosticSource)(locator.get(), property) });
                        }));
                        // parsed.errors?.forEach(({severity, start: errStart, end: errEnd, msg }) => {
                        //   localErrors.push({ severity, errStart, errEnd, msg });
                        // })
                        const updatedArgs = parsed.args;
                        if (updatedArgs && updatedArgs.length === ((_b = property.args) === null || _b === void 0 ? void 0 : _b.length)) {
                            shouldRefreshMarkers = true;
                            (_c = property.args) === null || _c === void 0 ? void 0 : _c.forEach((arg, argIdx) => {
                                arg.type = updatedArgs[argIdx].type;
                                // arg.detail = updatedArgs[argIdx].detail;
                                arg.value = updatedArgs[argIdx].value;
                            });
                        }
                        if (parsed.locator) {
                            shouldRefreshMarkers = true;
                            locator.set(parsed.locator);
                            // locator = parsed.locator;
                        }
                        if (shouldRefreshMarkers || localDiagnostics.length > 0) {
                            updateMarkers();
                        }
                        const titleRow = createTitle();
                        root.append(titleRow);
                        const enableExpander = true;
                        // const enableExpander = body.length >= 1 && (body[0].type === 'node' || (
                        //   body[0].type === 'arr' && body[0].value.length >= 1 && body[0].value[0].type === 'node'
                        // ));
                        if (property.name === searchProbePropertyName && body.length === 1 && body[0].type === 'arr' && body[0].value.length === 0) {
                            const message = document.createElement('div');
                            message.style.padding = '0.25rem';
                            let tail = '';
                            if (((_e = (_d = property.args) === null || _d === void 0 ? void 0 : _d.length) !== null && _e !== void 0 ? _e : 0) >= 2) {
                                tail = ` that match the predicate${`${(_g = (_f = property.args) === null || _f === void 0 ? void 0 : _f[1]) === null || _g === void 0 ? void 0 : _g.value}`.includes(',') ? 's' : ''}`;
                            }
                            message.innerText = `Found no nodes implementing '${(_j = (_h = property.args) === null || _h === void 0 ? void 0 : _h[0]) === null || _j === void 0 ? void 0 : _j.value}'${tail}`;
                            message.style.fontStyle = 'italic';
                            root.appendChild(message);
                        }
                        const areasToKeep = new Set();
                        const encodedLines = (0, encodeRpcBodyLines_3.default)(env, body, {
                            excludeStdIoFromPaths: true,
                            tracingExpansionTracker,
                            nodeLocatorExpanderHandler: enableExpander ? ({
                                getReusableExpansionArea: (path) => {
                                    return inlineWindowManager.getPreviousExpansionArea(path);
                                },
                                onCreate: ({ locator, locatorRoot, expansionArea, path: nestId, isFresh }) => {
                                    var _a, _b, _c;
                                    areasToKeep.add(JSON.stringify(nestId));
                                    const updLocator = (_a = inlineWindowManager.getPreviouslyAssociatedLocator(nestId)) !== null && _a !== void 0 ? _a : (0, UpdatableNodeLocator_5.createMutableLocator)(locator);
                                    updLocator.set(locator);
                                    const area = inlineWindowManager.getArea(nestId, locatorRoot, expansionArea, updLocator, queryWindow.bumpIntoScreen);
                                    const nestedEnv = area.getNestedModalEnv(env);
                                    const encodedId = JSON.stringify(nestId);
                                    const nests = nestedWindows[encodedId];
                                    if (nests) {
                                        delete nestedWindows[encodedId];
                                        const immutLoc = (0, UpdatableNodeLocator_5.createImmutableLocator)(updLocator);
                                        nests.forEach(nest => {
                                            switch (nest.data.type) {
                                                case 'probe': {
                                                    const dat = nest.data;
                                                    displayProbeModal(nestedEnv, null, immutLoc, dat.property, dat.nested, { stickyHighlight: nest.data.stickyHighlight });
                                                    break;
                                                }
                                                case 'ast': {
                                                    const dat = nest.data;
                                                    (0, displayAstModal_2.default)(nestedEnv, null, immutLoc, dat.direction, dat.transform);
                                                    break;
                                                }
                                            }
                                        });
                                    }
                                    if (isFresh && property.name === searchProbePropertyName) {
                                        const nestedPropName = (_c = (_b = property.args) === null || _b === void 0 ? void 0 : _b[0]) === null || _c === void 0 ? void 0 : _c.value;
                                        if (nestedPropName !== '' && !(nests === null || nests === void 0 ? void 0 : nests.some((nest) => nest.data.type === 'probe' && nest.data.property.name === nestedPropName))) {
                                            displayProbeModal(nestedEnv, null, (0, UpdatableNodeLocator_5.createImmutableLocator)(updLocator), { name: nestedPropName }, {});
                                        }
                                    }
                                },
                                onClick: ({ locator, locatorRoot, expansionArea, path: nestId }) => {
                                    const prevLocator = inlineWindowManager.getPreviouslyAssociatedLocator(nestId);
                                    if (!prevLocator) {
                                        console.warn('OnClick on unknown area:', nestId);
                                        return;
                                    }
                                    prevLocator.set(locator);
                                    const area = inlineWindowManager.getArea(nestId, locatorRoot, expansionArea, prevLocator, queryWindow.bumpIntoScreen);
                                    const nestedEnv = area.getNestedModalEnv(env);
                                    (0, displayAttributeModal_5.default)(nestedEnv, null, (0, UpdatableNodeLocator_5.createImmutableLocator)(prevLocator));
                                    env.triggerWindowSave();
                                },
                            }) : undefined,
                            // nodeLocatorExpanderHandler: () => {},
                        });
                        if (shouldShowDiagnosticsToggler) {
                            const expl = document.createElement('div');
                            expl.style.fontStyle = 'italic';
                            expl.style.fontSize = '0.5rem';
                            expl.style.flexDirection = 'row';
                            expl.style.marginTop = '0.125rem';
                            const id = `showdiag-${Math.random()}`;
                            const check = createSquigglyCheckbox({
                                onInput: (checked) => {
                                    showDiagnostics = checked;
                                    reinstallDiagnosticsGetter();
                                    env.updateMarkers();
                                    env.triggerWindowSave();
                                },
                                initiallyChecked: showDiagnostics,
                                id,
                            });
                            check.classList.add('probeOutputAreaCheckboxWrapper');
                            check.style.marginLeft = '0';
                            check.style.marginRight = '0';
                            expl.appendChild(check);
                            const label = document.createElement('label');
                            label.style.margin = `auto 0 auto 0.125rem`;
                            label.htmlFor = id;
                            label.innerText = `Show diagnostics`;
                            expl.appendChild(label);
                            encodedLines.appendChild(expl);
                            const updateExplVisibility = () => {
                                if ((Array.isArray(diagnosticsGetter) ? diagnosticsGetter : diagnosticsGetter()).length > 0) {
                                    expl.style.display = 'flex';
                                }
                                else {
                                    expl.style.display = 'none';
                                }
                            };
                            updateExplVisibility();
                            updateMarkers = () => {
                                updateExplVisibility();
                                env.updateMarkers();
                            };
                            // encodedLines.appendChild(document.createElement('br'));
                        }
                        ;
                        root.appendChild(encodedLines);
                        inlineWindowManager.conditiionallyDestroyAreas((areaId) => {
                            return !areasToKeep.has(JSON.stringify(areaId));
                        });
                        inlineWindowManager.notifyListenersOfChange();
                    }
                    const spinner = (0, createLoadingSpinner_4.default)();
                    spinner.style.display = 'none';
                    spinner.classList.add('absoluteCenter');
                    lastSpinner = spinner;
                    root.appendChild(spinner);
                    queryWindow.bumpIntoScreen();
                })
                    .catch(err => {
                    loading = false;
                    if (refreshOnDone) {
                        refreshOnDone = false;
                        queryWindow.refresh();
                        return;
                    }
                    if (cancelToken.cancelled) {
                        return;
                    }
                    env.currentlyLoadingModals.delete(queryId);
                    console.log('ProbeModal RPC catch', err);
                    root.innerHTML = '';
                    root.innerText = 'Failed refreshing probe..';
                    console.warn('Failed refreshing probe w/ args:', JSON.stringify({ locator, property }, null, 2));
                    setTimeout(() => {
                        queryWindow.remove();
                        cleanup();
                    }, 2000);
                });
            },
        });
        const refresher = env.createCullingTaskSubmitter();
        env.onChangeListeners[queryId] = (adjusters) => {
            var _a;
            if (adjusters) {
                locator.adjust(adjusters);
                (_a = property.args) === null || _a === void 0 ? void 0 : _a.forEach((arg) => {
                    adjusters.forEach(adj => (0, adjustLocator_3.adjustValue)(adj, arg));
                });
            }
            if (loading) {
                refreshOnDone = true;
            }
            else {
                refresher.submit(() => queryWindow.refresh());
            }
        };
        const getWindowStateData = () => {
            return {
                type: 'probe',
                locator: locator.get(),
                property,
                nested: inlineWindowManager.getWindowStates(),
                showDiagnostics: showDiagnostics && undefined,
                stickyHighlight: stickyController.getActiveColor(),
            };
        };
        // if (saveWindowState) {
        env.probeWindowStateSavers[queryId] = (target) => {
            target.push({
                modalPos: queryWindow.getPos(),
                data: getWindowStateData(),
            });
        };
        env.triggerWindowSave();
        // }
    };
    exports.default = displayProbeModal;
});
define("ui/popup/displayRagModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/popup/displayAttributeModal", "ui/create/registerOnHover", "ui/create/showWindow", "ui/create/registerNodeSelector", "ui/popup/encodeRpcBodyLines", "ui/trimTypeName", "model/UpdatableNodeLocator"], function (require, exports, createLoadingSpinner_5, createModalTitle_7, displayAttributeModal_6, registerOnHover_5, showWindow_4, registerNodeSelector_4, encodeRpcBodyLines_4, trimTypeName_5, UpdatableNodeLocator_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_5 = __importDefault(createLoadingSpinner_5);
    createModalTitle_7 = __importDefault(createModalTitle_7);
    displayAttributeModal_6 = __importDefault(displayAttributeModal_6);
    registerOnHover_5 = __importDefault(registerOnHover_5);
    showWindow_4 = __importDefault(showWindow_4);
    registerNodeSelector_4 = __importDefault(registerNodeSelector_4);
    encodeRpcBodyLines_4 = __importDefault(encodeRpcBodyLines_4);
    trimTypeName_5 = __importDefault(trimTypeName_5);
    const displayRagModal = (env, line, col) => {
        const queryId = `rag-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        const localDiagnostics = [];
        env.probeMarkers[queryId] = localDiagnostics;
        const cleanup = () => {
            delete env.onChangeListeners[queryId];
            delete env.probeMarkers[queryId];
            popup.remove();
        };
        const popup = (0, showWindow_4.default)({
            rootStyle: `
        min-width: 12rem;
        min-height: 4rem;
      `,
            onForceClose: cleanup,
            render: (root, { cancelToken }) => {
                root.style.display = 'contents';
                const spinner = (0, createLoadingSpinner_5.default)();
                spinner.classList.add('absoluteCenter');
                root.appendChild(spinner);
                const createTitle = (status) => (0, createModalTitle_7.default)({
                    renderLeft: (container) => {
                        const headType = document.createElement('span');
                        headType.classList.add('syntax-stype');
                        headType.innerText = status === 'ok' ? 'Select node..' : `⚠️ Node listing failed..`;
                        container.appendChild(headType);
                    },
                    onClose: () => {
                        cleanup();
                    },
                }).element;
                env.performTypedRpc({
                    src: env.createParsingRequestData(),
                    pos: (line << 12) + col,
                    type: 'ListNodes',
                })
                    .then((parsed) => {
                    var _a, _b;
                    if (cancelToken.cancelled) {
                        return;
                    }
                    while (root.firstChild)
                        root.removeChild(root.firstChild);
                    root.style.minHeight = '4rem';
                    let shouldRefreshMarkers = localDiagnostics.length > 0;
                    localDiagnostics.length = 0;
                    localDiagnostics.push(...((_a = parsed.errors) !== null && _a !== void 0 ? _a : []).map((err) => {
                        return ({ ...err, source: 'Node Listing' });
                    }));
                    if (shouldRefreshMarkers || localDiagnostics.length > 0) {
                        env.updateMarkers();
                    }
                    if (!parsed.nodes) {
                        root.appendChild(createTitle('err'));
                        if ((_b = parsed.body) === null || _b === void 0 ? void 0 : _b.length) {
                            root.appendChild((0, encodeRpcBodyLines_4.default)(env, parsed.body));
                            return;
                        }
                        throw new Error(`Couldn't find expected line or body in output '${JSON.stringify(parsed)}'`);
                    }
                    root.appendChild(createTitle('ok'));
                    const rowsContainer = document.createElement('div');
                    rowsContainer.style.padding = '2px';
                    root.appendChild(rowsContainer);
                    parsed.nodes.forEach((locator, entIdx) => {
                        const { start, end, type, label } = locator.result;
                        const span = { lineStart: (start >>> 12), colStart: (start & 0xFFF), lineEnd: (end >>> 12), colEnd: (end & 0xFFF) };
                        const node = document.createElement('div');
                        node.classList.add('clickHighlightOnHover');
                        node.style.padding = `0 0.25rem`;
                        if (entIdx !== 0) {
                            node.style.borderTop = '1px solid gray';
                        }
                        node.innerText = `${label !== null && label !== void 0 ? label : (0, trimTypeName_5.default)(type)}${start === 0 && end === 0 ? ` ⚠️<No position>` : ''}`;
                        (0, registerOnHover_5.default)(node, on => env.updateSpanHighlight(on ? span : null));
                        node.onmousedown = (e) => { e.stopPropagation(); };
                        (0, registerNodeSelector_4.default)(node, () => locator);
                        node.onclick = () => {
                            cleanup();
                            env.updateSpanHighlight(null);
                            (0, displayAttributeModal_6.default)(env, popup.getPos(), (0, UpdatableNodeLocator_6.createMutableLocator)(locator));
                        };
                        rowsContainer.appendChild(node);
                    });
                })
                    .catch(err => {
                    if (cancelToken.cancelled) {
                        return;
                    }
                    // TODO handle this better, show an informative, refresh-aware modal that doesn't autoclose
                    // When starting it might be nice to open a modal and then tinker with settings until it refreshes successfully
                    console.warn('query failed', err);
                    while (root.firstChild)
                        root.removeChild(root.firstChild);
                    root.appendChild(createTitle('err'));
                    const errMsg = document.createElement('div');
                    errMsg.style.display = 'flex';
                    errMsg.style.justifyContent = 'center';
                    errMsg.style.padding = 'auto';
                    errMsg.style.textAlign = 'center';
                    errMsg.style.color = '#F88';
                    errMsg.style.padding = '0.25rem';
                    errMsg.innerText = 'Parsing failed..\nPerhaps a custom file suffix\nor main args override would help?\nLook at your terminal for more information.';
                    root.appendChild(errMsg);
                    // setTimeout(() => cleanup(), 1000);
                });
            }
        });
        const refresher = env.createCullingTaskSubmitter();
        env.onChangeListeners[queryId] = (adjusters) => {
            if (adjusters) {
                adjusters.forEach((adj) => {
                    const [l, c] = adj(line, col);
                    line = l;
                    col = c;
                });
            }
            refresher.submit(() => popup.refresh());
        };
    };
    exports.default = displayRagModal;
});
define("model/StatisticsCollectorImpl", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    class StatisticsCollectorImpl {
        constructor() {
            this.lastMeasurement = null;
            this.mergedMeasurements = { fullRpcMs: 0, serverSideMs: 0, serverParseOnlyMs: 0, serverCreateLocatorMs: 0, serverApplyLocatorMs: 0, attrEvalMs: 0 };
            this.numberOfMeasurements = 0;
            this.onChange = null;
        }
        ;
        addProbeEvaluationTime(measure) {
            var _a;
            this.lastMeasurement = measure;
            this.mergedMeasurements.fullRpcMs += measure.fullRpcMs;
            this.mergedMeasurements.serverSideMs += measure.serverSideMs;
            this.mergedMeasurements.serverParseOnlyMs += measure.serverParseOnlyMs;
            this.mergedMeasurements.serverCreateLocatorMs += measure.serverCreateLocatorMs;
            this.mergedMeasurements.serverApplyLocatorMs += measure.serverApplyLocatorMs;
            this.mergedMeasurements.attrEvalMs += measure.attrEvalMs;
            this.numberOfMeasurements++;
            (_a = this.onChange) === null || _a === void 0 ? void 0 : _a.call(this);
        }
        setOnChange(callback) {
            this.onChange = callback;
        }
        getLastMeasurement() { return this.lastMeasurement; }
        getMergedMeasurements() { return this.mergedMeasurements; }
        getNumberOfMeasurements() { return this.numberOfMeasurements; }
        reset() {
            var _a;
            this.lastMeasurement = null;
            this.mergedMeasurements = { fullRpcMs: 0, serverSideMs: 0, serverParseOnlyMs: 0, serverCreateLocatorMs: 0, serverApplyLocatorMs: 0, attrEvalMs: 0 };
            this.numberOfMeasurements = 0;
            (_a = this.onChange) === null || _a === void 0 ? void 0 : _a.call(this);
        }
    }
    exports.default = StatisticsCollectorImpl;
});
define("ui/popup/displayStatistics", ["require", "exports", "ui/create/createModalTitle", "ui/create/showWindow"], function (require, exports, createModalTitle_8, showWindow_5) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createModalTitle_8 = __importDefault(createModalTitle_8);
    showWindow_5 = __importDefault(showWindow_5);
    ;
    const displayStatistics = (collector, setStatisticsButtonDisabled, setEditorContentsAndUpdateProbes, anyModalIsLoading) => {
        let simulateTimer = -1;
        const onClose = () => {
            collector.setOnChange(null);
            helpWindow.remove();
            setStatisticsButtonDisabled(false);
            clearInterval(simulateTimer);
        };
        setStatisticsButtonDisabled(true);
        let statLabels = null;
        let controlButtons = null;
        const generateMethodGenerator = (cycles) => {
            return () => {
                const alreadyGeneratedIds = new Set();
                const genId = (prefix) => {
                    let newId;
                    do {
                        newId = `${Math.max(10000, Math.floor(Math.random() * 1000000))}`;
                    } while (alreadyGeneratedIds.has(newId));
                    alreadyGeneratedIds.add(newId);
                    return `${prefix}${newId}`;
                };
                const pickRandom = (...options) => options[Math.floor(Math.random() * options.length)];
                return [
                    // ...[...Array(cycles)].map(() => `${['interface', 'abstract class', 'enum'][Math.floor(Math.random() * 3)]} ${genId('Other')} { /* Empty */ }`),
                    `class ${genId('Benchmark')} {`,
                    ...[...Array(cycles)].map(() => [
                        `  ${pickRandom('interface', 'abstract class', 'enum')} ${genId('Other')} { /* Empty */ }`,
                        `  static void ${genId('f')}(String[] ${genId('arg')}, ${Math.random() > 0.5 ? 'int' : 'byte'} ${genId('arg')}) {`,
                        `    final long local = System.currentTimeMillis() % ${genId('')}L;`,
                        `    if (local ${pickRandom('<', '>', '==', '!=', '>=', '<=')} ${genId('')}L) { System.out.println(local); }`,
                        `    else { System.out.println(${genId('')}); }`,
                        `  }`,
                    ].join('\n')),
                    '}',
                ].join('\n');
            };
        };
        const tests = [
            {
                title: 'Java - Tiny',
                contents: generateMethodGenerator(1),
            },
            {
                title: 'Java - Medium',
                contents: generateMethodGenerator(5)
            },
            {
                title: 'Java - Large',
                contents: generateMethodGenerator(50),
            },
            {
                title: 'Java - Enormous',
                contents: generateMethodGenerator(500),
            },
        ];
        let activeTest = tests[0].title;
        const helpWindow = (0, showWindow_5.default)({
            rootStyle: `
      width: 32rem;
      min-height: 12rem;
    `,
            onForceClose: onClose,
            resizable: true,
            render: (root) => {
                const merged = collector.getMergedMeasurements();
                const numMeasurement = collector.getNumberOfMeasurements();
                const formatNumber = (num) => num.toFixed(1);
                const computeAverage = () => {
                    const computeOfTotal = (num) => `${formatNumber(num * 100 / merged.serverSideMs)}%`;
                    const serverTotalMs = `${formatNumber(merged.serverSideMs / numMeasurement)}ms`;
                    const parseMs = `${formatNumber(merged.serverParseOnlyMs / numMeasurement)}ms (${computeOfTotal(merged.serverParseOnlyMs)})`;
                    const rpcMs = `${formatNumber((merged.fullRpcMs - merged.serverSideMs) / numMeasurement)}ms`;
                    const createLocatorMs = `${formatNumber(merged.serverCreateLocatorMs / numMeasurement)}ms (${computeOfTotal(merged.serverCreateLocatorMs)})`;
                    const applyLocatorMs = `${formatNumber(merged.serverApplyLocatorMs / numMeasurement)}ms (${computeOfTotal(merged.serverApplyLocatorMs)})`;
                    const attributeEvalMs = `${formatNumber(merged.attrEvalMs / numMeasurement)}ms (${computeOfTotal(merged.attrEvalMs)})`;
                    return { serverTotalMs, parseMs, rpcMs, createLocatorMs, applyLocatorMs, attributeEvalMs };
                };
                const computeIndividual = (last) => {
                    const computeOfTotal = (num) => `${formatNumber(num * 100 / last.serverSideMs)}%`;
                    const serverTotalMs = `${formatNumber(last.serverSideMs)}ms`;
                    const parseMs = `${formatNumber(last.serverParseOnlyMs)}ms (${computeOfTotal(last.serverParseOnlyMs)})`;
                    const rpcMs = `${formatNumber(last.fullRpcMs - last.serverSideMs)}ms`;
                    const createLocatorMs = `${formatNumber(last.serverCreateLocatorMs)}ms (${computeOfTotal(last.serverCreateLocatorMs)})`;
                    const applyLocatorMs = `${formatNumber(last.serverApplyLocatorMs)}ms (${computeOfTotal(last.serverApplyLocatorMs)})`;
                    const attributeEvalMs = `${formatNumber(last.attrEvalMs)}ms (${computeOfTotal(last.attrEvalMs)})`;
                    return { serverTotalMs, parseMs, rpcMs, createLocatorMs, applyLocatorMs, attributeEvalMs };
                };
                const last = collector.getLastMeasurement();
                if (!statLabels || !last) {
                    statLabels = null;
                    while (root.firstChild)
                        root.firstChild.remove();
                    root.appendChild((0, createModalTitle_8.default)({
                        renderLeft: (container) => {
                            const header = document.createElement('span');
                            header.innerText = 'Statistics';
                            container.appendChild(header);
                        },
                        onClose,
                    }).element);
                    const grid = document.createElement('div');
                    grid.style.display = 'grid';
                    grid.style.padding = '0.25rem';
                    // grid.style.justifyItems = 'center';
                    grid.style.gridGap = '4px';
                    grid.style.gridTemplateColumns = 'auto 1fr';
                    const addRow = (title, measurement, boldTitle = false) => {
                        const titleNode = document.createElement('span');
                        titleNode.innerText = title;
                        titleNode.style.textAlign = 'right';
                        titleNode.style.textAlign = 'right';
                        if (boldTitle) {
                            titleNode.style.fontWeight = 'bold';
                        }
                        const measurementNode = document.createElement('span');
                        measurementNode.innerText = measurement;
                        grid.appendChild(titleNode);
                        grid.appendChild(measurementNode);
                        return measurementNode;
                    };
                    const addDivider = () => {
                        const divider = document.createElement('div');
                        divider.style.borderTop = '1px solid gray';
                        grid.appendChild(divider);
                        grid.appendChild(divider.cloneNode(true));
                    };
                    const numEvalsLbl = addRow('Num evaluations', `${numMeasurement}`);
                    addRow('', '');
                    const addGroup = (measurements) => {
                        const serverTotalLbl = addRow('Server side total', measurements.serverTotalMs);
                        const parseLbl = addRow('..of which AST parse', measurements.parseMs);
                        const createLocatorLbl = addRow('..of which locator create', measurements.createLocatorMs);
                        const applyLocatorLbl = addRow('..of which locator apply', measurements.applyLocatorMs);
                        const attrEvalLbl = addRow('..of which attribute eval', measurements.attributeEvalMs);
                        addRow('', '');
                        const rpcLbl = addRow('RPC overhead:', measurements.rpcMs);
                        addDivider();
                        return { serverTotalLbl, parseLbl, rpcLbl, createLocatorLbl, applyLocatorLbl, attrEvalLbl };
                    };
                    let averageLabels = null;
                    if (numMeasurement > 0) {
                        addRow('Average', '', true);
                        averageLabels = addGroup(computeAverage());
                    }
                    let mostRecentLabels = null;
                    if (last) {
                        addRow('Most recent', '', true);
                        mostRecentLabels = addGroup(computeIndividual(last));
                    }
                    root.appendChild(grid);
                    if (controlButtons) {
                        root.appendChild(controlButtons);
                    }
                    else {
                        controlButtons = document.createElement('div');
                        controlButtons.style.padding = '0.5rem';
                        root.appendChild(controlButtons);
                        const addButton = (title, onClick) => {
                            const btn = document.createElement('button');
                            btn.innerText = title;
                            btn.onclick = () => onClick(btn);
                            btn.style.marginRight = '0.25rem';
                            controlButtons.appendChild(btn);
                            return btn;
                        };
                        const stopSimulation = () => {
                            clearInterval(simulateTimer);
                            simulateTimer = -1;
                            resetBtn.innerText = 'Reset';
                            measurementBtn.disabled = false;
                        };
                        let resetBtn = addButton('Reset', () => {
                            if (simulateTimer !== -1) {
                                stopSimulation();
                            }
                            else {
                                collector.reset();
                            }
                        });
                        const measurementBtn = addButton('Run benchmark', (btn) => {
                            btn.disabled = true;
                            collector.reset();
                            clearInterval(simulateTimer);
                            resetBtn.innerText = 'Stop';
                            // let expectMeasurements = 0;
                            const triggerChange = () => {
                                setEditorContentsAndUpdateProbes(tests.find(({ title }) => title === activeTest).contents());
                            };
                            let prevChangeCounter = collector.getNumberOfMeasurements();
                            triggerChange();
                            simulateTimer = setInterval(() => {
                                const newChangeCounter = collector.getNumberOfMeasurements();
                                if (anyModalIsLoading() || newChangeCounter == prevChangeCounter) {
                                    return;
                                }
                                prevChangeCounter = newChangeCounter;
                                if (newChangeCounter >= 10000) {
                                    stopSimulation();
                                }
                                else {
                                    triggerChange();
                                }
                            }, 30);
                        });
                    }
                    root.appendChild(document.createElement('hr'));
                    const testSuiteHolder = document.createElement('div');
                    testSuiteHolder.style.padding = '0.25rem';
                    const testSuiteSelector = document.createElement('select');
                    testSuiteSelector.style.marginRight = '0.5rem';
                    testSuiteSelector.id = 'test-type-selector';
                    tests.forEach(({ title }) => {
                        const option = document.createElement('option');
                        option.value = title;
                        option.innerText = title;
                        testSuiteSelector.appendChild(option);
                    });
                    testSuiteSelector.selectedIndex = tests.findIndex(({ title }) => title === activeTest);
                    testSuiteHolder.appendChild(testSuiteSelector);
                    testSuiteSelector.oninput = () => {
                        activeTest = testSuiteSelector.value;
                    };
                    const testSuiteLabel = document.createElement('label');
                    testSuiteLabel.innerText = 'Benchmark type';
                    testSuiteHolder.setAttribute('for', 'test-type-selector');
                    testSuiteHolder.appendChild(testSuiteLabel);
                    root.appendChild(testSuiteHolder);
                    if (averageLabels && mostRecentLabels) {
                        statLabels = {
                            numEvaluations: numEvalsLbl,
                            average: averageLabels,
                            mostRecent: mostRecentLabels,
                        };
                    }
                }
                else {
                    const apply = (group, val) => {
                        group.serverTotalLbl.innerText = val.serverTotalMs;
                        group.createLocatorLbl.innerText = val.createLocatorMs;
                        group.applyLocatorLbl.innerText = val.applyLocatorMs;
                        group.parseLbl.innerText = val.parseMs;
                        group.rpcLbl.innerText = val.rpcMs;
                        group.attrEvalLbl.innerText = val.attributeEvalMs;
                    };
                    statLabels.numEvaluations.innerText = `${collector.getNumberOfMeasurements()}`;
                    apply(statLabels.average, computeAverage());
                    apply(statLabels.mostRecent, computeIndividual(last));
                }
            },
        });
        collector.setOnChange(() => helpWindow.refresh());
    };
    exports.default = displayStatistics;
});
define("ui/popup/displayMainArgsOverrideModal", ["require", "exports", "settings", "ui/create/createModalTitle", "ui/create/showWindow"], function (require, exports, settings_5, createModalTitle_9, showWindow_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    settings_5 = __importDefault(settings_5);
    createModalTitle_9 = __importDefault(createModalTitle_9);
    showWindow_6 = __importDefault(showWindow_6);
    const getArgs = () => {
        const re = settings_5.default.getMainArgsOverride();
        if (!re) {
            return re;
        }
        return re.map(item => {
            let str = '';
            let surround = false;
            for (let i = 0; i < item.length; ++i) {
                const ch = item[i];
                switch (ch) {
                    case '"': {
                        surround = true;
                        str = `${str}\\"`;
                        break;
                    }
                    case '\\': {
                        str = `${str}\\\\`;
                        break;
                    }
                    case '\n': {
                        str = `${str}\\n`;
                        break;
                    }
                    case ' ': {
                        surround = true;
                        // Fall through
                    }
                    default: {
                        str = `${str}${ch}`;
                        break;
                    }
                }
            }
            if (surround) {
                return `"${str}"`;
            }
            return str;
        }).join(' ');
    };
    const setArgs = (raw, onError) => {
        let args = [];
        let buf = null;
        let parsePos = 0;
        const commit = () => {
            if (buf !== null) {
                args.push(buf);
            }
            buf = null;
        };
        const getLineColFromStartToPos = (pos) => {
            let line = 1;
            let col = 0;
            for (let i = 0; i < pos; ++i) {
                if (raw[i] == '\n') {
                    ++line;
                    col = 0;
                }
                else {
                    // This is slightly incorrect for multibyte characters, TODO support properly (if worth the effort)
                    ++col;
                }
            }
            return { line, col };
        };
        const parseEscaped = () => {
            const next = raw[parsePos++];
            switch (next) {
                case '\\': {
                    buf = `${buf !== null && buf !== void 0 ? buf : ''}\\`;
                    break;
                }
                case '"': {
                    buf = `${buf !== null && buf !== void 0 ? buf : ''}"`;
                    break;
                }
                case 'n': {
                    buf = `${buf !== null && buf !== void 0 ? buf : ''}\n`;
                    break;
                }
                default: {
                    const loc = getLineColFromStartToPos(parsePos - 1);
                    onError(loc.line, loc.col, `Unexpected escape character, expected '"', '\\' or 'n' after this backslash`);
                    throw new Error(`Unexpected escape character`);
                }
            }
        };
        const parseQuoted = () => {
            const start = parsePos;
            buf = '';
            while (parsePos < raw.length) {
                const ch = raw[parsePos++];
                switch (ch) {
                    case '"': {
                        commit();
                        return;
                    }
                    case '\\': {
                        parseEscaped();
                        break;
                    }
                    case '\n': {
                        const loc = getLineColFromStartToPos(start);
                        onError(loc.line, loc.col, `Unterminated string, if you want newlines in the string then write '\\n'`);
                        throw new Error('Unterminated string');
                    }
                    default: {
                        buf = `${buf}${ch}`;
                        break;
                    }
                }
            }
            const loc = getLineColFromStartToPos(start);
            onError(loc.line, loc.col, `Unterminated string`);
            throw new Error('Unterminated string');
        };
        const parseOuter = () => {
            while (parsePos < raw.length) {
                const ch = raw[parsePos++];
                switch (ch) {
                    case '"': {
                        commit();
                        parseQuoted();
                        break;
                    }
                    case '\\': {
                        parseEscaped();
                        break;
                    }
                    case ' ': // Fall through
                    case '\n': {
                        commit();
                        break;
                    }
                    default: {
                        buf = `${buf !== null && buf !== void 0 ? buf : ''}${ch}`;
                        break;
                    }
                }
            }
        };
        parseOuter();
        commit();
        // console.log('done parsing @', parsePos)
        settings_5.default.setMainArgsOverride(args);
    };
    const displayMainArgsOverrideModal = (onClose, onChange) => {
        const windowInstance = (0, showWindow_6.default)({
            onForceClose: () => close(),
            render: (root) => {
                while (root.firstChild) {
                    root.firstChild.remove();
                }
                root.appendChild((0, createModalTitle_9.default)({
                    renderLeft: (container) => {
                        const headType = document.createElement('span');
                        headType.classList.add('syntax-stype');
                        headType.innerText = `Main arg override editor`;
                        container.appendChild(headType);
                    },
                    onClose: () => close(),
                }).element);
                const elem = document.createElement('div');
                // elem.style.minHeight = '16rem';
                elem.style = `
      width: 100%;
      height: 100%;
      `;
                const liveView = document.createElement('div');
                liveView.style.display = 'flex';
                liveView.style.padding = '0.25rem';
                liveView.style.flexDirection = 'row';
                liveView.style.maxWidth = '100%';
                liveView.style.flexWrap = 'wrap';
                // liveView.style.maxHeight = '7.8rem';
                liveView.style.overflow = 'scroll';
                liveView.style.rowGap = '4px';
                const refreshLiveView = () => {
                    var _a;
                    liveView.innerHTML = '';
                    const addTn = (str) => {
                        const tn = document.createElement('span');
                        tn.innerText = str;
                        // tn.style.margin = '1px';
                        liveView.appendChild(tn);
                    };
                    // liveView.appendChild(document.createTextNode('tool.main(\n'));
                    addTn('yourtool.main(new String[]{');
                    [...((_a = settings_5.default.getMainArgsOverride()) !== null && _a !== void 0 ? _a : []), '/path/to/file.tmp'].forEach((part, partIdx) => {
                        if (partIdx > 0) {
                            liveView.appendChild(document.createTextNode(', '));
                        }
                        const span = document.createElement('span');
                        span.innerText = part;
                        span.style.whiteSpace = 'pre';
                        span.style.border = '1px solid #888';
                        span.style.marginLeft = '0.125rem';
                        span.style.marginRight = '0.125rem';
                        liveView.appendChild(span);
                    });
                    addTn('})');
                    // liveView.innerText = `tool.main(\n  ${[...(settings.getMainArgsOverride() ?? []), '/path/to/tmp-file'].filter(Boolean).join(',\n  ')})`
                };
                liveView.classList.add('override-main-args-live-view');
                refreshLiveView();
                // elem.classList.add('input-Monaco');
                const editor = window.monaco.editor.create(elem, {
                    value: getArgs(),
                    language: 'plaintext',
                    // theme: 'dark',
                    scrollBeyondLastLine: false,
                    automaticLayout: true,
                    minimap: {
                        enabled: false,
                    },
                    wordWrap: true,
                });
                editor.onDidChangeModelContent(() => {
                    const errs = [];
                    try {
                        setArgs(editor.getValue(), (line, col, msg) => errs.push({ line, col, msg }));
                        refreshLiveView();
                        onChange();
                    }
                    catch (e) {
                        console.warn('Error when parsing user input', e);
                    }
                    window.monaco.editor.setModelMarkers(editor.getModel(), 'override-problems', errs.map(({ line, col, msg }) => ({
                        startLineNumber: line,
                        startColumn: col,
                        endLineNumber: line,
                        endColumn: col + 1,
                        message: msg,
                        severity: 8, // default to 'error' (8)
                    })));
                });
                const wrapper = document.createElement('div');
                wrapper.style = `
      display: flex;
      width: 100%;
      height: 8rem;
      `;
                wrapper.appendChild(elem);
                root.appendChild(wrapper);
                const explanation = document.createElement('p');
                explanation.style.margin = '0';
                explanation.style.padding = '0.25rem';
                explanation.innerText = [
                    'Example invocation with current override value:'
                ].join('\n');
                root.appendChild(explanation);
                root.appendChild(liveView);
            },
            rootStyle: `
    min-width: 12rem;
    min-height: 4rem;
    max-width: 80vw;
    max-height: 80vh;
    overflow: auto;
    `,
            resizable: true,
        });
        const close = () => {
            onClose();
            windowInstance.remove();
        };
        return {
            forceClose: () => close(),
        };
    };
    exports.default = displayMainArgsOverrideModal;
});
define("ui/configureCheckboxWithHiddenButton", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const configureCheckboxWithHiddenButton = (checkbox, button, onCheckboxChange, displayEditor, getButtonDecoration) => {
        checkbox.checked = getButtonDecoration() !== null;
        let overrideEditorCloser = null;
        const refreshButton = () => {
            const decoration = getButtonDecoration();
            if (decoration === null) {
                button.style.display = 'none';
            }
            else {
                button.style.display = 'inline-block';
                button.innerText = decoration;
            }
        };
        refreshButton();
        button.onclick = () => {
            button.disabled = true;
            const { forceClose } = displayEditor(() => {
                button.disabled = false;
                overrideEditorCloser = null;
            });
            overrideEditorCloser = () => forceClose();
        };
        checkbox.oninput = (e) => {
            overrideEditorCloser === null || overrideEditorCloser === void 0 ? void 0 : overrideEditorCloser();
            onCheckboxChange(checkbox.checked);
        };
        return { refreshButton };
    };
    exports.default = configureCheckboxWithHiddenButton;
});
define("ui/showVersionInfo", ["require", "exports", "model/repositoryUrl"], function (require, exports, repositoryUrl_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const showVersionInfo = (elem, ourHash, ourClean, ourBuildTime, disableVersionCheckerByDefault, sendRequest) => {
        const innerPrefix = `Version: ${ourHash}${ourClean ? '' : ' [DEV]'}`;
        if (ourBuildTime !== undefined) {
            const d = new Date(ourBuildTime * 1000);
            elem.innerText = `${innerPrefix}, ${d.toLocaleDateString()}`;
        }
        else {
            elem.innerText = innerPrefix;
        }
        const enablePref = localStorage.getItem('enable-version-checker');
        if (disableVersionCheckerByDefault && enablePref == null) {
            // Used by the CodeProber playground. It isn't kept dilligently up to date, and it is
            // hard(er) to update for end users. Avoid annoying them with version promps by default.
            return;
        }
        if ('false' === enablePref) {
            // In case somebody wants to stay on an old version for a long time,
            // then the "new version available" popup can become annoying.
            // This flag allows you to disable version checking.
            // Don't tell anybody about it though! 🤫 We want people staying updated.
            return;
        }
        if (!ourClean) {
            // No need to poll for new versions, 'DEV' label already shown
            return;
        }
        const pollNewVersion = async () => {
            let fetched;
            try {
                fetched = await (await fetch('LATEST_VERSION')).text();
            }
            catch (e) {
                console.warn('Error when fetching version', e);
                return 'done';
            }
            if (!fetched) {
                console.warn('Unexpected response:', fetched);
                return 'done';
            }
            const hash = fetched.trim().split('\n').slice(-1)[0];
            if (ourHash === hash) {
                // Status is clean.. for now.
                // Check again (much) later
                return 'again';
            }
            const a = document.createElement('a');
            a.href = `${repositoryUrl_2.repositoryUrl}/releases/latest/`;
            a.target = '_blank';
            a.text = 'New version available';
            elem.appendChild(document.createElement('br'));
            elem.appendChild(a);
            return 'done';
        };
        (async () => {
            while (true) {
                const status = await pollNewVersion();
                if (status === 'done') {
                    return;
                }
                // Sleep for 12 hours..
                // In the unlikely (but flattering!) scenario that somebody keeps the tool
                // active on their computer for several days in a row, we will re-check version
                // info periodically so they don't miss new releases.
                await (new Promise((res) => setTimeout(res, 12 * 60 * 60 * 1000)));
            }
        })()
            .catch(err => console.warn('Error when polling for new versions', err));
    };
    exports.default = showVersionInfo;
});
define("model/runBgProbe", ["require", "exports", "settings"], function (require, exports, settings_6) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    settings_6 = __importDefault(settings_6);
    const runInvisibleProbe = (env, locator, property) => {
        const id = `invisible-probe-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        const localErrors = [];
        env.probeMarkers[id] = localErrors;
        let state = 'idle';
        let reloadOnDone = false;
        const onRpcDone = () => {
            state = 'idle';
            if (reloadOnDone) {
                reloadOnDone = false;
                performRpc();
            }
        };
        const performRpc = () => {
            state = 'loading';
            env.performTypedRpc({
                type: 'EvaluateProperty',
                property,
                locator,
                src: env.createParsingRequestData(),
                captureStdout: settings_6.default.shouldCaptureStdio(),
                // No need to capture tracing information in background probes
            })
                .then((rawResp) => {
                var _a;
                if (rawResp.response.type === 'job') {
                    throw new Error(`Got concurrent response for non-concurrent request`);
                }
                const res = rawResp.response.value;
                const prevLen = localErrors.length;
                localErrors.length = 0;
                localErrors.push(...((_a = res.errors) !== null && _a !== void 0 ? _a : []));
                if (prevLen !== 0 || localErrors.length !== 0) {
                    env.updateMarkers();
                }
                onRpcDone();
            })
                .catch((err) => {
                console.warn('Failed refreshing invisible probe', err);
                onRpcDone();
            });
        };
        const refresh = () => {
            if (state === 'loading') {
                reloadOnDone = true;
            }
            else {
                performRpc();
            }
        };
        env.onChangeListeners[id] = refresh;
        refresh();
    };
    exports.default = runInvisibleProbe;
});
define("ui/popup/displayTestDiffModal", ["require", "exports", "model/test/rpcBodyToAssertionLine", "model/UpdatableNodeLocator", "settings", "ui/create/createInlineWindowManager", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/create/showWindow", "ui/renderProbeModalTitleLeft", "ui/UIElements", "ui/popup/displayHelp", "ui/popup/displayProbeModal", "ui/popup/encodeRpcBodyLines"], function (require, exports, rpcBodyToAssertionLine_2, UpdatableNodeLocator_7, settings_7, createInlineWindowManager_2, createLoadingSpinner_6, createModalTitle_10, showWindow_7, renderProbeModalTitleLeft_2, UIElements_2, displayHelp_4, displayProbeModal_5, encodeRpcBodyLines_5) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    settings_7 = __importDefault(settings_7);
    createInlineWindowManager_2 = __importDefault(createInlineWindowManager_2);
    createLoadingSpinner_6 = __importDefault(createLoadingSpinner_6);
    createModalTitle_10 = __importDefault(createModalTitle_10);
    showWindow_7 = __importDefault(showWindow_7);
    renderProbeModalTitleLeft_2 = __importDefault(renderProbeModalTitleLeft_2);
    UIElements_2 = __importDefault(UIElements_2);
    displayHelp_4 = __importDefault(displayHelp_4);
    displayProbeModal_5 = __importDefault(displayProbeModal_5);
    encodeRpcBodyLines_5 = __importDefault(encodeRpcBodyLines_5);
    const preventDragOnClick = (elem) => {
        elem.onmousedown = (e) => {
            e.stopPropagation();
            e.preventDefault();
        };
    };
    const displayTestDiffModal = (env, modalPos, locator, property, testCategory, testCaseName) => {
        const queryId = `tcdiff-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let activeTab = 'output';
        // let lastKnownCapturedStdout;
        let isCleanedUp = false;
        const cleanup = () => {
            isCleanedUp = true;
            delete env.onChangeListeners[queryId];
            delete env.probeMarkers[queryId];
            delete env.probeWindowStateSavers[queryId];
            env.currentlyLoadingModals.delete(queryId);
            env.testManager.removeListener(queryId);
            // env.triggerWindowSave();
            // if (localErrors.length > 0) {
            //   env.updateMarkers();
            // }
            // stickyController.cleanup();
        };
        let saveSelfAsProbe = false;
        let lastLoadedTestCase = null;
        const createTitle = () => {
            const onClose = () => {
                queryWindow.remove();
                cleanup();
            };
            return (0, createModalTitle_10.default)({
                // renderLeft: (container) => renderProbeModalTitleLeft(
                //   env, container,
                //   onClose,
                //   () => queryWindow.getPos(),
                //   null, locator, attr,
                // ),
                renderLeft: (container) => {
                    const head = document.createElement('span');
                    head.classList.add('syntax-modifier');
                    head.innerText = `Test:`;
                    container.appendChild(head);
                    head.style.marginRight = '0.5rem';
                    const tail = document.createElement('span');
                    tail.classList.add('stream-arg-msg');
                    tail.innerText = testCaseName;
                    container.appendChild(tail);
                },
                onClose,
                extraActions: [
                    ...(lastLoadedTestCase != null ? (() => {
                        const tc = lastLoadedTestCase;
                        return [
                            {
                                title: 'Load state into editor',
                                invoke: () => {
                                    var _a;
                                    settings_7.default.setAstCacheStrategy(tc.src.cache);
                                    settings_7.default.setMainArgsOverride((_a = tc.src.mainArgs) !== null && _a !== void 0 ? _a : null);
                                    settings_7.default.setPositionRecoveryStrategy(tc.src.posRecovery);
                                    if (tc.src.tmpSuffix && tc.src.tmpSuffix !== settings_7.default.getCurrentFileSuffix()) {
                                        settings_7.default.setCustomFileSuffix(tc.src.tmpSuffix);
                                    }
                                    settings_7.default.setEditorContents(tc.src.text);
                                    saveSelfAsProbe = true;
                                    env.triggerWindowSave();
                                    window.location.reload();
                                }
                            },
                            {
                                title: 'Delete Test (cannot be undone)',
                                invoke: () => {
                                    env.testManager.removeTest(testCategory, tc.name)
                                        .then(onClose)
                                        .catch((err) => {
                                        console.warn('Failed removing test', testCategory, '>', tc.name, err);
                                    });
                                }
                            },
                        ];
                    })() : []),
                ]
            });
        };
        let lastSpinner = null;
        let isFirstRender = true;
        let refreshOnDone = false;
        const queryWindow = (0, showWindow_7.default)({
            pos: modalPos,
            rootStyle: `
      min-width: 32rem;
      min-height: fit-content;
    `,
            onForceClose: cleanup,
            resizable: true,
            render: (root, { cancelToken }) => {
                if (lastSpinner != null) {
                    lastSpinner.style.display = 'inline-block';
                    lastSpinner = null;
                }
                else if (isFirstRender) {
                    isFirstRender = false;
                    while (root.firstChild)
                        root.removeChild(root.firstChild);
                    root.appendChild(createTitle().element);
                    const spinner = (0, createLoadingSpinner_6.default)();
                    spinner.classList.add('absoluteCenter');
                    const spinnerWrapper = document.createElement('div');
                    spinnerWrapper.style.height = '7rem';
                    spinnerWrapper.style.display = 'block';
                    spinnerWrapper.style.position = 'relative';
                    spinnerWrapper.appendChild(spinner);
                    root.appendChild(spinnerWrapper);
                }
                env.testManager.evaluateTest(testCategory, testCaseName)
                    .then((evaluationResult) => {
                    if (isCleanedUp)
                        return;
                    if (refreshOnDone) {
                        refreshOnDone = false;
                        queryWindow.refresh();
                    }
                    if (cancelToken.cancelled) {
                        return;
                    }
                    while (root.firstChild)
                        root.removeChild(root.firstChild);
                    if (evaluationResult === 'failed-fetching') {
                        root.append(createTitle().element);
                        root.appendChild(document.createTextNode(`Failed running test, please check the server log for more information`));
                        lastLoadedTestCase = null;
                        return;
                    }
                    const testStatus = evaluationResult.status;
                    const testCase = evaluationResult.test;
                    lastLoadedTestCase = testCase;
                    root.append(createTitle().element);
                    let contentUpdater = (tab) => { };
                    const localRefreshListeners = [];
                    env.onChangeListeners[queryId] = () => localRefreshListeners.forEach(lrl => lrl());
                    const someOutputErr = testStatus.overall === 'error';
                    // const someLocatorErr = testReport.overall === 'error' || typeof testReport === 'object' && [
                    //   testReport.sourceLocators, testReport.attrArgLocators, testReport.outputLocators
                    // ].some(loc => loc !== 'pass');
                    const captureStdioSetting = settings_7.default.shouldCaptureStdio();
                    localRefreshListeners.push(() => {
                        if (settings_7.default.shouldCaptureStdio() !== captureStdioSetting) {
                            queryWindow.refresh();
                        }
                    });
                    (() => {
                        const buttonRow = document.createElement('div');
                        buttonRow.style.display = 'flex';
                        buttonRow.style.flexDirection = 'row';
                        buttonRow.style.justifyContent = 'space-between';
                        root.append(buttonRow);
                        const infoSelector = document.createElement('div');
                        infoSelector.classList.add('test-diff-info-selector');
                        buttonRow.append(infoSelector);
                        const infos = [
                            { name: `Output Diff ${someOutputErr ? '❌' : '✅'}`, type: 'output' },
                            // { name: `Node Diff ${someLocatorErr ? '❌' : '✅'}`, type: 'node' },
                            { name: 'Source Code', type: 'source' },
                            { name: 'Settings', type: 'settings' },
                        ];
                        infos.forEach((info, index) => {
                            const btn = document.createElement('button');
                            btn.classList.add(info.type === activeTab ? 'tab-button-active' : 'tab-button-inactive');
                            btn.innerText = info.name;
                            preventDragOnClick(btn);
                            btn.onclick = () => {
                                contentUpdater(info.type);
                                btn.classList.remove('tab-button-inactive');
                                btn.classList.add('tab-button-active');
                                infos.forEach((other, otherIdx) => {
                                    var _a, _b, _c, _d;
                                    if (otherIdx !== index) {
                                        (_b = (_a = other.btn) === null || _a === void 0 ? void 0 : _a.classList) === null || _b === void 0 ? void 0 : _b.remove('tab-button-active');
                                        (_d = (_c = other.btn) === null || _c === void 0 ? void 0 : _c.classList) === null || _d === void 0 ? void 0 : _d.add('tab-button-inactive');
                                    }
                                });
                            };
                            infoSelector.appendChild(btn);
                            infos[index].btn = btn;
                        });
                        const refreshSourceButtonText = () => {
                            var _a;
                            const sourceBtn = (_a = infos.find(i => i.type === 'source')) === null || _a === void 0 ? void 0 : _a.btn;
                            if (sourceBtn) {
                                if (testCase.src.text === settings_7.default.getEditorContents()) {
                                    sourceBtn.innerText = `Source Code ✅`;
                                }
                                else {
                                    sourceBtn.innerText = `Source Code ⚠️`;
                                }
                            }
                        };
                        refreshSourceButtonText();
                        localRefreshListeners.push(refreshSourceButtonText);
                        // Add save button
                        (() => {
                            if (testStatus.overall === 'ok') {
                                return;
                            }
                            const result = evaluationResult.output.result;
                            const mapped = env.testManager.convertTestResponseToTest(testCase, evaluationResult.output);
                            if (mapped === null) {
                                return;
                            }
                            // const mapped = nestedTestResponseToTest(evaluationResult.output);
                            // if (mapped === null) {
                            //   return;
                            // }
                            const btn = document.createElement('button');
                            btn.style.margin = 'auto 0';
                            btn.classList.add('tab-button-inactive');
                            btn.innerText = `Save 💾`;
                            preventDragOnClick(btn);
                            btn.onclick = () => {
                                env.testManager.addTest(testCategory, mapped, true);
                            };
                            buttonRow.appendChild(btn);
                        })();
                        const hr = document.createElement('hr');
                        hr.style.marginTop = '0';
                        hr.style.marginBottom = '0';
                        root.appendChild(hr);
                    })();
                    const contentRoot = document.createElement('div');
                    // let activeTab: TabType = 'settings'; // Different from actual first tab so as to detect first tab change
                    contentUpdater = (tab) => {
                        if (tab === activeTab) {
                            return;
                        }
                        activeTab = tab;
                        while (contentRoot.firstChild)
                            contentRoot.removeChild(contentRoot.firstChild);
                        switch (tab) {
                            case 'output':
                            default: {
                                const addSplitTitle = (target, title) => {
                                    const row = document.createElement('div');
                                    row.style.margin = '0.125rem';
                                    row.style.textAlign = 'center';
                                    row.style.height = '1.5rem';
                                    row.style.display = 'flex';
                                    target.appendChild(row);
                                    const lbl = document.createElement('span');
                                    lbl.innerText = title;
                                    lbl.style.margin = 'auto';
                                    row.appendChild(lbl);
                                    const hr = document.createElement('hr');
                                    hr.style.marginTop = '0';
                                    target.appendChild(hr);
                                    return lbl;
                                };
                                const splitPane = document.createElement('div');
                                splitPane.style.display = 'grid';
                                splitPane.style.gridTemplateColumns = '1fr 1px 1fr';
                                const leftPane = document.createElement('div');
                                addSplitTitle(leftPane, 'Expected');
                                switch (testCase.assertType) {
                                    case 'IDENTITY':
                                    case 'SET': {
                                        const doEncodeRpcLines = (target, lines, nests, markerPrefix) => {
                                            const lhsInlineWindowManager = (0, createInlineWindowManager_2.default)();
                                            if (!captureStdioSetting) {
                                                lines = (0, rpcBodyToAssertionLine_2.rpcLinesToAssertionLines)(lines);
                                            }
                                            target.appendChild((0, encodeRpcBodyLines_5.default)(env, lines, {
                                                lateInteractivityEnabledChecker: () => false,
                                                excludeStdIoFromPaths: true,
                                                capWidths: true,
                                                decorator: (line) => {
                                                    const key = JSON.stringify([...markerPrefix, ...line]);
                                                    const marker = testStatus.expectedMarkers[key];
                                                    if (marker === 'error') {
                                                        return 'unmatched';
                                                    }
                                                    return 'default';
                                                },
                                                disableNodeSelectors: true,
                                                disableInlineExpansionButton: true,
                                                nodeLocatorExpanderHandler: {
                                                    getReusableExpansionArea: () => null,
                                                    onCreate: ({ path, locatorRoot, expansionArea, locator }) => {
                                                        const encodedPath = JSON.stringify(path);
                                                        const relatedNests = nests.filter(nest => JSON.stringify(nest.path) === encodedPath);
                                                        if (relatedNests.length === 0) {
                                                            return;
                                                        }
                                                        const wrappedLocator = (0, UpdatableNodeLocator_7.createImmutableLocator)((0, UpdatableNodeLocator_7.createMutableLocator)(locator));
                                                        const area = lhsInlineWindowManager.getArea(path, locatorRoot, expansionArea, wrappedLocator, queryWindow.bumpIntoScreen);
                                                        // const env = area.getNestedModalEnv(modal)
                                                        relatedNests.forEach((nest, nestIdx) => {
                                                            const localWindow = area.add({
                                                                onForceClose: () => { },
                                                                render: (root) => {
                                                                    root.style.display = 'flex';
                                                                    root.style.flexDirection = 'column';
                                                                    root.appendChild((0, createModalTitle_10.default)({
                                                                        renderLeft: (target) => (0, renderProbeModalTitleLeft_2.default)(null, target, null, () => localWindow.getPos(), null, wrappedLocator, nest.property, {}, 'minimal-nested'),
                                                                        onClose: null,
                                                                    }).element);
                                                                    doEncodeRpcLines(root, nest.expectedOutput, nest.nestedProperties, [...path, nestIdx]);
                                                                },
                                                            });
                                                        });
                                                    },
                                                    onClick: () => { },
                                                }
                                            }));
                                        };
                                        doEncodeRpcLines(leftPane, testCase.expectedOutput, testCase.nestedProperties, []);
                                        break;
                                    }
                                    case 'SMOKE': {
                                        leftPane.appendChild(document.createTextNode(`
                        Smoke Test -> expected no error
                      `.trim()));
                                    }
                                    default: {
                                        leftPane.appendChild(document.createTextNode(`
                        <Unknown Test Type>
                      `.trim()));
                                    }
                                }
                                splitPane.appendChild(leftPane);
                                const divider = document.createElement('div');
                                divider.classList.add('vertical-separator');
                                splitPane.appendChild(divider);
                                const rightPane = document.createElement('div');
                                addSplitTitle(rightPane, 'Actual');
                                const doEncodeRpcLines = (target, lines, nests, markerPrefix) => {
                                    const rhsInlineWindowManager = (0, createInlineWindowManager_2.default)();
                                    if (!captureStdioSetting) {
                                        lines = (0, rpcBodyToAssertionLine_2.rpcLinesToAssertionLines)(lines);
                                    }
                                    target.appendChild((0, encodeRpcBodyLines_5.default)(env, lines, {
                                        lateInteractivityEnabledChecker: () => testCase.src.text === env.getLocalState(),
                                        excludeStdIoFromPaths: true,
                                        capWidths: true,
                                        decorator: (line) => {
                                            const key = JSON.stringify([...markerPrefix, ...line]);
                                            const marker = testStatus.actualMarkers[key];
                                            if (marker === 'error') {
                                                return 'error';
                                            }
                                            return 'default';
                                        },
                                        disableNodeSelectors: true,
                                        disableInlineExpansionButton: true,
                                        nodeLocatorExpanderHandler: {
                                            getReusableExpansionArea: () => null,
                                            onCreate: ({ path, locatorRoot, expansionArea, locator, isFresh }) => {
                                                // if (isFresh) {
                                                //   if (testCase.property.name === searchProbePropertyName) {
                                                // TODO force expand meta/query properties here?
                                                //   }
                                                // }
                                                const encodedPath = JSON.stringify(path);
                                                const relatedNests = nests.filter(nest => JSON.stringify(nest.path) === encodedPath);
                                                if (relatedNests.length === 0) {
                                                    return;
                                                }
                                                const wrappedLocator = (0, UpdatableNodeLocator_7.createImmutableLocator)((0, UpdatableNodeLocator_7.createMutableLocator)(locator));
                                                const area = rhsInlineWindowManager.getArea(path, locatorRoot, expansionArea, wrappedLocator, queryWindow.bumpIntoScreen);
                                                // const env = area.getNestedModalEnv(modal)
                                                relatedNests.forEach((nest, nestIdx) => {
                                                    const localWindow = area.add({
                                                        onForceClose: () => { },
                                                        debugLabel: `testdiff:right:${JSON.stringify(markerPrefix)}:nest:${nestIdx}`,
                                                        render: (root) => {
                                                            root.style.display = 'flex';
                                                            root.style.flexDirection = 'column';
                                                            root.appendChild((0, createModalTitle_10.default)({
                                                                renderLeft: (target) => (0, renderProbeModalTitleLeft_2.default)(null, target, null, () => localWindow.getPos(), null, wrappedLocator, nest.property, {}, 'minimal-nested'),
                                                                onClose: null,
                                                            }).element);
                                                            if (nest.result !== 'could-not-find-node') {
                                                                doEncodeRpcLines(root, nest.result.body, nest.result.nested, [...path, nestIdx]);
                                                            }
                                                        },
                                                    });
                                                });
                                            },
                                            onClick: () => { },
                                        }
                                    }));
                                };
                                if (evaluationResult.output && evaluationResult.output.result !== 'could-not-find-node') {
                                    doEncodeRpcLines(rightPane, evaluationResult.output.result.body, evaluationResult.output.result.nested, []);
                                }
                                // rightPane.appendChild(encodeRpcBodyLines(env, testStatus.lines, {
                                //   lateInteractivityEnabledChecker: () => testCase.src.text === env.getLocalState(),
                                //   decorator: (line) => {
                                //     if (typeof testReport === 'object' && typeof testReport.output === 'object') {
                                //       if (testReport.output.invalid.includes(line)) {
                                //         return 'error';
                                //       }
                                //     }
                                //     return 'default';
                                //   },
                                //   disableNodeSelectors: true,
                                // }));
                                splitPane.appendChild(rightPane);
                                contentRoot.appendChild(splitPane);
                                break;
                            }
                            case 'node': {
                                const wrapper = document.createElement('div');
                                wrapper.style.padding = '0.25rem';
                                contentRoot.appendChild(wrapper);
                                const addP = (msg) => {
                                    const explanationTail = document.createElement('p');
                                    explanationTail.textContent = msg;
                                    wrapper.appendChild(explanationTail);
                                };
                                const addTail = () => {
                                    addP(`You can inspect the difference by opening a probe from 'Source Code' tab. If you are OK with the differences, click 'Save 💾'.`);
                                };
                                // if (someLocatorErr && someOutputErr) {
                                //   addP(`Both property output and AST node reference(s) involved in property execution differ. This could mean that that both property behavior and AST structure has changed since this test was constructed.`);
                                //   addTail();
                                // }else if (someLocatorErr) {
                                //   wrapper.appendChild(document.createTextNode(`Property output is the same, but the AST node reference(s) involved in property execution are different. This could be because the AST structure has changed since this test was constructed. This might not be a problem.`));
                                //   addTail();
                                // } else
                                if (someOutputErr) {
                                    wrapper.appendChild(document.createTextNode('Output differs, but the AST node reference(s) involved in property execution are identical. This indicates that a property behaves differently to when the test was constructed.'));
                                    addTail();
                                }
                                else {
                                    wrapper.appendChild(document.createTextNode('All AST node references involved in property execution are identical to expected values.'));
                                }
                                break;
                            }
                            case 'source': {
                                const wrapper = document.createElement('div');
                                wrapper.style.padding = '0.25rem';
                                contentRoot.appendChild(wrapper);
                                const same = testCase.src.text === env.getLocalState();
                                const addText = (msg) => wrapper.appendChild(document.createTextNode(msg));
                                const addHelp = (type) => {
                                    const btn = document.createElement('button');
                                    btn.innerText = `?`;
                                    btn.style.marginLeft = '0.25rem';
                                    btn.style.borderRadius = '50%';
                                    btn.onclick = () => (0, displayHelp_4.default)(type);
                                    wrapper.appendChild(btn);
                                };
                                if (same) {
                                    // addText(`Current text in CodeProber matches the source code used for this test case.`);
                                    addText(`Test code == CodeProber code.`);
                                    addHelp('test-code-vs-codeprober-code');
                                    wrapper.appendChild(document.createElement('br'));
                                    wrapper.appendChild(document.createTextNode(`Press`));
                                    const btn = document.createElement('button');
                                    preventDragOnClick(btn);
                                    btn.style.margin = '0 0.125rem';
                                    btn.innerText = `Open Probe`;
                                    btn.onclick = () => {
                                        const nestedTestToProbeData = (test) => {
                                            const inner = {};
                                            test.nestedProperties.forEach((nest) => {
                                                var _a;
                                                const key = JSON.stringify(nest.path);
                                                inner[key] = (_a = inner[key]) !== null && _a !== void 0 ? _a : [];
                                                inner[key].push({
                                                    data: nestedTestToProbeData(nest),
                                                    modalPos: { x: 0, y: 0 },
                                                });
                                            });
                                            return {
                                                type: 'probe',
                                                locator: testCase.locator,
                                                property: test.property,
                                                nested: inner,
                                            };
                                        };
                                        // const windows: NestedWindows = {};
                                        // testCase.nestedProperties.forEach(nest => {
                                        //   const key = JSON.stringify(nest.path);
                                        //   windows[key] = windows[key] ?? [];
                                        //   windows[key].push({
                                        //     data: nestedTestToProbeData({
                                        //       path: [],
                                        //       expectedOutput: testCase.expectedOutput,
                                        //       nestedProperties: testCase.nestedProperties,
                                        //       property: testCase.property,
                                        //     }),
                                        //     modalPos: { x: 0, y: 0 },
                                        //   });
                                        //   // windows[]
                                        //   // windows[key].push({
                                        //   //   modalPos: null,
                                        //   //   data: {
                                        //   //     type: 'probe',
                                        //   //     locator: testCase.locator,
                                        //   //     nested:
                                        //   //   }
                                        //   // })
                                        //   })
                                        (0, displayProbeModal_5.default)(env, null, (0, UpdatableNodeLocator_7.createMutableLocator)(locator), property, nestedTestToProbeData({
                                            path: [],
                                            expectedOutput: testCase.expectedOutput,
                                            nestedProperties: testCase.nestedProperties,
                                            property: testCase.property,
                                        }).nested);
                                    };
                                    wrapper.appendChild(btn);
                                    wrapper.appendChild(document.createTextNode(`to explore the probe that created this test.`));
                                }
                                else {
                                    addText(`Test code ≠ CodeProber code.`);
                                    addHelp('test-code-vs-codeprober-code');
                                    // wrapper.appendChild(document.createTextNode(`Current text in CodeProber does not match the source code used for this test case.`));
                                    wrapper.appendChild(document.createElement('br'));
                                    addText(`Press`);
                                    const btn = document.createElement('button');
                                    preventDragOnClick(btn);
                                    btn.style.margin = '0 0.125rem';
                                    btn.innerText = `Load Source`;
                                    btn.onclick = () => {
                                        env.setLocalState(testCase.src.text);
                                    };
                                    wrapper.appendChild(btn);
                                    addText(`to replace CodeProber text with the test source.`);
                                }
                                wrapper.appendChild(document.createElement('hr'));
                                const addExplanationLine = (head, value, valueClass = '') => {
                                    const line = document.createElement('div');
                                    const headNode = document.createElement('span');
                                    headNode.style.display = 'inline-block';
                                    headNode.style.marginRight = '1rem';
                                    headNode.style.textAlign = 'right';
                                    headNode.style.minWidth = '6rem';
                                    headNode.innerText = head;
                                    line.appendChild(headNode);
                                    const valueNode = document.createElement('span');
                                    valueNode.innerText = value;
                                    if (valueClass) {
                                        valueNode.classList.add(valueClass);
                                    }
                                    line.appendChild(valueNode);
                                    wrapper.appendChild(line);
                                };
                                addExplanationLine('Node type:', (locator.result.label || locator.result.type).split('.').slice(-1)[0], 'syntax-type');
                                addExplanationLine('Property:', property.name, 'syntax-attr');
                                if (locator.result.external) {
                                    addExplanationLine('AST Node:', `${locator.result.label || locator.result.type} in external file`);
                                }
                                else {
                                    // const span = startEndToSpan(locator.result.start, locator.result.end);
                                    // const linesTail = span.lineStart === span.lineEnd
                                    //   ? ` $${span.lineStart}`
                                    //   : `s ${span.lineStart}→${span.lineEnd}`;
                                    // addExplanationLine('AST Node:', `${locator.result.label || locator.result.type} on line${linesTail}`);
                                }
                                addExplanationLine('Source Code', '⬇️, related line(s) in green.');
                                testCase.src.text.split('\n').forEach((line, lineIdx) => {
                                    const lineContainer = document.createElement('div');
                                    lineContainer.classList.add('test-case-source-code-line');
                                    if (!locator.result.external) {
                                        const startLineIdx = (locator.result.start >>> 12) - 1;
                                        const endLineIdx = (locator.result.end >>> 12) - 1;
                                        if (lineIdx >= startLineIdx && lineIdx <= endLineIdx) {
                                            lineContainer.setAttribute('data-relevant', 'true');
                                        }
                                    }
                                    lineContainer.appendChild((() => {
                                        const pos = document.createElement('span');
                                        pos.innerText = `${lineIdx + 1}: `.padStart(3);
                                        return pos;
                                    })());
                                    lineContainer.appendChild((() => {
                                        const pre = document.createElement('span');
                                        pre.innerText = line;
                                        return pre;
                                    })());
                                    wrapper.appendChild(lineContainer);
                                });
                                break;
                            }
                            case 'settings': {
                                const wrapper = document.createElement('div');
                                wrapper.style.padding = '0.25rem';
                                contentRoot.appendChild(wrapper);
                                const header = document.createElement('p');
                                header.style.margin = '0.25rem 0';
                                header.innerText = `Each saves the current CodeProber settings upon being created. This test contains:`;
                                const translateSelectorValToHumanLabel = (val, selector) => {
                                    if (!selector) {
                                        console.warn('no selector for', val);
                                        return val;
                                    }
                                    for (let i = 0; i < selector.childElementCount; ++i) {
                                        const opt = selector.children[i];
                                        if (opt.nodeName === 'OPTION') {
                                            if (opt.value === val) {
                                                return opt.innerHTML;
                                            }
                                        }
                                    }
                                    console.warn(`Not sure how to translate ${val} to human-readable value`);
                                    return val;
                                };
                                const ul = document.createElement('ul');
                                ul.style.margin = '0 0 0.25rem';
                                const uiElements = new UIElements_2.default();
                                [
                                    ['Position Recovery', translateSelectorValToHumanLabel(testCase.src.posRecovery, uiElements.positionRecoverySelector)],
                                    ['Cache Strategy', translateSelectorValToHumanLabel(testCase.src.cache, uiElements.astCacheStrategySelector)],
                                    ['File suffix', testCase.src.tmpSuffix],
                                    ['Main args', testCase.src.mainArgs ? `[${testCase.src.mainArgs.join(', ')}]` : 'none'],
                                ].forEach(([name, val]) => {
                                    const li = document.createElement('li');
                                    li.innerText = `${name} : ${val}`;
                                    ul.appendChild(li);
                                });
                                contentRoot.appendChild(ul);
                                // contentRoot.appendChild(document.createTextNode('todo settings tab'));
                                break;
                            }
                        }
                    };
                    root.appendChild(contentRoot);
                    const initialTab = activeTab;
                    // Set to anything different in order to force first update to go through
                    activeTab = initialTab === 'output' ? 'node' : 'output';
                    contentUpdater(initialTab);
                    localRefreshListeners.push(() => {
                        if (activeTab === 'source') {
                            activeTab = 'node';
                            contentUpdater('source');
                        }
                    });
                    const spinner = (0, createLoadingSpinner_6.default)();
                    spinner.style.display = 'none';
                    spinner.classList.add('absoluteCenter');
                    lastSpinner = spinner;
                    root.appendChild(spinner);
                    queryWindow.bumpIntoScreen();
                })
                    .catch(err => {
                    if (refreshOnDone) {
                        refreshOnDone = false;
                        queryWindow.refresh();
                        return;
                    }
                    if (cancelToken.cancelled) {
                        return;
                    }
                    console.log('TestDiffModal RPC catch', err);
                    root.innerHTML = '';
                    root.innerText = 'Failed refreshing test diff..';
                    console.warn('Failed refreshing test w/ args:', JSON.stringify({ locator, property }, null, 2));
                    setTimeout(() => {
                        queryWindow.remove();
                        cleanup();
                    }, 2000);
                });
            },
        });
        env.testManager.addListener(queryId, (change) => {
            if (change === 'test-status-update') {
                queryWindow.refresh();
            }
        });
        env.probeWindowStateSavers[queryId] = (target) => {
            if (saveSelfAsProbe) {
                target.push({
                    modalPos: queryWindow.getPos(),
                    data: {
                        type: 'probe',
                        locator,
                        property,
                        nested: {},
                    },
                });
            }
        };
    };
    exports.default = displayTestDiffModal;
});
define("ui/popup/displayTestSuiteModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/create/showWindow", "ui/popup/displayTestDiffModal"], function (require, exports, createLoadingSpinner_7, createModalTitle_11, showWindow_8, displayTestDiffModal_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_7 = __importDefault(createLoadingSpinner_7);
    createModalTitle_11 = __importDefault(createModalTitle_11);
    showWindow_8 = __importDefault(showWindow_8);
    displayTestDiffModal_1 = __importDefault(displayTestDiffModal_1);
    const displayTestSuiteModal = (env, category) => {
        const queryId = `ts-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        const cleanup = () => {
            popup.remove();
            env.testManager.removeListener(queryId);
        };
        let contents = 'loading';
        const popup = (0, showWindow_8.default)({
            rootStyle: `
      min-width: 16rem;
      min-height: fit-content;
    `,
            onForceClose: cleanup,
            resizable: true,
            render: (root) => {
                while (root.firstChild)
                    root.removeChild(root.firstChild);
                root.appendChild((0, createModalTitle_11.default)({
                    renderLeft: (container) => {
                        const header = document.createElement('span');
                        header.innerText = `Test Suite: ${category}`;
                        container.appendChild(header);
                    },
                    onClose: cleanup,
                    extraActions: [
                        {
                            title: 'Save all tests as expected behavior',
                            invoke: () => {
                                const confirmation = confirm(`Are you sure? This cannot be undone. One or more of the test failures may represent meaningful information, which will be lost if you save it as 'expected' behavior`);
                                if (!confirmation) {
                                    return;
                                }
                                (async () => {
                                    const suite = await env.testManager.getTestSuite(category);
                                    if (suite === 'failed-fetching') {
                                        return;
                                    }
                                    for (let i = 0; i < suite.length; ++i) {
                                        const tcase = suite[i];
                                        // if (tcase === '')
                                        const evalRes = await env.testManager.evaluateTest(category, tcase.name);
                                        if (evalRes === 'failed-fetching') {
                                            continue;
                                        }
                                        if (evalRes.status.overall === 'ok') {
                                            continue;
                                        }
                                        const mapped = env.testManager.convertTestResponseToTest(tcase, evalRes.output);
                                        if (mapped === null) {
                                            continue;
                                        }
                                        await env.testManager.addTest(category, mapped, true);
                                    }
                                })();
                            }
                        }
                    ],
                }).element);
                if (typeof contents === 'string') {
                    if (contents === 'loading') {
                        root.style.display = 'contents';
                        const spinner = (0, createLoadingSpinner_7.default)();
                        spinner.classList.add('absoluteCenter');
                        root.appendChild(spinner);
                    }
                    else {
                        const textHolder = document.createElement('div');
                        textHolder.style.padding = '0.5rem';
                        textHolder.innerText = `Failed fetch test content, have you set '-Dcpr.testDir=<a valid directory>'? If so, check if ${category}.json exists and contains valid JSON.`;
                    }
                }
                else {
                    // root.style.display = 'flex';
                    const rowList = document.createElement('div');
                    rowList.style.display = 'flex';
                    rowList.style.flexDirection = 'column';
                    rowList.style.margin = '0 0 auto';
                    root.appendChild(rowList);
                    // console.log('render contents', contents);
                    contents.forEach(tc => {
                        const row = document.createElement('div');
                        row.classList.add('test-case');
                        const title = document.createElement('span');
                        title.innerText = tc.name;
                        title.style.marginRight = '1rem';
                        row.appendChild(title);
                        const icons = document.createElement('div');
                        row.appendChild(icons);
                        const status = document.createElement('span');
                        status.innerText = `⏳`;
                        row.style.order = '1';
                        env.testManager.evaluateTest(category, tc.name).then(result => {
                            // console.log('tstatus for', category, '>', tc.name, ':', result);
                            if (result == 'failed-fetching') {
                                status.innerText = `<Evaluation Error>`;
                            }
                            else {
                                const report = result.status.overall;
                                // if (typeof report === 'string') {
                                switch (report) {
                                    case 'ok': {
                                        status.innerText = `✅`;
                                        row.style.order = '5';
                                        break;
                                    }
                                    case 'error': {
                                        status.innerText = `❌`;
                                        row.style.order = '3';
                                        break;
                                    }
                                    default: {
                                        console.warn('Unknown test report string value:', report);
                                    }
                                }
                                // } else {
                                //   if (report.output === 'pass') {
                                //     // "only" locator diff, should be less severe
                                //     console.log('partial test failure?', JSON.stringify(report))
                                //     status.innerText = `⚠️`;
                                //   } else {
                                //     status.innerText = `❌`;
                                //     row.style.order = '1';
                                //   }
                                // }
                            }
                        });
                        icons.appendChild(status);
                        row.onclick = () => {
                            (0, displayTestDiffModal_1.default)(env, null, tc.locator, tc.property, category, tc.name);
                        };
                        rowList.appendChild(row);
                    });
                    popup.bumpIntoScreen();
                }
            }
        });
        const reloadList = () => {
            env.testManager.getTestSuite(category)
                .then((result) => {
                contents = result;
                popup.refresh();
            });
        };
        reloadList();
        env.testManager.addListener(queryId, reloadList);
    };
    exports.default = displayTestSuiteModal;
});
define("ui/popup/displayTestSuiteListModal", ["require", "exports", "ui/create/createLoadingSpinner", "ui/create/createModalTitle", "ui/create/showWindow", "ui/popup/displayTestSuiteModal"], function (require, exports, createLoadingSpinner_8, createModalTitle_12, showWindow_9, displayTestSuiteModal_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createLoadingSpinner_8 = __importDefault(createLoadingSpinner_8);
    createModalTitle_12 = __importDefault(createModalTitle_12);
    showWindow_9 = __importDefault(showWindow_9);
    displayTestSuiteModal_1 = __importDefault(displayTestSuiteModal_1);
    const displayTestSuiteListModal = (env, onClose, serverSideWorkerProcessCount) => {
        const queryId = `tsl-${Math.floor(Number.MAX_SAFE_INTEGER * Math.random())}`;
        let isClosed = false;
        const cleanup = () => {
            isClosed = true;
            onClose();
            popup.remove();
            env.testManager.removeListener(queryId);
        };
        let categories = 'loading';
        let changeCallbackCounter = 0;
        let localTestSuiteKnowledge = {};
        const getLocalKnowledge = (suiteId) => {
            return localTestSuiteKnowledge[suiteId] = localTestSuiteKnowledge[suiteId] || { pass: 0, fail: 0 };
        };
        const runAll = async (kind) => {
            localTestSuiteKnowledge = {};
            const suites = await env.testManager.listTestSuiteCategories();
            if (suites === 'failed-listing') {
                throw new Error('Failed listing test suites');
            }
            for (let i = 0; i < suites.length; ++i) {
                localTestSuiteKnowledge[suites[i]] = { fail: 0, pass: 0 };
            }
            popup.refresh();
            // Very intentionally evaluate this sequentially (not Promise.all)
            // Don't want to send a billion requests at once
            for (let i = 0; i < suites.length; ++i) {
                const suite = suites[i];
                let cases = await env.testManager.getTestSuite(suite);
                if (cases === 'failed-fetching') {
                    throw new Error(`Failed fetching test suite '${suite}'`);
                }
                ;
                if (isClosed) {
                    return false;
                }
                const sorted = [...cases];
                // For caching purposes, sort so that all equal-text cases are evaluated next to each other
                sorted.sort((a, b) => {
                    if (a.src !== b.src) {
                        return a.src < b.src ? -1 : 1;
                    }
                    if (a.src.cache != b.src.cache) {
                        return a.src.cache < b.src.cache ? -1 : 1;
                    }
                    // Close enough to equal
                    return 0;
                });
                // Eval (process - 1) tests at a time to avoid overlapping with normal CodeProber usage.
                const sliceSize = (serverSideWorkerProcessCount !== undefined) ? Math.max(1, serverSideWorkerProcessCount * 3) : 1;
                const numSlices = Math.ceil(sorted.length / sliceSize);
                const evaluateSlice = async (slice) => {
                    const relatedCases = sorted.slice(slice * sliceSize, Math.min(sorted.length, (slice + 1) * sliceSize));
                    let expectedChangeCallback = changeCallbackCounter + relatedCases.length;
                    ;
                    await Promise.all(relatedCases.map(async (tcase) => {
                        const evaluation = await env.testManager.evaluateTest(suite, tcase.name);
                        // console.log('Ran test', suite, '>', tcase.name, ', status:', status);
                        if (isClosed) {
                            return;
                        }
                        if (evaluation === 'failed-fetching') {
                            ++getLocalKnowledge(suite).fail;
                        }
                        else if (evaluation.status.overall !== 'ok') {
                            if (kind !== 'save-if-error') {
                                ++getLocalKnowledge(suite).fail;
                            }
                            else {
                                const mapped = env.testManager.convertTestResponseToTest(tcase, evaluation.output);
                                if (mapped === null) {
                                    ++getLocalKnowledge(suite).fail;
                                }
                                else {
                                    await env.testManager.addTest(suite, mapped, true);
                                    ++getLocalKnowledge(suite).pass;
                                }
                            }
                        }
                        else {
                            ++getLocalKnowledge(suite).pass;
                        }
                        expectedChangeCallback = changeCallbackCounter + 1;
                    }));
                    if (changeCallbackCounter !== expectedChangeCallback) {
                        // One or more result was cached, force reload
                        popup.refresh();
                    }
                };
                for (let i = 0; i < numSlices; ++i) {
                    if (isClosed) {
                        return false;
                    }
                    await evaluateSlice(i);
                }
            }
            return true;
        };
        const popup = (0, showWindow_9.default)({
            rootStyle: `
      width: 16rem;
      min-width: 4rem;
      min-height: 8rem;
    `,
            onForceClose: cleanup,
            resizable: true,
            render: (root) => {
                while (root.firstChild)
                    root.removeChild(root.firstChild);
                root.appendChild((0, createModalTitle_12.default)({
                    renderLeft: (container) => {
                        const header = document.createElement('span');
                        header.innerText = `Test Suites`;
                        container.appendChild(header);
                        header.style.minHeight = '1.25rem';
                    },
                    onClose: cleanup,
                    extraActions: (typeof categories === 'string' || categories.length === 0) ? [] : [
                        {
                            title: 'Run all',
                            invoke: () => {
                                runAll('just-run').catch((err) => {
                                    console.warn('Error when running all tests:', err);
                                });
                            },
                        },
                        {
                            title: 'Save all tests as expected behavior',
                            invoke: () => {
                                const confirmation = confirm(`Are you sure? This cannot be undone. One or more of the failures may represent meaningful information, which will be lost if you save it as 'expected' behavior`);
                                if (!confirmation) {
                                    return;
                                }
                                runAll('save-if-error').catch((err) => {
                                    console.warn('Error when running all tests:', err);
                                });
                            }
                        }
                    ]
                }).element);
                if (typeof categories === 'string') {
                    if (categories === 'loading') {
                        root.style.display = 'contents';
                        const spinner = (0, createLoadingSpinner_8.default)();
                        spinner.classList.add('absoluteCenter');
                        root.appendChild(spinner);
                    }
                    else {
                        const textHolder = document.createElement('div');
                        textHolder.style.padding = '0.5rem';
                        textHolder.innerText = `Failed listing test categories, have you set '-Dcpr.testDir=<a valid directory>'?`;
                    }
                }
                else {
                    const rowList = document.createElement('div');
                    rowList.style.display = 'flex';
                    rowList.style.flexDirection = 'column';
                    rowList.style.margin = '0 0 auto';
                    root.appendChild(rowList);
                    if (categories.length == 0) {
                        const emptyMsg = document.createElement('div');
                        emptyMsg.innerText = 'No tests here. Create them from the "..." menu in a probe.';
                        emptyMsg.style.textAlign = 'center';
                        rowList.appendChild(emptyMsg);
                    }
                    categories.forEach(cat => {
                        const row = document.createElement('div');
                        row.classList.add('test-suite');
                        const title = document.createElement('span');
                        title.innerText = cat;
                        title.style.marginRight = '1rem';
                        title.style.maxWidth = '70%';
                        title.style.wordBreak = 'break-word';
                        row.appendChild(title);
                        const icons = document.createElement('div');
                        row.appendChild(icons);
                        const status = document.createElement('span');
                        env.testManager.getTestSuite(cat).then((res) => {
                            if (res === 'failed-fetching') {
                                status.innerText = `<failed fetching>`;
                            }
                            else if (res.length === 0) {
                                status.innerText = `Empty suite`;
                            }
                            else {
                                if (localTestSuiteKnowledge[cat]) {
                                    const know = localTestSuiteKnowledge[cat];
                                    if ((know.pass + know.fail) === res.length) {
                                        if (know.fail === 0) {
                                            status.innerText = `✅`;
                                        }
                                        else {
                                            status.innerText = `Fail ${know.fail}/${res.length} ❌`;
                                        }
                                    }
                                    else {
                                        // Loading
                                        const pct = ((know.fail + know.pass) * 100 / res.length) | 0;
                                        status.innerText = `${pct}% ⏳`;
                                    }
                                }
                                else {
                                    status.innerText = `${res.length} ${res.length === 1 ? 'test' : 'tests'}`;
                                }
                            }
                        });
                        icons.appendChild(status);
                        row.onclick = () => (0, displayTestSuiteModal_1.default)(env, cat);
                        rowList.appendChild(row);
                    });
                }
            }
        });
        const reloadList = () => {
            env.testManager.listTestSuiteCategories()
                .then((result) => {
                categories = result;
                popup.refresh();
            });
        };
        reloadList();
        env.testManager.addListener(queryId, (change) => {
            ++changeCallbackCounter;
            if (change === 'added-test' || change == 'removed-test') {
                localTestSuiteKnowledge = {};
            }
            reloadList();
        });
    };
    exports.default = displayTestSuiteListModal;
});
define("ui/popup/displayWorkerStatus", ["require", "exports", "ui/create/createModalTitle", "ui/create/showWindow"], function (require, exports, createModalTitle_13, showWindow_10) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    createModalTitle_13 = __importDefault(createModalTitle_13);
    showWindow_10 = __importDefault(showWindow_10);
    const displayWorkerStatus = (env, setDisplayButtonDisabled) => {
        let activeSubscription = null;
        const onClose = () => {
            helpWindow.remove();
            setDisplayButtonDisabled(false);
            if (activeSubscription != null) {
                env.performTypedRpc({
                    type: 'Concurrent:UnsubscribeFromWorkerStatus',
                    job: activeSubscription.job,
                    subscriberId: activeSubscription.subscriberId,
                }).then(res => {
                    if (!res.ok) {
                        console.warn('Failed unsubscribing from worker status for', activeSubscription);
                    }
                });
            }
        };
        setDisplayButtonDisabled(true);
        const helpWindow = (0, showWindow_10.default)({
            rootStyle: `
      width: 32rem;
      min-height: 12rem;
    `,
            resizable: true,
            onForceClose: onClose,
            render: (root) => {
                while (root.firstChild)
                    root.removeChild(root.firstChild);
                root.appendChild((0, createModalTitle_13.default)({
                    renderLeft: (container) => {
                        container.appendChild(document.createTextNode('Worker status monitor'));
                    },
                    onClose,
                }).element);
                const pre = document.createElement('pre');
                pre.style.margin = '0.25rem';
                root.appendChild(pre);
                pre.innerText = `Requesting worker status..`;
                const job = env.createJobId(data => {
                    // console.log('worker status data:', data);
                    switch (data.value.type) {
                        case 'workerStatuses': {
                            const workers = data.value.value;
                            pre.innerText = `Status:\n${workers.map((stat, idx) => `${`${idx + 1}`.padStart(3, ' ')}:${stat}`).join('\n')}`;
                            break;
                        }
                    }
                });
                env.performTypedRpc({
                    type: 'Concurrent:SubscribeToWorkerStatus',
                    job,
                }).then(res => {
                    activeSubscription = {
                        job,
                        subscriberId: res.subscriberId,
                    };
                });
            },
        });
    };
    exports.default = displayWorkerStatus;
});
define("model/EditorInitializer", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
define("model/getEditorDefinitionPlace", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const getEditorDefinitionPlace = () => window;
    exports.default = getEditorDefinitionPlace;
});
define("ui/installASTEditor", ["require", "exports", "model/getEditorDefinitionPlace", "model/UpdatableNodeLocator", "settings", "ui/popup/displayAstModal", "ui/UIElements"], function (require, exports, getEditorDefinitionPlace_1, UpdatableNodeLocator_8, settings_8, displayAstModal_3, UIElements_3) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    getEditorDefinitionPlace_1 = __importDefault(getEditorDefinitionPlace_1);
    settings_8 = __importDefault(settings_8);
    displayAstModal_3 = __importDefault(displayAstModal_3);
    UIElements_3 = __importDefault(UIElements_3);
    const installASTEditor = () => {
        ((0, getEditorDefinitionPlace_1.default)()).defineEditor('AST', () => ({
            script: [],
            style: [],
            predicate: () => true,
        }), (value, onChange, initialSyntaxHighlight) => {
            settings_8.default.setProbeWindowStates([]);
            // TODO load monaco so that main args override editor works
            const inw = document.getElementById('input-wrapper');
            inw.classList.add('input-AST');
            inw.innerHTML = '';
            // displayAstModal(
            //   {
            //   }
            // )
            return {
                // setLocalState?: (newValue: string) => void;
                // getLocalState?: () => string;
                // updateSpanHighlight?: (baseHighlight: Span | null, stickyHighlights: StickyHighlight[]) => void;
                // registerStickyMarker?: (initialSpan: Span) => StickyMarker;
                // markText?: TextMarkFn;
                themeToggler: (isLightTheme) => {
                    // Do anything?
                },
                syntaxHighlightingToggler: (langId) => {
                    // Do nothing
                },
                registerModalEnv: (env) => {
                    (0, displayAstModal_3.default)({
                        ...env,
                        probeWindowStateSavers: {},
                        showWindow: (args) => {
                            let lastCancelToken = {};
                            const render = () => {
                                lastCancelToken.cancelled = true;
                                lastCancelToken = {};
                                args.render(inw, { cancelToken: lastCancelToken, bringToFront: () => { } });
                            };
                            render();
                            window.onresize = () => { var _a; return (_a = args.onFinishedResize) === null || _a === void 0 ? void 0 : _a.call(args); };
                            const uiElements = new UIElements_3.default();
                            uiElements.settingsHider.addEventListener('click', () => { var _a; return (_a = args.onFinishedResize) === null || _a === void 0 ? void 0 : _a.call(args); });
                            uiElements.settingsRevealer.addEventListener('click', () => { var _a; return (_a = args.onFinishedResize) === null || _a === void 0 ? void 0 : _a.call(args); });
                            return {
                                bumpIntoScreen: () => { },
                                remove: () => { },
                                getPos: () => ({ x: 0, y: 0, }),
                                getSize: () => ({ width: inw.clientWidth, height: inw.clientHeight }),
                                refresh: render
                            };
                        },
                    }, null, (0, UpdatableNodeLocator_8.createMutableLocator)({
                        result: { type: '<ROOT>', start: 0, end: 0, depth: 0 },
                        steps: []
                    }), 'downwards', {
                        hideTitleBar: true,
                    });
                },
            };
        });
    };
    exports.default = installASTEditor;
});
define("ui/configureCheckboxWithHiddenCheckbox", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    const configureCheckboxWithHiddenCheckbox = (outer, hidden) => {
        outer.checkbox.checked = outer.initiallyChecked;
        hidden.checkbox.checked = hidden.initiallyChecked;
        const refreshHidden = () => {
            if (outer.checkbox.checked) {
                hidden.container.style.display = 'block';
            }
            else {
                hidden.container.style.display = 'none';
            }
        };
        refreshHidden();
        outer.checkbox.oninput = (e) => {
            refreshHidden();
            outer.onChange(outer.checkbox.checked);
        };
        hidden.checkbox.oninput = (e) => {
            hidden.onChange(hidden.checkbox.checked);
        };
    };
    exports.default = configureCheckboxWithHiddenCheckbox;
});
define("main", ["require", "exports", "ui/addConnectionCloseNotice", "ui/popup/displayProbeModal", "ui/popup/displayRagModal", "ui/popup/displayHelp", "ui/popup/displayAttributeModal", "settings", "model/StatisticsCollectorImpl", "ui/popup/displayStatistics", "ui/popup/displayMainArgsOverrideModal", "model/syntaxHighlighting", "createWebsocketHandler", "ui/configureCheckboxWithHiddenButton", "ui/UIElements", "ui/showVersionInfo", "model/runBgProbe", "model/cullingTaskSubmitterFactory", "ui/popup/displayAstModal", "model/test/TestManager", "ui/popup/displayTestSuiteListModal", "ui/popup/displayWorkerStatus", "ui/create/showWindow", "model/UpdatableNodeLocator", "hacks", "ui/create/createMinimizedProbeModal", "model/getEditorDefinitionPlace", "ui/installASTEditor", "ui/configureCheckboxWithHiddenCheckbox"], function (require, exports, addConnectionCloseNotice_1, displayProbeModal_6, displayRagModal_1, displayHelp_5, displayAttributeModal_7, settings_9, StatisticsCollectorImpl_1, displayStatistics_1, displayMainArgsOverrideModal_1, syntaxHighlighting_2, createWebsocketHandler_1, configureCheckboxWithHiddenButton_1, UIElements_4, showVersionInfo_1, runBgProbe_1, cullingTaskSubmitterFactory_2, displayAstModal_4, TestManager_1, displayTestSuiteListModal_1, displayWorkerStatus_1, showWindow_11, UpdatableNodeLocator_9, hacks_5, createMinimizedProbeModal_2, getEditorDefinitionPlace_2, installASTEditor_1, configureCheckboxWithHiddenCheckbox_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    addConnectionCloseNotice_1 = __importDefault(addConnectionCloseNotice_1);
    displayProbeModal_6 = __importDefault(displayProbeModal_6);
    displayRagModal_1 = __importDefault(displayRagModal_1);
    displayHelp_5 = __importDefault(displayHelp_5);
    displayAttributeModal_7 = __importDefault(displayAttributeModal_7);
    settings_9 = __importDefault(settings_9);
    StatisticsCollectorImpl_1 = __importDefault(StatisticsCollectorImpl_1);
    displayStatistics_1 = __importDefault(displayStatistics_1);
    displayMainArgsOverrideModal_1 = __importDefault(displayMainArgsOverrideModal_1);
    createWebsocketHandler_1 = __importStar(createWebsocketHandler_1);
    configureCheckboxWithHiddenButton_1 = __importDefault(configureCheckboxWithHiddenButton_1);
    UIElements_4 = __importDefault(UIElements_4);
    showVersionInfo_1 = __importDefault(showVersionInfo_1);
    runBgProbe_1 = __importDefault(runBgProbe_1);
    cullingTaskSubmitterFactory_2 = __importDefault(cullingTaskSubmitterFactory_2);
    displayAstModal_4 = __importDefault(displayAstModal_4);
    displayTestSuiteListModal_1 = __importDefault(displayTestSuiteListModal_1);
    displayWorkerStatus_1 = __importDefault(displayWorkerStatus_1);
    showWindow_11 = __importDefault(showWindow_11);
    createMinimizedProbeModal_2 = __importDefault(createMinimizedProbeModal_2);
    getEditorDefinitionPlace_2 = __importDefault(getEditorDefinitionPlace_2);
    installASTEditor_1 = __importDefault(installASTEditor_1);
    configureCheckboxWithHiddenCheckbox_1 = __importDefault(configureCheckboxWithHiddenCheckbox_1);
    const uiElements = new UIElements_4.default();
    window.clearUserSettings = () => {
        settings_9.default.set({});
        location.reload();
    };
    // setTimeout(() => {
    //   console.log('d3:', d3)
    // }, 1000)
    const doMain = (wsPort) => {
        (0, installASTEditor_1.default)();
        if (settings_9.default.shouldHideSettingsPanel() && !window.location.search.includes('fullscreen=true')) {
            document.body.classList.add('hide-settings');
        }
        if (!settings_9.default.shouldEnableTesting()) {
            uiElements.showTests.style.display = 'none';
        }
        let getLocalState = () => { var _a; return (_a = settings_9.default.getEditorContents()) !== null && _a !== void 0 ? _a : ''; };
        let basicHighlight = null;
        const stickyHighlights = {};
        let updateSpanHighlight = (span, stickies) => { };
        const onChangeListeners = {};
        const probeWindowStateSavers = {};
        const spammyOperationDebouncer = (0, cullingTaskSubmitterFactory_2.default)(10);
        const windowSaveDebouncer = spammyOperationDebouncer();
        const triggerWindowSave = () => {
            windowSaveDebouncer.submit(() => {
                const states = [];
                Object.values(probeWindowStateSavers).forEach(v => v(states));
                settings_9.default.setProbeWindowStates(states);
            });
        };
        const notifyLocalChangeListeners = (adjusters, reason) => {
            Object.values(onChangeListeners).forEach(l => l(adjusters, reason));
            triggerWindowSave();
        };
        function initEditor(editorType) {
            if (!location.search) {
                location.search = "editor=" + editorType;
                return;
            }
            document.body.setAttribute('data-theme-light', `${settings_9.default.isLightTheme()}`);
            const wsHandler = (() => {
                if (wsPort == 'ws-over-http') {
                    return (0, createWebsocketHandler_1.createWebsocketOverHttpHandler)(addConnectionCloseNotice_1.default);
                }
                if (typeof wsPort == 'object') {
                    // Codespaces-compat
                    const needle = `-${wsPort.from}.`;
                    if (location.hostname.includes(needle) && !location.port) {
                        return (0, createWebsocketHandler_1.default)(new WebSocket(`wss://${location.hostname.replace(needle, `-${wsPort.to}.`)}`), addConnectionCloseNotice_1.default);
                    }
                    else {
                        // Else, we are running Codespaces locally from a 'native' (non-web) editor.
                        // We only need to do the compat layer if running Codespaces from the web.
                        // Fall down to default impl below.
                    }
                }
                return (0, createWebsocketHandler_1.default)(new WebSocket(`ws://${location.hostname}:${wsPort}`), addConnectionCloseNotice_1.default);
            })();
            const jobUpdateHandlers = {};
            wsHandler.on('asyncUpdate', (rawData) => {
                const data = rawData; // Ideally stricly parse this, but this works
                const { job, isFinalUpdate, value } = data;
                // console.log('jobUpdate for', job, '; result:', result);
                if (!job || value === undefined) {
                    console.warn('Invalid job update', data);
                    return;
                }
                const handler = jobUpdateHandlers[job];
                if (!handler) {
                    console.log('Got no handler for job update:', data);
                    return;
                }
                if (isFinalUpdate) {
                    delete jobUpdateHandlers[data === null || data === void 0 ? void 0 : data.job];
                }
                handler(data);
            });
            const rootElem = document.getElementById('root');
            const initHandler = (info) => {
                const { version: { clean, hash, buildTimeSeconds }, changeBufferTime, workerProcessCount, disableVersionCheckerByDefault, backingFile } = info;
                console.log('onInit, buffer:', changeBufferTime, 'workerProcessCount:', workerProcessCount);
                rootElem.style.display = "grid";
                if (backingFile) {
                    settings_9.default.setEditorContents(backingFile.value);
                    const inputLabel = document.querySelector('#input-header > span');
                    if (!inputLabel) {
                        console.warn('Could not find input header');
                    }
                    else {
                        // inputLabel.innerText = `Input`
                        const locIndicator = document.createElement('span');
                        locIndicator.style.marginLeft = '0.25rem';
                        locIndicator.classList.add('syntax-string');
                        locIndicator.innerText = `(${backingFile.path})`;
                        inputLabel.appendChild(locIndicator);
                    }
                    wsHandler.on('backing_file_update', ({ contents }) => modalEnv.setLocalState(contents));
                }
                const onChange = (newValue, adjusters) => {
                    settings_9.default.setEditorContents(newValue);
                    notifyLocalChangeListeners(adjusters);
                };
                let setLocalState = (value) => { };
                let markText = () => ({});
                let registerStickyMarker = (initialSpan) => ({
                    getSpan: () => initialSpan,
                    remove: () => { },
                });
                const darkModeCheckbox = uiElements.darkModeCheckbox;
                darkModeCheckbox.checked = !settings_9.default.isLightTheme();
                const themeChangeListeners = {};
                darkModeCheckbox.oninput = (e) => {
                    let lightTheme = !darkModeCheckbox.checked;
                    settings_9.default.setLightTheme(lightTheme);
                    document.body.setAttribute('data-theme-light', `${lightTheme}`);
                    Object.values(themeChangeListeners).forEach(cb => cb(lightTheme));
                };
                let syntaxHighlightingToggler;
                const modalEnvHolder = {
                    cachedEnv: null,
                    cachedRecv: null,
                    setEnv: (env) => {
                        modalEnvHolder.cachedEnv = env;
                        if (modalEnvHolder.cachedRecv) {
                            modalEnvHolder.cachedRecv(env);
                        }
                    },
                    setRecv: (recv) => {
                        modalEnvHolder.cachedRecv = recv;
                        if (modalEnvHolder.cachedEnv) {
                            recv(modalEnvHolder.cachedEnv);
                        }
                    },
                };
                if ((0, getEditorDefinitionPlace_2.default)().definedEditors[editorType]) {
                    const { preload, init, } = (0, getEditorDefinitionPlace_2.default)().definedEditors[editorType];
                    (0, getEditorDefinitionPlace_2.default)().loadPreload(preload, () => {
                        var _a;
                        const res = init((_a = settings_9.default.getEditorContents()) !== null && _a !== void 0 ? _a : `// Hello World!\n// Write some code in this field, then right click and select 'Create Probe' to get started\n\n`, onChange, settings_9.default.getSyntaxHighlighting());
                        setLocalState = res.setLocalState || setLocalState;
                        getLocalState = res.getLocalState || getLocalState;
                        updateSpanHighlight = res.updateSpanHighlight || updateSpanHighlight;
                        registerStickyMarker = res.registerStickyMarker || registerStickyMarker;
                        markText = res.markText || markText;
                        if (res.registerModalEnv) {
                            modalEnvHolder.setRecv(res.registerModalEnv);
                        }
                        if (res.themeToggler) {
                            themeChangeListeners['main-editor'] = (light) => res.themeToggler(light);
                            res.themeToggler(settings_9.default.isLightTheme());
                            // defineThemeToggler(res.themeToggler);
                        }
                        syntaxHighlightingToggler = res.syntaxHighlightingToggler;
                        location.search.split(/\?|&/g).forEach((kv) => {
                            const needle = `bgProbe=`;
                            if (kv.startsWith(needle)) {
                                (0, runBgProbe_1.default)(modalEnv, { result: { start: 0, end: 0, type: '<ROOT>', depth: 0 }, steps: [] }, { name: kv.slice(needle.length), });
                            }
                        });
                    });
                }
                else {
                    // Throw out to editor selection screen
                    location.search = '';
                }
                const activeMarkers = [];
                const probeMarkers = {};
                const updateMarkerDebouncer = spammyOperationDebouncer();
                const updateMarkers = () => {
                    updateMarkerDebouncer.submit(() => {
                        activeMarkers.forEach(m => { var _a; return (_a = m === null || m === void 0 ? void 0 : m.clear) === null || _a === void 0 ? void 0 : _a.call(m); });
                        activeMarkers.length = 0;
                        const deduplicator = new Set();
                        const pendingSources = {};
                        const pendingAdders = [];
                        const filteredAddMarker = (severity, start, end, msg, source) => {
                            var _a;
                            const uniqId = [severity, start, end, msg].join(' | ');
                            pendingSources[uniqId] = (_a = pendingSources[uniqId]) !== null && _a !== void 0 ? _a : [];
                            pendingSources[uniqId].push(source !== null && source !== void 0 ? source : '');
                            if (deduplicator.has(uniqId)) {
                                return;
                            }
                            deduplicator.add(uniqId);
                            pendingAdders.push(() => {
                                const sources = [...new Set(pendingSources[uniqId].filter(Boolean))].sort((a, b) => (a < b ? -1 : (a > b) ? 1 : 0));
                                const lineStart = (start >>> 12);
                                const colStart = start & 0xFFF;
                                const lineEnd = (end >>> 12);
                                const colEnd = end & 0xFFF;
                                activeMarkers.push(markText({
                                    severity: `${severity}`.toLocaleLowerCase('en-GB'),
                                    lineStart, colStart, lineEnd, colEnd, message: msg,
                                    source: sources.length === 0 ? undefined : sources.join(', ')
                                }));
                            });
                        };
                        Object.values(probeMarkers).forEach(arr => (Array.isArray(arr) ? arr : arr()).forEach(({ type, start, end, msg, source }) => filteredAddMarker(type, start, end, msg, source)));
                        pendingAdders.forEach(pa => pa());
                    });
                };
                const setupSimpleCheckbox = (input, initial, update) => {
                    input.checked = initial;
                    input.oninput = () => { update(input.checked); notifyLocalChangeListeners(); };
                };
                setupSimpleCheckbox(uiElements.captureStdoutCheckbox, settings_9.default.shouldCaptureStdio(), cb => settings_9.default.setShouldCaptureStdio(cb));
                setupSimpleCheckbox(uiElements.captureTracesCheckbox, settings_9.default.shouldCaptureTraces(), cb => settings_9.default.setShouldCaptureTraces(cb));
                setupSimpleCheckbox(uiElements.duplicateProbeCheckbox, settings_9.default.shouldDuplicateProbeOnAttrClick(), cb => settings_9.default.setShouldDuplicateProbeOnAttrClick(cb));
                setupSimpleCheckbox(uiElements.showAllPropertiesCheckbox, settings_9.default.shouldShowAllProperties(), cb => settings_9.default.setShouldShowAllProperties(cb));
                setupSimpleCheckbox(uiElements.groupPropertiesByAspectCheckbox, settings_9.default.shouldGroupPropertiesByAspect(), cb => settings_9.default.setShouldGroupPropertiesByAspect(cb));
                const setupSimpleSelector = (input, initial, update) => {
                    input.value = initial;
                    input.oninput = () => { update(input.value); notifyLocalChangeListeners(); };
                };
                setupSimpleSelector(uiElements.astCacheStrategySelector, settings_9.default.getAstCacheStrategy(), cb => settings_9.default.setAstCacheStrategy(cb));
                setupSimpleSelector(uiElements.positionRecoverySelector, settings_9.default.getPositionRecoveryStrategy(), cb => settings_9.default.setPositionRecoveryStrategy(cb));
                setupSimpleSelector(uiElements.locationStyleSelector, `${settings_9.default.getLocationStyle()}`, cb => settings_9.default.setLocationStyle(cb));
                uiElements.settingsHider.onclick = () => {
                    document.body.classList.add('hide-settings');
                    settings_9.default.setShouldHideSettingsPanel(true);
                };
                uiElements.settingsRevealer.onclick = () => {
                    document.body.classList.remove('hide-settings');
                    settings_9.default.setShouldHideSettingsPanel(false);
                };
                const syntaxHighlightingSelector = uiElements.syntaxHighlightingSelector;
                syntaxHighlightingSelector.innerHTML = '';
                (0, syntaxHighlighting_2.getAvailableLanguages)().forEach(({ id, alias }) => {
                    const option = document.createElement('option');
                    option.value = id;
                    option.innerText = alias;
                    syntaxHighlightingSelector.appendChild(option);
                });
                setupSimpleSelector(syntaxHighlightingSelector, settings_9.default.getSyntaxHighlighting(), cb => {
                    settings_9.default.setSyntaxHighlighting(syntaxHighlightingSelector.value);
                    syntaxHighlightingToggler === null || syntaxHighlightingToggler === void 0 ? void 0 : syntaxHighlightingToggler(settings_9.default.getSyntaxHighlighting());
                });
                const overrideCfg = (0, configureCheckboxWithHiddenButton_1.default)(uiElements.shouldOverrideMainArgsCheckbox, uiElements.configureMainArgsOverrideButton, (checked) => {
                    settings_9.default.setMainArgsOverride(checked ? [] : null);
                    overrideCfg.refreshButton();
                    notifyLocalChangeListeners();
                }, onClose => (0, displayMainArgsOverrideModal_1.default)(onClose, () => {
                    overrideCfg.refreshButton();
                    notifyLocalChangeListeners();
                }), () => {
                    const overrides = settings_9.default.getMainArgsOverride();
                    return overrides === null ? null : `Edit (${overrides.length})`;
                });
                const suffixCfg = (0, configureCheckboxWithHiddenButton_1.default)(uiElements.shouldCustomizeFileSuffixCheckbox, uiElements.configureCustomFileSuffixButton, (checked) => {
                    settings_9.default.setCustomFileSuffix(checked ? settings_9.default.getCurrentFileSuffix() : null);
                    suffixCfg.refreshButton();
                    notifyLocalChangeListeners();
                }, onClose => {
                    const newVal = prompt('Enter new suffix', settings_9.default.getCurrentFileSuffix());
                    if (newVal !== null) {
                        settings_9.default.setCustomFileSuffix(newVal);
                        suffixCfg.refreshButton();
                        notifyLocalChangeListeners();
                    }
                    onClose();
                    return { forceClose: () => { }, };
                }, () => {
                    const overrides = settings_9.default.getCustomFileSuffix();
                    return overrides === null ? null : `Edit (${settings_9.default.getCurrentFileSuffix()})`;
                });
                (0, configureCheckboxWithHiddenCheckbox_1.default)(
                // Outer
                {
                    checkbox: uiElements.captureTracesCheckbox,
                    initiallyChecked: settings_9.default.shouldCaptureTraces(),
                    onChange: (checked) => {
                        settings_9.default.setShouldCaptureTraces(checked);
                        notifyLocalChangeListeners();
                    },
                }, 
                // Hidden
                {
                    checkbox: uiElements.autoflushTracesCheckbox,
                    initiallyChecked: settings_9.default.shouldAutoflushTraces(),
                    onChange: (checked) => {
                        settings_9.default.setShouldAutoflushTraces(checked);
                        notifyLocalChangeListeners();
                    },
                    container: uiElements.autoflushTracesContainer,
                });
                const statCollectorImpl = new StatisticsCollectorImpl_1.default();
                if (location.search.includes('debug=true')) {
                    document.getElementById('secret-debug-panel').style.display = 'block';
                }
                // const testManager = createTestManager(req => performRpcQuery(wsHandler, req));
                const createJobId = (updateHandler) => {
                    const id = ++jobIdGenerator;
                    jobUpdateHandlers[id] = updateHandler;
                    return id;
                };
                const testManager = (0, TestManager_1.createTestManager)(() => modalEnv, createJobId);
                let jobIdGenerator = 0;
                const createCullingTaskSubmitter = (0, cullingTaskSubmitterFactory_2.default)(changeBufferTime);
                const modalEnv = {
                    showWindow: showWindow_11.default,
                    performTypedRpc: (req) => wsHandler.sendRpc(req),
                    createParsingRequestData: () => {
                        var _a;
                        return ({
                            posRecovery: uiElements.positionRecoverySelector.value,
                            cache: uiElements.astCacheStrategySelector.value,
                            text: getLocalState(),
                            stdout: settings_9.default.shouldCaptureStdio(),
                            mainArgs: (_a = settings_9.default.getMainArgsOverride()) !== null && _a !== void 0 ? _a : undefined,
                            tmpSuffix: settings_9.default.getCurrentFileSuffix(),
                        });
                    },
                    probeMarkers, onChangeListeners, themeChangeListeners, updateMarkers,
                    themeIsLight: () => settings_9.default.isLightTheme(),
                    getLocalState: () => getLocalState(),
                    setLocalState: (newVal) => setLocalState(newVal),
                    captureStdout: () => uiElements.captureStdoutCheckbox.checked,
                    duplicateOnAttr: () => uiElements.duplicateProbeCheckbox.checked,
                    registerStickyMarker: (...args) => registerStickyMarker(...args),
                    updateSpanHighlight: (hl) => {
                        basicHighlight = hl;
                        updateSpanHighlight(basicHighlight, Object.values(stickyHighlights));
                    },
                    probeWindowStateSavers,
                    setStickyHighlight: (pi, hl) => {
                        stickyHighlights[pi] = hl;
                        updateSpanHighlight(basicHighlight, Object.values(stickyHighlights));
                    },
                    clearStickyHighlight: (pi) => {
                        delete stickyHighlights[pi];
                        updateSpanHighlight(basicHighlight, Object.values(stickyHighlights));
                    },
                    triggerWindowSave,
                    statisticsCollector: statCollectorImpl,
                    currentlyLoadingModals: new Set(),
                    createCullingTaskSubmitter,
                    testManager,
                    createJobId,
                    getGlobalModalEnv: () => modalEnv,
                    minimize: (data) => {
                        const miniProbe = (0, createMinimizedProbeModal_2.default)(modalEnv, data.locator, data.property, data.nested, {
                            showDiagnostics: data.showDiagnostics
                        });
                        uiElements.minimizedProbeArea.appendChild(miniProbe.ui);
                    }
                };
                modalEnvHolder.setEnv(modalEnv);
                modalEnv.onChangeListeners['reeval-tests-on-server-refresh'] = (_, reason) => {
                    if (reason === 'refresh-from-server') {
                        testManager.flushTestCaseData();
                    }
                };
                uiElements.showTests.onclick = () => {
                    uiElements.showTests.disabled = true;
                    (0, displayTestSuiteListModal_1.default)(modalEnv, () => { uiElements.showTests.disabled = false; }, workerProcessCount);
                };
                (0, showVersionInfo_1.default)(uiElements.versionInfo, hash, clean, buildTimeSeconds, disableVersionCheckerByDefault, modalEnv.performTypedRpc);
                window.HandleLspLikeInteraction = async (type, pos) => {
                    switch (type) {
                        case 'hover': {
                            const req = {
                                type: 'ide:hover',
                                src: modalEnv.createParsingRequestData(),
                                line: pos.line,
                                column: pos.column,
                            };
                            const result = await modalEnv.performTypedRpc(req);
                            if (!result.lines) {
                                return null;
                            }
                            const ret = [];
                            result.lines.forEach((line) => {
                                ret.push(...line.split('\n').map(value => ({ value: value.trim() })));
                            });
                            return { contents: ret };
                        }
                        case 'complete': {
                            const req = {
                                type: 'ide:complete',
                                src: modalEnv.createParsingRequestData(),
                                line: pos.line,
                                column: pos.column,
                            };
                            const result = await modalEnv.performTypedRpc(req);
                            if (!result.lines) {
                                return null;
                            }
                            const ret = [];
                            result.lines.forEach((line) => {
                                ret.push({ label: line, insertText: line, kind: 3 });
                            });
                            return { suggestions: ret };
                        }
                        default: {
                            (0, hacks_5.assertUnreachable)(type);
                            return null;
                        }
                    }
                };
                window.displayHelp = (type) => {
                    const common = (type, button) => (0, displayHelp_5.default)(type, disabled => button.disabled = disabled);
                    switch (type) {
                        case "general": return common('general', uiElements.generalHelpButton);
                        case 'recovery-strategy': return common('recovery-strategy', uiElements.positionRecoveryHelpButton);
                        case "ast-cache-strategy": return common('ast-cache-strategy', uiElements.astCacheStrategyHelpButton);
                        case "probe-statistics": return (0, displayStatistics_1.default)(statCollectorImpl, disabled => uiElements.displayStatisticsButton.disabled = disabled, newContents => setLocalState(newContents), () => modalEnv.currentlyLoadingModals.size > 0);
                        case 'worker-status': return (0, displayWorkerStatus_1.default)(modalEnv, disabled => uiElements.displayWorkerStatusButton.disabled = disabled);
                        case 'syntax-highlighting': return common('syntax-highlighting', uiElements.syntaxHighlightingHelpButton);
                        case 'main-args-override': return common('main-args-override', uiElements.mainArgsOverrideHelpButton);
                        case 'customize-file-suffix': return common('customize-file-suffix', uiElements.customFileSuffixHelpButton);
                        case 'show-all-properties': return common('show-all-properties', uiElements.showAllPropertiesHelpButton);
                        case 'group-properties-by-aspect': return common('group-properties-by-aspect', uiElements.groupPropertiesByAspectButton);
                        case 'duplicate-probe-on-attr': return common('duplicate-probe-on-attr', uiElements.duplicateProbeHelpButton);
                        case 'capture-stdout': return common('capture-stdout', uiElements.captureStdoutHelpButton);
                        case 'capture-traces': return common('capture-traces', uiElements.captureTracesHelpButton);
                        case 'location-style': return common('location-style', uiElements.locationStyleHelpButton);
                        default: return console.error('Unknown help type', type);
                    }
                };
                setTimeout(() => {
                    try {
                        let windowStates = settings_9.default.getProbeWindowStates();
                        // let wsMatch: RegExpExecArray | null;
                        // if ((wsMatch = /[?&]?ws=[^?&]+/.exec(location.search)) != null) {
                        //   const trimmedSearch = wsMatch.index === 0
                        //   ? (
                        //     wsMatch[0].length < location.search.length
                        //       ? `?${location.search.slice(wsMatch[0].length + 1)}`
                        //       : `${location.search.slice(0, wsMatch.index)}${location.search.slice(wsMatch.index + wsMatch[0].length)}`
                        //   )
                        //   : `${location.search.slice(0, wsMatch.index)}${location.search.slice(wsMatch.index + wsMatch[0].length)}`
                        //   ;
                        //   history.replaceState('', document.title, `${window.location.pathname}${trimmedSearch}`);
                        //   try {
                        //     windowStates = JSON.parse(decodeURIComponent(wsMatch[0].slice('?ws='.length)));
                        //     clearHashFromLocation();
                        //   } catch (e) {
                        //     console.warn('Invalid windowState in hash', e);
                        //   }
                        // }
                        windowStates.forEach((state) => {
                            switch (state.data.type) {
                                case 'probe': {
                                    const data = state.data;
                                    (0, displayProbeModal_6.default)(modalEnv, state.modalPos, (0, UpdatableNodeLocator_9.createMutableLocator)(data.locator), data.property, data.nested, { showDiagnostics: data.showDiagnostics, stickyHighlight: data.stickyHighlight });
                                    break;
                                }
                                case 'ast': {
                                    (0, displayAstModal_4.default)(modalEnv, state.modalPos, (0, UpdatableNodeLocator_9.createMutableLocator)(state.data.locator), state.data.direction, {
                                        initialTransform: state.data.transform,
                                    });
                                    break;
                                }
                                case 'minimized-probe': {
                                    modalEnv.minimize(state.data.data);
                                    break;
                                }
                                default: {
                                    (0, hacks_5.assertUnreachable)(state.data);
                                    break;
                                }
                            }
                        });
                    }
                    catch (e) {
                        console.warn('Invalid probe window state?', e);
                    }
                }, 300); // JUUUUUUUST in case the stored window state causes issues, this 300ms timeout allows people to click the 'clear state' button
                window.RagQuery = (line, col, autoSelectRoot) => {
                    if (autoSelectRoot) {
                        const node = { type: '<ROOT>', start: (line << 12) + col - 1, end: (line << 12) + col + 1, depth: 0 };
                        (0, displayAttributeModal_7.default)(modalEnv, null, (0, UpdatableNodeLocator_9.createMutableLocator)({ result: node, steps: [] }));
                    }
                    else {
                        (0, displayRagModal_1.default)(modalEnv, line, col);
                    }
                };
            };
            wsHandler.on('init', initHandler);
            wsHandler.on('refresh', () => {
                console.log('notifying of refresh..');
                notifyLocalChangeListeners(undefined, 'refresh-from-server');
            });
        }
        if (location.search.split(/[?&]/).includes('editor=AST')) {
            initEditor('AST');
        }
        else {
            initEditor('Monaco');
        }
    };
    window.initCodeProber = () => {
        (async () => {
            const socketRes = await fetch('/WS_PORT');
            if (socketRes.status !== 200) {
                throw new Error(`Unexpected status code when fetch websocket port ${socketRes.status}`);
            }
            const txt = await socketRes.text();
            if (txt === 'http') {
                return doMain('ws-over-http');
            }
            if (txt.startsWith('codespaces-compat:')) {
                const parts = txt.slice('codespaces-compat:'.length).split(':');
                if (parts.length === 2) {
                    const from = Number.parseInt(parts[0], 10);
                    const to = Number.parseInt(parts[1], 10);
                    if (Number.isNaN(from) || Number.isNaN(to)) {
                        throw new Error(`Bad codespaces compat values: [${from},${to}]`);
                    }
                    return doMain({ type: 'codespaces-compat', from, to });
                }
                else {
                    throw new Error(`Bad codespaces compat values: ${parts.join(", ")}`);
                }
            }
            const port = Number.parseInt(txt, 10);
            if (Number.isNaN(port)) {
                throw new Error(`Bad websocket response text ${txt}`);
            }
            return doMain(port);
        })().catch(err => {
            console.warn('Failed fetching websocket port, falling back to 8080', err);
            doMain(8080);
        });
    };
});
const lightColors = {
    'window-border': '#999',
    'probe-result-area': '#F4F4F4',
    'syntax-type': '#267F99',
    'syntax-attr': '#795E26',
    'syntax-modifier': '#0000FF',
    'syntax-variable': '#001080',
    'separator': '#000',
    'ast-node-bg': '#DDD',
    'ast-node-bg-hover': '#AAA',
};
const darkColors = {
    'window-border': '#999',
    'probe-result-area': '#333',
    'syntax-type': '#4EC9B0',
    'syntax-attr': '#DCDCAA',
    'syntax-modifier': '#569CD6',
    'syntax-variable': '#9CDCFE',
    'separator': '#FFF',
    'ast-node-bg': '#1C1C1C',
    'ast-node-bg-hover': '#666',
};
const getThemedColor = (lightTheme, type) => {
    return (lightTheme ? lightColors : darkColors)[type];
};
const createSquigglyCheckbox = (args) => {
    const squigglyCheckboxWrapper = document.createElement('div');
    squigglyCheckboxWrapper.style.flexDirection = 'column';
    const squigglyCheckbox = document.createElement('input');
    squigglyCheckbox.type = 'checkbox';
    squigglyCheckbox.checked = args.initiallyChecked;
    if (args.id)
        squigglyCheckbox.id = args.id;
    squigglyCheckboxWrapper.appendChild(squigglyCheckbox);
    squigglyCheckbox.onmousedown = (e) => {
        e.preventDefault();
        e.stopPropagation();
    };
    squigglyCheckbox.oninput = (e) => {
        e.preventDefault();
        e.stopPropagation();
        args.onInput(squigglyCheckbox.checked);
    };
    // Based on https://stackoverflow.com/a/27764538
    const squigglyDemo = document.createElement('div');
    squigglyDemo.classList.add('squigglyLineHolder');
    const addTiny = (type) => {
        const tiny = document.createElement('div');
        tiny.classList.add('tinyLine');
        tiny.classList.add(type);
        squigglyDemo.appendChild(tiny);
    };
    addTiny('tinyLine1');
    addTiny('tinyLine2');
    squigglyCheckboxWrapper.appendChild(squigglyDemo);
    return squigglyCheckboxWrapper;
};
